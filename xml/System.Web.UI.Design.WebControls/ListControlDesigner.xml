<Type Name="ListControlDesigner" FullName="System.Web.UI.Design.WebControls.ListControlDesigner">
  <TypeSignature Language="C#" Value="public class ListControlDesigner : System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListControlDesigner extends System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.ListControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.WebControls.DataBoundControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.ListControl" /> 抽象クラスから派生したコントロールにビジュアル Web デザイナーでのデザイン時サポートを提供する、デザイナーの基底クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Visual Web デザイナーで、ユーザーがソースからデザイン ビューに切り替えるときのコントロールを表すマークアップのソース コードから派生した、 <xref:System.Web.UI.WebControls.ListControl> クラスが解析され、デザイン サーフェイスにコントロールのデザイン時バージョンを作成します。 ソース ビューに切り替えるときに、デザイン時コントロールがマークアップのソース コードに永続化し、Web ページのマークアップにします。<xref:System.Web.UI.Design.WebControls.ListControlDesigner> から派生したコントロールのビジュアル Web デザイナーでデザイン時サポートを提供する、デザイナーの場合、このクラスは、基本クラスとして機能、 <xref:System.Web.UI.WebControls.ListControl>です。  
  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスのプロパティは、次の機能を提供します。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists%2A> プロパティを返します。、 <xref:System.ComponentModel.Design.DesignerActionListCollection> 一般的から派生したオブジェクトが含まれるオブジェクト、 <xref:System.ComponentModel.Design.DesignerActionList> デザイナーの継承ツリー内の各レベルのオブジェクト。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A> と <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A> プロパティから派生したコントロールの対応するプロパティにアクセスできるように、 <xref:System.Web.UI.WebControls.ListControl> クラスです。<xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A> と <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A> データ ソースのフィールドのテキストを提供し、リスト項目の内容をそれぞれ値を指定します。  
  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスのメソッドは、次の機能を提供します。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind%2A> メソッドから派生した関連付けられたコントロールのバインド、 <xref:System.Web.UI.WebControls.ListControl> デザイン時のデータ ソースにします。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> メソッドは、デザイン時に関連付けられたコントロールの表示に使用するマークアップを返します。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A> メソッドは、デザイン時を返します。 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> コンポーネントを、関連付けられたコントロールのコンテナーからです。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource%2A> メソッドが返される、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> デザイン時に解決される、コントロール コンテナーから <xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember%2A> コントロールのプロパティです。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A> メソッドは、デザイナーを表示しから派生した関連付けられたコントロールを設計、準備、 <xref:System.Web.UI.WebControls.ListControl>です。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> メソッドが呼び出されます、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> 関連付けられているコントロールが変更されたりします。  
  
-   <xref:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties%2A> から追加プロパティを削除、追加のプロパティを追加またはから派生した関連付けられたコントロールのプロパティをシャドウするメソッドが使用される、 <xref:System.Web.UI.WebControls.ListControl>です。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初は、カスタム コントロールのデザイナーを派生させる方法を説明します。  2 つ目は、派生したコントロールをデザイナーに関連付ける方法を示します。  
  
 次のコード例は、という名前のクラスを作成する方法を示しています。 `SimpleRadioButtonListDesigner` から継承する、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。`SimpleRadioButtonListDesigner` クラスのオーバーライド、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A>, 、<xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A>, 、および <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> メソッドです。`SimpleRadioButtonListDesigner` クラスの表示、 `SimpleRadioButtonList` デザイン サーフェイス上のコントロールです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#1)]
 [!code-vb[ListControlDesigner\_Samples\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#1)]  
  
 次のコード例では、 `SimpleRadioButtonList` コントロールから、 <xref:System.Web.UI.WebControls.RadioButtonList> を制御して、使用する方法を示しています、 <xref:System.ComponentModel.DesignerAttribute> クラスに関連付けるには、 `SimpleRadioButtonList` 、デザイナーでコントロール、 `SimpleRadioButtonListDesigner` クラスです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonList.cs#5)]
 [!code-vb[ListControlDesigner\_Samples\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlist.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListControl" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
    <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
    <altmember cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework は、内部での新しいインスタンスを作成、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスから派生した関連付けられたコントロールの作成時に、 <xref:System.Web.UI.WebControls.ListControl> デザイン サーフェイス上のクラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーのデザイナー アクション リスト コレクションを取得します。</summary>
        <value>デザイナーに関連付けられた <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected override void DataBind (System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DataBind(class System.Web.UI.WebControls.BaseDataBoundControl dataBoundControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataBoundControl" Type="System.Web.UI.WebControls.BaseDataBoundControl" />
      </Parameters>
      <Docs>
        <param name="dataBoundControl">関連付けられたコントロールから派生した、 <see cref="T:System.Web.UI.WebControls.ListControl" />, 、またはそのコントロールのコピー。</param>
        <summary>指定したコントロールをデザイン時のデータ ソースにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner> 基本クラスを <xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind%2A> メソッドのセット、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> と <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.DataBoundControl> オブジェクトをデザイン時のデータ ソースの参照を呼び出して、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A?displayProperty=fullName> メソッド、および、復元、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> と <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 元の値にプロパティです。  
  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラス、ただし、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind%2A> メソッドには、機能がないため <xref:System.Web.UI.WebControls.ListItem> オブジェクトに追加された、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのデータのテキスト フィールドを設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> リスト コントロールのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField%2A> プロパティを設定または実行時にコントロールのデザイン時の表示に使用するマークアップを取得します。 これにより、デザイナーを使用してアクセスできる、 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> リスト項目のテキスト コンテンツを提供するデータ ソースのフィールドに対応する関連付けられたコントロールのプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのデータの値フィールドを設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> リスト コントロールのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField%2A> プロパティを使用するデザイナーを使用してアクセス、 <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> リスト項目の値の内容を提供するデータ ソースのフィールドを示す、関連付けられたコントロールのプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン時にコントロールを表すために使用される HTML を取得します。</summary>
        <returns>A <see cref="T:System.String" /> から派生したコントロールの表示に使用するマークアップを含む、 <see cref="T:System.Web.UI.WebControls.ListControl" /> デザイン時にします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 関連付けられたコントロールから派生した場合、 <xref:System.Web.UI.WebControls.ListControl> オブジェクトは、データ バインド、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> メソッドの内容をクリア、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションを追加し、 <xref:System.String> コントロールがデータ バインドであることを示すメッセージ。 場合は、関連するコントロールがデータにバインドされていません、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションが空で、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> を追加、 <xref:System.String> コントロールにバインドされていないことを示すメッセージ。 次に、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> マークアップを生成する、基本メソッドを呼び出します。  
  
   
  
## 例  
 次のコード例の上書き、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> をデザイン サーフェイスに関連付けられたコントロールに対して表示されるマークアップをカスタマイズする方法です。 場合、 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 関連付けられたコントロールのプロパティが定義されていないに設定されている `Gainsboro`, 、コントロールがその背景色で表示されるとします。 これが完了したらの基本実装、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml%2A> メソッドが呼び出されます。  
  
 このコード例が示されている例の一部は、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#2)]
 [!code-vb[ListControlDesigner\_Samples\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetResolvedSelectedDataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable GetResolvedSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable GetResolvedSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>特定のデータ メンバーに解決される、関連付けられたコントロールのコンテナーからのデータの変換元コンポーネントを取得します。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> デザイン時を含む <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />, に解決される、 <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> 関連付けられたコントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A> メソッドが返す `null` 場合、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> プロパティが見つからない場合は、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> と同じ名前が存在しません。  
  
 場合、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> に解決することはできません、 <xref:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember%2A> 関連付けられたコントロールのプロパティ、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource%2A> 返します、 <xref:System.Collections.IEnumerable> をデザイン時を含むインターフェイスが <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" />
        <altmember cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceProvider" />
        <altmember cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedDataSource">
      <MemberSignature Language="C#" Value="public object GetSelectedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSelectedDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられたコントロールのコンテナーからのデータの変換元コンポーネントを取得します。</summary>
        <returns>実装するオブジェクト、 <see cref="T:System.Collections.IEnumerable" /> インターフェイスとデザイン時を含む <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> 関連付けられたコントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource%2A> メソッドが返す `null` 場合、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> プロパティが見つからない場合は、 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource%2A> と同じ名前が存在しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />
        <altmember cref="T:System.Web.UI.Design.IDataSourceProvider" />
        <altmember cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">派生したコントロール、 <see cref="T:System.Web.UI.WebControls.ListControl" /> を実装する、 <see cref="T:System.ComponentModel.IComponent" />です。</param>
        <summary>関連付けられたコントロールをデザイナーで表示、編集、デザインできるように準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナー ホストの呼び出し、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A> メソッドから派生したコントロールを表示するデザイナーを使用する準備ができた場合、 <xref:System.Web.UI.WebControls.ListControl> クラスです。<xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A> メソッドとその基本メソッドのプロパティを構成し、デザイナーの操作に必要なイベントに接続します。  
  
 `component` パラメーターから派生した、コントロール、 <xref:System.Web.UI.WebControls.ListControl>, がこのデザイナーと関連付けられているか、そのコントロールのコピーです。  
  
   
  
## 例  
 次のコード例の上書き、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize%2A> から派生したデザイナーで、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> コントロール クラスのインスタンスのみが名前付けられるようにするクラス `SimpleRadioButtonList` カスタム デザイナーで使用されます。  
  
 このコード例が示されている例の一部は、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#3)]
 [!code-vb[ListControlDesigner\_Samples\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="public virtual void OnDataSourceChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDataSourceChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられたコントロールのデータ ソースが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged%2A> 基本メソッドから派生した関連付けられたコントロールの接続、 <xref:System.Web.UI.WebControls.ListControl> オブジェクトを現在のデータ ソースには、コントロールが接続されていたデータ ソースから別の場合は、デザイン時のマークアップを更新します。<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> メソッドは、現在のデータ ソースに接続した後、デザイン時のマークアップを更新します。  
  
   
  
## 例  
 次のコード例の上書き、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> から継承するクラスのメソッド、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。 デザイナー クラスの変更に関連付けられている場合、あるデータ ソース、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> メソッドが呼び出され、このコードはという名前の変数を設定 `changedDataSource` に `true`します。  
  
 このコード例が示されている例の一部は、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#4)]
 [!code-vb[ListControlDesigner\_Samples\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceChanged (bool forceUpdateView);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceChanged(bool forceUpdateView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceUpdateView" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceUpdateView">A <see cref="T:System.Boolean" /> デザイン時のマークアップが無条件で更新するかどうかを示します。 このパラメーターは無視されます。</param>
        <summary>関連付けられたコントロールのデータ ソースが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged%2A> 基本メソッドから派生した関連付けられたコントロールの接続、 <xref:System.Web.UI.WebControls.ListControl> 現在のデータ ソースへのクラスは、コントロールが接続されていたデータ ソースから別の場合は、デザイン時のマークアップを更新します。<xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> デザイナーのメソッドでは、現在のデータ ソースに接続した後、デザイン時のマークアップを無条件に更新します。 値 `forceUpdateView` は無視されます。  
  
   
  
## 例  
 次のコード例の上書き、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> から継承するクラスのメソッド、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。 デザイナー クラスの変更に関連付けられている場合、あるデータ ソース、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged%2A> が呼び出され、このコードはという名前の変数を設定 `changedDataSource` に `true`します。  
  
 このコード例が示されている例の一部は、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner> クラスです。  
  
 [!code-csharp[ListControlDesigner\_Samples\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDesigner_Samples/CS/SimpleRadioButtonListDesigner.cs#4)]
 [!code-vb[ListControlDesigner\_Samples\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDesigner_Samples/VB/simpleradiobuttonlistdesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Callers should use the public <see cref="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged" /> override.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">実装するコレクション、 <see cref="T:System.Collections.IDictionary" /> デザイン時に関連付けられたコントロールの公開を追加またはシャドウ プロパティのです。</param>
        <summary>プロパティの削除または表示に対してプロパティを追加する、デザイナーによって使用される、 **プロパティ** グリッドまたは関連付けられたコントロールのプロパティをシャドウします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロール デザイナーから派生したメソッドを使用して、 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=fullName> デザイナーを実装して、対応するデザイン時のプロパティにさまざまなコントロールのプロパティをシャドウする、プロパティを追加または削除する方法、 **プロパティ** グリッドです。  
  
 派生したコントロールの <xref:System.Web.UI.WebControls.ListControl> オブジェクト、 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties%2A> を追加、 <xref:System.Web.UI.Design.DataFieldConverter> 属性を <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> と <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> 関連付けられたコントロールのプロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Override the <see cref="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method to add properties to or change attributes of properties in the design-time property collection. Be sure to call the base method before performing other processing.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="T:System.Web.UI.Design.DataFieldConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="UseDataSourcePickerActionList">
      <MemberSignature Language="C#" Value="protected override bool UseDataSourcePickerActionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDataSourcePickerActionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたコントロールが既定のアクションのリストをレンダリングするかどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList%2A> プロパティを返します。 `false` でデータ ソース\] ドロップダウン リストが表示されないように、 **データ ソースの選択** のメニュー項目、 **一般的なタスク** コンテキスト メニューです。 代わりに、このメニュー項目が表示されます、 **データ ソースの選択** により、ユーザーの選択\] ダイアログ ボックス、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> と <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> と <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Override the <see cref="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList" /> property to return <see langword="true" /> if you want the control that is derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> class to display a data source dropdown with the **Choose Data Source** menu item in the **Common Tasks** context menu at design time.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnDataSourceChanged">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>関連付けられたコントロールのデータ ソースが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>