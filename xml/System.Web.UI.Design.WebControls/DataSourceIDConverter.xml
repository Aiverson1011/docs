<Type Name="DataSourceIDConverter" FullName="System.Web.UI.Design.WebControls.DataSourceIDConverter">
  <TypeSignature Language="C#" Value="public class DataSourceIDConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceIDConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ソース名のユーザーが選択できるリストを作成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> クラスは、 <xref:System.ComponentModel.TypeConverter> オブジェクトによって参照される通常の <xref:System.ComponentModel.TypeConverterAttribute> 属性です。  
  
 データ ソースによって返される名、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> メソッドは、指定したコンテキストのコンテナーからは、コンポーネントが有効なデータ ソース。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> メソッドは、返されたデータ ソース名が使用可能な値の排他的なリストかどうかを示す値を取得します。<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> メソッドは、データ ソース名が一覧から選択できる値の標準セットをするかどうかを示す値を取得します。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> メソッドは、コンバーターのネイティブな型を指定したオブジェクトに変換します。<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> メソッドを示す値を取得するかどうかこの <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> ネイティブな型に指定した型のオブジェクトを変換することができます。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> メソッドは、指定したコンポーネントを実装しているかどうかを示す、 <xref:System.Web.UI.IDataSource> インターフェイスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <altmember cref="T:System.Web.UI.IDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The .NET Framework internally constructs a new instance of the <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> class when the class is referenced by a <xref:System.ComponentModel.TypeConverterAttribute> attribute.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">実装するオブジェクト、 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 型コンバーターが変換を実行できるように、型コンバーターのコンテキストに関する情報を提供します。</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> の変換を要求するオブジェクト。</param>
        <summary>このコンバーターが、指定した型のオブジェクトをコンバーターのネイティブな型に変換できるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="sourceType" /> 文字列です。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> メソッドは、文字列からのみ変換できますので、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> のみが返されます `true` ときに `sourcetype` 文字列です。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> 使用しない、 `context` パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">実装するオブジェクト、 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 型コンバーターが変換を実行できるように、型コンバーターのコンテキストに関する情報を提供します。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> のカルチャを指定するオブジェクト、 <c>value</c> パラメーター。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトをコンバーターのネイティブな型に変換します。</summary>
        <returns>
          <paramref name="value" /> パラメーターが文字列として返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `value` パラメーターは、文字列型を持つ、文字列として返されます。 場合 `value` は `null`, 、空の文字列 \(""\) が返されます。 それ以外の場合、 <xref:System.NotSupportedException> がスローされます。  
  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> メソッドが使用しない、 `context` または `culture` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> 文字列以外または <see langword="null" />です。</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">実装するオブジェクト、 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 型コンバーターが変換を実行できるように、型コンバーターのコンテキストに関する情報を提供します。</param>
        <summary>使用可能なデータ ソース名の一覧を返します。</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> を実装するコントロールの名前を含む、 <see cref="T:System.Web.UI.IDataSource" /> インターフェイスし、指定されたコンテキストで使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> メソッドは、有効なデータ ソースで指定されているオブジェクトのコンテナー内のコンポーネントの名前のリストを作成、 `context` パラメーター。 その一覧を次に、変換、 <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <altmember cref="P:System.ComponentModel.Container.Components" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">実装するオブジェクト、 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 型コンバーターが変換を実行できるように、型コンバーターのコンテキストに関する情報を提供します。</param>
        <summary>返されたデータ ソース名が使用可能な値の排他的なリストかどうかを示す値を取得します。</summary>
        <returns>常に <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クラスを派生させる場合、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> クラスさせ、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> をデータ ソース名の排他的なリストを返すメソッドのオーバーライドも、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> を返すメソッドを `true` 、データ ソース名の一覧が排他的な場合です。  
  
 `context` でパラメーターを使用しない、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">実装するオブジェクト、 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 型コンバーターが変換を実行できるように、型コンバーターのコンテキストに関する情報を提供します。</param>
        <summary>このオブジェクトがリストから選択できるデータ ソース名の標準セットを返すかどうかを示す値を取得します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `context` でパラメーターを使用しない、 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> インターフェイスを実装するオブジェクト。</param>
        <summary>指定したコンポーネントが有効なデータ ソースであるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="component" /> は有効なデータ ソース以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> メソッドが考慮、 `component` パラメーターを実装している場合、有効なデータ ソース、 <xref:System.Web.UI.IDataSource> インターフェイスです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> method should be overridden by controls that need to further investigate a given component to decide whether it should be returned in the list of standard values. For example, if a control works with only <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> data sources, <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> should return <see langword="true" /> only for those components that are <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> objects.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
  </Members>
</Type>