<Type Name="BaseValidatorDesigner" FullName="System.Web.UI.Design.WebControls.BaseValidatorDesigner">
  <TypeSignature Language="C#" Value="public class BaseValidatorDesigner : System.Web.UI.Design.WebControls.PreviewControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseValidatorDesigner extends System.Web.UI.Design.WebControls.PreviewControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.WebControls.PreviewControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.BaseValidator" /> クラスから派生する Web サーバー コントロールのビジュアル デザイナーにおけるデザイン時のサポートを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビジュアル デザイナーでソースからデザイン ビューに切り替えるとマークアップのソース コードをについて説明しますから派生したコントロール、 <xref:System.Web.UI.WebControls.BaseValidator> 抽象クラスが解析され、デザイン サーフェイスにコントロールのデザイン時バージョンを作成します。 ソース ビューに切り替えると、デザイン時コントロールがマークアップのソース コードに永続化し、Web ページのマークアップにします。<xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner> オブジェクトから派生したコントロールのデザイン時サポートを提供する、 <xref:System.Web.UI.WebControls.BaseValidator> 、ビジュアル デザイナーでクラスです。  
  
 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml%2A> メソッドは、デザイン時に関連付けられたコントロールの表示に使用するマークアップを取得します。  
  
   
  
## 例  
 次の例では、 `SimpleCompareValidator` コントロールから、 <xref:System.Web.UI.WebControls.CompareValidator> クラスです。`SimpleCompareValidator` コピーである、 <xref:System.Web.UI.WebControls.CompareValidator>です。 例も、デザイナーでは `SimpleCompareValidatorDesigner` から、 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner> クラスを使用して、 <xref:System.ComponentModel.DesignerAttribute> 属性に関連付けるには、 `SimpleCompareValidatorDesigner` クラス、 `SimpleCompareValidator` コントロールです。  
  
 `SimpleCompareValidatorDesigner` 上書き、 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml%2A> の周りの実線の境界線を描画するメソッド、 `SimpleCompareValidator` 場合は、デザイン時に制御の値、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> コントロールのプロパティは、 <xref:System.Web.UI.WebControls.BorderStyle.NotSet> または <xref:System.Web.UI.WebControls.BorderStyle.None> フィールドです。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.BaseValidatorDesigner\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.BaseValidatorDesigner/CS/CustomCompareValidatorDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.WebControls.BaseValidatorDesigner\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.BaseValidatorDesigner/VB/customcomparevalidatordesigner.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseValidatorDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework は、内部での新しいインスタンスを作成、 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner> クラスから派生した関連付けられたコントロールの作成時に、 <xref:System.Web.UI.WebControls.BaseValidator> クラスまたはそのコントロールをデザイン サーフェイス上のコピー。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン サーフェイスにレンダリングする関連付けられたコントロールのコピーを返します。</summary>
        <returns>Web サーバー コントロール。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン時に関連付けられたコントロールを描画するために使用するマークアップを取得します。</summary>
        <returns>表示するマークアップを含む文字列、 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> デザイン時にします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> または <xref:System.Web.UI.WebControls.BaseValidator.Text%2A> から派生した関連付けられたコントロールのプロパティ、 <xref:System.Web.UI.WebControls.BaseValidator> クラスは、空の文字列 \(""\)、または、 <xref:System.Web.UI.WebControls.BaseValidator.Display%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ValidatorDisplay.None> フィールドに、 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml%2A> メソッドのセット、 <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> プロパティをコントロール ID は、角かっこ \(\) とセットで囲まれた、 <xref:System.Web.UI.WebControls.BaseValidator.Display%2A> プロパティを <xref:System.Web.UI.WebControls.ValidatorDisplay.Static> フィールドです。<xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml%2A> を呼び出して、 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 基マークアップ、および復元元の値にコントロールのプロパティを生成するメソッドに必要な場合です。  
  
   
  
## 例  
 次のコード例は、オーバーライドする方法を示します、 <xref:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml%2A> 場合は、デザイン時に関連付けられているコントロールを囲む実線の境界線を描画するメソッドの値、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> にコントロールのプロパティが設定されている、 <xref:System.Web.UI.WebControls.BorderStyle.NotSet> または <xref:System.Web.UI.WebControls.BorderStyle.None> フィールドです。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.BaseValidatorDesigner\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.BaseValidatorDesigner/CS/CustomCompareValidatorDesigner.cs#3)]
 [!code-vb[System.Web.UI.Design.WebControls.BaseValidatorDesigner\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.BaseValidatorDesigner/VB/customcomparevalidatordesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.Display" />
        <altmember cref="T:System.Web.UI.WebControls.ValidatorDisplay" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">実装するコレクション、 <see cref="T:System.Collections.IDictionary" /> 、追加されたプロパティおよびシャドウ プロパティのです。</param>
        <summary>プロパティのグリッドに関連付けられたコントロールのプロパティをシャドウするためにプロパティを追加または削除する、デザイナーによって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロール デザイナー オブジェクトから派生したメソッドを使用して、 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=fullName> デザイナーを実装して、対応するデザイン時のプロパティで、プロパティの追加や、プロパティ グリッドからプロパティを削除するコントロールのプロパティをシャドウするためのメソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>