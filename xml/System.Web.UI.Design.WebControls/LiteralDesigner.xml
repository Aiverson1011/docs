<Type Name="LiteralDesigner" FullName="System.Web.UI.Design.WebControls.LiteralDesigner">
  <TypeSignature Language="C#" Value="public class LiteralDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LiteralDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Design.SupportsPreviewControl(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.Literal" /> Web サーバー コントロールを、デザイン時にビジュアル デザイナーで使用できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Literal> コントロールは、Web ページ上のコントロールとして使用するテキスト文字列を使用します。  
  
 ビジュアル デザイナーでソースからデザイン ビューに切り替えるとマークアップのソース コードを説明する、 <xref:System.Web.UI.WebControls.Literal> コントロールが解析され、デザイン サーフェイスにコントロールのデザイン時バージョンを作成します。 ソース ビューに切り替えると、デザイン時コントロールがマークアップのソース コードに永続化し、Web ページのマークアップにします。<xref:System.Web.UI.Design.WebControls.LiteralDesigner> クラスのデザイン時サポートを提供する、 <xref:System.Web.UI.WebControls.Literal> コントロールです。  
  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> に関連付けられたデザイン時の変更がある場合、メソッドが呼び出されます <xref:System.Web.UI.WebControls.Literal> コントロールです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Literal" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework は、内部での新しいインスタンスを作成、 <xref:System.Web.UI.Design.WebControls.LiteralDesigner> クラスの関連付けの作成時に <xref:System.Web.UI.WebControls.Literal> コントロールまたはのコピー、 <xref:System.Web.UI.WebControls.Literal> デザイン サーフェイス上のコントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Literal" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソースであるオブジェクト。</param>
        <param name="ce">イベント データを含んでいる <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> オブジェクト。</param>
        <summary>関連付けられたコントロールに変更があるときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> メソッドが呼び出されます、 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 、関連するイベント <xref:System.Web.UI.WebControls.Literal> コントロールが発生します。 コントロールのプロパティの変更に応じて、通常、これは \(たとえば、 `Properties` グリッドの変更\)。  
  
 <xref:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged%2A> を作成、 <xref:System.ComponentModel.Design.ComponentChangedEventArgs> オブジェクトを呼び出し、続いて、 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 基本メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Literal" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>