<Type Name="GestureRecognizer" FullName="System.Windows.Ink.GestureRecognizer">
  <TypeSignature Language="C#" Value="public sealed class GestureRecognizer : System.Windows.DependencyObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GestureRecognizer extends System.Windows.DependencyObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.GestureRecognizer" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>インク ジェスチャを認識します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Ink.GestureRecognizer> インク ジェスチャを識別します。 設定することができます、 <xref:System.Windows.Ink.GestureRecognizer> すべてまたはアプリケーション ジェスチャのサブセットを認識します。 設定する、 <xref:System.Windows.Ink.GestureRecognizer> を利用できるジェスチャのサブセットを認識して渡す、 <xref:System.Windows.Ink.ApplicationGesture> コンス トラクターまたは使用する配列、 <xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A> メソッドです。 判断するかどうか、 <xref:System.Windows.Ink.StrokeCollection> ジェスチャに呼び出しを含む、 <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> メソッドです。  
  
<a name="xamlTextUsage_GestureRecognizer"></a>   
## XAML テキストの使用方法  
 このクラスでは使用できません [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。  
  
   
  
## 例  
 次の例では、決定かどうか、 <xref:System.Windows.Ink.Stroke> は、 <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> ジェスチャ。  
  
 [!code-csharp[GestureControl\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Ink.GestureRecognizer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成されたときに、 <xref:System.Windows.Ink.GestureRecognizer> すべてのアプリケーション ジェスチャを認識します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabledApplicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="enabledApplicationGestures">型の配列 <see cref="T:System.Windows.Ink.ApplicationGesture" /> アプリケーション ジェスチャを指定する、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> が認識されます。</param>
        <summary>
          <see cref="T:System.Windows.Ink.GestureRecognizer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Ink.GestureRecognizer.%23ctor%2A> コンス トラクターを作成する、 <xref:System.Windows.Ink.GestureRecognizer> アプリケーション ジェスチャのサブセットを認識します。  
  
   
  
## 例  
 次の例では、作成、 <xref:System.Windows.Ink.GestureRecognizer> のみを認識する、 <xref:System.Windows.Ink.ApplicationGesture.Down>, 、<xref:System.Windows.Ink.ApplicationGesture.Right>, 、および <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> ジェスチャ。  
  
 [!code-csharp[GestureControl\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#4)]
 [!code-vb[GestureControl\#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Ink.GestureRecognizer" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> when you finish using the <xref:System.Windows.Ink.GestureRecognizer>. The <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> method leaves the <xref:System.Windows.Ink.GestureRecognizer> in an unusable state. Therefore, after calling <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A>, you must release all references to the <xref:System.Windows.Ink.GestureRecognizer> so the garbage collector can reclaim the memory that the <xref:System.Windows.Ink.GestureRecognizer> was occupying.  
  
> [!NOTE]
>  Always call <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> before you release your last reference to the <xref:System.Windows.Ink.GestureRecognizer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Ink.GestureRecognizer> object's **languageKeyword tag is not supported!!!!**  
>  method.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.GetEnabledGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ジェスチャの取得、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> を認識します。</summary>
        <returns>型の配列 <see cref="T:System.Windows.Ink.ApplicationGesture" /> ジェスチャを含む、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> 認識に設定されています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、取得する方法を示しますアプリケーション ジェスチャを <xref:System.Windows.Ink.GestureRecognizer> を認識します。  
  
 [!code-csharp[GestureControl\#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#6)]
 [!code-vb[GestureControl\#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ジェスチャ認識エンジンが、ユーザーのシステムで使用できるかどうかを示すブール値を取得します。</summary>
        <value>
          <see langword="true" /> 認識コンポーネントがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、ジェスチャ認識エンジンが呼び出す前に使用できるかどうかを確認する方法、 <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> メソッドです。  
  
 [!code-csharp[GestureControl\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognize">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt; Recognize (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Ink.GestureRecognitionResult&gt; Recognize(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">
          <see cref="T:System.Windows.Ink.StrokeCollection" /> ジェスチャを検索します。</param>
        <summary>指定したジェスチャを探します <see cref="T:System.Windows.Ink.StrokeCollection" />します。</summary>
        <returns>型の配列 <see cref="T:System.Windows.Ink.GestureRecognitionResult" /> を含むアプリケーションいるジェスチャ、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> 認識します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される配列、 <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> メソッドに並べ替えて、 <xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=fullName> プロパティです。 たとえば、 <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> 返す可能性があります、 <xref:System.Windows.Ink.GestureRecognitionResult> に次の値の配列。  
  
|インデックス|ApplicationGesture|RecognitionConfidence|  
|------------|------------------------|---------------------------|  
|0|<xref:System.Windows.Ink.ApplicationGesture.Check>|<xref:System.Windows.Ink.RecognitionConfidence.Strong>|  
|1|<xref:System.Windows.Ink.ApplicationGesture.NoGesture>|<xref:System.Windows.Ink.RecognitionConfidence.Intermediate>|  
|2|<xref:System.Windows.Ink.ApplicationGesture.Curlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
|3|<xref:System.Windows.Ink.ApplicationGesture.DoubleCurlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
  
 つまり、この、 <xref:System.Windows.Ink.GestureRecognizer> のサイズが非常に高いことを認識する、 <xref:System.Windows.Ink.Stroke> 可能性が比較的チェック マークを <xref:System.Windows.Ink.Stroke> 、ジェスチャとがまったく可能性がありますを <xref:System.Windows.Ink.Stroke> 、渦巻きまたは二重渦巻きします。  
  
> [!NOTE]
>  <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> メソッドを含む配列を返すことができます <xref:System.Windows.Ink.ApplicationGesture.NoGesture> 高く <xref:System.Windows.Ink.RecognitionConfidence> 他のアプリケーション ジェスチャよりもします。 これが、可能性の高いを <xref:System.Windows.Ink.Stroke> を下限を持つジェスチャではなく、ジェスチャではありません <xref:System.Windows.Ink.RecognitionConfidence>します。  
  
   
  
## 例  
 次の例では、決定かどうか、 <xref:System.Windows.Ink.Stroke> は、 <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> ジェスチャ。  
  
 [!code-csharp[GestureControl\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">型の配列 <see cref="T:System.Windows.Ink.ApplicationGesture" /> したいアプリケーション ジェスチャを指定する、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> を認識します。</param>
        <summary>アプリケーション ジェスチャを設定、 <see cref="T:System.Windows.Ink.GestureRecognizer" /> を認識します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、作成、 <xref:System.Windows.Ink.GestureRecognizer> のみを認識する、 <xref:System.Windows.Ink.ApplicationGesture.Down>, 、<xref:System.Windows.Ink.ApplicationGesture.Right>, 、および <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> ジェスチャ。  
  
 [!code-csharp[GestureControl\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#5)]
 [!code-vb[GestureControl\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Ink.GestureRecognizer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>