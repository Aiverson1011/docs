<Type Name="ITableMapping" FullName="System.Data.ITableMapping">
  <TypeSignature Language="C#" Value="public interface ITableMapping" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITableMapping" />
  <TypeSignature Language="DocId" Value="T:System.Data.ITableMapping" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>ソース テーブル内のテーブルに関連付け、 <see cref="T:System.Data.DataSet" />, 、によって実装されると、 <see cref="T:System.Data.Common.DataTableMapping" /> クラスは、.NET Framework データ プロバイダーで一般的に使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.ITableMapping> インターフェイスにより、継承したクラスのデータ ソースの列を関連付ける TableMapping クラスを実装する、 <xref:System.Data.DataSet> 列です。 詳細については、「[&#91;\<topic:\/\/cpconsettingupdatatabledatacolumnmappings\>&#93;](http://msdn.microsoft.com/ja-jp/d023260a-a66a-4c39-b8f4-090cd130e730)」を参照してください。  
  
 アプリケーションがのインスタンスを作成していない、 <xref:System.Data.ITableMapping> を直接インターフェイスが継承するクラスのインスタンスを作成、 <xref:System.Data.ITableMapping>です。  
  
 継承したクラス <xref:System.Data.ITableMapping> 通常プロバイダー固有の機能を追加するその他のメンバーを定義し、継承されたメンバーを実装する必要があります。 たとえば、 <xref:System.Data.ITableMapping> インターフェイスを定義、 <xref:System.Data.ITableMapping.DataSetTable%2A> プロパティです。 さらに、 <xref:System.Data.Common.DataTableMapping> クラスは、このプロパティを継承しも定義して、 <xref:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction%2A> メソッドです。  
  
   
  
## 例  
 次の例は、派生クラスのインスタンスを作成 <xref:System.Data.Common.DataTableMapping>, に追加し、 <xref:System.Data.Common.DataTableMappingCollection> コレクションです。 ユーザー、通知、マッピングは、コレクションに追加され、parent マップが表示されます。  
  
 [!code-csharp[Classic WebData DataTableMapping Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableMapping Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableMapping Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you inherit from the <see cref="T:System.Data.ITableMapping" /> interface, you should implement the following constructors:  
  
 <list type="table"><listheader><term> Item  
  
 </term><description> Description  
  
 </description></listheader><item><term> DataTableMapping()  
  
 </term><description> Initializes a new instance of the TableMapping class.  
  
 </description></item><item><term> TableMapping(string sourceTable, string dataSetTable)  
  
 </term><description> Initializes a new instance of the TableMapping class with a source when given a source table name and a <see cref="T:System.Data.DataTable" /> name.  
  
 </description></item><item><term> TableMapping(string sourceTable, string dataSetTable, DataColumnMapping[] columnMappings)  
  
 </term><description> Initializes a new instance of the TableMapping class when given a source table name, a <see cref="T:System.Data.DataTable" /> name, and an array of ColumnMapping objects.  
  
 </description></item></list></para>
    </block>
    <altmember cref="T:System.Data.ITableMappingCollection" />
  </Docs>
  <Members>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.IColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.ITableMapping.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスを取得 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> の <see cref="T:System.Data.DataTable" />です。</summary>
        <value>データの列マッピングのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、派生クラスのインスタンスを作成 <xref:System.Data.Common.DataTableMapping>, 、いくつかのプロパティ、およびコピーの設定、 <xref:System.Data.Common.DataTableMapping.ColumnMappings%2A> を配列にします。 この例では、 <xref:System.Data.Common.DataColumnMappingCollection> が用意されています。  
  
 [!code-csharp[Classic WebData DataTableMapping.ColumnMappings Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTableMapping.ColumnMappings Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTableMapping.ColumnMappings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTableMapping.ColumnMappings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSetTable">
      <MemberSignature Language="C#" Value="public string DataSetTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSetTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.ITableMapping.DataSetTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内でテーブルの大文字と小文字の名前、 <see cref="T:System.Data.DataSet" />です。</summary>
        <value>内のテーブルの大文字と小文字の名前、 <see cref="T:System.Data.DataSet" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceTable">
      <MemberSignature Language="C#" Value="public string SourceTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.ITableMapping.SourceTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはソース テーブルの名前を設定します。</summary>
        <value>ソース テーブルの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>