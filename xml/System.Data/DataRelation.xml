<Type Name="DataRelation" FullName="System.Data.DataRelation">
  <TypeSignature Language="C#" Value="public class DataRelation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRelation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRelation" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("RelationName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>2 つの親\/子リレーションシップを表す <see cref="T:System.Data.DataTable" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Data.DataRelation> 2 つの関連付けに使用 <xref:System.Data.DataTable> オブジェクトによって相互に <xref:System.Data.DataColumn> オブジェクトです。 たとえば、\/顧客の注文のリレーションシップで Customers テーブルの親であるし、Orders テーブルのリレーションシップの子であります。 これは、主キー\/外部キーのリレーションシップに似ています。 詳細については、「[Navigating a Relationship between Tables](http://msdn.microsoft.com/ja-jp/e5e673f4-9b44-45ae-aaea-c504d1cc5d3e)」を参照してください。  
  
 親と子テーブルに一致する列の間のリレーションシップが作成されます。 つまり、 <xref:System.Data.DataColumn.DataType%2A> 値の両方の列を同じにする必要があります。  
  
 リレーションシップでは、親からのさまざまな変更を連鎖できるも <xref:System.Data.DataRow> その子の行にします。 子の行で値を変更する方法を制御するには、追加、 <xref:System.Data.ForeignKeyConstraint> に、 <xref:System.Data.ConstraintCollection> の <xref:System.Data.DataTable> オブジェクトです。<xref:System.Data.ConstraintCollection> 親テーブルで値を実行するには、どのようなアクションを削除または更新を決定します。  
  
 ときに、 <xref:System.Data.DataRelation> が作成されると、最初に確認の関係を確立できることです。 追加された後、 <xref:System.Data.DataRelationCollection>, 、それを無効にする変更を禁止することで、リレーションシップが維持されます。 期間の間と、 <xref:System.Data.DataRelation> が作成されに追加、 <xref:System.Data.DataRelationCollection>, 、ことは、親または子の行に対する追加の変更。 これが原因で、リレーションシップが無効になっていると、例外が生成されます。  
  
> [!NOTE]
>  データの破損は、2 つのテーブル間で双方向の関係が定義されている場合に発生することができます。 双方向の関係は、2 つの `DataRelation` スイッチ、親子の役割を持つ同じ列を使用するオブジェクト。 例外が発生しなかった場合、 `DataRelation` オブジェクトが保存されます。 ただし、データの破損が発生することができます。  
  
 <xref:System.Data.DataRelation> オブジェクトに格納されます、 <xref:System.Data.DataRelationCollection>, 、を通じてアクセスできる、 <xref:System.Data.DataSet.Relations%2A> のプロパティ、 <xref:System.Data.DataSet>, 、および <xref:System.Data.DataTable.ChildRelations%2A> と <xref:System.Data.DataTable.ParentRelations%2A> のプロパティ、 <xref:System.Data.DataTable>です。  
  
   
  
## 例  
 次の例が、新たに作成 <xref:System.Data.DataRelation> に追加し、 <xref:System.Data.DataRelationCollection> の <xref:System.Data.DataSet>です。  
  
 [!code-csharp[Classic WebData DataRelation Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型は、マルチ スレッドの読み取り操作に対しても安全です。 すべての書き込み操作を同期する必要があります。</threadsafe>
    <altmember cref="P:System.Data.DataTable.ChildRelations" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="T:System.Data.ForeignKeyConstraint" />
    <altmember cref="T:System.Data.DataRelationCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <altmember cref="P:System.Data.DataTable.ParentRelations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="T:System.Data.DataRelation" /> の名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentColumn">親 <see cref="T:System.Data.DataColumn" /> リレーションシップにします。</param>
        <param name="childColumn">子 <see cref="T:System.Data.DataColumn" /> リレーションシップにします。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.DataRelation" /> クラスの指定して <see cref="T:System.Data.DataRelation" /> 名、および親と子 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例が、新たに作成 <xref:System.Data.DataRelation> に追加し、 <xref:System.Data.DataRelationCollection> の <xref:System.Data.DataSet>です。  
  
 [!code-csharp[Classic WebData DataRelation.DataRelation\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/CS/datarelation.cs#1)]
 [!code-vb[Classic WebData DataRelation.DataRelation\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/VB/datarelation.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">いずれかまたは両方の <see cref="T:System.Data.DataColumn" /> オブジェクトを含む <see langword="null" />します。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">列は異なるデータ型であります。  
  
 または  
  
 テーブルは同じには属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="relationName">リレーションシップの名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentColumns">親の配列 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</param>
        <param name="childColumns">子の配列 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.DataRelation" /> クラスの指定して <see cref="T:System.Data.DataRelation" /> 親と子の名前と一致する配列 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例が、新たに作成 [DataRelation コンストラクター \(String, DataColumn\<xref:System.Data.DataRelation> に追加し、 [DataRelation コンストラクター \(String, DataColumn\<xref:System.Data.DataRelationCollection> の [DataRelation コンストラクター \(String, DataColumn\<xref:System.Data.DataSet>です。  
  
 [!code-vb[Classic WebData DataRelation.DataRelation2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">いずれかまたは両方の <see cref="T:System.Data.DataColumn" /> オブジェクトを含む <see langword="null" />します。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">
          <see cref="T:System.Data.DataColumn" /> オブジェクトが別のデータ型を持つ  
  
 または  
  
 1 つまたは両方の配列は、同じテーブルから個別の列のない構成されます。  
  
 または  
  
 テーブルは同じには属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">リレーションシップの名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentColumn">親 <see cref="T:System.Data.DataColumn" /> リレーションシップです。</param>
        <param name="childColumn">子 <see cref="T:System.Data.DataColumn" /> リレーションシップです。</param>
        <param name="createConstraints">制約を作成するかどうかを示す値です。<see langword="true" />, 、制約が作成される場合。 それ以外の場合は <see langword="false" />。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.DataRelation" /> クラスの指定した名前、親と子を使用して <see cref="T:System.Data.DataColumn" /> オブジェクト、および制約を作成するかどうかを示す値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例が、新たに作成 <xref:System.Data.DataRelation> に追加し、 <xref:System.Data.DataRelationCollection> の <xref:System.Data.DataSet>です。  
  
 [!code-vb[Classic WebData DataRelation.DataRelation1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">いずれかまたは両方の <see cref="T:System.Data.DataColumn" /> オブジェクトを含む <see langword="null" />します。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">列は異なるデータ型であります。  
  
 または  
  
 テーブルは同じには属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">リレーションシップの名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentColumns">親の配列 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</param>
        <param name="childColumns">子の配列 <see cref="T:System.Data.DataColumn" /> オブジェクトです。</param>
        <param name="createConstraints">制約を作成するかどうかを示す値です。<see langword="true" />, 、制約が作成される場合。 それ以外の場合は <see langword="false" />。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.DataRelation" /> クラスの名前を指定して、親と子の配列が一致した <see cref="T:System.Data.DataColumn" /> オブジェクト、および制約を作成するかどうかを示す値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例が、新たに作成 [DataRelation コンストラクター \(String, DataColumn\[\], DataColumn\<xref:System.Data.DataRelation> に追加し、 [DataRelation コンストラクター \(String, DataColumn\[\], DataColumn\<xref:System.Data.DataRelationCollection> の [DataRelation コンストラクター \(String, DataColumn\[\], DataColumn\<xref:System.Data.DataSet>です。  
  
 [!code-vb[Classic WebData DataRelation.DataRelation3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">いずれかまたは両方の <see cref="T:System.Data.DataColumn" /> オブジェクトは、 <see langword="null" />です。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">列は異なるデータ型であります。  
  
 または  
  
 テーブルは同じには属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">リレーションシップの名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentTableName">名前、 <see cref="T:System.Data.DataTable" /> リレーションシップの親テーブルです。</param>
        <param name="childTableName">名前、 <see cref="T:System.Data.DataTable" /> リレーションシップの子テーブルです。</param>
        <param name="parentColumnNames">配列 <see cref="T:System.Data.DataColumn" /> オブジェクトの親の名前 <see cref="T:System.Data.DataTable" /> 関係のです。</param>
        <param name="childColumnNames">配列 <see cref="T:System.Data.DataColumn" /> オブジェクトの子の名前 <see cref="T:System.Data.DataTable" /> 関係のです。</param>
        <param name="nested">リレーションシップは入れ子になっているかどうかを示す値です。</param>
        <summary>このコンス トラクターでは、Visual Studio 環境でデザイン時サポートは提供されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataRelation> このコンス トラクターを使用して作成されたオブジェクトを使用して、コレクションに追加する必要があります、 [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataRelationCollection.AddRange%2A> 内のメソッド、 [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataTable.BeginInit%2A> と [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataTable.EndInit%2A> ブロックします。 間でこのコンス トラクターが呼び出されない場合 [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataTable.BeginInit%2A> と [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.Data.DataTable.EndInit%2A> 、 [DataRelation コンストラクター \(String, String, String, String\[\], String\<xref:System.NullReferenceException> が発生します。 さらに、テーブルと、指定した名前の列は、コンス トラクターが呼び出されたときに存在する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="parentTableNamespace" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="childTableNamespace" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="T:System.Data.DataRelation" /> の名前。 場合 <see langword="null" /> または空の文字列 \(""\) に作成されたオブジェクトが追加されると、既定の名前に与えられる、 <see cref="T:System.Data.DataRelationCollection" />です。</param>
        <param name="parentTableName">名前、 <see cref="T:System.Data.DataTable" /> リレーションシップの親テーブルです。</param>
        <param name="parentTableNamespace">親テーブルの名前空間の名前。</param>
        <param name="childTableName">名前、 <see cref="T:System.Data.DataTable" /> リレーションシップの子テーブルです。</param>
        <param name="childTableNamespace">子テーブルの名前空間の名前。</param>
        <param name="parentColumnNames">配列 <see cref="T:System.Data.DataColumn" /> オブジェクトの親の名前 <see cref="T:System.Data.DataTable" /> 関係のです。</param>
        <param name="childColumnNames">配列 <see cref="T:System.Data.DataColumn" /> オブジェクトの子の名前 <see cref="T:System.Data.DataTable" /> 関係のです。</param>
        <param name="nested">リレーションシップは入れ子になっているかどうかを示す値です。</param>
        <summary>このコンス トラクターでは、Visual Studio 環境でデザイン時サポートは提供されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの [DataRelation コンストラクター \(String, String, String, String, String, String\[\], String\<xref:System.Data.DataRelation> このコンス トラクターを使用して作成されたオブジェクトを使用して、コレクションに追加し、必要があります [DataRelation コンストラクター \(String, String, String, String, String, String\[\], String\<xref:System.Data.DataRelationCollection.AddRange%2A>します。 テーブルと、指定した名前の列は、メソッドは常に存在する必要がありますまたは [DataRelation コンストラクター \(String, String, String, String, String, String\[\], String\<xref:System.Data.DataTable.BeginInit%2A> 前に、テーブルと指定した名前の列に、コンス トラクターの呼び出し時に存在する必要がありますが、呼び出されたを [DataRelation コンストラクター \(String, String, String, String, String, String\[\], String\<xref:System.Data.DataTable.EndInit%2A> と呼びます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckStateForProperty">
      <MemberSignature Language="C#" Value="protected void CheckStateForProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckStateForProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.CheckStateForProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.DataException">親と子テーブルが別に属している <see cref="T:System.Data.DataSet" /> オブジェクトです。  
  
 または  
  
 親と子の 1 つまたは複数のペア <see cref="T:System.Data.DataColumn" /> オブジェクトには、データ型が一致していません。  
  
 または  
  
 親と子 <see cref="T:System.Data.DataColumn" /> オブジェクトが同じです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ChildColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ChildColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子を取得します <see cref="T:System.Data.DataColumn" /> このリレーションシップのオブジェクト。</summary>
        <value>
          <see cref="T:System.Data.DataColumn" /> オブジェクトの配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の子を取得する <xref:System.Data.DataColumn> のオブジェクト、 <xref:System.Data.DataRelation>です。  
  
 [!code-vb[Classic WebData DataRelation.ChildColumns Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.ParentColumns" />
      </Docs>
    </Member>
    <Member MemberName="ChildKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ForeignKeyConstraint ChildKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ForeignKeyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Data.ForeignKeyConstraint" /> 関係のです。</summary>
        <value>
          <see langword="ForeignKeyConstraint" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合に関連しない <xref:System.Data.ForeignKeyConstraint> が存在するこのリレーションシップの場合は、自動的に作成されが指す、 `ChildKeyConstraint`, リレーションシップがリレーションシップのコレクションに追加されると、します。  
  
   
  
## 例  
 次の例のセット、 `UpdateRule`, 、`DeleteRule`, 、および `AcceptReject` に対するルール、 `ForeignKeyConstraint` に関連付けられている、 `DataRelation`です。  
  
 [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.AcceptRejectRule" />
        <altmember cref="P:System.Data.DataRelation.ParentKeyConstraint" />
        <altmember cref="T:System.Data.Rule" />
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このリレーションシップの子テーブルを取得します。</summary>
        <value>A <see cref="T:System.Data.DataTable" /> リレーションシップの子テーブルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の子を取得する <xref:System.Data.DataTable> の <xref:System.Data.DataRelation>です。  
  
 [!code-vb[Classic WebData DataRelation.ChildTable Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataRelation.ParentTable" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Data.DataSet" /> 先、 <see cref="T:System.Data.DataRelation" /> が属しています。</summary>
        <value>A <see cref="T:System.Data.DataSet" /> 先、 <see cref="T:System.Data.DataRelation" /> が属しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataRelationCollection> に関連付けられている、 <xref:System.Data.DataSet> を通じてアクセス、 <xref:System.Data.DataSet.Relations%2A> のプロパティ、 <xref:System.Data.DataSet> オブジェクトです。  
  
   
  
## 例  
 次の例では取得、 <xref:System.Data.DataSet> の <xref:System.Data.DataRelation>です。  
  
 [!code-vb[Classic WebData DataRelation.DataSet Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <altmember cref="T:System.Data.DataRelationCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタマイズされたプロパティを格納するコレクションを取得します。</summary>
        <value>A <see cref="T:System.Data.PropertyCollection" /> カスタマイズされたプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用 <xref:System.Data.DataRelation.ExtendedProperties%2A> カスタム情報を追加する、 <xref:System.Data.DataRelation> オブジェクトです。 Add メソッドを使用して情報を追加します。 項目のメソッドを使用して情報を取得します。  
  
 拡張プロパティは、型でなければなりません <xref:System.String>します。 文字列型ではなくプロパティは保持されないときに、 <xref:System.Data.DataRelation> XML として書き込まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nested">
      <MemberSignature Language="C#" Value="public virtual bool Nested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Nested" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.Nested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか <see cref="T:System.Data.DataRelation" /> オブジェクトが入れ子になっています。</summary>
        <value>
          <see langword="true" />, 、場合 <see cref="T:System.Data.DataRelation" /> オブジェクトは、入れ子になった以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する <xref:System.Data.DataRelation> XML で指定されているなどの階層リレーションシップを定義するオブジェクト。 詳細については、「[Nested DataRelations](http://msdn.microsoft.com/ja-jp/9530f9c9-dd98-4b93-8cdb-40d7f1e8d0ab)」を参照してください。  
  
> [!NOTE]
>  場合、 <xref:System.Data.DataTable.TableName%2A> リレーションにおける子テーブルの一致、 <xref:System.Data.DataColumn.ColumnName%2A> 、リレーションシップの親テーブル内の列の <xref:System.Data.DataRelation.Nested%2A> プロパティを false にする必要があります。 これが、.NET Framework version 1.0 では必須でありませんでした。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">パラメーターの参照。</param>
        <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ParentColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ParentColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配列を取得 <see cref="T:System.Data.DataColumn" /> これの親列であるオブジェクト <see cref="T:System.Data.DataRelation" />します。</summary>
        <value>配列 <see cref="T:System.Data.DataColumn" /> これの親列であるオブジェクト <see cref="T:System.Data.DataRelation" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の配列を取得する <xref:System.Data.DataColumn> オブジェクトとして機能する関係の列の親です。  
  
 [!code-vb[Classic WebData DataRelation.ParentColumns Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.ChildColumns" />
      </Docs>
    </Member>
    <Member MemberName="ParentKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.UniqueConstraint ParentKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Data.UniqueConstraint" /> の親列の値を保証する、 <see cref="T:System.Data.DataRelation" /> は一意です。</summary>
        <value>A <see cref="T:System.Data.UniqueConstraint" /> は、親列の値が一意であることを確認します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では取得、 <xref:System.Data.DataRelation.ParentKeyConstraint%2A> の <xref:System.Data.DataRelation> オブジェクトです。  
  
 [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataRelation.ChildKeyConstraint" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="ParentTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ParentTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ParentTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親を取得します <see cref="T:System.Data.DataTable" /> この <see cref="T:System.Data.DataRelation" />します。</summary>
        <value>A <see cref="T:System.Data.DataTable" /> このリレーションシップの親テーブルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、親を取得 <xref:System.Data.DataTable> の <xref:System.Data.DataRelation>です。  
  
 [!code-vb[Classic WebData DataRelation.ParentTable Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataRelation.ChildTable" />
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの参照。</param>
        <summary>このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationName">
      <MemberSignature Language="C#" Value="public virtual string RelationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.RelationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を取得するための名前、 <see cref="T:System.Data.DataRelation" /> から、 <see cref="T:System.Data.DataRelationCollection" />です。</summary>
        <value>名前、 <see cref="T:System.Data.DataRelation" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRelation.RelationName%2A> 取得するプロパティを <xref:System.Data.DataRelation> から、 <xref:System.Data.DataRelationCollection>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRelation.RelationName%2A> 取得するプロパティを <xref:System.Data.DataRelation> から、 <xref:System.Data.DataRelationCollection>です。  
  
 [!code-vb[Classic WebData DataRelation.RelationName Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.RelationName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see langword="null" /> または空の文字列 \(""\) に渡された、 <see cref="T:System.Data.DataColumn" /> つまり、 <see cref="T:System.Data.DataRelation" />です。</exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <see cref="T:System.Data.DataRelation" /> が既に含まれているコレクションに属する、 <see cref="T:System.Data.DataRelation" /> と同じ名前です。</exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataRelationCollection" />
        <altmember cref="P:System.Data.DataRelationCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得、 <see cref="P:System.Data.DataRelation.RelationName" />, が存在する場合は、です。</summary>
        <returns>
          <see cref="P:System.Data.DataRelation.RelationName" /> プロパティの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、 <xref:System.Data.DataColumn.ToString%2A> プロパティの名前を返す、 <xref:System.Data.DataRelation> オブジェクトです。  
  
 [!code-csharp[Classic WebData DataRelation.ToString Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation.ToString Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRelation" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>