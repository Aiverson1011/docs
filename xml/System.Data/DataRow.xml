<Type Name="DataRow" FullName="System.Data.DataRow">
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>内のデータの行を表し、 <see cref="T:System.Data.DataTable" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataRow> と <xref:System.Data.DataColumn> オブジェクトは、の主要コンポーネント、 <xref:System.Data.DataTable>です。 使用して、 <xref:System.Data.DataRow> オブジェクトのプロパティおよびメソッドを取得および評価; と挿入、削除、およびの値を更新する、 <xref:System.Data.DataTable>です。<xref:System.Data.DataRowCollection> 表す実際 <xref:System.Data.DataRow> 内のオブジェクト、 <xref:System.Data.DataTable>, 、および <xref:System.Data.DataColumnCollection> が含まれています、 <xref:System.Data.DataColumn> のスキーマを記述するオブジェクト、 <xref:System.Data.DataTable>です。 オーバー ロードされたを使用して <xref:System.Data.DataRow.Item%2A> プロパティを取得または設定の値を <xref:System.Data.DataColumn>です。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> と <xref:System.Data.DataRow.IsNull%2A> プロパティを確認して、特定の行の値の状態と <xref:System.Data.DataRow.RowState%2A> 親に対して行の状態を確認するに <xref:System.Data.DataTable>します。  
  
 新規に作成 <xref:System.Data.DataRow>, を使用して、 <xref:System.Data.DataTable.NewRow%2A> のメソッド、 <xref:System.Data.DataTable> オブジェクトです。 新しいを作成した後 <xref:System.Data.DataRow>, を使用して、 <xref:System.Data.DataRowCollection.Add%2A> 新しいを追加するメソッド <xref:System.Data.DataRow> に、 <xref:System.Data.DataRowCollection>です。 最後を呼び出して、 <xref:System.Data.DataRow.AcceptChanges%2A> のメソッド、 <xref:System.Data.DataTable> オブジェクトの追加を確認します。 データを追加する詳細については、 <xref:System.Data.DataTable>, を参照してください [Adding Data to a Table](http://msdn.microsoft.com/ja-jp/d6aa8474-7bde-48f7-949d-20dc38a1625b)します。  
  
 削除することができます、 <xref:System.Data.DataRow> から、 <xref:System.Data.DataRowCollection> を呼び出して、 <xref:System.Data.DataRowCollection.Remove%2A> のメソッド、 <xref:System.Data.DataRowCollection>, 、またはを呼び出して、 <xref:System.Data.DataRow.Delete%2A> のメソッド、 <xref:System.Data.DataRow> オブジェクトです。<xref:System.Data.DataRowCollection.Remove%2A> メソッドによってコレクションから行を削除します。 これに対し、 <xref:System.Data.DataRow.Delete%2A> マーク、 <xref:System.Data.DataRow> 削除します。 呼び出したときに、実際の削除が行われます <xref:System.Data.DataRow.AcceptChanges%2A> メソッドです。 呼び出して <xref:System.Data.DataRow.Delete%2A>, 、実際に削除する前に削除する行がマークされているプログラムによってチェックできます。 詳細については、「[Deleting a Row from a Table](http://msdn.microsoft.com/ja-jp/c34f531d-4b9b-4071-b2d7-342c402aa586)」を参照してください。  
  
   
  
## 例  
 次の例が、新たに作成 <xref:System.Data.DataRow> を呼び出して、 <xref:System.Data.DataTable.NewRow%2A> のメソッド、 <xref:System.Data.DataTable> オブジェクトです。  
  
 [!code-csharp[Classic WebData DataRow Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型は、マルチ スレッドの読み取り操作に対しても安全です。 すべての書き込み操作を同期する必要があります。</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">ビルダー</param>
        <summary>DataRow の新しいインスタンスを初期化します。 ビルダーから行を構築します。 内部でのみ使用されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>前回この行に加えられたすべての変更をコミット <see cref="M:System.Data.DataRow.AcceptChanges" /> 呼び出されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出すときに <xref:System.Data.DataRow.AcceptChanges%2A>, 、 <xref:System.Data.DataRow.EndEdit%2A> メソッドは、編集を終了する暗黙的に呼び出されます。 場合、 <xref:System.Data.DataRow.RowState%2A> 行が Added または Modified、 <xref:System.Data.DataRow.RowState%2A> が Unchanged します。 場合、 <xref:System.Data.DataRow.RowState%2A> が、削除、行が削除されます。  
  
 参照してください、 <xref:System.Data.DataRow.BeginEdit%2A> 方法の詳細。  
  
 <xref:System.Data.DataTable> クラスもあります、 <xref:System.Data.DataTable.AcceptChanges%2A> メソッド テーブル全体に加えられた変更に影響します。 そのまま使用し、個々 のデータ行への変更を拒否する方法を示すコード例および詳細については、次を参照してください。 [AcceptChanges and RejectChanges](http://msdn.microsoft.com/ja-jp/e2d1a6fe-31f9-4b83-9728-06c406a3394e)します。  
  
   
  
## 例  
 次の例は最初に、新しい作成 <xref:System.Data.DataTable> 1 つの列を持つ 1 つを作成し、 <xref:System.Data.DataRow>します。 として、 <xref:System.Data.DataRow> 作成、追加、変更、および削除するはその <xref:System.Data.DataRow.RowState%2A> が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集操作を開始、 <see cref="T:System.Data.DataRow" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.BeginEdit%2A> を配置する方法、 <xref:System.Data.DataRow> 編集モードにします。 このモードでイベントが一時的に中断ため、ユーザーは、検証規則をトリガーに複数の行を変更します。 たとえば、合計金額の列の値が、debit の値と等しいかどうかを確認し、クレジットの行内の列にする必要がある場合、は、編集モード、ユーザーが値をコミットするまで、行の値の検証を中断するために各行を配置できます。  
  
 <xref:System.Data.DataRow.BeginEdit%2A> メソッドは、ユーザーがデータ バインド コントロールの値を変更すると暗黙的に呼び出されます、 <xref:System.Data.DataRow.EndEdit%2A> を呼び出すと、メソッドが暗黙的に呼び出されます、 <xref:System.Data.DataTable.AcceptChanges%2A> のメソッド、 <xref:System.Data.DataTable> オブジェクトです。 この編集モードで、 <xref:System.Data.DataRow> 値を提案する元と新しいの形式を格納します。 したがって、限り、 <xref:System.Data.DataRow.EndEdit%2A> メソッドが呼び出されていない、いずれかを渡すことによって、オリジナルまたは提案されたバージョンを取得する `DataRowVersion.Original` または `DataRowVersion.Proposed` の `version` のパラメーター、 <xref:System.Data.DataRow.Item%2A> プロパティです。 呼び出して、この時点での編集をキャンセルすることも、 <xref:System.Data.DataRow.CancelEdit%2A> メソッドです。  
  
 表示する行が、元のまたは提案された値を含んでいるかどうか、呼び出し、 <xref:System.Data.DataRow.HasVersion%2A> メソッドです。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> メソッドを一時的に中断 <xref:System.Data.DataTable.RowChanging> イベントが、 `delete` 操作はありません。  
  
   
  
## 例  
 例は、単純な <xref:System.Data.DataTable> いずれかで <xref:System.Data.DataColumn> および 5 <xref:System.Data.DataRow> オブジェクト、および <xref:System.Data.UniqueConstraint>します。 A <xref:System.Data.DataTable.RowChanged> 行の値を変更するときに監視するものイベント ハンドラーを追加します。 呼び出した後 <xref:System.Data.DataRow.BeginEdit%2A> 制約とイベントが一時的に既存の行に対して無効になり、元と提案された値が出力されます。<xref:System.Data.DataRow.BeginEdit%2A> もう一度呼び出され、2 つの行を同じ値に設定します。<xref:System.Data.DataRow.EndEdit%2A> が呼び出される、 <xref:System.Data.UniqueConstraint> のと同じ値に適用します。  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">内部メソッドが呼び出された、 <see cref="E:System.Data.DataTable.RowChanging" /> イベントです。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行に、メソッドが呼び出されました。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>行の現在の編集をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 参照してください、 <xref:System.Data.DataRow.BeginEdit%2A> 方法の詳細。  
  
   
  
## 例  
 次の例の最後の行に 1 つの列の値を編集する、 <xref:System.Windows.Forms.DataGrid> コントロールです。 例では、 <xref:System.Data.DataRow.BeginEdit%2A>, 、<xref:System.Data.DataRow.EndEdit%2A>, 、列の値を編集し、行に、変更をコミットする方法です。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">内部メソッドが呼び出された、 <see cref="E:System.Data.DataTable.RowChanging" /> イベントです。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>行のエラーをクリアします。 これを含む、 <see cref="P:System.Data.DataRow.RowError" /> に <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する <xref:System.Data.DataRow.SetColumnError%2A> と <xref:System.Data.DataRow.GetColumnError%2A> を設定し、個々 の列のエラーを返します。  
  
 設定、 <xref:System.Data.DataRow.RowError%2A> 行全体に適用されるエラーを設定するプロパティです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.HasErrors%2A> のエラーを確認します。 行が、エラー、 <xref:System.Data.DataRow.GetColumnsInError%2A> メソッド解決できるエラーのある列の配列を返します。<xref:System.Data.DataRow.ClearErrors%2A> すべてのエラーを消去するメソッドが呼び出されます。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>削除、 <see cref="T:System.Data.DataRow" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Data.DataRow.RowState%2A> の行が追加されると、 <xref:System.Data.DataRow.RowState%2A> なります `Detached` を呼び出すと、行がテーブルから削除し、 <xref:System.Data.DataRow.AcceptChanges%2A>します。  
  
 <xref:System.Data.DataRow.RowState%2A> なります `Deleted` を使用した後、 <xref:System.Data.DataRow.Delete%2A> 、既存のメソッド <xref:System.Data.DataRow>します。 これは、まま `Deleted` が呼び出されるまで <xref:System.Data.DataRow.AcceptChanges%2A>します。 この時点で、 <xref:System.Data.DataRow> テーブルから削除します。  
  
 <xref:System.Data.DataRow.Delete%2A> 反復処理中に、foreach ループで呼び出すことはできません、 <xref:System.Data.DataRowCollection> オブジェクトです。<xref:System.Data.DataRow.Delete%2A> コレクションの状態を変更します。  
  
 呼び出すことによって削除された行を戻すできます <xref:System.Data.DataRow.RejectChanges%2A>します。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> メソッドを一時的に中断 <xref:System.Data.DataTable.RowChanging> イベント、削除操作が完了しません。  
  
   
  
## 例  
 次の例では、単純な <xref:System.Data.DataTable> 2 つの列と 10 行を使用します。 いくつか削除した後に <xref:System.Data.DataRow> を持つアイテムを <xref:System.Data.DataRow.Delete%2A> を呼び出して、行のいずれかのメソッドが戻した <xref:System.Data.DataRow.RejectChanges%2A>します。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <see cref="T:System.Data.DataRow" /> が既に削除されています。</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>行で発生している編集を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.RowChanging> イベントです。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.EndEdit%2A> の編集を終了するメソッド、 <xref:System.Data.DataRow> 値の場合は、検証関数が true を返します。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">内部メソッドが呼び出された、 <see cref="E:System.Data.DataTable.RowChanging" /> イベントです。</exception>
        <exception cref="T:System.Data.ConstraintException">編集が制約に違反します。</exception>
        <exception cref="T:System.Data.ReadOnlyException">テーブルに行が属しているし、編集は読み取り専用の列の値を変更しようとしています。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">列に null 値を格納しようとした、編集、 <see cref="P:System.Data.DataColumn.AllowDBNull" /> は false。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <summary>この行の子を取得 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />します。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ChildRelations%2A> プロパティです。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetChildRows%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の各列の値が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">リレーションシップは <see langword="null" />です。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行には、このバージョンのデータはありません。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" /> を使用します。</param>
        <summary>子の行の取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ChildRelations%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 取得するデータのバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>子の行の取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ChildRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
 場合 <xref:System.Data.DataRowVersion.Default> が指定されているために使用されるバージョンに依存して、 <xref:System.Data.DataRow.RowState%2A> なる行の `GetChildRows` が呼び出されます。 場合に行 `GetChildRows` が呼び出されますが、 `RowState` の `Modified`, 、`New`, 、または `Unchanged`, 、 <xref:System.Data.DataRowVersion.Current> 、行のバージョンは現在のバージョンに一致する値に関連する子の行をフェッチするために使用します。 場合に行 `GetChildRows` が呼び出されますが、 `RowState` の `Deleted`, 、 <xref:System.Data.DataRowVersion.Original> が元のバージョンに一致する値を持つ関連する子行をフェッチするため、行のバージョンを使用します。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetChildRows%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の指定したバージョンの各列の値が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行は、要求されたが <see cref="T:System.Data.DataRowVersion" />です。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" /> を使用します。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 取得するデータのバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>子の行の取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ChildRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
 場合 <xref:System.Data.DataRowVersion.Default> が指定されているために使用されるバージョンに依存して、 <xref:System.Data.DataRow.RowState%2A> なる行の `GetChildRows` が呼び出されます。 場合に行 `GetChildRows` が呼び出されますが、 `RowState` の `Modified`, 、`New`, 、または `Unchanged`, 、 <xref:System.Data.DataRowVersion.Current> 、行のバージョンは現在のバージョンに一致する値に関連する子の行をフェッチするために使用します。 場合に行 `GetChildRows` が呼び出されますが、 `RowState` の `Deleted`, 、 <xref:System.Data.DataRowVersion.Original> が元のバージョンに一致する値を持つ関連する子行をフェッチするため、行のバージョンを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行は、要求されたが <see cref="T:System.Data.DataRowVersion" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>指定したエラーの説明を取得 <see cref="T:System.Data.DataColumn" />します。</summary>
        <returns>エラーの説明のテキストです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.SetColumnError%2A> 列エラーを設定します。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。 または、 <xref:System.Data.DataTable.GetErrors%2A> のメソッド、 <xref:System.Data.DataTable> エラーのあるすべての行を返します。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列の 0 から始まるインデックス。</param>
        <summary>インデックスで指定された列のエラーの説明を取得します。</summary>
        <returns>エラーの説明のテキストです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.SetColumnError%2A> 列エラーを設定します。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 引数が範囲外です。</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <summary>名前で指定した列のエラーの説明を取得します。</summary>
        <returns>エラーの説明のテキストです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.SetColumnError%2A> 列エラーを設定します。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エラーが発生した列の配列を取得します。</summary>
        <returns>配列 <see cref="T:System.Data.DataColumn" /> エラーを含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataRow.GetColumnsInError%2A> の数を削減することができます <xref:System.Data.DataColumn> オブジェクト エラーがある列のみを返すことによってエラーを処理する必要があります。 エラーを使用して個々 の列に設定する、 <xref:System.Data.DataRow.SetColumnError%2A> メソッドです。 処理の数をさらに減らすためには、確認、 <xref:System.Data.DataRow.HasErrors%2A> のプロパティ、 <xref:System.Data.DataRow> クラスを決定するかどうか、 <xref:System.Data.DataRow> を呼び出す前にエラーが発生 <xref:System.Data.DataRow.GetColumnsInError%2A>します。  
  
 使用して、 <xref:System.Data.DataRow.ClearErrors%2A> 行のすべてのエラーをクリアします。 これには <xref:System.Data.DataRow.RowError%2A> が含まれます。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.HasErrors%2A> のエラーを確認します。 行が、エラー、 <xref:System.Data.DataRow.GetColumnsInError%2A> メソッド解決できるエラーのある列の配列を返します。<xref:System.Data.DataRow.ClearErrors%2A> すべてのエラーを消去するメソッドが呼び出されます。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />します。</summary>
        <returns>親 <see cref="T:System.Data.DataRow" /> の現在の行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetParentRow%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の各列の値が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> に属さない、 <see cref="T:System.Data.DataTable" />です。  
  
 行が <see langword="null" />です。</exception>
        <exception cref="T:System.Data.DataException">子の行に複数の親が含まれます。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">この行がの子テーブルに属していない、 <see cref="T:System.Data.DataRelation" /> オブジェクトです。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</summary>
        <returns>親 <see cref="T:System.Data.DataRow" /> の現在の行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.GetParentRow%2A> それぞれの親の各行から値を印刷する <xref:System.Data.DataRow> で、 <xref:System.Data.DataTable>です。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.Data.DataException">子の行に複数の親が含まれます。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 取得するデータのバージョンを指定する値。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>親 <see cref="T:System.Data.DataRow" /> の現在の行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetParentRow%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の各列の値が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">行が <see langword="null" />です。  
  
 <paramref name="relation" /> はこのテーブルの親のリレーションシップに属していません。</exception>
        <exception cref="T:System.Data.DataException">子の行に複数の親が含まれます。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">リレーションシップの子テーブルは、行が属するテーブルではありません。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行には、このバージョンのデータはありません。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</param>
        <param name="version">
          <see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>親 <see cref="T:System.Data.DataRow" /> の現在の行。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.GetParentRow%2A> それぞれの親の各行から値を印刷する <xref:System.Data.DataRow> で、 <xref:System.Data.DataTable>です。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Data.DataException">子の行に複数の親が含まれます。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行は、要求されたが <see cref="T:System.Data.DataRowVersion" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />します。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetParentRows%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の各列の値が出力されます。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> がこの行に属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <exception cref="T:System.ArgumentNullException">行が <see langword="null" />です。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">リレーションシップの子テーブルは、行が属するテーブルではありません。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行が属しておらず、 <see cref="T:System.Data.DataTable" />です。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">使用する <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 取得するデータのバージョンを指定する値。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
   
  
## 例  
 次の例で、 <xref:System.Data.DataRow.GetParentRows%2A> を子を返す <xref:System.Data.DataRow> のすべての子オブジェクト <xref:System.Data.DataRelation> で、 <xref:System.Data.DataTable>です。 行の各列の値が出力されます。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> がこの行に属していない <see cref="T:System.Data.DataSet" />します。</exception>
        <exception cref="T:System.ArgumentNullException">行が <see langword="null" />です。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">リレーションシップの子テーブルは、行が属するテーブルではありません。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行が属しておらず、 <see cref="T:System.Data.DataTable" />です。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行は、要求されたが <see cref="T:System.Data.DataRowVersion" />です。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />です。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 取得するデータのバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" /> 指定して <see cref="P:System.Data.DataRelation.RelationName" /> の <see cref="T:System.Data.DataRelation" />, 、および <see cref="T:System.Data.DataRowVersion" />です。</summary>
        <returns>配列 <see cref="T:System.Data.DataRow" /> オブジェクトまたは長さ 0 の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet>, 、すべての親のコレクション <xref:System.Data.DataRelation> オブジェクトによってデータ セットが返されるは <xref:System.Data.DataRow.GetParentRows%2A> メソッドです。  
  
 <xref:System.Data.DataTable> ものコレクションを含む <xref:System.Data.DataRelation> によって返されるオブジェクト、 <xref:System.Data.DataTable.ParentRelations%2A> プロパティです。  
  
 使用して、 <xref:System.Data.DataRow.HasVersion%2A> を確認するにするかどうか、 <xref:System.Data.DataRowVersion> が存在します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">リレーションシップと行は、同じテーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行は、要求されたが <see cref="T:System.Data.DataRowVersion" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行のエラーがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 行にするとエラーが含まれている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `HasErrors` 返します `true` 存在する場合 <xref:System.Data.DataColumn> 行内のオブジェクトには、エラーが含まれています。 または、 <xref:System.Data.DataRow.RowError%2A> のプロパティ、 <xref:System.Data.DataRow> 、空の文字列ではありません。  
  
 データを検証する場合は、行の列に対するエラーを設定できます。 このような列に表示された場合、 <xref:System.Windows.Forms.DataGrid?displayProperty=fullName> コントロールを列がエラーであるユーザーに通知するために赤色の感嘆符が付いています。  
  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> を任意の列でエラーを設定します。  
  
 使用して、 <xref:System.Data.DataRow.GetColumnError%2A> と `GetColumnsInError` エラーのある列を返すメソッド。  
  
 <xref:System.Data.DataRow.ClearErrors%2A> メソッドは、行のすべてのエラーをクリアします。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.HasErrors%2A> のエラーを確認します。 行が、エラー、 <xref:System.Data.DataRow.GetColumnsInError%2A> メソッド解決できるエラーのある列の配列を返します。<xref:System.Data.DataRow.ClearErrors%2A> すべてのエラーを消去するメソッドが呼び出されます。  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 行のバージョンを指定する値。</param>
        <summary>指定したバージョンが存在するかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> バージョンが存在する場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 参照してください、 <xref:System.Data.DataRow.BeginEdit%2A> 方法の詳細。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.HasVersion%2A> 列の現在の値と指定された値が同じであるかどうかを決定する方法です。 必要な場合は、編集をキャンセルします。 それ以外の場合、 <xref:System.Data.DataRow.AcceptChanges%2A> メソッドが呼び出されて、編集を終了します。  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>示す値を取得するかどうか、指定した <see cref="T:System.Data.DataColumn" /> null 値が含まれています。</summary>
        <returns>
          <see langword="true" /> 列に null 値が含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の各テーブルの各行の各列の出力、 <xref:System.Data.DataSet>です。 行が null 値に設定されている場合、値は出力されません。  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列の 0 から始まるインデックス。</param>
        <summary>指定したインデックス位置にある列が null 値を含むかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 列に null 値が含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、列の値を null 値に変更し、次を使用して、 <xref:System.Data.DataRow.IsNull%2A> 値が null かどうかを決定する方法です。  
  
 [!code-vb[Classic WebData DataRow.IsNull Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <summary>名前付きの列に null 値が含まれるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 列に null 値が含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、列の値を null 値に変更し、次を使用して、 <xref:System.Data.DataRow.IsNull%2A> 値が null かどうかを決定する方法です。  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> 行のバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>示す値を取得するかどうか、指定した <see cref="T:System.Data.DataColumn" /> と <see cref="T:System.Data.DataRowVersion" /> null 値が含まれています。</summary>
        <returns>
          <see langword="true" /> 列に null 値が含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> データが含まれています。</param>
        <summary>指定した格納されているデータを取得または <see cref="T:System.Data.DataColumn" />です。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 直前の編集の場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Data.DataRow.Item%2A> プロパティを取得および特定の列インデックスの値を設定します。 最初の例では、最初の列の値を取得、ユーザーがクリックした任意の行で、 <xref:System.Windows.Forms.DataGrid> コントロールです。 2 つ目は、メソッドに引数として渡された値を設定します。  
  
 [!code-vb[Classic WebData DataRow.this2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">列は、次の表には属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> が null です。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定しようとしています。</exception>
        <exception cref="T:System.InvalidCastException">値と列のデータ型が一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列の 0 から始まるインデックス。</param>
        <summary>取得またはインデックスで指定された列に格納されたデータを設定します。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 編集する場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Data.DataRow.Item%2A> プロパティを取得および特定の列インデックスの値を設定します。 最初の例では、最初の列の値を取得、ユーザーがクリックした任意の行で、 <xref:System.Windows.Forms.DataGrid> コントロールです。  
  
 [!code-csharp[Classic WebData DataRow.this Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定しようとすると発生します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 引数が範囲外です。</exception>
        <exception cref="T:System.InvalidCastException">値と、新しい値を設定するときに発生 <see cref="T:System.Type" /> と一致しません <see cref="P:System.Data.DataColumn.DataType" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <summary>取得または名前で指定された列に格納されたデータを設定します。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 直前の編集の場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Data.DataRow.Item%2A> プロパティを取得および特定の列インデックスの値を設定します。 最初の例では、最初の列の値を取得、ユーザーがクリックした任意の行で、 <xref:System.Windows.Forms.DataGrid> コントロールです。 2 つ目は、メソッドに引数として渡された値を設定します。  
  
 [!code-csharp[Classic WebData DataRow.this1 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された列 <paramref name="columnName" /> が見つかりません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定しようとすると発生します。</exception>
        <exception cref="T:System.InvalidCastException">値を設定するときに発生し、その <see cref="T:System.Type" /> と一致しません <see cref="P:System.Data.DataColumn.DataType" />します。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">列に null 値を挿入しようとするときに発生場所 <see cref="P:System.Data.DataColumn.AllowDBNull" /> に設定されている <see langword="false" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">列に関する情報を格納する <see cref="T:System.Data.DataColumn" />。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> する行のバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>指定した格納されているデータの指定したバージョンを取得 <see cref="T:System.Data.DataColumn" />します。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `version` と混同しないようにする、 <xref:System.Data.DataRow.RowState%2A> プロパティです。`version` 引数が列の元の値の基準とした列に格納されているデータの状態を説明します。  
  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 直前の編集の場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例でクリックされたセルの現在の値を取得する、 <xref:System.Windows.Forms.DataGrid> コントロールです。  
  
 [!code-csharp[Classic WebData DataRow.this5 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">列は、テーブルには属していません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> 引数に null が含まれています。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行には、このバージョンのデータはありません。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列の 0 から始まるインデックス。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> する行のバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>インデックスおよび取得するデータのバージョンで指定された列に格納されたデータを取得します。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 のみを作成またはを呼び出した後に行を更新できます、 <xref:System.Data.DataRow.BeginEdit%2A> メソッド同様に、;、 <xref:System.Data.DataRow.EndEdit%2A> メソッドを呼び出して、編集をコミットする必要があります。 呼び出した後、 <xref:System.Data.DataRow.EndEdit%2A> メソッドを呼び出す前に、 <xref:System.Data.DataRow.AcceptChanges%2A> メソッド、元のおよび新しい内部表現を提案の値が格納されています。 そのためが呼び出されるまで、 <xref:System.Data.DataRow.AcceptChanges%2A>, 、使用することができます、 `version` 列の値のバージョンを必要があるかを指定する引数、 `DataRowVersion.Original` または `DataRowVersion.Proposed`です。 ただしとすぐに呼び出す、 <xref:System.Data.DataRow.AcceptChanges%2A> メソッドに、列のバージョンを元に戻します `DataRowVersion.Original`します。 行が新しい場合は、渡すこともできます `DataRowVersion.Default` の列の既定値を取得するパラメーターです。 渡すとき `DataRowVersion.Current`, 、返しますが、現在値に設定するもの、そのバージョンがあります。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> メソッドは、データ バインド コントロールの値を変更するとき、または暗黙的に呼び出されます、 <xref:System.Data.DataRow> オブジェクトに追加、 <xref:System.Data.DataRowCollection>、 <xref:System.Data.DataRow.EndEdit%2A> メソッドは、次のメソッドを呼び出すときに暗黙的に呼び出されます。:、 <xref:System.Data.DataRow.AcceptChanges%2A> のメソッド、 <xref:System.Data.DataRow> オブジェクト、 <xref:System.Data.DataTable.AcceptChanges%2A> のメソッド、 <xref:System.Data.DataTable> オブジェクト、または <xref:System.Data.DataRow.CancelEdit%2A> メソッドです。  
  
 これに対し、 <xref:System.Data.DataRowVersion> 列挙 `Current` 後のデータのバージョンを返す、 <xref:System.Data.DataRow.EndEdit%2A> メソッドが呼び出されました。  
  
 `version` 引数と混同してはなりませんが、 <xref:System.Data.DataRow.RowState%2A> プロパティです。`version` 引数が列の元の値の基準とした列に格納されているデータの状態を説明します。<xref:System.Data.DataRow.RowState%2A> プロパティがその親を基準とした行全体の状態を説明 <xref:System.Data.DataTable>します。  
  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 直前の編集の場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例によって、列の現在の値を取得する、 <xref:System.Data.DataRow.Item%2A> のプロパティ、 <xref:System.Data.DataRow> オブジェクトです。  
  
 [!code-vb[Classic WebData DataRow.this3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 引数が範囲外です。</exception>
        <exception cref="T:System.InvalidCastException">値と列のデータ型が一致しません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行には、このバージョンのデータはありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定しようとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <param name="version">いずれか、 <see cref="T:System.Data.DataRowVersion" /> する行のバージョンを指定する値。 指定できる値は、<see langword="Default" />、<see langword="Original" />、<see langword="Current" />、および <see langword="Proposed" /> です。</param>
        <summary>指定されたバージョンの名前付きの列に格納されたデータを取得します。</summary>
        <value>データを格納している <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バージョン混同しないようにと、 <xref:System.Data.DataRow.RowState%2A> プロパティです。`version` 引数が列の元の値の基準とした列に格納されているデータの状態を説明します。<xref:System.Data.DataRow.RowState%2A> プロパティがその親を基準とした行全体の状態を説明 <xref:System.Data.DataTable>します。  
  
 例外が発生した場合、例外が生成される、プロパティを設定すると、 <xref:System.Data.DataTable.ColumnChanging> イベントです。  
  
 直前の編集の場合を参照してください。 <xref:System.Data.DataRow.EndEdit%2A> 、生成される例外。  
  
   
  
## 例  
 次の例では、データの現在のバージョンを取得のクリックされたセルで、 <xref:System.Windows.Forms.DataGrid> コントロールです。  
  
 [!code-csharp[Classic WebData DataRow.this4 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された列 <paramref name="columnName" /> が見つかりません。</exception>
        <exception cref="T:System.InvalidCastException">値と列のデータ型が一致しません。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">行には、このバージョンのデータはありません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">行が削除されました。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または配列を使用してこの行のすべての値を設定します。</summary>
        <value>
          <see cref="T:System.Object" /> 型の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、配列を使用してこの行の値を取得または設定を使用することができます。 このプロパティを使用して値を設定する場合、配列は同じサイズと列のコレクションと順序付けが必要です。 渡す `null` で、 <xref:System.Data.DataRow.ItemArray%2A> 値が指定されていないことを示します。  
  
 ユーザーが例外を生成、 <xref:System.Data.DataTable.ColumnChanging> イベントまたは <xref:System.Data.DataTable.RowChanging> イベントです。  
  
   
  
## 例  
 次の例は、値を使用して取得および設定する方法を示して、 <xref:System.Data.DataRow.ItemArray%2A> プロパティです。  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">配列は、テーブル内の列の数を超えています。</exception>
        <exception cref="T:System.InvalidCastException">配列内の値が一致しない、 <see cref="P:System.Data.DataColumn.DataType" /> でそれぞれの <see cref="T:System.Data.DataColumn" />です。</exception>
        <exception cref="T:System.Data.ConstraintException">編集が制約に違反します。</exception>
        <exception cref="T:System.Data.ReadOnlyException">編集が読み取り専用の列の値を変更しようとするとします。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">編集が、列に null 値を格納しようとしています。 ここで <see cref="P:System.Data.DataColumn.AllowDBNull" /> の、 <see cref="T:System.Data.DataColumn" /> オブジェクトが <see langword="false" />です。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">行が削除されました。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以降の行に加えられたすべての変更を拒否した <see cref="M:System.Data.DataRow.AcceptChanges" /> 最後に呼び出されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出すと、 <xref:System.Data.DataRow.RejectChanges%2A> 、メソッド、 <xref:System.Data.DataRow.CancelEdit%2A> メソッドは、編集をキャンセルする暗黙的に呼び出されます。 場合 <xref:System.Data.DataRow.RowState%2A> を削除または変更するには、行は、以前の値に戻りますと <xref:System.Data.DataRow.RowState%2A> 変更になります。 場合、 <xref:System.Data.DataRow.RowState%2A> が追加、行を削除します。  
  
   
  
## 例  
 次の例では、単純な <xref:System.Data.DataTable> 2 つの列と 10 行を使用します。 いくつかの後に <xref:System.Data.DataRow> で項目が削除された、 <xref:System.Data.DataRow.Delete%2A> を呼び出して、行のいずれかのメソッドが戻した <xref:System.Data.DataRow.RejectChanges%2A>します。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">行は、テーブルには属していません。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行のカスタム エラーの説明を設定します。</summary>
        <value>エラーを説明するテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.HasErrors%2A> プロパティを最初に確認をするかどうか、 <xref:System.Data.DataRow> エラーが含まれています。  
  
   
  
## 例  
 次の例は、10 個の行に表示されたテーブルのエラー テキストを設定、 <xref:System.Windows.Forms.DataGrid> コントロールです。  
  
 [!code-csharp[Classic WebData DataRow.RowError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関係に関して行の現在の状態を取得、 <see cref="T:System.Data.DataRowCollection" />です。</summary>
        <value>
          <see cref="T:System.Data.DataRowState" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Data.DataRow.RowState%2A> は 2 つの要因に依存します: 行に、操作の種類が実行されたかどうかおよび <xref:System.Data.DataRow.AcceptChanges%2A> で呼び出されて、 <xref:System.Data.DataRow>です。  
  
   
  
## 例  
 次の例は最初に、新しい作成 <xref:System.Data.DataTable> 1 つの列を持つ 1 つを作成し、 <xref:System.Data.DataRow>します。 として、 <xref:System.Data.DataRow> 作成、追加、変更、および削除するはその <xref:System.Data.DataRow.RowState%2A> が出力されます。  
  
 [!code-csharp[Classic WebData DataRow.RowState Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変更、 <see cref="P:System.Data.DataRow.Rowstate" /> の <see cref="T:System.Data.DataRow" /> に <see langword="Added" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 変更、 <xref:System.Data.DataRow.RowState%2A> の <xref:System.Data.DataRow> に `Added`します。 いずれかで、現在の行がない場合、 `Unchanged` または `Added` 状態にある場合にスロー、 <xref:System.InvalidOperationException> メッセージを使用する `SetAdded` でのみ呼び出すことができます、 `DataRow` インスタンスの `RowState` は `Unchanged`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" /> のエラーの説明を設定します。</param>
        <param name="error">エラーの説明。</param>
        <summary>指定された列のエラーの説明を設定、 <see cref="T:System.Data.DataColumn" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エラーの説明を調べるを使用して、 <xref:System.Data.DataRow.GetColumnError%2A> メソッドです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> プロパティです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
 場合 `null` または空の文字列として渡されます、 `error` パラメーター、 <xref:System.Data.DataRow> エラーが設定されていないとして動作し、 <xref:System.Data.DataRow.HasErrors%2A> プロパティは false を返します。  
  
 行全体では、カスタム エラーの説明を設定するには、使用、 <xref:System.Data.DataRow.RowError%2A> プロパティです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列の 0 から始まるインデックス。</param>
        <param name="error">エラーの説明。</param>
        <summary>インデックスで指定された列のエラーの説明を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メソッドを使用して、カスタム エラーの説明を指定した列に設定します。 使用することができます、 <xref:System.Windows.Forms.ErrorProvider> エラーのテキストを表示するコントロール。  
  
 エラーの説明を調べるを使用して、 <xref:System.Data.DataRow.GetColumnError%2A> メソッドです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> プロパティです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
 場合 `null` または空の文字列として渡されます、 `error` パラメーター、 <xref:System.Data.DataRow> エラーが設定されていないとして動作し、 <xref:System.Data.DataRow.HasErrors%2A> プロパティは false を返します。  
  
 行全体では、カスタム エラーの説明を設定するには、使用、 <xref:System.Data.DataRow.RowError%2A> プロパティです。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
 行全体に適用されるエラー テキストを設定するには、設定、 <xref:System.Data.DataRow.RowError%2A> プロパティです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> 引数が範囲外</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列の名前。</param>
        <param name="error">エラーの説明。</param>
        <summary>名前で指定された列のエラーの説明を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列の名前を設定、 <xref:System.Data.DataColumn.ColumnName%2A> のプロパティ、 <xref:System.Data.DataColumn> クラスです。  
  
 エラーの説明を調べるを使用して、 <xref:System.Data.DataRow.GetColumnError%2A> メソッドです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> プロパティです。 したがって、使用することができます、 <xref:System.Data.DataRow.GetColumnsInError%2A> エラーのあるすべての列を取得します。  
  
 場合 `null` または空の文字列として渡されます、 `error` パラメーター、 <xref:System.Data.DataRow> エラーが設定されていないとして動作し、 <xref:System.Data.DataRow.HasErrors%2A> プロパティは false を返します。  
  
 行全体では、カスタム エラーの説明を設定するには、使用、 <xref:System.Data.DataRow.RowError%2A> プロパティです。  
  
 Columns コレクションにエラーがあるかどうかを確認するのには、使用、 <xref:System.Data.DataRow.HasErrors%2A> メソッドです。  
  
 列コレクションのすべてのエラーをクリアする、 <xref:System.Data.DataRow.ClearErrors%2A> メソッドです。  
  
   
  
## 例  
 次の例は、指定したエラーの説明を設定 <xref:System.Data.DataRow>します。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変更、 <see cref="P:System.Data.DataRow.Rowstate" /> の <see cref="T:System.Data.DataRow" /> に <see langword="Modified" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 変更、 <xref:System.Data.DataRow.Rowstate%2A> の <xref:System.Data.DataRow> に `Modified`します。 いずれかで、現在の行がない場合、 `Unchanged` または `Added` 状態にある場合にスロー、 <xref:System.InvalidOperationException> メッセージを使用する `SetModified` でのみ呼び出すことができます、 `DataRow` インスタンスの `RowState` は `Unchanged`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" />
        </param>
        <summary>指定した値を設定 <see cref="T:System.Data.DataColumn" /> を null 値にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.DataRow.IsNull%2A> 列に null 値が含まれるかどうかを決定する方法です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">新しい親 <see cref="T:System.Data.DataRow" />します。</param>
        <summary>親行の設定、 <see cref="T:System.Data.DataRow" /> の新しい親が指定された <see cref="T:System.Data.DataRow" />します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">新しい親 <see cref="T:System.Data.DataRow" />します。</param>
        <param name="relation">リレーション <see cref="T:System.Data.DataRelation" /> を使用します。</param>
        <summary>親行の設定、 <see cref="T:System.Data.DataRow" /> の新しい親が指定された <see cref="T:System.Data.DataRow" /> と <see cref="T:System.Data.DataRelation" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、特定の子行の親の行を設定します。  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">行の 1 つは、テーブルに属していません</exception>
        <exception cref="T:System.ArgumentNullException">行の 1 つは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">リレーションシップに属していない、 <see cref="T:System.Data.DataRelationCollection" /> の <see cref="T:System.Data.DataSet" /> オブジェクトです。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">リレーションシップの子 <see cref="T:System.Data.DataTable" /> この行が属するテーブルではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Data.DataTable" /> この行にスキーマがあります。</summary>
        <value>
          <see cref="T:System.Data.DataTable" /> この行が属しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Data.DataRow> 必ずしも行の任意のテーブルのコレクションに属していません。 この動作が発生したときに、 <xref:System.Data.DataRow> 作成されましたに追加されていない、 <xref:System.Data.DataRowCollection>です。 場合、 <xref:System.Data.DataRow.RowState%2A> プロパティを返します。 `DataRowState.Detached`, 、行のすべてのコレクションが解除されます。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.DataRow.Table%2A> の columns コレクションへの参照を返すようにプロパティ、 <xref:System.Data.DataTable>です。  
  
 [!code-csharp[Classic WebData DataRow.Table Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>親行の設定、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>子の行の取得、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された列が null 値を含むかどうかを示す値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>列のエラーの説明を設定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得または指定された列に格納されたデータを設定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>親の行を取得、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>列のエラーの説明を取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>