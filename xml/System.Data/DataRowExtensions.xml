<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>拡張メソッドを定義、 <see cref="T:System.Data.DataRow" /> クラスです。 これは、静的クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> API が 2 つの新しい方法で拡張されて、 <xref:System.Data.DataRow> クラス、 <xref:System.Data.DataRowExtensions.Field%2A> と <xref:System.Data.DataRowExtensions.SetField%2A>です。 フォームにこれらを使用して [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 式とメソッドのクエリを <xref:System.Data.DataTable> オブジェクトです。 内の列値にアクセスするために使用できることをお勧めの方法は [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 式およびメソッドのクエリ。 詳細については、「[The Generic Field and SetField Methods](http://msdn.microsoft.com/ja-jp/1883365f-9d6c-4ccb-9187-df309f47706d)」を参照してください。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="column">入力 <see cref="T:System.Data.DataColumn" /> の値を取得する列を指定するオブジェクト。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="column" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> は <xref:System.DBNull.Value> と `T` が参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="column" /> では発生しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A **null** 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnIndex">列のインデックス。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="columnIndex" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> は **null** と `T` 参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="ordinal" /> に存在しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A **null** 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnName">値を返す列の名前。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="columnName" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。 A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。 値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> は **null** と `T` が参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="columnName" /> では発生しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A <see langword="null" /> 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="column">入力 <see cref="T:System.Data.DataColumn" /> の値を取得する列を指定するオブジェクト。</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> 、列の値を返すなどのバージョンを指定する列挙体 <see langword="Current" /> または <see langword="Original" /> バージョンです。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="column" /> と <paramref name="version" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> が null と `T` 参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="column" /> に存在しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A **null** 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnIndex">値を取得する列の 0 から始まる序数。</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> 、列の値を返すなどのバージョンを指定する列挙体 <see langword="Current" /> または <see langword="Original" /> バージョンです。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="ordinal" /> と <paramref name="version" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> が null と `T` 参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="ordinal" /> に存在しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A **null** 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の戻り値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnName">値を返す列の名前。</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> 、列の値を返すなどのバージョンを指定する列挙体 <see langword="Current" /> または <see langword="Original" /> バージョンです。</param>
        <summary>指定した行の列の値のそれぞれに厳密に型指定されたアクセスを提供します。<see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> メソッドには、null 許容型もサポートしています。</summary>
        <returns>型の値、 <paramref name="T" />, の <see cref="T:System.Data.DataColumn" /> によって指定された <paramref name="columnName" /> と <paramref name="version" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.DataSet> クラスを表します **null** の値を使った、 <xref:System.DBNull.Value> のインスタンス、 <xref:System.DBNull> クラスです。  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] を持つ列にアクセスする式、 **null** 値を生成、 <xref:System.InvalidCastException> 実行時にします。 さらに、 <xref:System.Data.DataSet> null 許容型をサポートしていません。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは null 許容型として列にアクセスするためのサポートを提供します。  値、基になる場合は、 <xref:System.Data.DataSet> は <xref:System.DBNull.Value>, 、返される null 許容型の値になります **null**します。  
  
 場合の指定した値 <xref:System.Data.DataColumn> が null と `T` 参照型または null 許容型は、戻り値の型になります **null**します。<xref:System.Data.DataRowExtensions.Field%2A> メソッドは返されません <xref:System.DBNull.Value>します。  
  
 <xref:System.Data.DataRowExtensions.Field%2A> メソッドが型変換を実行しません。 型変換が必要な場合を使用して、列の値を確認する必要があります、 <xref:System.Data.DataRowExtensions.Field%2A> メソッドです。 列の値は、別の型に変換する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">指定された列 <paramref name="columnName" /> に存在しません、 <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataRow" /> の一部です。</exception>
        <exception cref="T:System.NullReferenceException">A **null** 値が null 非許容の型に割り当てられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="column">入力 <see cref="T:System.Data.DataColumn" /> を取得するには、どの行値を指定します。</param>
        <param name="value">型の指定された列の新しい行の値 <c>T</c>です。</param>
        <summary>指定した列の新しい値を設定、 <see cref="T:System.Data.DataRow" />です。<see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> メソッドには、null 許容型もサポートしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `value` は **null**, 、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドに変換、 **null** 値を <xref:System.DBNull.Value> 、基に <xref:System.Data.DataColumn>します。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドはすべての型変換を実行しません。 ただし、型変換がまったく発生しないということではありません。<xref:System.Data.DataRowExtensions.SetField%2A> メソッドを公開、 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] の動作、 <xref:System.Data.DataRow> クラスです。 型変換を実行して、 <xref:System.Data.DataRow> オブジェクトと変換後の値はその後で保存の行にします。  
  
 例外を渡すことが、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドから、基になる <xref:System.Data.DataRow> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された列 <paramref name="column" /> が見つかりません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> は **null**します。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定する際に発生します。</exception>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnIndex">値を設定する列の 0 から始まる序数。</param>
        <param name="value">型の指定された列の新しい行の値 <c>T</c>です。</param>
        <summary>指定した列の新しい値を設定、 <see cref="T:System.Data.DataRow" /> 、メソッドで呼び出されます。<see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> メソッドには、null 許容型もサポートしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `value` は **null**, 、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドに変換、 **null** 値を <xref:System.DBNull.Value> 、基に <xref:System.Data.DataColumn>します。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドはすべての型変換を実行しません。 ただし、型変換がまったく発生しないということではありません。<xref:System.Data.DataRowExtensions.SetField%2A> メソッドを公開、 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] の動作、 <xref:System.Data.DataRow> クラスです。 型変換を実行して、 <xref:System.Data.DataRow> オブジェクトと変換後の値はその後で保存の行にします。  
  
 例外を渡すことが、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドから、基になる <xref:System.Data.DataRow> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定する際に発生します。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> 引数が範囲外です。</exception>
        <exception cref="T:System.InvalidCastException">基になる列の値の型をジェネリック パラメーターで指定された型にないキャストでした <paramref name="T" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">ジェネリック パラメーターには、列の値の型を指定します。</typeparam>
        <param name="row">入力 <see cref="T:System.Data.DataRow" />, 、として機能する、 <see langword="this" /> 、拡張メソッドのインスタンス。</param>
        <param name="columnName">値を設定する列の名前。</param>
        <param name="value">型の指定された列の新しい行の値 <c>T</c>です。</param>
        <summary>指定した列の新しい値を設定、 <see cref="T:System.Data.DataRow" />です。<see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> メソッドには、null 許容型もサポートしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `value` は **null**, 、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドに変換、 **null** 値を <xref:System.DBNull.Value> 、基に <xref:System.Data.DataColumn>します。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドはすべての型変換を実行しません。 ただし、型変換がまったく発生しないということではありません。<xref:System.Data.DataRowExtensions.SetField%2A> メソッドを公開、 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] の動作、 <xref:System.Data.DataRow> クラスです。 型変換を実行して、 <xref:System.Data.DataRow> オブジェクトと変換後の値はその後で保存の行にします。  
  
 例外を渡すことが、 <xref:System.Data.DataRowExtensions.SetField%2A> メソッドから、基になる <xref:System.Data.DataRow> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された列 <paramref name="columnName" /> が見つかりません。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">削除された行の値を設定する際に発生します。</exception>
        <exception cref="T:System.InvalidCastException">基になる列の値の型がジェネリック パラメーターで指定された型にキャストできませんでした <paramref name="T" />します。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>各列の値にアクセスできるように厳密に型指定された、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した列の新しい値を設定、 <see cref="T:System.Data.DataRow" />です。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>