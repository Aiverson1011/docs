<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>一連の入力に使用されるコマンドに関連するプロパティを表す、 <see cref="T:System.Data.DataSet" /> リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装され、データ ソースを更新します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.IDbDataAdapter> インターフェイスから継承、 <xref:System.Data.IDataAdapter> インターフェイスし、リレーショナル データベースで使用するために設計されたデータ アダプターを作成するオブジェクトを許可します。<xref:System.Data.IDbDataAdapter> インターフェイスと、オプションでは、ユーティリティ クラス <xref:System.Data.Common.DbDataAdapter>, 、継承したデータ ソース間のブリッジを表す DataAdapter クラスを実装するクラスを許可して、 <xref:System.Data.DataSet>です。 DataAdapter クラスの詳細については、次を参照してください。 [&#91;\<topic:\/\/cpconpopulatingdatasetfromdataadapter\>&#93;](http://msdn.microsoft.com/ja-jp/3fa0ac7d-e266-4954-bfac-3fbe2f913153)します。 .NET Framework データ プロバイダーの実装の詳細については、次を参照してください。 [&#91;\<topic:\/\/cpconimplementingnetdataprovider\>&#93;](http://msdn.microsoft.com/ja-jp/a9fa1926-071b-4c6f-997d-a16bac633852)します。  
  
 アプリケーションがのインスタンスを作成していない、 <xref:System.Data.IDbDataAdapter> を直接インターフェイスしますが、継承するクラスのインスタンスを作成 <xref:System.Data.IDbDataAdapter> と <xref:System.Data.Common.DbDataAdapter>です。  
  
 継承したクラス <xref:System.Data.IDbDataAdapter> 通常プロバイダー固有の機能を追加するその他のメンバーを定義し、継承されたメンバーを実装する必要があります。 たとえば、 <xref:System.Data.IDbDataAdapter> インターフェイスを定義、 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティには、および <xref:System.Data.Common.DbDataAdapter> インターフェイスを定義、 <xref:System.Data.IDataAdapter.Fill%2A> を受け取るメソッド、 <xref:System.Data.DataTable> をパラメーターとして。 さらに、 <xref:System.Data.OleDb.OleDbDataAdapter> クラスは継承、 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> プロパティおよび <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドもの他 2 つのオーバー ロードを定義し、 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> を ADO レコード セット オブジェクトをパラメーターとして受け取るメソッドです。  
  
   
  
## 例  
 次のコードの例では、派生クラスでは、 <xref:System.Data.SqlClient.SqlCommand>, 、<xref:System.Data.SqlClient.SqlDataAdapter> と <xref:System.Data.SqlClient.SqlConnection>, 、データ ソースからレコードを選択します。 塗りつぶされた、 <xref:System.Data.DataSet> 返されます。 これを実現する、メソッドは渡される初期化された <xref:System.Data.DataSet>, 、接続文字列の場合、およびクエリ文字列では、TRANSACT\-SQL SELECT ステートメントです。  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  
  
 When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  
  
 <list type="table"><listheader><term> Item  
  
 </term><description> Description  
  
 </description></listheader><item><term> PrvDataAdapter()  
  
 </term><description> Initializes a new instance of the PrvDataAdapter class.  
  
 </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  
  
 </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  
  
 </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  
  
 </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  
  
 </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  
  
 </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ セットからレコードを削除する SQL ステートメントを設定します。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ セットの削除された行のデータ ソースのレコードを削除します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[&#91;\<topic:\/\/cpconAutomaticallyGeneratedCommands\>&#93;](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> が割り当てられている以前に作成した <xref:System.Data.IDbCommand>, 、 <xref:System.Data.IDbCommand> 複製されません。<xref:System.Data.IDbDataAdapter.DeleteCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.IDbCommand> オブジェクトです。  
  
   
  
## 例  
 次の例の継承されたインスタンスを作成する <xref:System.Data.OleDb.OleDbDataAdapter> クラス、およびセット、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> と <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.OleDb.OleDbConnection> オブジェクトです。  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースに新しいレコードを挿入する SQL ステートメントを設定します。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ セット内の新しい行のデータ ソースのレコードを挿入します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[&#91;\<topic:\/\/cpconAutomaticallyGeneratedCommands\>&#93;](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> が割り当てられている以前に作成した <xref:System.Data.IDbCommand>, 、 <xref:System.Data.IDbCommand> 複製されません。<xref:System.Data.IDbDataAdapter.InsertCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.IDbCommand> オブジェクトです。  
  
> [!NOTE]
>  これらの行に追加できますこのコマンドの実行には、行が返された場合、 <xref:System.Data.DataSet> の設定に応じて、 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> のプロパティ、 <xref:System.Data.IDbCommand> オブジェクトです。  
  
   
  
## 例  
 次の例の継承されたインスタンスを作成する <xref:System.Data.OleDb.OleDbDataAdapter> クラス、およびセット、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> と <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.OleDb.OleDbConnection> オブジェクトです。  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソース内のレコードを選択する SQL ステートメントを設定します。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 中に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ セットに配置するデータ ソースからレコードを選択します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> が割り当てられている以前に作成した <xref:System.Data.IDbCommand>, 、 <xref:System.Data.IDbCommand> 複製されません。<xref:System.Data.IDbDataAdapter.SelectCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.IDbCommand> オブジェクトです。  
  
 場合、 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 、どの行を返さないことにテーブルが追加されない、 <xref:System.Data.DataSet>, 、例外が発生しなかったとします。  
  
   
  
## 例  
 次の例の継承されたインスタンスを作成する <xref:System.Data.OleDb.OleDbDataAdapter> クラス、およびセット、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> と <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.OleDb.OleDbConnection> オブジェクトです。  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースのレコードの更新を使用する SQL ステートメントを設定します。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ セットで変更された行のデータ ソースのレコードを更新します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> を設定する場合は、自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティです。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[&#91;\<topic:\/\/cpconAutomaticallyGeneratedCommands\>&#93;](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> が割り当てられている以前に作成した <xref:System.Data.IDbCommand>, 、 <xref:System.Data.IDbCommand> 複製されません。<xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.IDbCommand> オブジェクトです。  
  
> [!NOTE]
>  これらの行に追加されたこのコマンドの実行には、行が返された場合、 <xref:System.Data.DataSet>です。  
  
   
  
## 例  
 次の例の継承されたインスタンスを作成する <xref:System.Data.OleDb.OleDbDataAdapter> クラス、およびセット、 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> と <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.OleDb.OleDbConnection> オブジェクトです。  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>