<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義、 MSBuild ロガーで、ビルド システムのイベントをサブスクライブします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてのロガー クラスがによって認識されるようにこのインターフェイスを実装する必要があります、 [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] エンジンです。  
  
 このインターフェイスを直接実装する代わりにもクラスを派生できます、ヘルパー クラスから <xref:Microsoft.Build.Utilities.Logger>, 、いくつかの既定の実装を提供する <xref:Microsoft.Build.Framework.ILogger> メンバーです。  
  
   
  
## 例  
 次の例では、基本的なロガーを作成する方法を示します。  
  
 [!code-csharp[msbuild\_BasicLogger\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">複数のロガーを使用可能なイベントです。</param>
        <summary>特定のイベントに複数のロガーをサブスクライブします。 任意のイベントが発生する前に、logger がビルド エンジンで登録される場合は、このメソッドが呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>logger のユーザー定義パラメーターを取得または設定します。</summary>
        <value>logger パラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーターは、任意の形式では、このプロパティで表すことができます。 たとえば、2 つのパラメーターと値を表現するには、でした文字列を使用する"parameter1 \= value1; parameter2 \= value2"です。  
  
 このプロパティは null 参照を指定できます \(`Nothing` で [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]\)。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>または、ビルド時に初期化の時点で logger に割り当てられているリソースを解放します。 Logger のすべてのイベントが発生した後、エンジンから登録がない場合に、このメソッドが呼び出されます。 ホスト MSBuild 通常終了直前にロガーの登録を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント ログに表示される詳細レベルを取得または設定します。</summary>
        <value>列挙値の 1 つ。 既定値は、<see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ロガーはログに記録するイベントを選択する自由ですが、詳細度のガイドラインに従うは一貫したユーザー エクスペリエンスを作成します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>