<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Linq.IQueryable" /> オブジェクトに並べ替え式を適用する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> でクラスを使用する、 <xref:System.Web.UI.WebControls.QueryExtender> データを昇順または降順の並べ替えを制御します。 並べ替えは、要素の型の既定の比較子によって実行されます。  
  
 <xref:System.Web.UI.WebControls.QueryExtender> コントロールは、さまざまなデータをフィルター処理に使用できるオプションをサポートしています。 フィルター オプションを使用した後を使用して、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> オブジェクト データを並べ替える。  
  
 並べ替えに使用するデータ フィールドを指定する、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> プロパティです。 使用して並べ替えの方向を指定する、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> プロパティです。 後に、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 使用すると、オブジェクトは、データ ソースに適用されている、 <xref:System.Web.UI.WebControls.Expressions.ThenBy> 式を別のデータ フィールドの後続の並べ替えを実行します。  
  
   
  
## 例  
 次の例で指定された文字列で始まる名前を持つ製品の AdventureWorks データベースの Products テーブルを検索する方法を示しています、 `SearchTextBox` テキスト ボックスです。<xref:System.Web.UI.WebControls.Expressions.OrderByExpression> オブジェクトには、降順で ListPrice データ フィールドを製品 ID フィールドを昇順に並べ替えた後のデータが並べ替えられます。 返されるクエリの結果、 <xref:System.Web.UI.WebControls.LinqDataSource> でコントロールが表示される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 このコード例で提供されている例の一部である [チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/ja-jp/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> プロパティが <see langword="null" /> です。</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のプロパティ、 <see cref="T:System.Linq.IQueryable" /> オブジェクトを並べ替えます。</summary>
        <value>プロパティ、 <see cref="T:System.Linq.IQueryable" /> でソートするデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> オブジェクトには、データ フィールドのデータが並べ替えられます。 以後の並べ替え操作は別のデータ フィールドを使用して、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> プロパティです。  
  
   
  
## 例  
 次の例では、データは降順で ListPrice フィールドおよび製品の ID フィールドの昇順の並べ替え方法を示します。 このコード例で提供されている例の一部である [チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/ja-jp/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得および設定の並べ替えの方向、 <see cref="T:System.Linq.IQueryable" /> データ ソース オブジェクト。</summary>
        <value>データ ソース オブジェクトの並べ替えの方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> でクラスを使用する、 <xref:System.Web.UI.WebControls.QueryExtender> データを昇順または降順の並べ替えを制御します。 使用して、並べ替え操作の方向が指定されている、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> プロパティです。  
  
   
  
## 例  
 次の例では、降順で ListPrice フィールドと、ProductID フィールドの昇順データを並べ替える方法を示します。 このコード例に示されている例の一部である [チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/ja-jp/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">並べ替えを適用するデータ ソースを指定します。</param>
        <summary>並べ替え式を適用、 <see cref="T:System.Linq.IQueryable" /> オブジェクトに基づいて、 <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> 値と <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" /> 値。</summary>
        <returns>式が適用されていたデータ ソースのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のコレクション <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 式を適用した後、 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 値がデータ ソースに適用します。</summary>
        <value>コレクション <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 式を適用した後、 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> はデータ ソースに適用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して操作を実行する、並べ替えの後、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> で、 <xref:System.Web.UI.WebControls.QueryExtender> 後続の並べ替えを使用して操作を制御する、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> プロパティです。  
  
   
  
## 例  
 次の例では、ListPrice フィールドの順序を降順と昇順に順序を使用して、製品の ID フィールド データを並べ替える方法、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>です。 このコード例で提供されている例の一部である [チュートリアル: Web ページを使用しての宣言構文内でのデータのフィルター処理](http://msdn.microsoft.com/ja-jp/b305ae31-1a1b-4d07-a678-51457c17614f)します。  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>