<Type Name="MachineKeySection" FullName="System.Web.Configuration.MachineKeySection">
  <TypeSignature Language="C#" Value="public sealed class MachineKeySection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeySection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeySection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows フォーム認証、ビューステート検証、およびセッション状態のアプリケーション分離において、暗号化、復号化、およびメッセージ認証コード \(MAC\) の各操作を実行する場合に使用されるキー生成とアルゴリズムを制御する構成設定を定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.MachineKeySection> クラスには、プログラムからアクセスしの内容を変更する方法が用意されています、 `MachineKey` 構成ファイル内のセクションです。`MachineKey` セクションでは、コンピューター \(Machine.config\) またはアプリケーション \(Web.config\) レベルで構成されていることができ、キーと Windows フォーム認証、ビューステート検証、およびセッション状態のアプリケーション分離に使用されるアルゴリズムを制御します。 これらの機能を Web サーバー \(Web ファーム\)、ネットワーク経由で動作のいずれにも、 `DecryptionKey` と `ValidationKey` の属性、 `MachineKey` セクションで構成する必要が明示的に有効なキー値。`AutoGenerate` 値では、ローカル マシンの保護を使用して永続化とは、複数のコンピューターに対して同じされますしない暗号化に使用するランダムなシークレットに依存しているために、Web ファームに対して機能しません。  
  
   
  
## 例  
 このセクションの例では、宣言のメンバーとしてアクセスすることも、セクションの複数の属性の値を指定、 <xref:System.Web.Configuration.MachineKeySection> クラスです。  
  
 構成ファイルから次の例では、セクションの宣言で値を指定する方法を示します。  
  
```  
<system.web>  
  <machineKey validationKey="AutoGenerate,IsolateApps"   
    decryptionKey="AutoGenerate,IsolateApps"   
    validation="SHA1"/>  
</system.web>  
```  
  
 次の例では、使用して、 <xref:System.Web.Configuration.MachineKeySection> コード内のクラスです。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#1)]
 [!code-vb[System.Web.Configuration.MachineKeySection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>If you to specify keys in this configuration section, as is required in Web-farm scenarios, it is recommended that you encrypt this section by using protected configuration.</para>
    </block>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineKeySection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定の設定を使用して <see cref="T:System.Web.Configuration.MachineKeySection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンス トラクターは、コードから直接使用するものではありません。 ASP.NET 構成システムで呼び出されます。 インスタンスを取得する、 <xref:System.Web.Configuration.MachineKeySection> クラスを使用して、 <xref:System.Configuration.Configuration.GetSection%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("applicationName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの名前を取得または設定します。</summary>
        <value>アプリケーションの名前。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property must be set if you set the <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> property. The property value is passed to the <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName> factory method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.NET Framework Version 2.0 Service Pack 1 より後のリリースで導入された、アップグレードされたビューステートの暗号化方式を使用するかどうかを指定する値を取得または設定します。</summary>
        <value>.NET Framework 2.0 SP1 より後のリリースで導入された暗号化方式を使用するかどうかを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The upgraded encryption methods in later versions of the .NET Framework reduce the risk that an attacker can successfully reverse\-engineer the **languageKeyword tag is not supported!!!!**  
 value. The older encryption methods are available in order to maintain backward compatibility.  
  
 All servers in a Web farm should have the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> property set to the same value. If the server that reads a forms authentication ticket has a different <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> setting than the server that created the ticket, the ticket won't be recognized.  
  
 The following values can be specified for the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> property:  
  
-   `Framework20SP1`. This value specifies that ASP.NET uses encryption methods that were available in versions of ASP.NET earlier than 2.0 SP2. Use this value for all servers in a web farm if any server has a version of the .NET Framework earlier than 2.0 SP2. This is the default value unless the application Web.config file has the `targetFramework` attribute of the `httpRuntime` element set to "4.5".  
  
-   `Framework20SP2`. This value specifies that ASP.NET uses upgraded encryption methods that were introduced in the .NET Framework 2.0 SP2. Use this value for all servers in a web farm if all servers have the .NET Framework 2.0 SP2 or later but at least one does not have the .NET Framework 4.5.  
  
-   `Framework45`. Cryptographic enhancements for ASP.NET 4.5 are in effect. This is the default value if the application Web.config file has the `targetFramework` attribute of the `httpRuntime` element set to "4.5".  
  
 When this property is set to **languageKeyword tag is not supported!!!!**  
, the following restrictions are in effect:  
  
-   If the <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> property has a value, the <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> property must also have a value. The <xref:System.Security.Cryptography.DataProtector> class mandates that a non\-empty application name be provided.  
  
-   The <xref:System.Web.Configuration.MachineKeySection.Validation%2A> attribute must be an actual validation algorithm \(for example, MD5, SHA1, HMACSHA256, HMACSHA384, HMACSHA512\) or a custom algorithm that subclasses the <xref:System.Security.Cryptography.KeyedHashAlgorithm> type. The values AES and 3DES are forbidden.  
  
-   The framework will not produce signed\-only payloads. Forms authentication tickets will always be both encrypted and signed, regardless of how the **languageKeyword tag is not supported!!!!**  
     attribute of the **languageKeyword tag is not supported!!!!**  
     element is set in the Web.config file. View state will always be both encrypted and signed if either **languageKeyword tag is not supported!!!!**  
     or **languageKeyword tag is not supported!!!!**  
     is set for a given page.  
  
 As a result of the security update that is described in [Microsoft security bulletin MS10\-070](http://technet.microsoft.com/security/bulletin/MS10-070), the default encryption behavior is the same for the **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 settings. Changing the default behavior is not recommended, but if you want to do that, see [How to configure legacy encryption mode in ASP.NET](http://support.microsoft.com/kb/2425938).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProtectorType">
      <MemberSignature Language="C#" Value="public string DataProtectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataProtectorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("dataProtectorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ プロテクターの型の名前を取得または設定します。 既定値は、<see cref="F:System.String.Empty" /> です。</summary>
        <value>データ プロテクター型の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 To specify custom data protection algorithms for ASP.NET, set the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName> property to <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> and set this property to a string that represents a class that derives from the <xref:System.Security.Cryptography.DataProtector> class. This string corresponds to the **parameterReference tag is not supported!!!!**  
 parameter that is passed to the static <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName> factory method. The class you specify is used by the <xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=fullName> and <xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=fullName> methods even if you do not specify the <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> option.  
  
 If you set this property, you must also set the <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryption">
      <MemberSignature Language="C#" Value="public string Decryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Decryption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryption", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証データの暗号化と復号化に使用される暗号化アルゴリズムを指定します。</summary>
        <value>フォーム認証データの暗号化と復号化に使用されるアルゴリズムを指定する値。 \(ビューステートが暗号化されている場合に使用されるアルゴリズムを指定する方法については、次を参照してください、 <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> プロパティです。\)。 既定値は <see langword="Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.MachineKeySection.Decryption%2A> プロパティは、次の暗号化解除の値をサポートしています。  
  
-   `Auto`, 、ASP.NET では使用する暗号化アルゴリズムが決定構成の既定の設定に基づきこれは、既定値を指定します。  
  
-   `AES`, 、ASP.NET が使用するように指定する、 <xref:System.Web.Configuration.MachineKeyValidation.AES> データを暗号化するアルゴリズムです。`AES` データの暗号化に既定のアルゴリズムです。  
  
-   `3DES`, 、ASP.NET が使用するように指定する、 <xref:System.Web.Configuration.MachineKeyValidation.TripleDES> データを暗号化するアルゴリズムです。  
  
-   カスタム アルゴリズムです。  
  
 このプロパティがで宣言によって設定通常、 `decryption` Web.config ファイルの要素の属性です。 詳細については、要素を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">選択した値は、復号化値のいずれかではありません。</exception>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="DecryptionKey">
      <MemberSignature Language="C#" Value="public string DecryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データの暗号化および復号化に使用されるキー、またはキーが生成されるプロセスを取得または設定します。</summary>
        <value>キー値、またはキーが生成される方法を示す値。 既定値は "AutoGenerate,IsolateApps" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> property is used for encryption and decryption, such as in Windows Forms authentication, and for view state when the <xref:System.Web.Configuration.MachineKeySection.Validation%2A> property is set to "3DES" or "AES".  
  
 Use the "AutoGenerate" option to specify that ASP.NET generates a random key and stores it in the Local Security Authority. The "AutoGenerate" option is part of the default value.  
  
 If you add the "IsolateApps" modifier to the "AutoGenerate" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> value, ASP.NET generates a unique encrypted key for each application by using each application's <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>. This is the default setting.  
  
 If you add the "IsolateByAppId" modifier to the "AutoGenerate" <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> value, ASP.NET generates a unique encrypted key for each application by using each application's <xref:System.Web.HttpRuntime.AppDomainAppId%2A>. If two distinct applications share a virtual path \(perhaps because those applications are running on different ports\), this flag can be used to further distinguish them from one another. The “IsolateByAppId” flag is understood only by ASP.NET 4.5, but it can be used regardless of the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName> setting.  
  
 If you need to support configuration across a network of Web servers \(a Web farm\), set the <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> property manually to ensure consistent configuration. For information about how to manually generate values for the **languageKeyword tag is not supported!!!!**  
 attribute, see [How To: Configure MachineKey in ASP.NET 2.0](http://go.microsoft.com/fwlink/?linkid=155113).  
  
 This property is  typically set declaratively in the **languageKeyword tag is not supported!!!!**  
 attribute of the  element of the Web.config file. For more information, see the  element.  
  
   
  
## 例  
 The following example demonstrates how to set the <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> property by using code. This example is part of a larger example provided for the <xref:System.Web.Configuration.MachineKeySection> class.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#3)]
 [!code-vb[System.Web.Configuration.MachineKeySection\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.SetReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyValidation Validation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyValidation Validation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Validation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証とビューステート データの検証に使用されるハッシュ アルゴリズムを指定します。</summary>
        <value>フォーム認証データとビューステート データの検証に使用されるハッシュ アルゴリズムを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> プロパティによって定義されている暗号化アルゴリズムをサポートしている、 <xref:System.Web.Configuration.MachineKeyValidation> 列挙します。 このプロパティがで宣言によって設定通常、 `decryption` Web.config ファイルの要素の属性です。 詳細については、要素を参照してください。  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> コードを使用してプロパティです。 この例に示されている例の一部である、 <xref:System.Web.Configuration.MachineKeySection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#4)]
 [!code-vb[System.Web.Configuration.MachineKeySection\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="ValidationAlgorithm">
      <MemberSignature Language="C#" Value="public string ValidationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証データとビューステート データの検証に使用されるカスタム アルゴリズムの名前を取得または設定します。</summary>
        <value>定義済みのアルゴリズムの名前またはカスタム アルゴリズムの名前を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用できる定義済みのアルゴリズムが定義されている、 <xref:System.Web.Configuration.MachineKeyValidation> 列挙します。 カスタム アルゴリズムを使用する場合は、このプロパティを設定する必要はありません。 設定、 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> プロパティ、カスタム アルゴリズムの名前にします。 その場合、このプロパティに設定に自動的に <xref:System.Web.Configuration.MachineKeyValidation.Custom>します。  
  
 設定することができます、 <xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A> 、Web.config ファイルで宣言またはプログラムを使用してコードでプロパティです。  
  
 このプロパティを宣言によって設定に使用する、 `validationAlgorithm` 構成ファイル内の要素の属性です。 この属性は、定義済みのアルゴリズムやカスタム アルゴリズムの名前を設定できます。 定義済みのアルゴリズムが定義、 <xref:System.Web.Configuration.MachineKeyValidation> 列挙します。 カスタム アルゴリズムが指定された、 `validationAlgorithm` 属性を使用して、"alg:"プレフィックスのアルゴリズムの名前が続きます。 この形式を使用して、カスタム アルゴリズムを指定する場合、 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> にプロパティが設定されている <xref:System.Web.Configuration.MachineKeyValidation.Custom> このプロパティが表示されている名前に設定し、"alg:"プレフィックス。  
  
 プログラムを使用して、このプロパティを設定するで定義されている定義済みのアルゴリズムのいずれかの値を使用して、 <xref:System.Web.Configuration.MachineKeyValidation> 列挙体、またはカスタム アルゴリズムの名前にこのプロパティを設定します。 このプロパティをカスタム アルゴリズムの名前に設定する場合は、設定、 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> プロパティを <xref:System.Web.Configuration.MachineKeyValidation.Custom>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationKey">
      <MemberSignature Language="C#" Value="public string ValidationKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validationKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証データとビューステート データの検証に使用されるキー、またはキーが生成されるプロセスを取得または設定します。</summary>
        <value>キー値、またはキーが生成される方法を示す値。 既定値は "AutoGenerate,IsolateApps" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> プロパティが使用されるときに `enableViewStateMAC` は `true` メッセージ認証コードをビュー ステートが改ざんされたかどうかを判断する ASP.NET を有効にするには、\(MAC\) を作成します。<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> をアウト プロセスを生成するプロパティを使用しても、アプリケーション固有のセッション Id をそのセッション状態変数はアプリケーション間で分離します。  
  
 "AutoGenerate"オプションを使用して、ASP.NET はランダムなキーを生成し、ローカル セキュリティ機関に格納します。 "AutoGenerate"オプションは、既定値の一部です。  
  
 "IsolateApps"修飾子は"AutoGenerate"を追加するかどうかは <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 値、ASP.NET で、各アプリケーションを使用して、アプリケーションごとに一意の暗号化キーが生成されます <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>します。 これは、既定の設定です。  
  
 "AutoGenerate"を"IsolateByAppId"修飾子を追加するかどうかは <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 値、ASP.NET で、各アプリケーションを使用して、アプリケーションごとに一意の暗号化キーが生成されます <xref:System.Web.HttpRuntime.AppDomainAppId%2A>します。 2 つの異なるアプリケーション仮想パスを共有している場合 \(おそらくこれらのアプリケーションが別のポートで実行されているため\)、さらに他と区別するためこのフラグを使用することができます。 "IsolateByAppId"フラグが ASP.NET 4.5 でのみ認識されるに関係なく、使用することができます、 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName> 設定します。  
  
 Web サーバー \(Web ファーム\)、ネットワーク経由で構成をサポートする必要がある場合は、設定、 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> プロパティを手動で一貫した構成を確認します。 値を手動で作成する方法については、 `DecryptionKey` 属性は、「 [How To: Configure MachineKey in ASP.NET 2.0](http://go.microsoft.com/fwlink/?linkid=155113)します。  
  
 このプロパティがで宣言によって設定通常、 `validationKey` Web.config ファイルの要素の属性です。  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> コードを使用してプロパティです。 この例に示されている例の一部である、 <xref:System.Web.Configuration.MachineKeySection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#2)]
 [!code-vb[System.Web.Configuration.MachineKeySection\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>