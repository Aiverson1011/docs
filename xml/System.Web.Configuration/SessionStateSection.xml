<Type Name="SessionStateSection" FullName="System.Web.Configuration.SessionStateSection">
  <TypeSignature Language="C#" Value="public sealed class SessionStateSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SessionStateSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.SessionStateSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web アプリケーションのセッション状態を構成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.SessionStateSection> クラスで識別される Machine.config または Web.config 構成ファイル内の要素を指す、 `sessionState` タグ。  
  
 新しいクライアントは、Web アプリケーションとの対話を開始、セッション ID が発行され、セッションは有効期間中に、同じクライアントからの後続のすべての要求に関連付けられています。 この ID は、要求間でのクライアント セッションに関連付けられているサーバー側の状態を維持するために使用されます。<xref:System.Web.Configuration.SessionStateSection> ASP.NET アプリケーションを確立および各クライアントの代わりには、この関連付けを維持する方法を制御します。  
  
 このメカニズムは非常に柔軟性とアウト プロセスと状態を追跡する他の処理の間の cookie を使用せずにセッション状態の情報をホストすることができます。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のいくつかの属性の宣言で値を指定する方法を説明、 `sessionState` \] セクションのメンバーとしてアクセスすることも、 <xref:System.Web.Configuration.SessionStateSection> クラスです。 2 つ目は、使用する方法を示します、 <xref:System.Web.Configuration.SessionStateSection> クラスです。  
  
 次の構成ファイルの例は、宣言の値を指定する方法を示しています、 `sessionState` セクションです。  
  
```  
<configuration>  
  <system.web>  
    <sessionState mode="InProc"   
      stateConnectionString="tcpip=127.0.0.1:42424"   
      stateNetworkTimeout="10"  
      sqlConnectionString="data source=127.0.0.1;  
        Integrated Security=SSPI"  
      sqlCommandTimeout="30"   
      customProvider=""   
      cookieless="UseDeviceProfile"   
      cookieName="ASP.NET_SessionId"   
      timeout="20"   
      allowCustomSqlDatabase="False"   
      regenerateExpiredSessionId="False"   
      partitionResolverType=""   
      useHostingIdentity="True">  
      <providers>  
        <clear />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 次のコード例では、使用して、 <xref:System.Web.Configuration.SessionStateSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#1)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.SessionState.HttpSessionState" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionStateSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.SessionStateSection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.SessionStateSection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.SessionStateSection.%23ctor%2A> コンス トラクターは、コードから直接使用するものではありません。 ASP.NET 構成システムで呼び出されます。 インスタンスを取得する、 <xref:System.Web.Configuration.SessionStateSection> クラスを使用して、 <xref:System.Configuration.Configuration.GetSection%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomSqlDatabase">
      <MemberSignature Language="C#" Value="public bool AllowCustomSqlDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomSqlDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("allowCustomSqlDatabase", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザーが \[初期カタログ値を指定できるかどうかを示す値、 <see cref="P:System.Web.Configuration.SessionStateSection.SqlConnectionString" /> プロパティです。</summary>
        <value>
          <see langword="true" /> カタログを指定する、ユーザーが許可されている場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.AllowCustomSqlDatabase%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#2)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressionEnabled">
      <MemberSignature Language="C#" Value="public bool CompressionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompressionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CompressionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compressionEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセッション状態データの圧縮が有効にするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 圧縮が有効の場合それ以外の場合 <see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.Configuration.SessionStateSection.CompressionEnabled%2A> に値が設定されている `true`, 、ASP.NET を使用して、 <xref:System.IO.Compression.GZipStream> クラスを圧縮およびセッション状態データを展開します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookieless">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode Cookieless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode Cookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Cookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieless")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie は、クライアント セッションを識別するために使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、すべての要求は、クッキーなしに扱われますか <see langword="false" /> 要求はないよう cookieless 扱わ場合またはのいずれか、 <see cref="T:System.Web.HttpCookieMode" /> 値。 ASP.NET version 2.0 では既定値は <see cref="F:System.Web.HttpCookieMode.AutoDetect" />です。 以前のバージョンで既定値はでした <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セッション状態が、クライアント、サーバー セッションが関連付けられる一意の ID を格納できる 2 つの方法があります。 または、URL のセッション ID をエンコードすることによってクライアントに HTTP クッキーを格納することで。 Cookie にセッション ID を格納する方が安全です、クッキーをサポートするクライアントのブラウザーが必要です。  
  
 などのさまざまなモバイル デバイスの cookie をサポートしないクライアントを実行するアプリケーションのセッション ID が URL に保管されている可能性があります。 URL オプションにはいくつかの欠点です。 サイト上のリンクが相対であることと、ページが新しいクエリ文字列の値とのセッションの先頭にリダイレクトすることが必要ですを含み、ここでそれが取得される、セキュリティ攻撃で使用するため、クエリ文字列内のセッション ID 右を公開します。  
  
 クッキーをサポートしないクライアントをサポートする必要がある場合にのみ、クッキーなしのモードを使用することをお勧めしています。  
  
 セッション状態には、2 つの追加のオプションもサポートしています: <xref:System.Web.HttpCookieMode.UseDeviceProfile> と <xref:System.Web.HttpCookieMode.AutoDetect>です。 前者にどのようなモードを確認するセッション状態モジュールを有効 \(cookie か cookieless\) は、ブラウザーの性能に基づいてクライアントごとに使用します。<xref:System.Web.HttpCookieMode.AutoDetect> オプションは、ブラウザーを確認するかどうか、cookie が保存されると、必要となる、判断を行うため、追加の依頼でハンドシェイクを実行します。 クッキーなしのクライアントをサポートする必要がある場合は、使用を検討して強く <xref:System.Web.HttpCookieMode.UseDeviceProfile> を必要とするクライアントに対してのみクッキーなしの Url を生成します。  
  
> [!NOTE]
>  使用します。ブラウザー 4.1 またはアップします。ブラウザー 3.2、 <xref:System.Web.HttpResponse.Redirect%2A> 動作は常にかのようの値、 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> のプロパティ、 <xref:System.Web.HttpBrowserCapabilities> オブジェクトが `false`, がない限り、 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> プロパティに、 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> に Web.config のセクションを明示的に設定されている `true`します。  
>   
>  ASP.NET version 1.1 では、この設定のオプションは `true` または `false`, 、ですが、ASP.NET 2.0 では、選択肢を展開すると、および <xref:System.Web.HttpCookieMode.AutoDetect> 既定の設定になります。 Web アプリケーションがある場合、 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> プロパティがブール値にし、設定 <xref:System.Web.HttpResponse.Redirect%2A> 、それらのブラウザーに期待どおりに動作する必要があります。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#7)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCookieMode" />
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public string CookieName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie の名前を設定します。</summary>
        <value>セッション id に使用する HTTP クッキーの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値は `"ASP.NET_SessionId"` です。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.CookieName%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックに、セクションを取得する方法について説明します。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#5)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProvider">
      <MemberSignature Language="C#" Value="public string CustomProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.CustomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定からカスタム プロバイダーの名前、 <see cref="P:System.Web.Configuration.SessionStateSection.Providers" /> コレクションです。</summary>
        <value>カスタム プロバイダーの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロバイダーは、セッション状態モードに設定されている場合のみ使用 <xref:System.Web.SessionState.SessionStateMode.Custom>します。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.CustomProvider%2A> プロパティです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#4)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.SessionStateMode" />
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセッション状態を保存する場所を指定する値を設定します。</summary>
        <value>
          <see cref="T:System.Web.SessionState.SessionStateMode" /> 値のいずれか。 既定値は <see cref="F:System.Web.SessionState.SessionStateMode.InProc" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.SessionStateMode> 必要な属性ではないと、構成階層の上位レベルから、または既定値から継承することができます。 ただし、このセクションの構成ハンドラーは、このセクションの内容を記述するときに、現在の継承された値に基づくモードを常に書き出します。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#14)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionResolverType">
      <MemberSignature Language="C#" Value="public string PartitionResolverType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartitionResolverType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.PartitionResolverType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("partitionResolverType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセッション状態を保存する場所を指定する値を設定します。</summary>
        <value>セッション状態または空の文字列を保存する場所を指定する値 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> プロパティが指定されて、 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> プロパティと <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> プロパティは無視されます。<xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> 経由でロックされていることができます、 <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> プロパティ内の他のプロパティと同様に、 [sessionState 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 要素。 によって返される接続文字列、 <xref:System.Web.Configuration.SessionStateSection.PartitionResolverType%2A> が要求の残りの部分の適切なサーバーの場所に接続するすべての要求に使用します。  接続文字列が有効でない場合は、サーバーに構成された接続文字列が無効である場合にスローされる例外と同じ例外がスローされます。  
  
 このプロパティは、SQL または状態サーバー モードでの複数のバックエンド ノード間でセッション状態データをパーティション分割に使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.SessionStateSection.PostDeserialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の取得 <see cref="T:System.Configuration.ProviderSettingsCollection" /> プロバイダー。</summary>
        <value>コレクションを含む、 <see cref="T:System.Web.Configuration.SessionStateSection" /> プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって識別される構成タグに含まれる情報を参照、 `providers` 要素。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.Providers%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#10)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateExpiredSessionId">
      <MemberSignature Language="C#" Value="public bool RegenerateExpiredSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RegenerateExpiredSessionId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("regenerateExpiredSessionId", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、セッション Id を再発行するクライアントが期限切れのセッション ID を指定することを示す値。</summary>
        <value>
          <see langword="true" /> 場合は、セッション ID を再生成する必要があります。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、cookie を使わない Url だけが再発行されたときに <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> を有効にします。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.RegenerateExpiredSessionId%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#3)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionIDManagerType">
      <MemberSignature Language="C#" Value="public string SessionIDManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionIDManagerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SessionIDManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sessionIDManagerType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセッション ID マネージャーの完全修飾型を指定する値を設定します。</summary>
        <value>セッション ID マネージャーの完全修飾型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.SessionStateSection.SessionIDManagerType%2A> セッション ID の生成およびカスタム セッションの ID 管理のスキーマの管理が無効にします。 既定値は、空の文字列 \(""\) です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlCommandTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SqlCommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SqlCommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlCommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlCommandTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または SQL Server セッション状態モードを使用して SQL コマンドの存続期間のタイムアウトを設定します。</summary>
        <value>SQL コマンドがタイムアウトするまでの秒単位の時間数。 既定値は 30 秒です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.SqlCommandTimeout%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#13)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlConnectionRetryInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SqlConnectionRetryInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SqlConnectionRetryInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlConnectionRetryInterval", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または ASP.NET が、データベースに再接続されるまでの経過時間間隔を設定します。</summary>
        <value>ASP.NET が、データベースに再接続されるまでの経過時間間隔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionRetryInterval%2A> 接続エラーが発生したときに、データベースに再接続する前に秒単位で時間間隔を指定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlConnectionString">
      <MemberSignature Language="C#" Value="public string SqlConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.SqlConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または SQL 接続文字列を設定します。</summary>
        <value>SQL 接続文字列。 汎用文字列の既定値は:"データ ソース \= 127.0.0.1; Integrated Security \= SSPI"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `sqlConnectionString` 属性は、必要なときに <xref:System.Web.Configuration.SessionStateSection.Mode%2A> に設定されている <xref:System.Web.SessionState.SessionStateMode.SQLServer>します。  
  
> [!NOTE]
>  使用する、 <xref:System.Web.SessionState.SessionStateMode.SQLServer> セッション状態モードの既定の SQL スクリプトを実行する必要があります \(にインストールされている \[*ドライブ*:\] \\WINDOWS\\Microsoft.NET\\Framework\\*VersionNumber* 既定の .NET Framework のインストールの一部として\)、コンピューターに SQL Server を実行している状態を格納するセッションです。 これにより、という名前の新しいストアド プロシージャを作成し、TempDB データベースに新しいこれにより、ASPStateTempSessions テーブルを作成します。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.SqlConnectionString%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#8)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateConnectionString">
      <MemberSignature Language="C#" Value="public string StateConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.StateConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("stateConnectionString", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または状態サーバーの接続文字列を設定します。</summary>
        <value>状態サーバーの接続文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、セッション状態がリモートで格納されている場合、サーバー名とポートを指定します。`stateConnectionString` 属性は、必要なときに、 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> に設定されている <xref:System.Web.SessionState.SessionStateMode.StateServer>します。  
  
> [!NOTE]
>  ASP.NET 状態サービスがセッション状態情報を格納するリモート サーバーで実行されていることを確認します。 このサービスは ASP.NET と共にインストールされ、既定の保存場所は \[*ドライブ*:\] \\WINDOWS\\Microsoft.NET\\Framework\\*VersionNumber*\\aspnet\_state.exe します。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.StateConnectionString%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#9)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateNetworkTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StateNetworkTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StateNetworkTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.StateNetworkTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("stateNetworkTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバーおよび状態サーバー間のネットワーク接続がアイドル時間を設定します。</summary>
        <value>時間、セッションが中断される前に、Web サーバーおよび状態サーバー間のネットワーク接続がアイドル状態おくことのできる秒数。 既定値は、10 秒です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `sessionStateSection` 属性は、必要なときに、 <xref:System.Web.Configuration.SessionStateSection.Mode%2A> にプロパティが設定されている <xref:System.Web.SessionState.SessionStateMode.StateServer>します。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.StateNetworkTimeout%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#6)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:01:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション タイムアウトの設定を取得または</summary>
        <value>セッション タイムアウトの分数。 既定値は、20 分です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> プロパティに設定できません値 525,601 分 \(1 年\) を超えています。  
  
   
  
## 例  
 次のコード例では、取得、 <xref:System.Web.Configuration.SessionStateSection.Timeout%2A> プロパティです。 コード例を参照してください、 <xref:System.Web.Configuration.SessionStateSection> クラスのトピックにアクセスする方法については、 <xref:System.Web.Configuration.SessionStateSection> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.SessionStateSection\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/CS/sessionstatesection.cs#11)]
 [!code-vb[System.Web.Configuration.SessionStateSection\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.SessionStateSection/VB/sessionstatesection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHostingIdentity">
      <MemberSignature Language="C#" Value="public bool UseHostingIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHostingIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.SessionStateSection.UseHostingIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useHostingIdentity", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の状態が有効な場合、クライアントの偽装を使用してセッションかどうかを指定する値またはされますが常にホストの id に戻しています。</summary>
        <value>
          <see langword="true" /> Web アプリケーションが id のホスティングに戻すか場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>