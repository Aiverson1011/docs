<Type Name="ScriptingJsonSerializationSection" FullName="System.Web.Configuration.ScriptingJsonSerializationSection">
  <TypeSignature Language="C#" Value="public sealed class ScriptingJsonSerializationSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptingJsonSerializationSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ScriptingJsonSerializationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表す、 <see langword="jsonSerialization" /> の構成」、 <see langword="scripting" /> 構成ファイルの要素。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.ScriptingJsonSerializationSection> クラスを使用すると、プログラムでアクセスし、変更、 `jsonSerialization` で ASP.NET AJAX 機能を使用するための構成セクションの要素。  
  
 シリアル化を設定して、AJAX 対応のアプリケーションの構成値を逆シリアル化するには、この種類を使用します。  
  
   
  
## 例  
 構成ファイルの抜粋を次のプロパティの値を宣言によって指定する方法を示しています、 <xref:System.Web.Configuration.ScriptingJsonSerializationSection> クラスです。  
  
```  
<system.web.extensions>  
  <scripting>  
    <webServices>  
      <jsonSerialization maxJsonLength="1000" />  
    </webServices>  
  </scripting>  
</system.web.extensions>  
```  
  
 次の例は、アクセスする方法を説明 <xref:System.Web.Configuration.ScriptingJsonSerializationSection> プログラムを使用しています。  
  
 [!code-csharp[System.Web.Configuration\#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Configuration/CS/App_Code/ConfigSectionSample.cs#3)]
 [!code-vb[System.Web.Configuration\#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Configuration/VB/App_Code/ConfigSectionSample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptingJsonSerializationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ScriptingJsonSerializationSection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Converters">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ConvertersCollection Converters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.ConvertersCollection Converters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ScriptingJsonSerializationSection.Converters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("converters", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ConvertersCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.Configuration.ConvertersCollection" /> オブジェクトのコレクションを含む <see cref="T:System.Web.Configuration.Converter" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Web.Configuration.ConvertersCollection" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxJsonLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって承認された最大長、 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> JavaScript Object Notation \(JSON\) 文字列のオブジェクト。</summary>
        <value>JSON 文字列の最大長を表す整数です。 既定では 102400 文字です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength%2A> プロパティは、内部にのみ <xref:System.Web.Script.Serialization.JavaScriptSerializer> Web を呼び出すための非同期通信レイヤーで使用されるインスタンス サービス メソッドを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ScriptingJsonSerializationSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("recursionLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>処理されるオブジェクト レベル数の制限値を取得または設定します。</summary>
        <value>オブジェクト レベル数。 既定値は 100 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit%2A> プロパティは、オブジェクト階層の最大レベルを参照する <xref:System.Web.Script.Serialization.JavaScriptSerializer> JavaScript Object Notation \(JSON\) 文字列を逆シリアル化時、またはオブジェクトをシリアル化するときに処理されます。  
  
 値 <xref:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit%2A> 内部にのみ適用されます <xref:System.Web.Script.Serialization.JavaScriptSerializer> Web を呼び出すための非同期通信レイヤーで使用されるインスタンス サービス メソッドを提供します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">1 よりも小さい値に設定されますされています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>