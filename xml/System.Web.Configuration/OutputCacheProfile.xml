<Type Name="OutputCacheProfile" FullName="System.Web.Configuration.OutputCacheProfile">
  <TypeSignature Language="C#" Value="public sealed class OutputCacheProfile : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OutputCacheProfile extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.OutputCacheProfile" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>アプリケーション ページで使用できる出力キャッシュ プロファイルを構成します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile> クラスには、プログラムでアクセスして変更する方法が用意されています、 `add` の要素、 `outputCacheProfiles` セクション、 `caching` 構成ファイルのセクションです。  
  
 <xref:System.Web.Configuration.OutputCacheProfile> オブジェクトはすべてのページで指定する必要がなくなる依存関係、キャッシュの場所、およびキャッシュの有効期間などの頻繁に使用される構成設定を集中管理します。  
  
 <xref:System.Web.Configuration.OutputCacheProfile> を使用してページに適用できる、 `CacheProfile` ディレクティブの属性です。  
  
> [!NOTE]
>  ディレクティブに含まれるすべての設定をオーバーライドできます、 <xref:System.Web.Configuration.OutputCacheProfile> 以外のオブジェクト、 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> 属性です。 これを有効または無効にするには、 <xref:System.Web.Configuration.OutputCacheProfile> をオーバーライドして、すべてのページにあるディレクティブを変更する必要はありません。  
  
 <xref:System.Web.Caching.CacheDependency> クラスは、依存関係を監視するため、キャッシュされた項目を自動的に削除する項目の変更をすべてキャッシュされるときにします。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、 <xref:System.Web.Configuration.OutputCacheSettingsSection.OutputCacheProfiles%2A> にアクセスするコレクションの <xref:System.Web.Configuration.OutputCacheProfile> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#1)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheProfileCollection" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutputCacheProfile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.OutputCacheProfile.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">使用する名前の値。</param>
        <summary>
          <see cref="T:System.Web.Configuration.OutputCacheProfile" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("duration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページまたはコントロールのキャッシュする期間を設定します。</summary>
        <value>期間 \(秒\)</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> ページやユーザー コントロールをキャッシュする時間を秒で時間を表します。 このプロパティの設定\] ページまたはコントロールに適用し、出力のキャッシュとが自動的に HTTP 応答の有効期限ポリシーを確立します。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> プロファイルまたはプロファイルを使用してページのディレクティブで定義する必要があります。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.Duration%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#10)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキャッシュが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> キャッシュが有効な場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> プロパティでは有効にするか、1 か所のみでのキャッシュ メカニズムを無効にするとします。 すべてのページまたはこれを使用するコントロールに影響を与えます <xref:System.Web.Configuration.OutputCacheProfile>します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.Enabled%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#12)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Web.UI.OutputCacheLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.OutputCacheLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("location")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.OutputCacheLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または出力キャッシュの場所を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.OutputCacheLocation" /> 列挙値のいずれか。 既定値は、<see langword="Any" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Web.Configuration.OutputCacheProfile.Location%2A> に設定されている `Any`, 、出力キャッシュは要求が送られたのブラウザー クライアントはプロキシ サーバーの場合、または要求に参加するその他のサーバー上または要求が処理されたサーバーに配置することができます。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.Location%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#5)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.OutputCacheLocation" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.Configuration.OutputCacheProfile" /> 名。</summary>
        <value>
          <see cref="T:System.Web.Configuration.OutputCacheProfile" /> 名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する、 <xref:System.Web.Configuration.OutputCacheProfile.Name%2A> に値を割り当てる、 `CacheProfile` 適用する場合は、ディレクティブの属性、 <xref:System.Web.Configuration.OutputCacheProfile> ページまたはコントロールの値。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.Name%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#11)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoStore">
      <MemberSignature Language="C#" Value="public bool NoStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStore" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.NoStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("noStore", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセカンダリ ストレージが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> セカンダリ ストレージが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページが、 <xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A?displayProperty=fullName> プロパティに設定 `true` で機密情報をセカンダリに保存しないようにするには、そのヘッダーを指定する応答を発行します。  
  
 この属性を設定 `true` 呼び出しと同じ、 <xref:System.Web.HttpCachePolicy.SetNoStore%2A?displayProperty=fullName> Web 要求中にメソッドです。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.NoStore%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#4)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sqlDependency")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.SqlDependency" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> Web アプリケーションと、サーバーでデータ変更の検出を許可する SQL Server のインスタンス間のリレーションシップを定義します。<xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> SQL テーブルが依存しているときに、キャッシュからキャッシュされたページが削除された出力が変わることを確認します。  
  
> [!NOTE]
>  <xref:System.Web.Caching.SqlCacheDependency> クラスは、テーブルを監視するため、キャッシュから項目を自動的に削除するテーブルが変更されたとき。 このクラスは継承できません。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.SqlDependency%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#7)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncoding">
      <MemberSignature Language="C#" Value="public string VaryByContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByContentEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキャッシュするコンテンツのエンコード方式のセミコロンで区切られたセットを設定します。</summary>
        <value>コンテンツのエンコード方式の一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> 設定で使用されるものと一致している、 `VaryByContentEncoding` ディレクティブの属性です。  
  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByContentEncoding%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[The .NET Framework 3.5 Architecture](http://msdn.microsoft.com/ja-jp/f75a72de-e2f2-4a7a-9574-3f278684ea90)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.OutputCacheParameters.VaryByContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByControl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByControl" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> はセミコロンで区切られた一連のコントロールの Id をキャッシュすることをします。  
  
 詳細については、「[Caching Multiple Versions of User Control Output](http://msdn.microsoft.com/ja-jp/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> 設定で使用されるものと一致している、 `VaryByControls` ディレクティブの属性です。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.VaryByControl%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#3)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByCustom")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByCustom" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> をカスタムの出力キャッシュの要件を表す任意のテキストを指定することができます。 オーバーライドする必要があります、独自の文字列が入力した場合、 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> アプリケーションの Global.asax ファイル内のメソッドです。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> 設定で使用されるものと一致している、 `VaryByCustom` ディレクティブの属性です。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.VaryByCustom%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#9)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByHeader")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByHeader" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> はセミコロンで区切られた一連のヘッダーが、キャッシュされた出力を変更します。 これらは、要求に関連付けられている HTTP ヘッダーです。 詳細については、「[Caching Multiple Versions of a Page](http://msdn.microsoft.com/ja-jp/c60284a9-9899-4fdc-a97c-020766b7572e)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> 設定で使用されるものと一致している、 `VaryByHeader` の属性、します。 値を設定してすべてのヘッダーで、さまざまな"\*"はお勧めしません。 キャッシュ オーバーフローや、サービス拒否攻撃、Web サーバーで発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.VaryByHeader%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#2)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByParam">
      <MemberSignature Language="C#" Value="public string VaryByParam { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParam" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("varyByParam")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.Configuration.OutputCacheProfile.VaryByParam" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> はセミコロンで区切られた一連のパラメーターが、キャッシュされた出力を変更します。 プロパティにより、キャッシュされた出力を GET クエリ文字列またはフォーム ポスト パラメーター。 たとえば、クエリ文字列またはフォーム ポスト パラメーターのいずれかと共に、ユーザー コントロールの名前を指定することによってキャッシュへのユーザー コントロールの出力を変更できます。 詳細については、「[Caching Multiple Versions of User Control Output](http://msdn.microsoft.com/ja-jp/7f7d839a-c060-4d2a-9c4e-7fd1080ec0ad)」を参照してください。  
  
 <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> プロファイルまたはプロファイルを使用して、ページのディレクティブで設定を定義する必要があります。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A?displayProperty=fullName> 設定で使用されるものと一致している、 `VaryByParam` の属性、します。 値を設定してすべてのパラメーターで、さまざまな"\*"はお勧めしません。 キャッシュ オーバーフローや、サービス拒否攻撃、Web サーバーで発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.OutputCacheProfile.VaryByParam%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Configuration.OutputCacheProfile\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/CS/OutputCacheProfile.cs#8)]
 [!code-vb[System.Web.Configuration.OutputCacheProfile\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.OutputCacheProfile/VB/OutputCacheProfile.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>