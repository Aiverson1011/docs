<Type Name="FormsAuthenticationUser" FullName="System.Web.Configuration.FormsAuthenticationUser">
  <TypeSignature Language="C#" Value="public sealed class FormsAuthenticationUser : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormsAuthenticationUser extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.FormsAuthenticationUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>フォーム ベース認証を使用する Web アプリケーションのユーザーの資格情報を構成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.FormsAuthenticationUser> クラスには、プログラムからアクセスし、構成ファイルのセクションを変更する方法が用意されています。  
  
 この型を含むグループの一部は、 <xref:System.Web.Configuration.FormsAuthenticationCredentials>, 、 <xref:System.Web.Configuration.FormsAuthenticationUserCollection>, 、および <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 型です。 コレクション型以外の型は、基になる構成タグに直接影響を与えます。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.FormsAuthenticationUser> マシン、サイト、またはアプリケーション レベルでのみで構成ファイルの関連するセクションに情報を書き込むことができます。 階層内のさまざまなレベルで構成ファイル内に作成しようとすると、パーサーによって生成されたエラー メッセージになります。 ただし、このクラスを使用して、階層内のレベルで構成情報を読み取ることができます。 安全性とスケーラビリティを高めるには、データベースなどの外部リポジトリを使用して、ユーザーの資格情報を保持することをお勧めします。  
  
   
  
## 例  
 次のコード例を取得する方法を示しています、 <xref:System.Web.Configuration.FormsAuthenticationUserCollection> にアクセスする、 <xref:System.Web.Configuration.FormsAuthenticationUser> 既存の Web アプリケーションのオブジェクト。 構成ファイルは、次のような設定が格納されます。  
  
> [!NOTE]
>  使用する場合、 [要素 \(ASP.NET 設定スキーマ\) の認証用のフォームの資格情報を](http://msdn.microsoft.com/ja-jp/e5a001f8-fdbe-4c88-80ca-bfe36df23479) セクションで説明されているガイドラインに従ってください [ASP.NET Authentication](http://msdn.microsoft.com/ja-jp/fc10b0ef-4ce4-4a7f-9174-886325221ee1)します。 スケーラビリティとセキュリティを高めるには、外部データベースを使用して、ユーザーの資格情報を格納するをお勧めします。 セキュリティで保護された ASP.NET アプリケーションの構築に関する詳細については、「ASP.NET アプリケーションをセキュリティで保護する、」Microsoft MSDN Web サイト \(msdn.microsoft.com\) を検索し、"建物の安全な ASP.NET アプリケーション: 認証、承認、およびセキュリティで保護された通信します"。  
  
```  
<authentication mode="Forms">  
  <forms name="MyAppCookieName" loginUrl="/login.aspx">  
    defaultUrl="formsdefault.aspx"  
    protection="Encryption" timeout="5" path="aspnet"  
    slidingExpiration="false"  
    cookieless="UseCookies" domain="domainName">  
    <credentials passwordFormat="SHA1">  
      <user name="aspnetuser1"  
        password="5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8"/>  
       <user name="aspnetuser2"  
         password="E38AD214943DAAD1D64C102FAEC29DE4AFE9DA3D"/>  
    </credentials>            
  </forms>  
</authentication>  
```  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationUser\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/CS/formsauthenticationuser.cs#1)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/VB/formsauthenticationuser.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationUser (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.FormsAuthenticationUser.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">ユーザーの名前です。</param>
        <param name="password">ユーザーのパスワード。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Configuration.FormsAuthenticationUser" /> クラスの渡されたパラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.Web.Configuration.FormsAuthenticationUser> オブジェクト、渡されたパラメーターを使用しています。  
  
   
  
## 例  
 次のコード例を作成する方法を示しています、 <xref:System.Web.Configuration.FormsAuthenticationUser> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationUser\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/CS/formsauthenticationuser.cs#3)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/VB/formsauthenticationuser.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationUser.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.LowerCaseStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはログオン ユーザー名を設定します。</summary>
        <value>アプリケーションで必要なログオン ユーザー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.FormsAuthenticationUser.Name%2A> プロパティの使用方法を示しています。 コード例を参照してください、 <xref:System.Web.Configuration.FormsAuthenticationUser> クラスのトピックに、セクションを取得する方法について説明します。  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationUser\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/CS/formsauthenticationuser.cs#5)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/VB/formsauthenticationuser.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationUser.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("password", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーのパスワードを設定します。</summary>
        <value>アプリケーションで必要なユーザーのパスワード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、<xref:System.Web.Configuration.FormsAuthenticationUser.Password%2A> プロパティの使用方法を示しています。 コード例を参照してください、 <xref:System.Web.Configuration.FormsAuthenticationUser> クラスのトピックに、セクションを取得する方法について説明します。  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationUser\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/CS/formsauthenticationuser.cs#4)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationUser\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationUser/VB/formsauthenticationuser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationUser.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>