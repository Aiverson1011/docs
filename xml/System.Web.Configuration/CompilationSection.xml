<Type Name="CompilationSection" FullName="System.Web.Configuration.CompilationSection">
  <TypeSignature Language="C#" Value="public sealed class CompilationSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CompilationSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.CompilationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web アプリケーションのコンパイルのインフラストラクチャをサポートするために使用される構成設定を定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.CompilationSection> クラスには、プログラムからアクセスしの内容を変更する方法が用意されています、 `compilation` 構成ファイルのセクションです。  
  
   
  
## 例  
 この例では、宣言での複数の属性の値を指定、 `compilation` \] セクションのメンバーとしてアクセスすることも、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 次の構成ファイルの例は、宣言の値を指定する方法を示しています、 `compilation` セクションです。  
  
```  
<system.web>  
  <compilation   
    tempDirectory=""   
    debug="False"   
    strict="False"   
    explicit="True"   
    batch="True"   
    batchTimeout="900"   
    maxBatchSize="1000"   
    maxBatchGeneratedFileSize="1000"   
    numRecompilesBeforeAppRestart="15"   
    defaultLanguage="vb"   
    targetFramework="4.0"   
    urlLinePragmas="False"   
    assemblyPostProcessorType="">  
    <assemblies>  
      <clear />  
    </assemblies>  
    <buildProviders>  
      <clear />  
    </buildProviders>  
    <expressionBuilders>  
      <clear />  
    </expressionBuilders>  
  </compilation>   
</system.web>  
```  
  
 次のコード例では、メンバーを使用して、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#1)]
 [!code-vb[System.Web.Configuration.CompilationSection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompilationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.CompilationSection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定の設定を使用して <see cref="T:System.Web.Configuration.CompilationSection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Configuration.CompilationSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You can obtain an instance of the <xref:System.Web.Configuration.CompilationSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assemblies">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AssemblyCollection Assemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.AssemblyCollection Assemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Assemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("assemblies")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AssemblyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.AssemblyCollection" /> の <see cref="T:System.Web.Configuration.CompilationSection" /> を取得します。</summary>
        <value>A <see cref="T:System.Web.Configuration.AssemblyCollection" /> ASP.NET リソースのコンパイル時に使用されるアセンブリ オブジェクトを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティには、動的な ASP.NET リソースのコンパイル時に使用するアセンブリ参照が含まれています。 ASP.NET は、各コード モジュールをコンパイルするときに自動的にこれらのアセンブリとリソースにリンクします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyPostProcessorType">
      <MemberSignature Language="C#" Value="public string AssemblyPostProcessorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyPostProcessorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.AssemblyPostProcessorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("assemblyPostProcessorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアセンブリのコンパイルの後処理のステップを指定する値を設定します。</summary>
        <value>アセンブリのコンパイルの後処理のステップを指定する文字列値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="public bool Batch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Batch" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Batch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("batch", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバッチのコンパイルを行うかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> バッチのコンパイルが試行されるとします。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この属性を設定 `true` にコンパイルされていないファイルにアクセスするときに必要なコンパイルにより発生する遅延時間を変更します。 この属性を設定 `true` をバッチ モードでコンパイルされていないすべてのファイルをプリコンパイルする ASP.NET に指示します。 ファイルはコンパイル最初; 時に遅延が発生します。ただし、ファイルがコンパイルされると、遅延が排除されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.Batch%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#4)]
 [!code-vb[System.Web.Configuration.CompilationSection\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan BatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.BatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("batchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタイムアウト期間を秒単位のバッチのコンパイルに設定します。</summary>
        <value>時間 \(秒単位\) バッチのコンパイルが発生することを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バッチのコンパイルを秒単位でのタイムアウト期間を示します。 タイムアウト期間内にコンパイルを完了できない場合、コンパイラは、現在のページに対して単一コンパイル モードに戻ります。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.BatchTimeout%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#5)]
 [!code-vb[System.Web.Configuration.CompilationSection\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProviders">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.BuildProviderCollection BuildProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.BuildProviderCollection BuildProviders" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.BuildProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("buildProviders")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.BuildProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.Configuration.BuildProviderCollection" /> のコレクション、 <see cref="T:System.Web.Configuration.CompilationSection" /> クラスです。</summary>
        <value>A <see cref="T:System.Web.Configuration.BuildProviderCollection" /> 、コンパイル時に使用するビルド プロバイダーを格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> オブジェクトは、特定のファイルの種類を解析し、そのファイルからコードを生成する機能を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
      </Docs>
    </Member>
    <Member MemberName="CodeSubDirectories">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.CodeSubDirectoriesCollection CodeSubDirectories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.CodeSubDirectoriesCollection CodeSubDirectories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.CodeSubDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("codeSubDirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.CodeSubDirectoriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> の <see cref="T:System.Web.Configuration.CompilationSection" /> を取得します。</summary>
        <value>A <see cref="T:System.Web.Configuration.CodeSubDirectoriesCollection" /> を実行時にコンパイルされたファイルを含むサブディレクトリの順序付けられたコレクションを含むコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、実行時にコンパイルされたファイルを含むサブディレクトリの順序付けられたコレクションを定義します。 任意の数のサブディレクトリがあります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compilers">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.CompilerCollection Compilers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.CompilerCollection Compilers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Compilers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compilers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.CompilerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.Configuration.CompilerCollection" /> のコレクション、 <see cref="T:System.Web.Configuration.CompilationSection" /> クラスです。</summary>
        <value>A <see cref="T:System.Web.Configuration.CompilerCollection" /> のコレクションを格納するコレクション <see cref="T:System.Web.Configuration.Compiler" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.CompilationSection.Compilers%2A> プロパティは、基になる構成ファイル内の実際の要素に含まれません。 簡単なアクセスを許可するコンス トラクターは、 <xref:System.Web.Configuration.Compiler> オブジェクトが含まれています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlBuilderInterceptorType">
      <MemberSignature Language="C#" Value="public string ControlBuilderInterceptorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlBuilderInterceptorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.ControlBuilderInterceptorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("controlBuilderInterceptorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を先に取得するために使用するオブジェクトの種類を表す文字列、 <see cref="T:System.Web.UI.ControlBuilder" /> オブジェクトおよびコンテナーを構成します。</summary>
        <value>先に取得するために使用するオブジェクトの種類を表す文字列、 <see cref="T:System.Web.UI.ControlBuilder" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public bool Debug { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Debug" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Debug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("debug", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはリリース バイナリをコンパイルまたはバイナリをデバッグするかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> コンパイル デバッグ バイナリを使用する場合それ以外の場合、 <see langword="false" />です。<see langword="false" /> リリースのバイナリがコンパイルに使用されることを指定します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.Debug%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#9)]
 [!code-vb[System.Web.Configuration.CompilationSection\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLanguage">
      <MemberSignature Language="C#" Value="public string DefaultLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.DefaultLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultLanguage", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の既定の動的なコンパイル ファイルで使用する言語をプログラミングします。</summary>
        <value>既定のプログラミング動的コンパイル ファイルで使用する言語を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の動的なコンパイル ファイルで使用する c\#、VB.NET などの言語のプログラミングを指定します。 使用して言語の名前を定義、 `system.codedom` セクションです。 プログラミング言語の既定値は `vb`, 、VB.NET、既定のプログラミング言語として指定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.DefaultLanguage%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#10)]
 [!code-vb[System.Web.Configuration.CompilationSection\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableObsoleteWarnings">
      <MemberSignature Language="C#" Value="public bool DisableObsoleteWarnings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableObsoleteWarnings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.DisableObsoleteWarnings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("disableObsoleteWarnings", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンパイル セクションで"disableObsoleteWarnings"構成値を設定するかどうかを設定します。</summary>
        <value>
          <see langword="true" /> コンパイル セクションで"disableObsoleteWarnings"構成値が設定されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePrefetchOptimization">
      <MemberSignature Language="C#" Value="public bool EnablePrefetchOptimization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePrefetchOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.EnablePrefetchOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enablePrefetchOptimization", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET アプリケーションが Windows 8 プリフェッチ機能を活用できるかどうかを示す値を取得または設定します。</summary>
        <value>ASP.NET アプリケーションが Windows 8 プリフェッチ機能を利用できる場合は、<see langword="true" />。そうでない場合は、<see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Prefetch is a utility that is intended to improve application startup performance by loading application data into memory before it is demanded .  
  
> [!NOTE]
>  The [!INCLUDE[win8](~/includes/win8-md.md)] prefetch service must be configured and running for this setting to be effective.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit">
      <MemberSignature Language="C#" Value="public bool Explicit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Explicit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Explicit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("explicit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Visual Basic を使用するかどうかを示す値を取得または <see langword="explicit" /> コンパイル オプション。</summary>
        <value>
          <see langword="true" /> 場合は、Visual Basic <see langword="explicit" /> コンパイル オプションを有効にするそれ以外の場合、 <see langword="false" />です。<see langword="false" /> 指定する、Visual Basic <see langword="explicit" /> コンパイル オプションが無効になっています。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、Microsoft Visual Basic の設定を指定します。 `explicit` コンパイル オプション。 設定すると `true`, 、Visual Basic `explicit` コンパイル オプションが有効にします。 オプションを有効にすると、すべて変数宣言されなければなりません明示的を使用して、 `Dim`, 、`Private`, 、`Public`, 、または `ReDim` ステートメントです。 既定値は、`true` です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.Explicit%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#11)]
 [!code-vb[System.Web.Configuration.CompilationSection\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionBuilders">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ExpressionBuilderCollection ExpressionBuilders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.ExpressionBuilderCollection ExpressionBuilders" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.ExpressionBuilders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("expressionBuilders")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ExpressionBuilderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> の <see cref="T:System.Web.Configuration.CompilationSection" /> を取得します。</summary>
        <value>
          <see cref="T:System.Web.Configuration.ExpressionBuilderCollection" /> オブジェクトを含む <see cref="T:System.Web.Configuration.ExpressionBuilder" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="FolderLevelBuildProviders">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FolderLevelBuildProviderCollection FolderLevelBuildProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.FolderLevelBuildProviderCollection FolderLevelBuildProviders" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.FolderLevelBuildProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("folderLevelBuildProviders")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FolderLevelBuildProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.Configuration.FolderLevelBuildProviderCollection" /> のコレクション、 <see cref="T:System.Web.Configuration.CompilationSection" /> クラスで、コンパイル時に使用されるビルド プロバイダーを表します。</summary>
        <value>コンパイル時に使用されるビルド プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Configuration.FolderLevelBuildProvider> オブジェクトは、特定のファイルの種類を解析し、そのファイルからコードを生成する機能を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.FolderLevelBuildProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected override object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.CompilationSection.GetRuntimeObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchGeneratedFileSize">
      <MemberSignature Language="C#" Value="public int MaxBatchGeneratedFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchGeneratedFileSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.MaxBatchGeneratedFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBatchGeneratedFileSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバッチ コンパイルごとに生成されたソース ファイルの最大合計サイズを設定します。</summary>
        <value>バッチ コンパイルごとに生成されたソース ファイルの最大合計サイズを示す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バッチ コンパイルごとに生成されたソース ファイルの最大サイズ \(単位: キロバイト\) を指定します。 既定値は、1,000 KB です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.MaxBatchGeneratedFileSize%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#13)]
 [!code-vb[System.Web.Configuration.CompilationSection\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBatchSize">
      <MemberSignature Language="C#" Value="public int MaxBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.MaxBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBatchSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバッチ コンパイルごとのページの最大数を設定します。</summary>
        <value>単一のバッチにコンパイルされるページの最大数を示す整数値。 既定のページ数は 1000年です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.MaxBatchSize%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#14)]
 [!code-vb[System.Web.Configuration.CompilationSection\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentCompilations">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCompilations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCompilations" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.MaxConcurrentCompilations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxConcurrentCompilations", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンパイル セクションで"maxConcurrentCompilations"構成値を設定するかどうかを設定します。</summary>
        <value>
          <see langword="true" /> コンパイル セクションで"maxConcurrentCompilations"構成値が設定されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumRecompilesBeforeAppRestart">
      <MemberSignature Language="C#" Value="public int NumRecompilesBeforeAppRestart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumRecompilesBeforeAppRestart" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.NumRecompilesBeforeAppRestart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("numRecompilesBeforeAppRestart", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアプリケーションが再起動する前に発生する可能性があるリソースの動的な再コンパイルの数を設定します。</summary>
        <value>アプリケーションが再起動する前に発生する可能性があるリソースの動的な再コンパイルの数を示す値。 既定値は、15 の再コンパイルします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションが再起動する前に発生する可能性があるリソースの動的再コンパイルの数を示します。 グローバルおよびアプリケーションの構成レベルがディレクトリの構成レベルではなく、この属性がサポートされています。  
  
> [!NOTE]
>  ASP.NET の増加、 <xref:System.Web.Configuration.CompilationSection.NumRecompilesBeforeAppRestart%2A> アセンブリは無効になり、削除に失敗するたびに、プロパティの値。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.NumRecompilesBeforeAppRestart%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#15)]
 [!code-vb[System.Web.Configuration.CompilationSection\#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimizeCompilations">
      <MemberSignature Language="C#" Value="public bool OptimizeCompilations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OptimizeCompilations" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.OptimizeCompilations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("optimizeCompilations", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンパイルを最適化する必要があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、コンパイルを最適化する必要があります。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.CompilationSection.PostDeserialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileGuidedOptimizations">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.ProfileGuidedOptimizationsFlags ProfileGuidedOptimizations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.ProfileGuidedOptimizationsFlags ProfileGuidedOptimizations" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.ProfileGuidedOptimizations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("profileGuidedOptimizations", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.ProfileGuidedOptimizationsFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配置されている環境用にアプリケーションが最適化されているかどうかを示す値を取得または設定します。</summary>
        <value>配置されている環境用にアプリケーションが最適化されているかどうかを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると <xref:System.Web.Configuration.ProfileGuidedOptimizationsFlags.All>, 、ASP.NET コンパイル システムは、CPU 使用率の向上と引き換えに、ASP.NET の起動パフォーマンスを向上させるためのものでは最適化を有効します。 このプロパティの既定の設定 <xref:System.Web.Configuration.ProfileGuidedOptimizationsFlags.All>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.CompilationSection.SetReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="public bool Strict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Strict" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.Strict" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("strict", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Visual Basic の設定を取得または <see langword="strict" /> コンパイル オプション。</summary>
        <value>
          <see langword="true" /> 場合は、Visual Basic <see langword="strict" /> コンパイル オプションが使用されます。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに `true`, 、コンパイルは、データの喪失が発生する、すべてのデータ型変換と数値型と文字列間の変換に明示的に禁止されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.Strict%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#16)]
 [!code-vb[System.Web.Configuration.CompilationSection\#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public string TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.NET Framework のバージョンの設定を取得または Web サイトのターゲットです。</summary>
        <value>.NET Framework のバージョンを Web サイトのターゲットです。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 特定のバージョンの .NET Framework を対象にする方法については、次を参照してください。 [.NET Framework Targeting for Web Projects](http://msdn.microsoft.com/ja-jp/8b8145a9-62f6-4fc4-8a83-47b0487cbe76)します。  
  
   
  
## 例  
 [compilation 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/7c319582-074a-4d2a-a787-03b9d4541c12)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TempDirectory">
      <MemberSignature Language="C#" Value="public string TempDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TempDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.TempDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tempDirectory", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンパイル時に一時ファイル記憶域として使用するディレクトリを指定する値を設定します。</summary>
        <value>コンパイル時に一時ファイルの保管に使用するディレクトリを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.TempDirectory%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#17)]
 [!code-vb[System.Web.Configuration.CompilationSection\#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlLinePragmas">
      <MemberSignature Language="C#" Value="public bool UrlLinePragmas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UrlLinePragmas" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CompilationSection.UrlLinePragmas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("urlLinePragmas", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンパイラに指示が物理パスまたは Url を使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 手順については、コンパイラには、物理パスではなく、Url を使用する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 としてこのプロパティが指定されている場合 `true` 物理パスの代わりにコンパイラ手順については、構成では、Url が使用します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.Configuration.CompilationSection.UrlLinePragmas%2A> プロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.Configuration.CompilationSection> クラスです。  
  
 [!code-csharp[System.Web.Configuration.CompilationSection\#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/CS/CompilationSection.cs#18)]
 [!code-vb[System.Web.Configuration.CompilationSection\#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CompilationSection/VB/CompilationSection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>