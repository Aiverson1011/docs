<Type Name="WebConfigurationManager" FullName="System.Web.Configuration.WebConfigurationManager">
  <TypeSignature Language="C#" Value="public static class WebConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.WebConfigurationManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web アプリケーションに適用するときは、構成ファイルへのアクセスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Configuration.WebConfigurationManager> クラスを使用するコンピューターとアプリケーション情報にアクセスします。  
  
 使用して <xref:System.Web.Configuration.WebConfigurationManager> は Web アプリケーションに関連する構成ファイルで作業することをお勧めします。 クライアント アプリケーションを使用して、 <xref:System.Configuration.ConfigurationManager> クラスです。  
  
 アプリケーションを拡張できる、 <xref:System.Configuration> 型か、または次の一覧で説明したように構成情報を処理するには、直接使用します。  
  
-   `Handling configuration`。 標準の型を使用して構成情報を処理するためには、次の方法のいずれかを使用します。  
  
    -   `Accessing a section`。 アプリケーションの構成情報にアクセスするのいずれかを使用する必要があります、 `GetSection` によって提供されるメソッド <xref:System.Web.Configuration.WebConfigurationManager>します。`<appSettings>` と `<connectionStrings>`, を使用する、 <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> と <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> プロパティです。 これらのメソッドは、読み取り専用の操作を実行し、構成の単一のキャッシュされたインスタンスを使用し、マルチ スレッドに注意してください。  
  
    -   `Accessing configuration files`。 アプリケーションでは、読み取りでき、設定の書き込み構成あらゆるレベルでそのアプリケーション自体やその他のアプリケーションやコンピューターのローカルまたはリモートですることができます。 いずれかを使用する、 `open` によって提供されるメソッド <xref:System.Web.Configuration.WebConfigurationManager>します。 これらのメソッドが返す、 <xref:System.Configuration.Configuration> オブジェクトをさらに、必要なメソッドと基になる構成ファイルの処理のプロパティを提供します。 これらのメソッドは、読み取りを実行または書き込み操作し、ファイルが開かれるたびに、構成データを再作成します。  
  
    -   `Advanced configuration`。 高度な構成の処理は、型によって提供される <xref:System.Configuration.SectionInformation>, 、<xref:System.Configuration.PropertyInformation>, 、<xref:System.Configuration.PropertyInformationCollection>, 、<xref:System.Configuration.ElementInformation>, 、<xref:System.Configuration.ContextInformation>, 、<xref:System.Configuration.ConfigurationSectionGroup>, 、および <xref:System.Configuration.ConfigurationSectionGroupCollection>です。  
  
-   `Extending configuration standard types`。 など、標準的な構成の種類を拡張することによって、カスタム構成要素を提供することも <xref:System.Configuration.ConfigurationElement>, 、<xref:System.Configuration.ConfigurationElementCollection>, 、<xref:System.Configuration.ConfigurationProperty>, 、および <xref:System.Configuration.ConfigurationSection> プログラムまたは属性付きのモデルを使用しています。 参照してください、 <xref:System.Configuration.ConfigurationSection> プログラムを使用して標準的な構成の種類を拡張する方法の例のクラスです。 参照してください、 <xref:System.Configuration.ConfigurationElement> 属性付きのモデルを使用して、標準的な構成型を拡張する方法の例のクラスです。  
  
   
  
## 例  
 次の例は、構成情報にアクセスする方法を示しています、。  
  
 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッド  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>The <see cref="T:System.Configuration.Configuration" /> class allows programmatic access for editing configuration files. You use one of the open methods provided by <see cref="T:System.Web.Configuration.WebConfigurationManager" />. These methods will return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files. You can access these files for reading or writing as follows:  
  
 You use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information. Note that the user or process that reads must have the following permissions:  
  
-   Read permission on the configuration file at the current configuration hierarchy level.  
  
-   Read permissions on all the parent configuration files.  
  
 If your application needs read-only access to its own configuration, it is recommended you use the <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> methods. These methods provide access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  
  
 <block subset="none" type="note"><para>  
 If you use a static <see langword="GetSection" /> method that takes a <paramref name="path" /> parameter, the path parameter must refer to the application in which the code is running; otherwise, the parameter is ignored and configuration information for the currently-running application is returned.  
  
</para></block>  
  
 You use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods to write configuration information. Note that the user or process that writes must have the following permissions:  
  
-   Write permission on the configuration file and directory at the current configuration hierarchy level.  
  
-   Read permissions on all the configuration files.</para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サイトのアプリケーションの設定を取得します。</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクトを含む、 <see cref="T:System.Configuration.AppSettingsSection" /> の現在の Web アプリケーションの既定の構成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.AppSettingsSection> オブジェクトを含む構成ファイルの `<appSettings>` セクションです。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.AppSettings%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#8)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な <see cref="T:System.Collections.Specialized.NameValueCollection" /> とアプリケーションの設定データ オブジェクトを取得できませんでした。</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.WebConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サイトの接続文字列を取得します。</summary>
        <value>A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトの内容を含む、 <see cref="T:System.Configuration.ConnectionStringsSection" /> の現在の Web アプリケーションの既定の構成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.Configuration.WebConfigurationManager.ConnectionStrings%2A> プロパティを構成情報にアクセスし、結果を列挙します。 特定の接続文字列にアクセスするには、返された使用 <xref:System.Configuration.ConnectionStringSettingsCollection> 、必要な接続文字列には、インデクサーの名前に置き換えます。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#7)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> オブジェクトを取得できませんでした。</exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">構成セクション名。</param>
        <summary>現在の Web アプリケーションの構成ファイルから指定された構成セクションを取得します。</summary>
        <returns>指定された構成セクション オブジェクトまたは <see langword="null" /> セクションが存在しない場合。 使用でセキュリティ上の制限であることに注意してください <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String)" /> ランタイム操作として。 たとえば、変更の実行時にセクションにアクセスできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> が呼び出されますから、Web アプリケーション内でそのセクションを取得、Web アプリケーションの構成階層に従ってシステムによって選択された構成ファイルからです。  
  
> [!CAUTION]
>  アプリケーションは、HTTP とは異なるプロトコルを使用する場合、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> のパラメーター リストのセクションの名前とパスの両方を受け取るオーバー ロードは、2 つを使用します。 システムが構成階層のレベルはどのような想定できないために、構成ファイルのパスを指定する必要があります。 使用する場合、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 、セクション名だけで、システムを受け取るオーバー ロードは常にアプリケーション レベルの構成設定に戻すよう試みます。 ただし、ある場合は、指定されたパスは、現在のアプリケーションの外部では、パスを受け取るオーバー ロードも返します現在実行中のアプリケーションのアプリケーション レベルの構成設定に注意してください。  
  
 呼び出すことが <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> からクライアント アプリケーション内で。 この場合、クライアント構成の階層構造に従って、システムによって選択された構成ファイルから既定のセクションを取得します。 通常、Machine.config ファイルの場所にマップされている構成がある場合を除き、これです。 構成ファイルの割り当て、次に説明するマッピング メソッドを参照してください。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッドは、アプリケーションが実行される、階層レベルでの構成ファイルのセクションで動作するランタイム メソッドです。 実行時以外の操作を使用して <xref:System.Configuration.Configuration.GetSection%2A> 代わりにします。 このメソッドは、構成ファイルを開くのオーバー ロードされたメソッドを使用して取得した構成ファイルの指定したセクションでは動作 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A>します。  
  
   
  
## 例  
 このセクションの例と構成情報にアクセスする方法を示して、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッドです。  
  
 次の例では、Web アプリケーションまたはコンソール アプリケーションからアクセス可能なセクションを示します。  
  
> [!NOTE]
>  この例では、使用して、 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> を取得します、 <xref:System.Configuration.ConfigurationSection> 構成ファイルからオブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#2)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <block subset="none" type="overrides">
          <para>The return value must be cast to the expected configuration type before use. To avoid possible casting exceptions, you should use a conditional casting operation like the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">構成セクション名。</param>
        <param name="path">仮想の構成ファイルのパス。</param>
        <summary>指定した場所に、Web アプリケーションの構成ファイルから指定された構成セクションを取得します。</summary>
        <returns>指定された構成セクション オブジェクトまたは <see langword="null" /> セクションが存在しない場合。 使用でセキュリティ上の制限であることに注意してください <see cref="M:System.Web.Configuration.WebConfigurationManager.GetSection(System.String,System.String)" /> 実行時の操作として。 インスタンスの変更、実行時にセクションにアクセスできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> が呼び出されますから、Web アプリケーション内でそのセクションを取得、構成階層の指定したパスで定義され、構成ファイルからです。  
  
> [!CAUTION]
>  アプリケーションは、HTTP とは異なるプロトコルを使用する場合、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> のパラメーター リストのセクションの名前とパスの両方を受け取るオーバー ロードは、2 つを使用します。 システムが構成階層のレベルはどのような想定できないために、構成ファイルのパスを指定する必要があります。 使用する場合、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 、セクション名だけで、システムを受け取るオーバー ロードは常にアプリケーション レベルの構成設定に戻すよう試みます。 ただし、ある場合は、指定されたパスは、現在のアプリケーションの外部では、パスを受け取るオーバー ロードも返します現在実行中のアプリケーションのアプリケーション レベルの構成設定に注意してください。  
  
 このメソッドは、クライアント アプリケーション内からを呼び出すことはできません。  
  
 現在のレベル、Web アプリケーション ディレクトリを使用する構成ファイルから構成セクションを取得する場合、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッドです。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッドは、アプリケーションが実行される、階層レベルでの構成ファイルのセクションで動作しているランタイム メソッドです。 実行時以外の操作を使用して <xref:System.Configuration.Configuration.GetSection%2A> 代わりにします。 このメソッドが、指定されたセクションのいずれかを使用して取得した構成ファイルの操作、 `open` ファイルの構成方法。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> メソッドです。  
  
> [!NOTE]
>  使用する方法を示します、 <xref:System.Web.Configuration.WebConfigurationManager.GetSection%2A> 取得するメソッド、 <xref:System.Configuration.ConfigurationSection> 指定された構成ファイルからのオブジェクト。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#5)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このメソッドは、Web アプリケーションの外部からを呼び出されます。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <block subset="none" type="overrides">
          <para>The return value must be cast to the expected configuration type before use. To avoid possible casting exceptions, you should use a conditional casting operation like the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationSection">
      <MemberSignature Language="C#" Value="public static object GetWebApplicationSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWebApplicationSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">構成セクション名。</param>
        <summary>現在の Web アプリケーションの構成ファイルから指定された構成セクションを取得します。</summary>
        <returns>指定された構成セクション オブジェクトまたは <see langword="null" /> セクションが存在しない場合または実行時に、セクションがアクセスできない場合、内部オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> が呼び出されますから、Web アプリケーション内でそのセクションを取得、Web アプリケーションの構成階層に従ってシステムによって選択された構成ファイルからです。  
  
 呼び出すことが <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> からクライアント アプリケーション内で。 この場合、クライアント構成の階層構造に従って、システムによって選択された構成ファイルから既定のセクションを取得します。 通常、Machine.config ファイルの場所にマップされている構成がある場合を除き、これです。 構成ファイルの割り当て、次に説明するマッピング メソッドを参照してください。  
  
> [!NOTE]
>  <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> メソッドは、現在のレベルにあるアプリケーション構成ファイルのセクションで動作する実行時の操作です。<xref:System.Configuration.Configuration.GetSection%2A> ただし、メソッドは、実行時の操作ではありませんが、構成ファイルを開くためのいずれかの経由で取得した、指定されたセクションでは機能します。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> メソッドです。  
  
> [!NOTE]
>  この例では、使用して、 <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> を取得します、 <xref:System.Configuration.ConfigurationSection> 既定の構成ファイルからオブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#6)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <block subset="none" type="overrides">
          <para>The return value must be cast to the expected configuration type before use. To avoid possible casting exceptions, you should use a conditional casting operation like the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンピューター上のマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> 読み取りを許可するか、操作を記述するオブジェクト。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> メソッドは、アプリケーションを実行するコンピューター上のマシン構成ファイルを開きます。 このファイルは、標準的なビルド ディレクトリ %windir%\\microsoft.net\\framework\\version\\config にあります。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#9)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">アプリケーション パスをマシンの構成が適用されます。</param>
        <summary>現在のコンピューター上のマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> 読み取りを許可するか、操作を記述するオブジェクト。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで指定されたディレクトリに適用されるマシン構成ファイルを開き、 `locationSubPath` パラメーター。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#10)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">アプリケーション パスは、構成が適用されます。</param>
        <param name="server">構成を取得するサーバーの完全修飾名。</param>
        <summary>として指定されたサーバーで指定されたマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> 読み取りを許可するか、操作を記述するオブジェクト。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで指定されたディレクトリに配置されているマシン構成ファイルを開き、 `locationSubPath` パラメーターで指定されたコンピューターでは、 `server` パラメーター。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#11)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">アプリケーション パスは、構成が適用されます。</param>
        <param name="server">構成を取得するサーバーの完全修飾名。</param>
        <param name="userToken">使用するアカウント トークンです。</param>
        <summary>として指定されたサーバーで指定されたマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作に指定されたセキュリティ コンテキストを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、権限借用を使用して構成ファイルにアクセスします。  
  
> [!NOTE]
>  アカウント トークンが通常のインスタンスから取得した、 <xref:System.Security.Principal.WindowsIdentity> クラスまたは Win32 API への呼び出しなどのアンマネージ コードを呼び出すことによって `LogonUser`します。 アンマネージ コードに対する呼び出しの詳細については、次を参照してください。 [Consuming Unmanaged DLL Functions](http://msdn.microsoft.com/ja-jp/eca7606e-ebfb-4f47-b8d9-289903fdc045)します。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#12)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">有効な値が指定されていません、 <paramref name="server" /> または <paramref name="userToken" /> パラメーター。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration (string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration(string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="locationSubPath">アプリケーション パスは、構成が適用されます。</param>
        <param name="server">構成を取得するサーバーの完全修飾名。</param>
        <param name="userName">ファイルを開くときに使用する完全なユーザー名 \(ドメイン \\ ユーザー\)。</param>
        <param name="password">ユーザー名のパスワード。</param>
        <summary>として指定されたサーバーで指定されたマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作に指定されたセキュリティ コンテキストを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、権限借用を使用して構成ファイルにアクセスします。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#13)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="server" /> または <paramref name="userName" /> と <paramref name="password" /> パラメーターが無効でした。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <see cref="T:System.Configuration.ConfigurationFileMap" /> 既定マシン構成ファイルの代わりに使用するオブジェクト。</param>
        <summary>としてマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定したファイル マップを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <see cref="T:System.Configuration.ConfigurationFileMap" /> 既定マシン構成ファイルの代わりに使用するオブジェクト。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <summary>としてマシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可するか、操作を記述する場所と指定したファイル マップを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定したファイル マップを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 物理ディレクトリに仮想ディレクトリ階層をマッピングする必要がある場合は、マッピング メカニズムを使用します。  
  
   
  
## 例  
 次の例では、物理、仮想ディレクトリ階層をマップする方法を示します。 ここに示す例は、オーバー ロードされたメンバーで使用されます。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> 既定の Web アプリケーション構成ファイルの代わりに使用するオブジェクト。</param>
        <param name="path">構成ファイルへの仮想パス。</param>
        <summary>として指定された Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定したファイル マップと仮想パスを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#21)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#21)]  
  
 前の例では、次のカスタム メソッドを使用して、生成する、 <xref:System.Configuration.ConfigurationFileMap> オブジェクトです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#20)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#20)]  
  
 参照してください <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> を物理的な 1 つを仮想ディレクトリ階層をマップする方法を示すサンプルについてです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> Web アプリケーション構成ファイルの既定のマッピングの代わりに使用するオブジェクト。</param>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <summary>指定された Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定したファイル マップ、仮想パス、およびサイト名を使用しています。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#22)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#22)]  
  
 参照してください <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> を物理的な 1 つを仮想ディレクトリ階層をマップする方法を示すサンプルについてです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedWebConfiguration (System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedWebConfiguration(class System.Web.Configuration.WebConfigurationFileMap fileMap, string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration(System.Web.Configuration.WebConfigurationFileMap,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Web.Configuration.WebConfigurationFileMap" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <see cref="T:System.Web.Configuration.WebConfigurationFileMap" /> Web アプリケーション構成ファイルの既定のマッピングの代わりに使用するオブジェクト。</param>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <summary>として指定された Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定したファイル マップ、仮想パス、サイト名、および場所を使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 <xref:System.Web.Configuration.WebConfigurationManager.OpenMappedWebConfiguration%2A> メソッドを使用する方法の例を次に示します。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#23)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#23)]  
  
 参照してください <xref:System.Web.Configuration.WebConfigurationManager.OpenMachineConfiguration%2A> を物理的な 1 つを仮想ディレクトリ階層をマップする方法を示すサンプルについてです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。 場合 <see langword="null" />, 、ルートの Web.config ファイルが開きます。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パスを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#14)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パスとサイト名を使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#15)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パス、サイトの名前と場所を使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> 、リソースに対するオブジェクト権限の設定を継承するすべての構成ファイルで、コードの読み取りが必要です。 構成ファイルを更新するには、コードは、構成ファイルとそれが存在するディレクトリの両方に対する書き込み特権をさらが必要です。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#16)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <param name="server">Web アプリケーション サーバーのネットワーク名に常駐します。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パス、サイト名、場所、およびサーバーを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Configuration.Configuration> リモート リソースのオブジェクトのコードでは、リモート コンピューターで管理者特権が必要です。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#17)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">サーバーのパラメーターが無効でした。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <param name="server">Web アプリケーション サーバーのネットワーク名に常駐します。</param>
        <param name="userToken">使用するアカウント トークンです。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パス、サイト名、場所、サーバー、およびセキュリティ コンテキストを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、権限借用を使用して構成ファイルにアクセスします。  
  
> [!NOTE]
>  アカウント トークンが通常のインスタンスから取得した、 <xref:System.Security.Principal.WindowsIdentity> クラスまたは Win32 API への呼び出しなどのアンマネージ コードを呼び出すことによって `LogonUser`します。 アンマネージ コードに対する呼び出しの詳細については、次を参照してください。 [Consuming Unmanaged DLL Functions](http://msdn.microsoft.com/ja-jp/eca7606e-ebfb-4f47-b8d9-289903fdc045)します。  
  
 取得する、 <xref:System.Configuration.Configuration> リモート リソースのオブジェクトのコードでは、リモート コンピューターで管理者特権が必要です。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> 構成情報にアクセスするメソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#19)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="server" /> または <paramref name="userToken" /> パラメーターが無効でした。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込むことができませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Security.Principal.WindowsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="OpenWebConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenWebConfiguration (string path, string site, string locationSubPath, string server, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenWebConfiguration(string path, string site, string locationSubPath, string server, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="site" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">構成ファイルへの仮想パス。</param>
        <param name="site">インターネット インフォメーション サービス \(IIS\) の構成に表示されるよう、アプリケーション Web サイトの名前。</param>
        <param name="locationSubPath">特定のリソースでは、構成が適用されます。</param>
        <param name="server">Web アプリケーション サーバーのネットワーク名に常駐します。</param>
        <param name="userName">ファイルを開くときに使用する完全なユーザー名 \(ドメイン \\ ユーザー\)。</param>
        <param name="password">ユーザー名のパスワード。</param>
        <summary>として Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトの読み取りを許可または書き込み操作を指定した仮想パス、サイト名、場所、サーバー、およびセキュリティ コンテキストを使用します。</summary>
        <returns>
          <see cref="T:System.Configuration.Configuration" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、権限借用を使用して構成ファイルにアクセスします。  
  
 取得する、 <xref:System.Configuration.Configuration> リモート リソースのオブジェクトのコードでは、リモート コンピューターで管理者特権が必要です。  
  
 実行する必要があります、 [ASP.NET IIS Registration Tool \(Aspnet\_regiis.exe\)](http://msdn.microsoft.com/ja-jp/6491c41e-e2b0-481f-9863-db3614d5f96b) で、 `-config+` をリモート コンピューター上の構成ファイルへのアクセスを有効にします。  
  
   
  
## 例  
 次の例では、構成情報にアクセスする方法、 <xref:System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration%2A> メソッドです。  
  
 [!code-csharp[System.Web.Configuration.WebConfigurationManager\#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/CS/WebConfigurationManager.cs#18)]
 [!code-vb[System.Web.Configuration.WebConfigurationManager\#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.WebConfigurationManager/VB/WebConfigurationManager.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="server" /> または <paramref name="userName" /> と <paramref name="password" /> パラメーターが無効でした。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">有効な構成ファイルを読み込めませんでした。</exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWebConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Web アプリケーション構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMapping" />
        <altmember cref="T:System.Web.Configuration.VirtualDirectoryMappingCollection" />
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetSection">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在の Web アプリケーションの既定の構成ファイルから指定された構成セクションを取得します。</summary>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationManager" />
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="OpenMappedMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>マシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> 読み取りを許可するか、操作を記述するオブジェクト。</summary>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="OpenMachineConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>マシン構成ファイルを開き、 <see cref="T:System.Configuration.Configuration" /> 読み取りを許可するか、操作を記述するオブジェクト。</summary>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>