<Type Name="WebServiceHostFactory" FullName="System.ServiceModel.Activation.WebServiceHostFactory">
  <TypeSignature Language="C#" Value="public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>受信メッセージに応答してホスト インスタンスが動的に作成される管理対象ホスト環境で、<see cref="T:System.ServiceModel.Web.WebServiceHost" /> のインスタンスを提供するファクトリです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 動的アクティブ化をサポートする管理対象ホスト環境は、インターネット インフォメーション サービス \(IIS\) と Windows プロセス アクティブ化サービス \(WAS\) です。  
  
 <xref:System.ServiceModel.Web.WebServiceHost> のカスタム派生物を実装している場合は、<xref:System.ServiceModel.Activation.WebServiceHostFactory> クラスから派生するファクトリの実装も検討してください。  
  
   
  
## 例  
 次の例では、<xref:System.ServiceModel.Activation.WebServiceHostFactory> からクラスを派生させる方法を示します。  
  
  
  
 派生させた Web サービス ホスト ファクトリが使用されるようにするには、このファクトリを .SVC ファイルで指定します。 次の例は、.SVC ファイルで使用される構文を示しています。  
  
```  
<%@ServiceHost language=c# Service="Microsoft.Samples.MyWCFService" Factory="Microsoft.Samples.MyWebServiceHostFactory" %>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは直接には呼び出されません。 サービスが動的にアクティブ化されたときに呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">作成するサービス ホストの型。</param>
        <param name="baseAddresses">サービスのベース アドレスの配列。</param>
        <summary>指定したベース アドレスを持つ特定の <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 派生クラスのインスタンスを作成します。</summary>
        <returns>
          <see cref="T:System.ServiceModel.ServiceHost" /> 派生クラスのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 必要なサービス ホスト型を作成し、必要とされる処理を実行するために、このメソッドをオーバーライドします。  
  
   
  
## 例  
 このメソッドの基本実装の例を次に示します。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>