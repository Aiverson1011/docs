<Type Name="AspNetCompatibilityRequirementsAttribute" FullName="System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute">
  <TypeSignature Language="C#" Value="public sealed class AspNetCompatibilityRequirementsAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetCompatibilityRequirementsAttribute extends System.Attribute implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows Communication Foundation (WCF) サービスに適用され、そのサービスが ASP.NET 互換コードで実行できるかどうかを示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 サービス実装クラスに適用した場合、この属性は、このサービスがホスト アプリケーション ドメイン \(AppDomain\) に対して [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 互換モードを有効にする必要があるかどうか、またはそのモードをサポートする必要があるかどうかを指示します。  
  
 AppDomains がホストする [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスは、次の 2 つの異なるホスト モードで実行できます。  
  
-   混合トランスポート モード \(既定\) : このモードでは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスは [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] HTTP パイプラインに参加しません。 これは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスが、ホスティング環境や伝送方式にかかわらず、一貫した動作を行うことを保証します。  
  
-   [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 互換モード: このモードでは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスが、ASMX サービスと類似する方法で [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] HTTP パイプラインに参加します。[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] には、ファイルの承認や URL の承認などの機能があり、このモードで実行中の [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスには HTTP セッション状態が適用されます。  
  
 ホスト モードは、アプリケーション レベルの構成フラグである `aspNetCompatibilityEnabled` によって制御されます。  
  
 `<system.serviceModel>`  
  
 `<serviceHostingEnvironment aspNetCompatibilityEnabled="true"/>`  
  
 `</system.serviceModel>`  
  
 このフラグは、既定では `false` であるため、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] 互換モードを明示的に選択しない限り、[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] サービスは混合トランスポート モードで実行されます。  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)] [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 互換モードを参照してください [serviceHostingEnvironment](http://msdn.microsoft.com/ja-jp/4f8a7c4f-e735-4987-979a-b74fcdae2652)します。  
  
 これを行うには、<xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode%2A> プロパティを使用します。 実行時、アプリケーションは、静的プロパティ [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] の値を確認することにより、<xref:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled%2A> 互換モードが有効であるかどうかを検出できます。  
  
   
  
## 例  
 サービス開発者は、設定して、ASP.NET 互換モードで、サービスをのみ実行できるようにできます、 <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode%2A> プロパティを <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute> に <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required> 次の例で示すように  
  
 [!code-csharp[S\_AspNetCompatibility\#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_aspnetcompatibility/cs/service.cs#1)]
 [!code-vb[S\_AspNetCompatibility\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_aspnetcompatibility/vb/service.vb#1)]  
  
 [!code-csharp[S\_AspNetCompatibility\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_aspnetcompatibility/cs/service.cs#2)]
 [!code-vb[S\_AspNetCompatibility\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_aspnetcompatibility/vb/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspNetCompatibilityRequirementsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequirementsMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode RequirementsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode RequirementsMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービスが要求する ASP.NET 互換性レベルを取得または設定します。</summary>
        <value>サービスが要求する <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" /> 互換性の程度を示す ASP.NET。 既定値は <see cref="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode%2A> プロパティを使用して、コード内にホスト モードを設定します。 これは、アプリケーション レベルの構成フラグである `aspNetCompatibilityEnabled` を設定することでも実行できます。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][serviceHostingEnvironment](http://msdn.microsoft.com/ja-jp/4f8a7c4f-e735-4987-979a-b74fcdae2652).  
  
 実行時、アプリケーションは、静的プロパティ [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] の値を確認することにより、<xref:System.ServiceModel.ServiceHostingEnvironment.AspNetCompatibilityEnabled%2A> 互換モードが有効であるかどうかを検出できます。  
  
   
  
## 例  
 [!code-csharp[S\_AspNetCompatibility\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_aspnetcompatibility/cs/service.cs#2)]
 [!code-vb[S\_AspNetCompatibility\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_aspnetcompatibility/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">にとって有効な値が、 <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" /><see langword="enum" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">サービスの <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</param>
        <param name="serviceHostBase">サービスをホストするために使用される <see cref="T:System.ServiceModel.ServiceHostBase" />。</param>
        <param name="endpoints">サービスのエンドポイントを格納する <see cref="T:System.Collections.ObjectModel.Collection`1" /> 型の <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</param>
        <param name="parameters">サービスのバインディング要素がアクセスできるパラメーターを格納する <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</param>
        <summary>コントラクトの実装をサポートするためにバインド要素からアクセスできるカスタム データを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">サービスの <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</param>
        <param name="serviceHostBase">サービスをホストするための <see cref="T:System.ServiceModel.ServiceHostBase" />。</param>
        <summary>ホストの種類が ASP.NET 互換要件と一致していることを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">サービス ホストが ASP.NET 互換要件と一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">サービスの <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</param>
        <param name="serviceHostBase">サービスをホストするための <see cref="T:System.ServiceModel.ServiceHostBase" />。</param>
        <summary>サービス動作を検証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>