<Type Name="HostedTransportConfiguration" FullName="System.ServiceModel.Activation.HostedTransportConfiguration">
  <TypeSignature Language="C#" Value="public abstract class HostedTransportConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HostedTransportConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.HostedTransportConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows プロセス アクティブ化サービス \(WAS\) でホストされるトランスポートを実装するためのトランスポート固有の構成を用意します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows プロセス アクティブ化サービス \(WAS\) を使用するプロセス アクティブ化をサポートするトランスポートでは、WAS サイト バインドを使用して、このトランスポートがリッスンするネットワーク アドレスについての情報を記憶します。 トランスポートの実装では、この情報を ApplicationHost.config ファイルから読み取って、<xref:System.ServiceModel.ServiceHostBase> のコンストラクターに渡すことができるベース アドレス URI のセットを構築します。 これらのベース アドレスを構築するプロセスは、トンラスポート プロトコル固有のプロセスです。 WAS アクティブ化をサポートするトランスポートの実装では、このロジックをカプセル化するための <xref:System.ServiceModel.Activation.HostedTransportConfiguration> から派生する実装を提供する必要があります。 このクラスの使用方法の詳細については、「[UDP Activation](http://msdn.microsoft.com/ja-jp/4b0ccd10-0dfb-4603-93f9-f0857c581cb7)」の例を参照してください。この例では、WAS によってアクティブ化されるカスタムのユーザー データグラム プロトコル \(UDP\) を作成する方法が示されています。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HostedTransportConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.HostedTransportConfiguration.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Activation.HostedTransportConfiguration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseAddresses">
      <MemberSignature Language="C#" Value="public abstract Uri[] GetBaseAddresses (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri[] GetBaseAddresses(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.HostedTransportConfiguration.GetBaseAddresses(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">サービスへの仮想パス。</param>
        <summary>派生クラスでオーバーライドされた場合は、ホストのベース アドレスを取得します。</summary>
        <returns>ホストのベース アドレスを格納する <see cref="T:System.Uri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスの使用方法の詳細については、「[UDP Activation](http://msdn.microsoft.com/ja-jp/4b0ccd10-0dfb-4603-93f9-f0857c581cb7)」の例を参照してください。この例では、WAS によってアクティブ化されるカスタムのユーザー データグラム プロトコル \(UDP\) を作成する方法が示されています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>