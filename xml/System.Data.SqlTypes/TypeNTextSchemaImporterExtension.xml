<Type Name="TypeNTextSchemaImporterExtension" FullName="System.Data.SqlTypes.TypeNTextSchemaImporterExtension">
  <TypeSignature Language="C#" Value="public sealed class TypeNTextSchemaImporterExtension : System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeNTextSchemaImporterExtension extends System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension" /> クラスは、スタンドアロンのコンポーネントが他のクラスが標準的な機能を派生するクラスとして使用するものではありません。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeNTextSchemaImporterExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.TypeNTextSchemaImporterExtension.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlTypes.TypeNTextSchemaImporterExtension> クラスは、スタンドアロンのコンポーネントが他のクラスが標準的な機能を派生するクラスとして使用するものではありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>