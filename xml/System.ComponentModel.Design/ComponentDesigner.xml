<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>コンポーネントのデザイン モードの動作を拡張します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ComponentDesigner> 基本デザイナー クラスには、デザイン モードでの関連するコンポーネントの動作を拡張できる単純なデザイナーが用意されています。  
  
 <xref:System.ComponentModel.Design.ComponentDesigner> 空の提供 <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスの実装では、そのメソッドをオーバーライドすると、デザイン時に、属性、プロパティおよび関連付けられたコンポーネントのイベントを調整できます。  
  
 使用して型をデザイナーを関連付けることができます、 <xref:System.ComponentModel.DesignerAttribute>です。 デザイン時動作のカスタマイズの概要については、次を参照してください。 [Extending Design\-Time Support](http://msdn.microsoft.com/ja-jp/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)します。  
  
 <xref:System.ComponentModel.Design.ComponentDesigner> クラスは継承されたコンポーネントのプロパティ記述子のための特別な動作を実装します。 という内部型 `InheritedPropertyDescriptor` 、既定で使用される <xref:System.ComponentModel.Design.ComponentDesigner> 基本クラスから継承されたプロパティの代わりに実装します。 これらのプロパティ記述子を追加する 2 つのケースもあります。  
  
1.  返されるルート オブジェクト自体に、 <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=fullName> プロパティには、その基本クラスから継承しているためです。  
  
2.  フィールドについては、ルート オブジェクトの基本クラスです。 基本クラスからパブリック、プロテクト フィールドは、ユーザーが操作できるように、デザイナーに追加されます。  
  
 `InheritedPropertyDescriptor` クラスは、既定値はオブジェクトのインスタンス化では、現在の値をように、プロパティの既定値を変更します。 これは、プロパティが別のインスタンスから継承されるためです。 デザイナーでは、継承クラスによって設定されたの値に設定すると、このプロパティの値を定義します。 この値は、メタデータに格納されている既定値に異なる場合があります。  
  
   
  
## 例  
 次のコード例は、例を示します <xref:System.ComponentModel.Design.ComponentDesigner> 実装と、デザイナーに関連付けられた例コンポーネントです。 デザイナーのオーバーライドの実装、 <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> メソッドを呼び出す基本 `Initialize` メソッドをオーバーライドした関数、 <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> を表示するメソッド、 <xref:System.Windows.Forms.MessageBox> コンポーネントをダブルクリックしたときとのオーバーライド、 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> カスタムを提供するプロパティのアクセサー <xref:System.ComponentModel.Design.DesignerVerb> コンポーネントのショートカット メニューにメニュー コマンドです。  
  
 [!code-cpp[ComponentDesignerExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーに関連付けられたコンポーネントでサポートされているデザイン時のアクションのリストを取得します。</summary>
        <value>デザイナーに関連付けられたコンポーネントでサポートされているデザイン時のアクションの一覧表示されます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーによって管理されているコンポーネントに関連するコンポーネントのコレクションを取得します。</summary>
        <value>デザイナーによって管理されているコンポーネントに関連付けられているコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、ドラッグ、または移動操作をコピーまたは移動、コピー中に、デザイナーによって管理されているコンポーネントとコンポーネントを示します。  
  
 このコレクションに現在のデザイン モードのドキュメントの他のコンポーネントへの参照が含まれている場合は、コピー操作中に、デザイナーによって管理されているコンポーネントと共にこれらのコンポーネントがコピーされます。  
  
 デザイナーによって管理されているコンポーネントを選択すると、このコレクションには、入れ子になったコントロールが格納されます。 このコレクションは、ツールバーのボタンなど、他のコンポーネントもあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーがデザイン コンポーネントを取得します。</summary>
        <value>デザイナーによって管理されるコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> メソッドの <xref:System.ComponentModel.Design.ComponentDesigner> このプロパティを設定します。  
  
> [!NOTE]
>  オーバーライドする場合、 <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> メソッド、基本クラスを呼び出して必ず <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> このプロパティを使用する前にメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>. The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state. After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying. For more information, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
> [!NOTE]
>  Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's **languageKeyword tag is not supported!!!!**  
>  method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、パブリック `Dispose()` メソッドおよび <xref:System.Object.Finalize%2A> メソッドです。`Dispose()` 保護対象の起動 `Dispose(Boolean)` メソッドを `disposing` パラメーターを設定する `true`です。<xref:System.Object.Finalize%2A> 呼び出す `Dispose` と `disposing` 設定 `false`します。  
  
 ときに、 `disposing` パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この <xref:System.ComponentModel.Design.ComponentDesigner> 参照します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コンポーネントの既定のイベントのソース コード ファイルでメソッド署名を作成し、その場所にカーソルを移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows フォームおよび Web フォーム デザイナーでは、ユーザーが、コンポーネントをダブルクリックすると、このメソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">ソース コード管理プログラムにチェックインされているファイルをチェック アウトできませんでした。</exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ガベージ コレクションでオブジェクトがクリアされる前に、<see langword="Dispose(false)" /> を呼び出して、リソースの解放を試みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.Finalize%2A?displayProperty=fullName> を呼び出してリソースをクリーンアップし、 `Dispose(false)`します。`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。  
  
 アプリケーション コードは、このメソッドを呼び出さないようにオブジェクトの `Finalize` への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限りガベージ コレクション中にメソッドが自動的に起動、 <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> メソッドです。  
  
 詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/ja-jp/fd376774-1643-499b-869e-9546a3aeea70), 、[Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213), 、および [Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/ja-jp/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">要求するサービスの型。</param>
        <summary>デザイナーのコンポーネントのデザイン モードのサイトからのサービスを使用して型を取得しようとしています。</summary>
        <returns>要求されたサービスを実装するオブジェクトまたは <see langword="null" /> 場合は、サービスを解決することはできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの既定の実装では、コンポーネントのサイトから、サービスを要求します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> デザイナー サービスへのアクセス方法です。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたコンポーネントの継承の種類を示す属性を取得します。</summary>
        <value>
          <see cref="T:System.ComponentModel.InheritanceAttribute" /> に関連するコンポーネントです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコンポーネントを継承するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> コンポーネントが継承されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">このデザイナーのコンポーネントです。</param>
        <summary>表示、編集、および指定したコンポーネントの設計時にデザイナーを準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナーのホストは、デザイナーを使用する準備ができた場合、このメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">プロパティに適用する既定値の名前\/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
        <summary>既存のコンポーネントを再初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> は既存のコンポーネントが再初期化されるときに、メソッドが呼び出されます。 たとえば、ユーザーが別のコンテナーにコンポーネントをドラッグした後に、この問題が発生する可能性があります。  
  
 使用することが、 `defaultValues` ディクショナリを適用する、プロパティに既定の設定を推奨します。 ただし、変更しないでコンポーネントのプロパティとは別に、ディクショナリに格納されているため、この既存のコンポーネントは、設定されているプロパティに既にある場合があります。  
  
 このメソッドの既定の実装では、何も行いません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">プロパティに適用する既定値の名前\/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
        <summary>新たに作成されたコンポーネントを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> コンポーネントの初期化時に最初に、通常、デザイン サーフェイスに最初に追加された後にメソッドが呼び出されます。  
  
 このコンポーネントのために必要な初期化を行うことがあり、無視しても、 `defaultValues` ディクショナリ全体です。  
  
 このメソッドの既定の実装では、何も行いません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定以外の設定を既に初期化されているインポートされたコンポーネントの設定を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナーが貼り付けるか、デザイナーにドラッグ アンド ドロップ操作で移動するコントロールなど、既定の状態に含まれていないコントロールに関連付けられている場合は、このメソッドが呼び出されます。 このメソッドは、変更、またはコンポーネントのプロパティをシャドウではなく、コンポーネントには既定のプロパティを初期化する実装についての機会を提供します。 このメソッドは、その他の関数の初期化後に呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> が継承属性を取得します。</param>
        <summary>取得、 <see cref="T:System.ComponentModel.InheritanceAttribute" /> の指定した <see cref="T:System.ComponentModel.Design.ComponentDesigner" />します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.InheritanceAttribute" /> の指定したデザイナーです。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コンポーネントの既定のプロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> デザイナーの初期化時に呼び出されます。 これにより、デザイナーの基本コンポーネントの既定値を指定できます。  
  
 このメソッドが 1 回だけ呼び出されます。 まずして作成する場合、コンポーネント、ツールボックスからデザイン画面にドラッグします。 後続のデザイナーの初期化では、このメソッドは呼び出されません。  
  
 このメソッドの既定の実装では、既定のプロパティは、文字列と、プロパティが既に設定されていない場合に、コンポーネントの名前に、コンポーネントの既定のプロパティを設定します。 このメソッドは、デザイナーがデザイン コンポーネントの初期化をカスタマイズする派生クラスで実装することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このデザイナーの親コンポーネントを取得します。</summary>
        <value>このデザイナーの親コンポーネントまたは <see langword="null" /> このデザイナーがルート コンポーネントである場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、デザイナー内の親のリレーションシップを検出するための一般的なメカニズムを提供で使用される、 <xref:System.ComponentModel.Design.ComponentDesigner> オブジェクトの <xref:System.ComponentModel.Design.ITreeDesigner> インターフェイスの実装です。 このプロパティが返すのみ `null` ルート コンポーネントがこのデザイナーの場合。 このプロパティの既定の実装がルート コンポーネントではないすべてのコンポーネントのルート要素を返し、 `null` ルート コンポーネント用です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの属性。</param>
        <summary>デザイナーによって変更またはを通じて公開する属性のセットから項目を削除する、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じて公開されている属性のディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーの値で指定したとおり、属性の型識別子は、 <xref:System.Attribute.TypeId%2A> プロパティです。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 直後後に、このメソッドが呼び出される、 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベント。</param>
        <summary>デザイナーによって変更またはを通じて公開されるイベントのセットから項目を削除する、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じて公開されているイベントのディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 直後後に、このメソッドが呼び出される、 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティです。</param>
        <summary>デザイナーによって変更またはを通じて公開されるプロパティのセットから項目を削除する、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じて公開されているプロパティのディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 直後後に、このメソッドが呼び出される、 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">コンポーネントのクラスの属性。</param>
        <summary>を通じて公開される属性のセットに追加するデザイナーが使用できる、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デザイナーがを通じて公開される属性のディクショナリに項目を追加する方法を提供する <xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーの値で指定したとおり、属性の型識別子は、 <xref:System.Attribute.TypeId%2A> プロパティです。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは、直前に呼び出されますが、 <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">コンポーネントのクラスのイベント。</param>
        <summary>を通じて公開されるイベントのセットに追加するデザイナーが使用できる、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デザイナーがを通じて公開されるイベントのディクショナリに項目を追加する方法を提供する <xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは、直前に呼び出されますが、 <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのクラスのプロパティです。</param>
        <summary>を通じて公開されるプロパティのセットに追加するデザイナーが使用できる、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デザイナーがを通じて公開されるプロパティのディクショナリに項目を追加する方法を提供する <xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは、直前に呼び出されますが、 <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> が変更されているメンバーを示します。</param>
        <param name="oldValue">メンバーの古い値。</param>
        <param name="newValue">メンバーの新しい値。</param>
        <summary>通知、 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> このコンポーネントが変更されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって提供されるアクセサーではなくとコンポーネントのプロパティに直接影響する場合にのみ、このメソッドを呼び出す <xref:System.ComponentModel.MemberDescriptor>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> が変更されるメンバーを示します。</param>
        <summary>通知、 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> このコンポーネントの期限を変更することです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって提供されるアクセサーではなくとコンポーネントのプロパティに直接影響する場合にのみ、このメソッドを呼び出す <xref:System.ComponentModel.MemberDescriptor>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー設定をオーバーライドするプロパティ値のコレクションを取得します。</summary>
        <value>A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> デザイン ドキュメントのプロパティをシャドウすることを示します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> コンポーネントのクラスのオブジェクト。 属性のディクショナリ内のキー、 <see cref="P:System.Attribute.TypeId" /> 属性の値。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> コンポーネントのクラスのイベントを表すオブジェクト。 イベントのディクショナリのキーは、イベント名です。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> コンポーネントのクラスのプロパティを表すオブジェクト。 プロパティのディクショナリのキーは、プロパティ名です。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> コンポーネントのクラスのオブジェクト。 属性のディクショナリ内のキー、 <see cref="P:System.Attribute.TypeId" /> 属性の値。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> コンポーネントのクラスのイベントを表すオブジェクト。 イベントのディクショナリのキーは、イベント名です。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> コンポーネントのクラスのプロパティを表すオブジェクト。 プロパティのディクショナリのキーは、プロパティ名です。</param>
        <summary>このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細を参照してください、 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> プロパティです。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> のコレクションを含む <see cref="T:System.ComponentModel.Design.IDesigner" /> 現在の親デザイナーに含まれるデザイナー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.ITreeDesigner> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細を参照してください、 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> プロパティです。</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.IDesigner" /> 親デザイナーを表すまたは <see langword="null" /> 親が存在しない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.ComponentModel.Design.ComponentDesigner> のインスタンスが <xref:System.ComponentModel.Design.ITreeDesigner> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーに関連付けられているコンポーネントでサポートされているデザイン時の動詞を取得します。</summary>
        <value>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> の <see cref="T:System.ComponentModel.Design.DesignerVerb" /> オブジェクト、または <see langword="null" /> デザイナー動詞が使用できない場合。 この既定の実装を常に <see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `null` コンポーネントはデザイン時の動詞を持たない場合です。  
  
 通常、デザイン時環境には、\(右クリック\) のショートカット メニューでこのメソッドによって返される動詞が表示されます。 ユーザーは、動詞のいずれかを選択すると、 <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> 対応するメソッド <xref:System.ComponentModel.Design.DesignerVerb> が呼び出されます。  
  
> [!NOTE]
>  デザイン時環境は、通常、 **プロパティ** コンポーネントのショートカット メニューのコマンドです。 そのため、このようなエントリは、デザイナーが指定した動詞のコレクションには含めないようにしてください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> で使用したリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>