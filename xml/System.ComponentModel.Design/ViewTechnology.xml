<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>デザイナー ホストがサポートするテクノロジ セットの識別子を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 アダプターのモデルの表示が置き換えする機能を追加、 <xref:System.ComponentModel.Design.ViewTechnology> 機能です。 ただし、、 <xref:System.ComponentModel.Design.ViewTechnology> を選択した場合、下位互換性と将来の使用の両方の機能が保持されます。 詳細については、「.NET 図形ライブラリ:: A サンプル デザイナー」http:\/\/windowsforms.net\/articles\/shapedesigner.aspx で Windows フォーム サポート技術情報でを参照してください。  
  
 <xref:System.ComponentModel.Design.ViewTechnology> デザイナーでホストされるドキュメントの表示を制御するために使用するモードを示すことのできる識別子を定義します。  
  
 のみを使用する必要があります、 <xref:System.ComponentModel.Design.ViewTechnology.Default> 、デザイナーのホスティング環境の値。 以前のバージョンの [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], 、 <xref:System.ComponentModel.Design.ViewTechnology> 列挙型がルート デザイナーでサポートされる UI モデルの種類を指定します。 代わりに使用する必要がありますので、このモデルは拡張できません、 *ビューのアダプター* モデルです。 ビューのアダプターは、別の 1 つの型のオブジェクトを対応する型です。  
  
 たとえば、HTML デザイナーが返す、 `DemoDOM` ツリー ビューだけです。 HTML デザイナーのビュー テクノロジを返す <xref:System.ComponentModel.Design.ViewTechnology.Default>します。 Windows フォームのホスト環境では、1 つまたは複数のビュー アダプター クラスを使用があります。 このような 1 つのクラスに変換できなかった場合、 `DemoDOM` 、ホスト アプリケーションを Windows フォーム コントロールでは、この種のデザイナーをサポートできます。 かどうかアダプターが処理しないデザイナーから返されるデータ型 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> メソッド、デザイナーの読み込みが失敗し、エラーで、ユーザーが表示されます。  
  
 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 任意の UI テクノロジに適応できるように、ビューのアダプターを提供するための拡張可能なスキームがあります。 サードパーティのテクノロジ プロバイダーは、適切なビュー アダプターも提供し、オブジェクト モデルがすぐに使用します。  
  
 使用例については、アダプターを表示、「.NET 図形ライブラリ:: A サンプル デザイナー」http:\/\/windowsforms.net\/articles\/shapedesigner.aspx で Windows フォーム サポート技術情報でを参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.ComponentModel.Design.ViewTechnology> デザイナー内のクラスです。 このコード例が示されている例の一部は、 <xref:System.ComponentModel.Design.IRootDesigner> インターフェイスです。  
  
 [!code-cpp[IRootDesigner Sample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定のビュー テクノロジのサポートを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ルート デザイナーは、オブジェクトの任意の型を返す可能性がありますが、オブジェクトをホストのテクノロジに向けたアダプターとの互換性にする必要があります。 ホスティング環境など [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 新しいビュー技術アダプターを接続する方法を提供します。 Windows フォーム デザイナーの既定のビュー オブジェクトは、 <xref:System.Windows.Forms.Control?displayProperty=fullName> インスタンス。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.ComponentModel.Design.ViewTechnology> デザイナー内のクラスです。 このコード例が示されている例の一部は、 <xref:System.ComponentModel.Design.IRootDesigner> インターフェイスです。  
  
 [!code-cpp[IRootDesigner Sample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>開発環境に直接、view オブジェクトが渡されるモードを表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビュー オブジェクトには、開発環境に必要なインターフェイスを実装する必要があります。[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 開発環境は、ActiveX コントロール、アクティブなドキュメントは、またはを通じて利用可能な IVsWindowPane インターフェイスを実装するオブジェクトのいずれかであるオブジェクトの表示をサポートしている [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] VSI \([!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 統合\) プログラムです。[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 開発環境では、このビュー技術のサポートが用意されています。 このビュー技術のサポートは、必ずしもすべての開発環境で使用可能なはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows フォーム コントロール オブジェクトがルート デザイナーの表示を提供するモードを表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナーのホストでは、開発環境のドキュメント ウィンドウを Windows フォーム コントロールを使用します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.ComponentModel.Design.ViewTechnology> デザイナー内のクラスです。 このコード例が示されている例の一部は、 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> クラスです。  
  
 [!code-cpp[LocalizationExtenderProviderExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>