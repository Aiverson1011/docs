<Type Name="IMenuCommandService" FullName="System.ComponentModel.Design.IMenuCommandService">
  <TypeSignature Language="C#" Value="public interface IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMenuCommandService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IMenuCommandService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>グローバル デザイナー動詞とデザイン モードで使用できるメニュー コマンドを管理し、いくつかの種類のショートカット メニューを表示するメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このインターフェイスは、メソッドを提供します。  
  
-   検索、起動、追加およびグローバル デザイナー動詞のコマンドを削除します。  
  
-   検索、起動、追加および標準のメニュー コマンドを削除します。  
  
-   標準のメニュー コマンドに関連するイベント ハンドラーを変更します。  
  
-   メニューに関連付けられている標準コマンドのショートカット メニューを表示する <xref:System.ComponentModel.Design.CommandID>です。  
  
 デザイナー動詞は、デザイン モードでショートカット メニューに表示されているカスタム定義のコマンドを表します。 デザイナー動詞は、指定したテキスト ラベルを指定できます。 各デザイナー動詞が自動的に割り当てられる一意 <xref:System.ComponentModel.Design.CommandID>します。 デザイナーがを通じてデザイナー動詞を指定できます、 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> ですが、これらには、デザイナーのコンポーネントが現在選択されています。 グローバル デザイナー動詞は、選択したコンポーネントに関係なく、デザイン モードのショートカット メニューからアクセス可能なデザイナー動詞コマンドです。 このインターフェイスでは、デザイン モードで使用できるグローバル デザイナー動詞のセットを管理することができます。  
  
 グローバル デザイナー動詞を使用して、追加することができます、 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> メソッドを使用して、グローバル デザイナー動詞を削除できます、 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> メソッドです。 デザイナー動詞を使用して、呼び出すことができます、 <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> メソッドがわかっている場合、 <xref:System.ComponentModel.Design.CommandID> 動詞のです。<xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> このインターフェイスのプロパティには、現在のショートカット メニューに表示するデザイナー動詞コマンドのセットが含まれています。 このデザイナー動詞コマンドのセットは、すべてのグローバル デザイナー動詞と現在選択されているコンポーネントのデザイナーによって提供されるデザイナー動詞で構成されます。 この動詞のセットはデザイナー動詞コマンドを提供しているデザイナーでコンポーネントを選択または選択解除するたびに更新します。  
  
 メニュー コマンドは、定義済みの標準コマンドのセットに制限されます。 ほとんどの定義済みの標準的なコマンドがで定義されている、 <xref:System.ComponentModel.Design.StandardCommands> と <xref:System.Windows.Forms.Design.MenuCommands> 列挙体です。 追加できますが、によりを削除してメニュー コマンドを実行し、このインターフェイスのメソッドを使用してメニューに追加されているメニュー コマンドを検索します。  
  
 使用して標準メニュー コマンドを追加する、 <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> メソッド、および標準のメニュー コマンドを使用して、削除、 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> メソッドです。 イベント ハンドラーを定義済みの標準的なメニュー コマンドにアタッチするには、ドキュメントの詳細な手順により、 <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> メソッドです。 メニュー コマンドを取得する <xref:System.ComponentModel.Design.CommandID> を使用してメニューに追加された場合、 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> メソッドです。 メニュー コマンドや、デザイナー動詞のコマンドを呼び出すことができます <xref:System.ComponentModel.Design.CommandID> を使用して、 <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> メソッドです。  
  
> [!NOTE]
>  既に既存のメニュー コマンドを追加しようとすると、 <xref:System.ComponentModel.Design.CommandID> をスロー、 <xref:System.InvalidOperationException>です。 メニュー コマンドを追加するときにすることになっていないを使用してメニューを確認することを確認して、 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> メソッド、または使用して例外がうまく処理します。  
  
> [!NOTE]
>  メニュー コマンドを選択し、メニューに追加することができますが、 <xref:System.ComponentModel.Design.MenuCommand.Visible%2A> または <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> プロパティに設定 `false`します。 メニューに追加されているメニュー コマンド、視覚的に見つからない場合はこれらのプロパティのいずれかに設定されている `false`します。  
  
 使用して、指定した場所にメニュー コマンドを含む特定の標準のショートカット メニューを表示することができます、 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> メソッドです。 このメソッドのドキュメントには、表示する有効なメニューを指定するコマンド Id の一覧を示すテーブルが含まれています。  
  
   
  
## 例  
 この例では、 <xref:System.ComponentModel.Design.IMenuCommandService> を追加する、 <xref:System.ComponentModel.Design.MenuCommand>です。  
  
 [!code-cpp[MenuCommand Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.Windows.Forms.Design.MenuCommands" />
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
  </Docs>
  <Members>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">追加する <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
        <summary>指定した標準メニュー コマンドをメニューに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Design.MenuCommands> と <xref:System.ComponentModel.Design.StandardCommands> 列挙型を含む <xref:System.ComponentModel.Design.CommandID> 識別子の定義済みの標準コマンドとされているメニュー コマンドに関連付けられている特定のメニュー上の場所。  
  
> [!NOTE]
>  既に既存のメニュー コマンドを追加しようとすると、 <xref:System.ComponentModel.Design.CommandID> をスロー、 <xref:System.InvalidOperationException>です。 メニュー コマンドを追加するときにすることになっていないを使用してメニューを確認することを確認して、 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> メソッド、または使用して例外がうまく処理します。  
  
 次の手順で定義済みのメニュー コマンドには、イベント ハンドラーをアタッチすることができます。  
  
1.  イベント ハンドラーとリンクするメニュー コマンドがメニューに追加されましたまたはである場合、 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> メソッドでは、後で、このメニュー コマンドを復元するかどうかと、新しいイベント ハンドラーから現在のイベント ハンドラーを起動するかどうかを検討してください。 場合は、コードには、メニュー コマンドやイベント ハンドラーの呼び出しのチェーンを復元できます、メニュー コマンドをどこかへの参照を格納することを確認します。  
  
2.  同じでメニュー コマンドに以前から存在することを確認 <xref:System.ComponentModel.Design.CommandID> を使用して、メニューから削除された、 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> メソッドです。  
  
3.  新しい <xref:System.ComponentModel.Design.MenuCommand> と共に、コンス トラクターでイベント ハンドラーを指定し、 <xref:System.ComponentModel.Design.CommandID> を追加するコマンドを表します。 各標準のメニュー コマンドに追加される定義済みのメニューの場所に関連付けられます。 サポートされているコマンド Id が定義されている、 <xref:System.ComponentModel.Design.StandardCommands> と <xref:System.Windows.Forms.Design.MenuCommands> 列挙体です。  
  
4.  メニュー コマンドの既存のイベント ハンドラーを呼び出す場合、 <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> メニュー コマンドの呼び出しイベントを処理するイベント ハンドラーからメニューに置き換えたメニュー コマンドのメソッドです。  
  
5.  交換した既存のメニュー コマンドのイベント ハンドラーを復元する場合は、格納されている追加で、既存メニュー コマンドの置換\] メニューのコマンドを削除した後に作成します。 この動作を追加することも、 `Dispose` 、型の方法です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.CommandID" /> の指定した <see cref="T:System.ComponentModel.Design.MenuCommand" /> がメニューに既に存在します。</exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">追加する <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
        <summary>指定したデザイナー動詞をグローバル デザイナー動詞のセットに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナー動詞を提供するコンポーネントのデザイナーを使用する必要があります、 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> このメソッドを呼び出すのではなく、そのデザイナーのプロパティです。 このメソッドは、現在選択されているコンポーネントに関係なく、デザイン モードで右クリックのショートカット メニューからアクセス可能なグローバル デザイナー動詞を追加します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">検索対象の <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
        <summary>指定されたコマンド ID を検索し、それに関連付けられているメニュー コマンドを返します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.Design.MenuCommand" /> コマンド ID に関連付けられているか、 <see langword="null" /> コマンドが見つからない場合。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> コマンドを検索し、実行します。</param>
        <summary>指定されたコマンド ID に一致するメニューまたはデザイナー動詞コマンドを呼び出す</summary>
        <returns>
          <see langword="true" /> コマンドが見つかり、正常に呼び出される場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、メニュー コマンドやとデザイナー動詞を検索、 <xref:System.ComponentModel.Design.CommandID> 指定に一致する <xref:System.ComponentModel.Design.CommandID>です。 このメソッドは、まずグローバル環境コマンド サービスを通じて、必要に応じて、検索を続行する前にグローバルとアクティブなデザイナーが提供の動詞で構成されるデザイナー動詞のコレクション内で検索します。 一致するメニュー コマンドやデザイナー動詞が見つかった場合は、コマンドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command">削除する <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
        <summary>指定した標準メニューのメニューから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定された削除 <xref:System.ComponentModel.Design.MenuCommand> が存在する場合。 このメソッドが例外を発生させるまたは値が返さしていない、指定した <xref:System.ComponentModel.Design.MenuCommand> が見つかりません。 使用して、 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> メソッドを呼び出せば確認するかどうか、 <xref:System.ComponentModel.Design.MenuCommand> 、指定した一致 <xref:System.ComponentModel.Design.CommandID> メニュー上にあります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb">削除する <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
        <summary>グローバル デザイナー動詞のコレクションから指定したデザイナー動詞を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、グローバル デザイナー動詞のコレクション内にある場合に、指定したグローバル デザイナー動詞を削除します。 デザイナー動詞を使用してグローバル デザイナー動詞のコレクションに追加すること、 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID">
          <see cref="T:System.ComponentModel.Design.CommandID" /> のショートカット メニューを表示します。</param>
        <param name="x">画面座標で、メニューを表示する位置の x 座標。</param>
        <param name="y">画面座標で、メニューを表示する位置の y 座標。</param>
        <summary>指定した場所に指定されたショートカット メニューを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> メソッドが特定の時点でのメニュー コマンドを含む次の Visual Studio のショートカット メニューを表示します。  
  
|メニュー|CommandID|  
|----------|---------------|  
|コンテナーに対して表示されるショートカット メニュー|<xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|  
|コンポーネント トレイに表示されるショートカット メニュー|<xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|  
|ショートカット メニューを選択するための表示|<xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|  
|トレイを選択するために表示されるショートカット メニュー|<xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|  
  
 このメソッドは、その他の登録済みのショートカット メニューを表示もできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在利用可能なデザイナー動詞のコレクションを取得します。</summary>
        <value>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 現在利用可能なデザイナー動詞を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてグローバル デザイナー動詞、によって追加されるのでは現在利用可能なデザイナー動詞のセット、 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> メソッドをこのインターフェイス、および個々 のデザイナー動詞で提供される、 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 個々 の設計者のプロパティです。 グローバル動詞の名前は、デザイナー動詞の名前と競合する場合は、デザイナーが提供デザイナー動詞が優先されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <altmember cref="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </Docs>
    </Member>
  </Members>
</Type>