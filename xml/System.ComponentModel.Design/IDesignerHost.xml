<Type Name="IDesignerHost" FullName="System.ComponentModel.Design.IDesignerHost">
  <TypeSignature Language="C#" Value="public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerHost implements class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerHost" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IServiceContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>デザイナーのトランザクションおよびコンポーネントを管理するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.IDesignerHost> デザイナーのトランザクションとコンポーネントの管理をサポートする .NET Framework のフォーム デザイナーのアーキテクチャで動作するインターフェイスです。  
  
 .NET Framework は、このインターフェイスの実装を提供していません。 インターフェイスは、デザイナーがサポートされている開発ツールによって実装されます。  
  
   
  
## 例  
 次のコード例を取得する方法を示しています、 <xref:System.ComponentModel.Design.IDesignerHost> デザイナーまたは配置のコンポーネントからのサービスのインターフェイスです。  
  
 [!code-cpp[DesignerHostAcquisition\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerHostAcquisition/CPP/source.cpp#1)]
 [!code-csharp[DesignerHostAcquisition\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerHostAcquisition/CS/source.cs#1)]
 [!code-vb[DesignerHostAcquisition\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerHostAcquisition/VB/source.vb#1)]  
  
 次のコード例では、使用方法を示します、 <xref:System.ComponentModel.Design.IDesignerHost> プロジェクト コンポーネントの一覧へのインターフェイスです。  
  
 [!code-cpp[IDesignerHostExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerHostExample/CPP/idesignerhostexample.cpp#1)]
 [!code-csharp[IDesignerHostExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerHostExample/CS/idesignerhostexample.cs#1)]
 [!code-vb[IDesignerHostExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerHostExample/VB/idesignerhostexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>To obtain an implementation of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> from a development environment, call <see cref="M:System.ComponentModel.Component.GetService(System.Type)" /> while your component is active in design mode, passing the type of <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to request an <see cref="T:System.ComponentModel.Design.IDesignerHost" /> service interface.  
  
 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to designer state:  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Loading" /> property indicates whether a designer or document is being loaded.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Activated" /> event occurs when a designer is activated before display.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" /> event occurs when a designer is deactivated.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" /> event occurs after a document is loaded.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method activates the designer.  
  
 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing components:  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.Container" /> property indicates the container for the designer host.  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> property indicates the base class for the root component.  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" /> property indicates the name of the class of the root component.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" /> method creates the specified type of component.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" /> method destroys the specified component.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" /> method gets the designer associated with a specified component.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" /> method gets an instance of the type with the specified name.  
  
 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> provides the following members related to managing transactions:  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.InTransaction" /> property indicates whether the designer is in a transaction.  
  
-   The <see cref="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" /> property indicates the current transaction description.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> event occurs when a transaction has been completed.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> event occurs when a transaction is about to be completed.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> event occurs when a transaction has begun.  
  
-   The <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> event occurs when a transaction is about to begin.  
  
-   The <see cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" /> method creates and returns a new transaction.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このホストをホストしているデザイナーがアクティブにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイナーは、独自のユーザー インターフェイスを表示する前にアクティブ化する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このデザイナーがアクティブになったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示されるまでは、デザイナーがアクティブ化されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このデザイナーのホストのコンテナーを取得します。</summary>
        <value>
          <see cref="T:System.ComponentModel.IContainer" /> このホストのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 <xref:System.ComponentModel.IContainer> デザイン モードの現在のドキュメントのコンポーネントが含まれています。 ボックスの一覧、を通じて現在のデザイン モードのドキュメントのコンポーネントのいずれかにアクセスしたりすることができます、 <xref:System.ComponentModel.IContainer.Components%2A> このメンバー <xref:System.ComponentModel.IContainer>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentClass">作成するコンポーネントの型。</param>
        <summary>指定した型のコンポーネントを作成し、設計文書に追加します。</summary>
        <returns>新しく作成されたコンポーネントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装するオブジェクトに型を解決できないかどうかは <xref:System.ComponentModel.IComponent>, 、例外がスローされます。  
  
 このメソッドは、コンポーネントの名前を指定していません。 このメソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentClass, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentClass" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="componentClass">作成するコンポーネントの型。</param>
        <param name="name">コンポーネントの名前。</param>
        <summary>指定された型および名前のコンポーネントを作成し、設計文書に追加します。</summary>
        <returns>新しく作成されたコンポーネントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装するオブジェクトに型を解決できないかどうかは <xref:System.ComponentModel.IComponent>, 、例外がスローされます。  
  
 このメソッドは、コンポーネントを作成し、デザイナーのコンテナーに追加します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> イベント シーケンスは、パフォーマンスが向上し、元に戻すを有効にしてやり直しのサポート機能をカプセル化できます。</summary>
        <returns>
          <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> の新しいインスタンス。 トランザクションの手順を完了したときに呼び出す必要があります <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> このオブジェクトにします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、作成、 <xref:System.ComponentModel.Design.DesignerTransaction> 、一連の操作をカプセル化に使用できます。 デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減する、および多くの操作を元に戻すことができます。  
  
 複数のコンポーネントに関連する時間のかかる操作は、多くのイベントを発生させることができます。 これらのイベントは、ちらつきなどの副作用が発生することができます。 またはパフォーマンスが低下します。 複数のコンポーネントで同時に動作しているか、1 つのコンポーネントの複数のプロパティを設定、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上することができます。 いくつかの操作を処理、 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> と <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。 トランザクションの使用に関する詳細については、ドキュメントを参照して <xref:System.ComponentModel.Design.DesignerTransaction>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransaction">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerTransaction CreateTransaction(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">タイトルまたは新しく作成されたトランザクションの説明。</param>
        <summary>作成、 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> パフォーマンスを向上させるを元に戻すを有効にし、指定されたトランザクションの説明を使用して、サポートの機能を再実行し、イベント シーケンスをカプセル化したことができます。</summary>
        <returns>新しい <see cref="T:System.ComponentModel.Design.DesignerTransaction" />。 トランザクションでの手順を完了するときに呼び出す必要があります <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> このオブジェクトにします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、作成、 <xref:System.ComponentModel.Design.DesignerTransaction> 、一連の操作をカプセル化に使用できます。 デザイナーのトランザクションでは、パフォーマンスを向上させる、操作の処理中に複数の更新プログラムによるちらつきを軽減する、および多くの操作を元に戻すことができます。  
  
 複数のコンポーネントに関連する時間のかかる操作は、多くのイベントを発生させることができます。 これらのイベントは、ちらつきなどの副作用が発生することができます。 またはパフォーマンスが低下します。 複数のコンポーネントで同時に動作しているか、1 つのコンポーネントの複数のプロパティを設定、トランザクション内でこれらの変更を実行することによってパフォーマンスを向上することができます。 いくつかの操作を処理、 <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> と <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> イベントと、トランザクションが実行されていない場合にのみ、作業を実行します。 トランザクションの使用に関する詳細については、ドキュメントを参照して <xref:System.ComponentModel.Design.DesignerTransaction>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このデザイナーが非アクティブになると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 不要になったに表示される直前に、デザイナーは無効になります。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DestroyComponent">
      <MemberSignature Language="C#" Value="public void DestroyComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">破棄するコンポーネント。</param>
        <summary>指定したコンポーネントを破棄し、デザイナーのコンテナーから削除します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="GetDesigner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner GetDesigner(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> のデザイナーを取得します。</param>
        <summary>指定したコンポーネントを含むデザイナーのインスタンスを取得します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.Design.IDesigner" />, 、または <see langword="null" /> 指定されたコンポーネントのデザイナーがない場合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">読み込まれる型の名前。</param>
        <summary>指定すると、完全修飾型名のインスタンスを取得します。</summary>
        <returns>指定された型名の型のオブジェクトまたは <see langword="null" /> 型が見つからない場合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InTransaction">
      <MemberSignature Language="C#" Value="public bool InTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーのホストが現在のトランザクションであるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> トランザクションが実行中の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このデザイナーでは、ドキュメントの読み込みが完了すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、デザイナーでは、ドキュメントの読み込みが完了した後に発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーのホストが現在のドキュメントを読み込んでいるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> デザイナーのホストが現在のドキュメントを読み込んでいる場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RootComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RootComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のデザインのルート コンポーネントとして使用される基本クラスのインスタンスを取得します。</summary>
        <value>ルート コンポーネント クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この基本クラスは、通常、 <xref:System.Windows.Forms.Form> または <xref:System.Windows.Forms.UserControl> インスタンスは、ユーザーの派生クラスを拡張するクラスを定義します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootComponentClassName">
      <MemberSignature Language="C#" Value="public string RootComponentClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootComponentClassName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン対象のクラスの完全修飾名を取得します。</summary>
        <value>コンポーネントの基本クラスの完全修飾名。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionClosed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント ハンドラーを追加、 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、トランザクションが閉じられた後に発生します。  
  
 トランザクションでは、複数の値が変わることがあることができます。 トランザクション メソッドを使用すると、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題を実行できます。 これらのメソッドは、トランザクションが終了するまで処理を延期します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionClosing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerTransactionCloseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント ハンドラーを追加、 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、トランザクションが完了する前に発生します。  
  
 トランザクションでは、複数の値が変わることがあることができます。 トランザクション メソッドを使用すると、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題を実行できます。 これらのメソッドは、トランザクションが終了するまで処理を延期します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionDescription">
      <MemberSignature Language="C#" Value="public string TransactionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionDescription" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のトランザクションの説明を取得します。</summary>
        <value>現在のトランザクションの説明です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 説明で指定された最後の説明は、 <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpened">
      <MemberSignature Language="C#" Value="public event EventHandler TransactionOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpened" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント ハンドラーを追加、 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、トランザクションが開始したときに発生します。  
  
 トランザクションでは、複数の値が変わることがあることができます。 トランザクション メソッドを使用すると、パフォーマンスを回避し、ちらつきの反復処理を回避することで問題を実行できます。 これらのメソッドは、トランザクションが終了するまで処理を延期します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOpening">
      <MemberSignature Language="C#" Value="public event EventHandler TransactionOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TransactionOpening" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント ハンドラーを追加、 <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、トランザクションが開始するときに発生します。  
  
 このメソッドは、他のハンドラーには、トランザクションが開始したことが通知される前に、操作を実行するデザイナー ホストのクライアントを使用します。 のみとき、最初の呼び出し、指定されたハンドラーが呼び出されます <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> されます。 後続の呼び出しでは、すべてのトランザクション オブジェクトが破棄されるまでは、このイベントは生成されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <altmember cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTransaction">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>作成、 <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> イベント シーケンスは、パフォーマンスが向上し、元に戻すを有効にしてやり直しのサポート機能をカプセル化できます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CreateComponent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した型のコンポーネントを作成し、設計文書に追加します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>