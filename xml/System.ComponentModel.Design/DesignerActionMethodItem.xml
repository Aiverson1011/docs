<Type Name="DesignerActionMethodItem" FullName="System.ComponentModel.Design.DesignerActionMethodItem">
  <TypeSignature Language="C#" Value="public class DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionMethodItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionMethodItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>派生したクラスのメソッドに関連付けられているスマート タグ パネルのアイテムを表す <see cref="T:System.ComponentModel.Design.DesignerActionList" />します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem> クラスは、スマート タグ パネル内の各項目を表します。 この種類の項目がから派生したクラスでプログラマが指定したメソッドを呼び出すと、ハイパーリンクなどのアクティブなユーザー インターフェイス要素として表示される <xref:System.ComponentModel.Design.DesignerActionList>します。 値を使用して、項目と、メソッド間の関連付けを維持、 <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> プロパティです。 この項目が呼び出すメソッドは必要がありますパラメーターを受け取るも、値を返します。  
  
 呼び出しによって、パネルを形成する関連付けられている個々 のパネルの項目、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> のメソッド、 <xref:System.ComponentModel.Design.DesignerActionList> クラスです。  
  
   
  
## 例  
 次のコード例は、のコレクションを作成する方法を示します <xref:System.ComponentModel.Design.DesignerActionItem> オブジェクトです。  
  
 スマート タグを実装する完全な例を参照してください。 [How to: Attach Smart Tags to a Windows Forms Component](http://msdn.microsoft.com/ja-jp/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)します。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスには、指定されたメソッドと、表示名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> と <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティ `null`, 、および <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> プロパティを `false`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="includeAsDesignerVerb">デザイナー動詞としても関連付けられているメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスには、指定されたメソッドと、名前、およびその他のユーザー インターフェイスのコンテキストでアイテムを反映するかどうかを示すフラグを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `includeAsDesignerVerb` にパラメーターが設定されている `true`, は、この項目も考慮して、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], 、コマンドにも追加されます、 **属性** プロパティ\] ウィンドウのウィンドウです。 デザイナー動詞の一覧は、designer によってアクセスできる <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> コレクション プロパティです。  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> と <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティ `null`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスに指定されたメソッド、表示、およびカテゴリの名前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティを `null` と <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> プロパティを `false`します。  
  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <param name="includeAsDesignerVerb">関連付けられたコンポーネントのデザイナー動詞としても関連付けられているメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスは、指定されたメソッド、表示、およびカテゴリの名前と、項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `includeAsDesignerVerb` にパラメーターが設定されている `true`, 、アイテムもと見なされます、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 デザイナー動詞の一覧は、designer によってアクセスできる <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> コレクション プロパティです。  
  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティを `null`します。  
  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <param name="description">ツールヒントやステータス バーで使用される、この項目の補足のテキストです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスは、指定されたメソッドとカテゴリの名前とディスプレイと説明のテキストを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> プロパティを `false`します。  
  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">
          <see cref="T:System.ComponentModel.Design.DesignerActionList" /> には、この項目が関連付けられているメソッドを格納しています。</param>
        <param name="memberName">派生したクラスのメソッドの名前 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をパネルのアイテムを呼び出します。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <param name="description">ツールヒントやステータス バーで使用される、この項目の補足のテキストです。</param>
        <param name="includeAsDesignerVerb">関連付けられたコンポーネントのデザイナー動詞としても関連付けられているメソッドを処理するかどうかを指定するフラグ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスは、指定されたメソッドとカテゴリの名前、テキストの表示と説明テキスト、およびアイテムが他のユーザー インターフェイスのコンテキストで表示するかどうかを示すフラグを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `includeAsDesignerVerb` にパラメーターが設定されている `true`, は、この項目も考慮して、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 デザイナー動詞の一覧は、designer によってアクセスできる <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> コレクション プロパティです。  
  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
   
  
## 例  
 次のコード例は、のコレクションを作成する方法を示します <xref:System.ComponentModel.Design.DesignerActionItem> オブジェクトです。  
  
 スマート タグを実装する完全な例を参照してください。 [How to: Attach Smart Tags to a Windows Forms Component](http://msdn.microsoft.com/ja-jp/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)します。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="IncludeAsDesignerVerb">
      <MemberSignature Language="C#" Value="public virtual bool IncludeAsDesignerVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAsDesignerVerb" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 他のユーザー インターフェイスのコンテキストで表示する必要があります。</summary>
        <value>
          <see langword="true" /> 項目のショートカット メニューで使用する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> にプロパティが設定されている `true`, 、アイテムもと見なされます、 <xref:System.ComponentModel.Design.DesignerVerb>。 したがって、コンポーネントのデザイン時のショートカット メニューに追加されます。 デザイナー動詞の一覧は、designer によってアクセスできる <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> コレクション プロパティです。  
  
 値、 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> このクラスのコンス トラクターでプロパティを設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられているメソッドをプログラムで実行、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> プロパティが初期化 `true`, 、関連付けられたメソッドを対応するデザイナー動詞イベントを通じて呼び出すことも可能です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">という名前のメソッド <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> が見つかりません。</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public virtual string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メソッドの名前を取得この <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> に関連付けられています。</summary>
        <value>A <see cref="T:System.String" /> 関連付けられているメソッドの名前を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> プロパティから派生したクラスでどのプロパティを指定する、 <xref:System.ComponentModel.Design.DesignerActionList> クラス、その項目をバインドする必要があります。 プログラマは、ユーザー インターフェイス \(UI\) を介してパネル項目と対話する、この関連付けられているプロパティが設定されます。  
  
 関連付けられたメソッドでは、パラメーターを受け取るもや、値を返す避けてください。  
  
 このプロパティは、コンストラクターで設定されます。 小文字が区別されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を提供するコンポーネント、 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> オブジェクトを現在のパネルです。</summary>
        <value>関連するデザイナー項目を提供する必要がありますが関係しているコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> プロパティを使用すると、別のコンポーネントでのスマート タグ パネルの項目を現在のリストに変更がないです。 たとえば、ユーザー コントロールは、その内在標準コントロールのいずれかから項目を集約する可能性があります。  
  
 このプロパティは機能と組み合わせて、 <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=fullName> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>