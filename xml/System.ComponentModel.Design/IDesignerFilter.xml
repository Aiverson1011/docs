<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>デザイナーへのアクセスし、の辞書をフィルター処理できるようにするインターフェイスを提供、 <see cref="T:System.ComponentModel.TypeDescriptor" /> コンポーネント デザイナーによってデザイン時環境に公開されるプロパティ、属性、およびイベント記述子を格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.IDesignerFilter> デザイナーが、関連付けられているコンポーネントがを通じて公開されるプロパティ、属性、およびイベントの記述子のセットをフィルター処理できるように、 <xref:System.ComponentModel.TypeDescriptor>です。 このインターフェイスのメソッドを名前で始まる `Pre` で名前が始まるメソッドの直前に呼び出されます `Post`します。  
  
 属性、イベント、またはプロパティ記述子を追加する場合は、使用、 <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, 、<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, 、または <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> メソッドです。  
  
 変更または削除する属性、イベント、またはプロパティの記述子を使用する場合、 <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, 、<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, 、または <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> メソッドです。  
  
   
  
## 例  
 次の例では、オーバーライド <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> デザイナーのコントロールをデザイン時に選択すると、\[プロパティ\] ウィンドウにデザイナーのプロパティを追加します。 例を参照してください、 <xref:System.Windows.Forms.Design.ControlDesigner> させるためにデザイナーを使用するクラス、 <xref:System.ComponentModel.Design.IDesignerFilter> インターフェイスです。  
  
 [!code-cpp[ControlDesignerExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> コンポーネントのクラスのオブジェクト。 属性のディクショナリ内のキー、 <see cref="P:System.Attribute.TypeId" /> 属性の値。</param>
        <summary>派生クラスでオーバーライドされた場合は、デザイナーを変更またはを通じて公開する属性のセットから項目を削除するのには、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じてこのインターフェイスを実装しているデザイナーの関連付けられているコンポーネントが公開される属性のディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトが次の種類の <xref:System.Attribute>です。 直後後に、このメソッドが呼び出される <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>です。  
  
 属性の型 ID には、任意のオブジェクトを指定できます。 既定では、 <xref:System.Attribute> 返しますその <xref:System.Type> の値としてその <xref:System.Attribute.TypeId%2A> プロパティです。 確認すること、 <xref:System.Attribute.TypeId%2A> 既知と同等のディクショナリ内の属性の <xref:System.Attribute.TypeId%2A> を指定するか、またはを使用して属性の <xref:System.Reflection> 属性オブジェクト自体を識別するためにします。  
  
 同じ属性 <xref:System.Attribute.TypeId%2A> 古い属性が、新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるとします。 多くの属性は、種類の以前の属性が同じ型の新しい属性に置き換わります。 ただし、いくつかの種類の属性を返す、 <xref:System.Attribute.TypeId%2A> 属性を選択的に区別します。 例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、 <xref:System.ComponentModel.Design.IRootDesigner> と <xref:System.ComponentModel.Design.IDesigner>, 、 <xref:System.ComponentModel.DesignerAttribute> クラスを返します。、 <xref:System.Attribute.TypeId%2A> 属性と基本デザイナー型の両方を一意に識別します。<xref:System.ComponentModel.DesignerAttribute> コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、 <xref:System.ComponentModel.DesignerAttribute> を返します、 <xref:System.Attribute.TypeId%2A> これを反映します。 したがってを追加すると、新しい <xref:System.ComponentModel.DesignerAttribute> を既存の基本デザイナー型と同じ型の基本デザイナー型 <xref:System.ComponentModel.DesignerAttribute>, 、古い属性は、新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> コンポーネントのクラスのイベントを表すオブジェクト。 イベントのディクショナリのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合は、デザイナーを変更またはを通じて公開されるイベントのセットから項目を削除するのには、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じて公開されているイベントのディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.EventDescriptor>です。 直後後に、このメソッドが呼び出される <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> コンポーネントのクラスのプロパティを表すオブジェクト。 プロパティのディクショナリのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合は、デザイナーを変更またはを通じて公開されるプロパティのセットから項目を削除するのには、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを変更またはを通じて公開されているプロパティのディクショナリ内の項目を削除する方法を提供する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 直後後に、このメソッドが呼び出される <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Attribute" /> コンポーネントのクラスのオブジェクト。 属性のディクショナリ内のキー、 <see cref="P:System.Attribute.TypeId" /> 属性の値。</param>
        <summary>派生クラスでオーバーライドされた場合は、を通じて公開される属性のセットに項目を追加するデザイナー、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、このインターフェイスを実装しているデザイナーの関連付けられているコンポーネントがを通じて公開される属性のディクショナリに項目を追加する、 <xref:System.ComponentModel.TypeDescriptor>です。  
  
 属性のディクショナリのキーは、属性の型の Id です。 オブジェクトが次の種類の <xref:System.Attribute>です。 このメソッドは直前に呼び出されます <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>します。  
  
 属性の型 ID には、任意のオブジェクトを指定できます。 既定では、 <xref:System.Attribute> 返しますその <xref:System.Type> の値としてその <xref:System.Attribute.TypeId%2A> プロパティです。 確認すること、 <xref:System.Attribute.TypeId%2A> 既知と同等のディクショナリ内の属性の <xref:System.Attribute.TypeId%2A> を指定するか、またはを使用して属性の <xref:System.Reflection> 属性オブジェクト自体を識別するためにします。  
  
 同じ属性 <xref:System.Attribute.TypeId%2A> 古い属性が、新しい属性に置き換えられますコンポーネントに、既存または継承された属性が追加されるとします。 多くの属性は、種類の以前の属性が同じ型の新しい属性に置き換わります。 ただし、いくつかの種類の属性を返す、 <xref:System.Attribute.TypeId%2A> 属性を選択的に区別します。 例については、型の場合など、さまざまな種類の同時にアクティブなデザイナーを提供するために、 <xref:System.ComponentModel.Design.IRootDesigner> と <xref:System.ComponentModel.Design.IDesigner>, 、 <xref:System.ComponentModel.DesignerAttribute> クラスを返します。、 <xref:System.Attribute.TypeId%2A> 属性と基本デザイナー型の両方を一意に識別します。<xref:System.ComponentModel.DesignerAttribute> コンス トラクターを使用するだけでなく、特定の型では、デザイナーのデザイナー ベースの種類を指定し、 <xref:System.ComponentModel.DesignerAttribute> を返します、 <xref:System.Attribute.TypeId%2A> これを反映します。 したがってを追加すると、新しい <xref:System.ComponentModel.DesignerAttribute> を既存の基本デザイナー型と同じ型の基本デザイナー型 <xref:System.ComponentModel.DesignerAttribute>, 、古い属性は、新しい属性に置き換えられます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> コンポーネントのクラスのイベントを表すオブジェクト。 イベントのディクショナリのキーは、イベント名です。</param>
        <summary>派生クラスでオーバーライドされた場合は、を通じて公開されるイベントのセットに項目を追加するデザイナー、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デザイナーがを通じて公開されるイベントのディクショナリに項目を追加する方法を提供する <xref:System.ComponentModel.TypeDescriptor>です。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.EventDescriptor>です。 このメソッドは直前に呼び出されます <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> コンポーネントのクラスのプロパティを表すオブジェクト。 プロパティのディクショナリのキーは、プロパティ名です。</param>
        <summary>派生クラスでオーバーライドされた場合は、を通じて公開されるプロパティのセットに項目を追加するデザイナー、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デザイナーがを通じて公開されるプロパティのディクショナリに項目を追加する方法を提供する <xref:System.ComponentModel.TypeDescriptor>です。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。 このメソッドは直前に呼び出されます <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>