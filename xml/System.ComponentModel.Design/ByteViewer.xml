<Type Name="ByteViewer" FullName="System.ComponentModel.Design.ByteViewer">
  <TypeSignature Language="C#" Value="public class ByteViewer : System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ByteViewer extends System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ByteViewer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TableLayoutPanel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>16 進数、ANSI、Unicode の形式の表示のバイト配列します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ByteViewer> インターフェイスは、表示する 16 進数、ANSI、Unicode 形式のデータとします。  
  
 <xref:System.ComponentModel.Design.DisplayMode> 列挙体を使用する表示モードを示すために使用される識別子を指定します。<xref:System.ComponentModel.Design.DisplayMode.Auto> 表示モードは、バイト配列の内容に基づく既定の表示モードを選択します。<xref:System.ComponentModel.Design.ByteViewer> 単純なアルゴリズムを使用して、どのような種類のデータがバッファーに格納されているかを調べます。 16 進数値 <xref:System.ComponentModel.Design.DisplayMode.Hexdump> ビューが 16 進数の値を表示し、読み取り専用で、対応するバイト表現 \(文字数\) の編集ボックス。 既定の列数は 16 です。<xref:System.ComponentModel.Design.DisplayMode.Ansi> と <xref:System.ComponentModel.Design.DisplayMode.Unicode> ビューは読み取り専用のエディット ボックスに、バイト配列を表示します。 これらのビューで `NUL` 文字の Unicode 文字のブロックが置き換えられます。  
  
   
  
## 例  
 次のコード例のホスト、 <xref:System.ComponentModel.Design.ByteViewer> の制御、 <xref:System.Windows.Forms.Form> 構成および制御するインターフェイスを提供し、 <xref:System.ComponentModel.Design.ByteViewer>です。  
  
 [!code-cpp[ByteViewerExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ByteViewerExample/CPP/form1.cpp#1)]
 [!code-csharp[ByteViewerExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ByteViewerExample/CS/form1.cs#1)]
 [!code-vb[ByteViewerExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ByteViewerExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ByteViewer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.ByteViewer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.GetBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バッファー内のバイト数を取得します。</summary>
        <returns>符号なしバイト配列の参照。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DisplayMode GetDisplayMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ComponentModel.Design.DisplayMode GetDisplayMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DisplayMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの表示モードを取得します。</summary>
        <returns>このコントロールを使用する表示モード。 返される値が定義されている <see cref="T:System.ComponentModel.Design.DisplayMode" />します。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveToFile">
      <MemberSignature Language="C#" Value="public virtual void SaveToFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">保存するファイルのパス。</param>
        <summary>データ バッファーから生データをファイルに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> は空の文字列 \(""\) であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
        <exception cref="T:System.IO.IOException">ファイルへの書き込みができませんでした。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満でなければなりません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定したオペレーティング システムによっては、要求されたアクセスは許可されていない <paramref name="path" />, 、アクセスがあるときなど <see langword="Write" /> または <see langword="ReadWrite" /> し、ファイルまたはディレクトリが読み取り専用アクセスを設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollChanged">
      <MemberSignature Language="C#" Value="protected virtual void ScrollChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScrollChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>処理、 <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> でイベントを <see cref="T:System.ComponentModel.Design.ByteViewer" /> コントロールの <see cref="T:System.Windows.Forms.ScrollBar" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBytes">
      <MemberSignature Language="C#" Value="public virtual void SetBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">表示するバイト配列。</param>
        <summary>ビューアーに表示するバイト配列を設定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定したバイト配列が <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayMode">
      <MemberSignature Language="C#" Value="public virtual void SetDisplayMode (System.ComponentModel.Design.DisplayMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayMode(valuetype System.ComponentModel.Design.DisplayMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.ComponentModel.Design.DisplayMode" />
      </Parameters>
      <Docs>
        <param name="mode">表示モードを設定します。</param>
        <summary>現在の表示モードを設定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した表示モードでは、 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 列挙します。</exception>
        <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="SetFile">
      <MemberSignature Language="C#" Value="public virtual void SetFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">読み込むファイルのパスです。</param>
        <summary>ビューアーに表示するファイルを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビューアーは、指定したファイルから表示するデータを読み込みます。 このメソッドは、ファイルの読み込みが失敗した場合に例外をスローします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> は空の文字列 \(""\) であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
        <exception cref="T:System.IO.IOException">ファイルの読み込みに失敗しました。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定されたパスかファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満、ファイル名は 260 文字未満でなければなりません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">指定したオペレーティング システムによっては、要求されたアクセスは許可されていない <paramref name="path" />, 、アクセスがあるときなど <see langword="Write" /> または <see langword="ReadWrite" /> し、ファイルまたはディレクトリが読み取り専用アクセスを設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStartLine">
      <MemberSignature Language="C#" Value="public virtual void SetStartLine (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStartLine(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">現在の行から表示します。</param>
        <summary>現在の行を設定、 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DisplayMode.Hexdump> 表示モードは、指定した行から始まるバッファーを表示します。 指定した行が範囲外にある場合は、開始行は 0 に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>