<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>デザイン モードでコンポーネントの一連のメンバー記述子を変更するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> インターフェイスをデザイン時にプロパティ、イベント、およびコンポーネントのクラス レベルの属性を変更できるようにするインターフェイスを提供します。 一連のコンポーネントを使用するを介して記述子を使用してこのような変更が行われる、 <xref:System.ComponentModel.TypeDescriptor>です。 型記述子のコンポーネントのサイトがクエリを実行、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> サービスし、型記述子がこのサービスに収集したすべてのメタデータを渡すことがある場合。 サービスは、追加、削除、およびコンポーネントの既存の特性を変更することによって、メタデータを変更できます。  
  
 呼び出すことによってコンポーネントのプロパティを変更するなど、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> メソッドです。 フィルター サービスがプロパティ名と型の場合は、そのプロパティ記述子を格納しているディクショナリを取得する <xref:System.ComponentModel.PropertyDescriptor>です。 変更は、次のロジックを使用して実装されます。  
  
|変更|実装|  
|--------|--------|  
|削除|ディクショナリ内の対応するエントリを削除します。|  
|加算|ディクショナリには、適切なエントリを追加します。|  
|変更を加える|既存のプロパティ記述子のメソッドを呼び出し、関連付けられているプロパティ記述子のエントリを置換または全体のプロパティのキー\/値ペアのディクショナリを置換します。|  
  
 戻り値 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> この一連のプロパティが修正されているかどうかを判断します。 このメソッドが戻る場合 `true`, 、 <xref:System.ComponentModel.TypeDescriptor> のこのコンポーネントは、結果をキャッシュできます。 コンポーネントのいずれかがガベージ コレクトされるまで、このキャッシュが保持されますか、 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 型記述子のメソッドが呼び出されます。  
  
   
  
## 例  
 次のコード例を使用したデザイナーを示しています、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 、新規または既存の属性のコレクションをフィルター処理する <xref:System.Windows.Forms.Button> の読み込みやボタンのデザイナーを再読み込みする前に新しいデザイナーのデザイナーの属性を追加します。  
  
 例を使用するには、Windows フォーム プロジェクトにコードを追加し、クラス ライブラリのコンポーネントをツールボックスに読み込みます。  
  
 Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 フォームをいくつかのボタンを追加します。 追加、 `ButtonDesignerFilterComponent` をフォームに、コンポーネント トレイに表示されます。`ButtonDesignerFilterComponent` を追加、 `ButtonDesignerFilterService`, を実装する <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, 、サービス プロバイダーはデザイン モードです。 既存または新規 <xref:System.Windows.Forms.Button> 、フォーム上のオブジェクトのサイクルの後の色が開始、 `ButtonDesignerFilterService` で各既存および新規ボタンのデザイナーが置き換えられます、 `ColorCycleButtonDesigner`です。 ボタンはサイクルと、マウス ポインターを移動し、代わりの繰り返しを続行またはリセットした前景色および背景色に色が `MouseLeave` イベントです。 新しい <xref:System.Windows.Forms.Button> オブジェクトに与えられる、 `ColorCycleButtonDesigner` を通じて、 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> のメソッド、 `ButtonDesignerFilterService` はまでは読み込まれて、 `ButtonDesignerFilterComponent` が破棄され、元の置換 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>します。`ColorCycleButton` クラスがこの例では、 <xref:System.Windows.Forms.Button> に関連付けられている、 `ColorCycleButtonDesigner`です。  
  
 [!code-cpp[ITypeDescriptorFilterService\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>To filter the member descriptors exposed by a <see cref="T:System.ComponentModel.TypeDescriptor" />, implement this interface on a component and override the <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, or <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> methods of this class to filter attributes, events, or properties, respectively.</para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">属性をフィルター処理する対象のコンポーネント。</param>
        <param name="attributes">変更できる属性のディクショナリ。</param>
        <summary>
          <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開する属性をフィルター処理します。</summary>
        <returns>フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンポーネントの属性のセットを要求する場合は、このメソッドが呼び出されます。 属性は、属性を使用してディクショナリに追加 <xref:System.Attribute.TypeId%2A> キーと値として実際の属性です。 このサービスを実装するときは追加、削除、またはディクショナリ内の既存の属性エントリを変更します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</para>
        </block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">イベントをフィルター処理する対象のコンポーネント。</param>
        <param name="events">変更できるイベントのディクショナリ。</param>
        <summary>
          <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するイベントをフィルター処理します。</summary>
        <returns>フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンポーネントのイベントのセットを要求する場合は、このメソッドが呼び出されます。 イベントは、キーと、対応するとしてイベント名を使用してディクショナリに追加される <xref:System.ComponentModel.EventDescriptor> 値としてオブジェクトです。 このサービスを実装するときは追加、削除、またはディクショナリ内のイベント エントリを変更します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</para>
        </block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">プロパティをフィルター処理する対象のコンポーネント。</param>
        <param name="properties">変更できるプロパティのディクショナリ。</param>
        <summary>
          <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティをフィルター処理します。</summary>
        <returns>フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンポーネントのプロパティのセットを要求する場合は、このメソッドが呼び出されます。 プロパティは、キーと、対応するとしてプロパティ名を使用してディクショナリに追加される <xref:System.ComponentModel.PropertyDescriptor> 値としてオブジェクトです。 このサービスを実装するときは追加、削除、またはディクショナリ内のプロパティ エントリを変更します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Return <see langword="false" /> only when necessary, because repeated queries to the type descriptor filter service can decrease performance.</para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>