<Type Name="DesignerActionPropertyItem" FullName="System.ComponentModel.Design.DesignerActionPropertyItem">
  <TypeSignature Language="C#" Value="public sealed class DesignerActionPropertyItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerActionPropertyItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>派生したクラスのプロパティに関連付けられているパネルのアイテムを表す <see cref="T:System.ComponentModel.Design.DesignerActionList" />します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem> クラスは、スマート タグ パネル内の各項目を表します。 各項目は一般的にから派生したクラスのプロパティを関連付け、 <xref:System.ComponentModel.Design.DesignerActionList> クラス、コンポーネントの作成者によって指定します。 この関連付けは、プロパティの名前に保存されている、 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> プロパティです。  
  
 呼び出しによって、パネルを形成する関連付けられている個々 のパネルの項目、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> のメソッド、 <xref:System.ComponentModel.Design.DesignerActionList> クラスです。  
  
 そのプロパティが関連付けられているプロパティの値を表示する、 `get` アクセサー メソッドは、編集を許可するプロパティには、 `set` アクセサー メソッドです。 パネルが、ユーザーがプロパティ項目の直接編集を有効にする方法は、関連付けられたプロパティのデータ型のサポートの種類の情報によって異なります。 次の表は、該当する方法を示します。  
  
|プロパティの型情報|プロパティ項目をユーザー インターフェイス \(UI\) の編集|  
|---------------|--------------------------------------|  
|関連付けられている型エディターがあります \(<xref:System.Drawing.Design.UITypeEditor>\)|プロパティの値を編集する基になるプロパティに関連付けられている型のエディターが表示されます。|  
|既知の型に関連付けられている型コンバーターが、いる \(<xref:System.ComponentModel.TypeConverter>\)|プロパティの値を編集する既知の型の型のエディターが表示されます。 たとえば、型コンバーターを <xref:System.String> 可能性が高い表示には、 <xref:System.Windows.Forms.TextBox>です。|  
|ブール値|チェック マークなどのバイナリの UI を使用して、項目が表示されます。|  
|上記の \[なし\] です。|データ型の使用と編集できないテキスト文字列として、アイテムを表示する <xref:System.Object.ToString%2A> メソッドです。|  
  
 すべての基本型など、 <xref:System.Boolean?displayProperty=fullName>, 、一般的な [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] などのデータ型 <xref:System.String?displayProperty=fullName>, 、標準の型コンバーターとエディターを指定します。 型コンバーターの詳細については、次を参照してください。 [How to: Implement a Type Converter](http://msdn.microsoft.com/ja-jp/90373a3f-d8c8-492d-841c-945d62393c56) または [Generalized Type Conversion](http://msdn.microsoft.com/ja-jp/49253ae6-7657-4810-82ab-1176a6feeada)です。 型エディターの詳細については、次を参照してください。 [How to: Implement a UI Type Editor](http://msdn.microsoft.com/ja-jp/ed961fb9-ee02-4666-b511-05f3204bb75c)します。  
  
   
  
## 例  
 次のコード例は、のコレクションを作成する方法を示します <xref:System.ComponentModel.Design.DesignerActionItem> オブジェクトです。 スマート タグを実装する完全な例を参照してください。 [How to: Attach Smart Tags to a Windows Forms Component](http://msdn.microsoft.com/ja-jp/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)します。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">このパネルのアイテムに関連付けられているプロパティの名前。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスには、指定したプロパティと、表示名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%29> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> と <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティ `null`します。  
  
 `memberName` パラメーターは、プログラマが指定した派生クラスからのメンバーである関連付けられたプロパティの名前を参照、 <xref:System.ComponentModel.Design.DesignerActionList> クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">このパネルのアイテムに関連付けられているプロパティの名前。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラス、指定したプロパティとカテゴリ名を使用し、テキストを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%2CSystem.String%29> コンス トラクターのセット、 <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> プロパティを `null`します。  
  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
 `memberName` パラメーターから派生したプログラマが指定したクラスのメンバーである関連付けられたプロパティの名前を指す <xref:System.ComponentModel.Design.DesignerActionList>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">このパネルのアイテムに関連付けられているプロパティの名前。</param>
        <param name="displayName">このアイテムのパネルのテキスト。</param>
        <param name="category">大文字小文字の区別、 <see cref="T:System.String" /> パネルのような項目をグループ化するために使用します。</param>
        <param name="description">ツールヒントやステータス バーで使用される、この項目の補足のテキストです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスは、指定のプロパティとカテゴリ名と表示と説明のテキストを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 方法の詳細については `category` をパネルに項目をグループ化を参照してパラメーターを使用、 <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> メソッドです。  
  
 `memberName` パラメーターは、プログラマが指定した派生クラスからのメンバーである関連付けられたプロパティの名前を参照、 <xref:System.ComponentModel.Design.DesignerActionList> クラスです。  
  
   
  
## 例  
 次のコード例は、のコレクションを作成する方法を示します <xref:System.ComponentModel.Design.DesignerActionItem> オブジェクトです。 スマート タグを実装する完全な例を参照してください。 [How to: Attach Smart Tags to a Windows Forms Component](http://msdn.microsoft.com/ja-jp/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233)します。  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この項目に関連付けられているプロパティの名前を取得します。</summary>
        <value>A <see cref="T:System.String" /> 関連付けられているプロパティの名前を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> プロパティがプロパティを指定: から派生したクラスで、 <xref:System.ComponentModel.Design.DesignerActionList> クラス、その項目をバインドする必要があります。 プログラマは、ユーザー インターフェイス \(UI\) を介してパネル項目と対話する、この関連付けられているプロパティが設定されます。  
  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> コンス トラクターで設定されています。 その値は、大文字小文字を区別します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のパネルに項目を提供するコンポーネントを設定します。</summary>
        <value>関連するデザイナーを提供する必要がありますが、関係しているコンポーネント <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> プロパティには、別のコンポーネントのプル モデルのパネルの項目を現在のリストに変更がないことができます。 たとえば、ユーザー コントロールを集約可能性があります、 <xref:System.ComponentModel.Design.DesignerActionItem> その内在コントロールの 1 つ以上のオブジェクト。  
  
 このプロパティは機能と組み合わせて、 <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=fullName> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>