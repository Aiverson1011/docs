<Type Name="NeutralResourcesLanguageAttribute" FullName="System.Resources.NeutralResourcesLanguageAttribute">
  <TypeSignature Language="C#" Value="public sealed class NeutralResourcesLanguageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NeutralResourcesLanguageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Resources.NeutralResourcesLanguageAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アプリケーションの既定のカルチャのリソース マネージャーに通知します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
## デスクトップ アプリ  
 デスクトップ アプリで、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性は、アプリケーションの既定のカルチャのリソース マネージャーとそのリソースの場所を通知します。 既定では、リソースがメイン アプリケーション アセンブリに埋め込まれているし、次のように属性を使用することができます。 このステートメントでは、英語 \(米国\) がアプリケーションの既定のカルチャを指定します。  
  
 [!code-csharp[System.Resources.NeutralResourcesLanguageAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.neutralresourceslanguageattribute/cs/example1.cs#1)]
 [!code-vb[System.Resources.NeutralResourcesLanguageAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.neutralresourceslanguageattribute/vb/example1.vb#1)]  
  
 使用することも、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 位置を示す属性 <xref:System.Resources.ResourceManager> 提供することで、既定のカルチャのリソースを検索できる、 <xref:System.Resources.UltimateResourceFallbackLocation> 属性ステートメント内の列挙値。 これは、リソースがサテライト アセンブリ内にあることを示すために最もよく行います。 たとえば、次のステートメントは、英語 \(米国\) がアプリの既定カルチャまたはニュートラル カルチャであること、そのリソースがサテライト アセンブリ内にあることを指定します。<xref:System.Resources.ResourceManager> En\-us \(英語\) という名前のサブディレクトリでそれらのオブジェクトが表示されます。  
  
 [!code-csharp[System.Resources.NeutralResourcesLanguageAttribute\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.neutralresourceslanguageattribute/cs/example2.cs#2)]
 [!code-vb[System.Resources.NeutralResourcesLanguageAttribute\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.neutralresourceslanguageattribute/vb/example2.vb#2)]  
  
> [!TIP]
>  必ず使用することをお勧めします <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性で、アプリの既定のカルチャを定義します。  
  
 属性には、2 つのロールを実行します。  
  
-   既定のカルチャのリソースがアプリのメイン アセンブリに埋め込まれている場合と <xref:System.Resources.ResourceManager> 既定のカルチャと同じカルチャに属しているリソースを取得するが、 <xref:System.Resources.ResourceManager> サテライト アセンブリを検索する代わりにメイン アセンブリにあるリソースを自動的に使用します。 これは、通常のアセンブリのプローブをバイパスする、読み込み、および、ワーキング セットを減らすことができます、最初のリソースに対する検索のパフォーマンスを向上できます。 参照してください [Packaging and Deploying Resources](http://msdn.microsoft.com/ja-jp/b224d7c0-35f8-4e82-a705-dd76795e8d16) プロセスの <xref:System.Resources.ResourceManager> リソース ファイルを探すために使用します。  
  
-   既定のカルチャのリソースがある場合、メイン アプリケーション アセンブリではなく、サテライト アセンブリに、 <xref:System.Resources.NeutralResourcesLanguageAttribute> カルチャと、ランタイムがリソースを読み込むことができます、ディレクトリを指定します。  
  
## [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリ  
 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリのリソースが読み込まれを使用して取得、 <xref:System.Resources.ResourceManager> 、クラス、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性は、障害が発生したプローブが発生した場合のリソースが使用されるニュートラル カルチャを定義します。 リソースの場所は指定しません。 既定では、 <xref:System.Resources.ResourceManager> の既定のカルチャのリソースを検索するアプリのパッケージ リソース インデックス \(PRI\) ファイルを使用します。 ニュートラル カルチャで定義されている、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性がこの影響をシミュレートするために、UI 言語の一覧の末尾に追加します。  
  
 ロードを使用して、リソースを取得する場合、 [!INCLUDE[wrt](~/includes/wrt-md.md)][Windows.ApplicationModel.Resources.ResourceLoader](http://go.microsoft.com/fwlink/p/?LinkId=238182) クラス、または型で、 [Windows.ApplicationModel.Resources.Core](http://go.microsoft.com/fwlink/p/?LinkId=238194) 名前空間、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性は無視されます。  
  
   
  
## 例  
 次の例の使用方法を説明する簡単な"Hello World"アプリケーションを使用して、 <xref:System.Resources.NeutralResourcesLanguageAttribute> 属性で、既定値またはフォールバック カルチャを定義します。 英語 \(en\)、英語 \(米国\) \(EN\-US\)、およびフランス語 \(フランス\) \(FR\-FR\) に別のリソース ファイルの作成が必要にカルチャ。 ExampleResources.txt イギリスのカルチャの名前が付いたテキスト ファイルの内容を次に示します。  
  
```  
# Resources for the default (en) culture.  
Greeting=Hello  
```  
  
 アプリ内のリソース ファイルを使用するには、使用する必要があります、テキスト \(.txt\) 形式から、ファイルを次のようにバイナリ \(.resources\) 形式に変換します。  
  
```  
resgen ExampleResources.txt  
```  
  
 アプリケーションがコンパイルされると、バイナリ リソース ファイルは、メイン アプリケーション アセンブリに埋め込まれます。  
  
 英語 \(米国\) カルチャのリソースを提供する ExampleResources.en US.txt をという名前のテキスト ファイルの内容を次に示します。  
  
```  
# Resources for the en-US culture.  
Greeting=Hi  
```  
  
 使用してバイナリ リソース ファイルをテキスト ファイルを変換できる、次のように行目では、コマンド。  
  
```  
resgen ExampleResources.en-US.txt ExampleResources.en-US.resources  
```  
  
 バイナリ リソース ファイルを使用してアセンブリにコンパイルして次のコマンドを発行して app ディレクトリの EN\-US サブディレクトリ内に配置し、必要があります。  
  
```  
al /t:lib /embed:ExampleResources.en-US.resources /culture:en-US /out:en-us\Example.resources.dll  
```  
  
 フランス語 \(フランス\) カルチャのリソースを提供する ExampleResources.fr FR.txt をという名前のテキスト ファイルの内容を次に示します。  
  
```  
# Resources for the fr-FR culture.  
Greeting=Bonjour  
```  
  
 テキスト ファイルは、次のように、コマンドラインで ResGen.exe を使用してバイナリ リソース ファイルに変換できます。  
  
```  
resgen ExampleResources.fr-FR.txt ExampleResources.fr-FR.resources  
```  
  
 バイナリ リソース ファイルのアセンブリ リンカーを使用してアセンブリにコンパイルして、次のコマンドを発行することで、FR\-FR、アプリのディレクトリのサブディレクトリ内に配置し、必要があります。  
  
```  
al /t:lib /embed:ExampleResources.fr-FR.resources /culture:fr-FR /out:fr-FR\Example.resources.dll  
```  
  
 次の例では、現在のカルチャ設定を許可し、ユーザーの名前の入力を要求し、ローカライズされた文字列を表示、実行可能コードを提供します。  
  
 [!code-csharp[System.Globalization.NeutralResourcesLanguageAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.neutralresourceslanguageattribute/cs/example.cs#1)]
 [!code-vb[System.Globalization.NeutralResourcesLanguageAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.neutralresourceslanguageattribute/vb/example.vb#1)]  
  
 Visual Basic では、次のコマンドを使用してコンパイルしておくことができます。  
  
```  
vbc Example.vb /resource:ExampleResources.resources  
```  
  
 または、次を使用して c\# ではコマンドします。  
  
```  
csc Example.cs /resource:ExampleResources.resources  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
    <altmember cref="P:System.Resources.ResourceManager.FallbackLocation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NeutralResourcesLanguageAttribute (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">現在のアセンブリのニュートラル リソースが記述されているカルチャの名前。</param>
        <summary>
          <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カルチャ名の詳細な一覧を参照してください。 [National Language Support \(NLS\) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) Go Global Developer Center にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NeutralResourcesLanguageAttribute (string cultureName, System.Resources.UltimateResourceFallbackLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Resources.UltimateResourceFallbackLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String,System.Resources.UltimateResourceFallbackLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="location" Type="System.Resources.UltimateResourceFallbackLocation" />
      </Parameters>
      <Docs>
        <param name="cultureName">現在のアセンブリのニュートラル リソースが記述されているカルチャの名前。</param>
        <param name="location">ニュートラル フォールバック リソースの取得元の場所を示す列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> 究極的なリソースを指定した代替の場所でのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Resources.NeutralResourcesLanguageAttribute> を持つコンス トラクター、 <xref:System.Resources.UltimateResourceFallbackLocation> 列挙型を指定するかどうか、 <xref:System.Resources.ResourceManager> クラスは、メイン アプリケーション アセンブリ \(既定\)、またはによって指定されたサテライト アセンブリからは、ニュートラル フォールバック リソースを取得するのには、 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> と <xref:System.Resources.ResourceManager.FallbackLocation%2A> プロパティです。  
  
 カルチャ名の詳細な一覧を参照してください。 [National Language Support \(NLS\) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) Go Global Developer Center にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> メンバーではない <see cref="T:System.Resources.UltimateResourceFallbackLocation" />します。</exception>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="P:System.Resources.ResourceManager.FallbackLocation" />
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Resources.NeutralResourcesLanguageAttribute.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カルチャ名を取得します。</summary>
        <value>メインのアセンブリの既定のカルチャの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カルチャ名の詳細な一覧を参照してください。 [National Language Support \(NLS\) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) Go Global Developer Center にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Resources.UltimateResourceFallbackLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Resources.UltimateResourceFallbackLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Resources.NeutralResourcesLanguageAttribute.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.UltimateResourceFallbackLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[リソース フォールバック プロセス](http://msdn.microsoft.com/ja-jp/b224d7c0-35f8-4e82-a705-dd76795e8d16)を使用してニュートラル リソースを取得するのに使用する <see cref="T:System.Resources.ResourceManager" /> クラスの場所を取得します。</summary>
        <value>ニュートラル リソースの取得元の場所 \(メイン アセンブリまたはサテライト\) を示す列挙値の 1 つ。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.UltimateResourceFallbackLocation" />
        <altmember cref="P:System.Resources.ResourceManager.FallbackLocation" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Resources.NeutralResourcesLanguageAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>