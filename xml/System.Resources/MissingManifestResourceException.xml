<Type Name="MissingManifestResourceException" FullName="System.Resources.MissingManifestResourceException">
  <TypeSignature Language="C#" Value="public class MissingManifestResourceException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MissingManifestResourceException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Resources.MissingManifestResourceException" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>メインのアセンブリにニュートラル カルチャのリソースが含まれていないと、適切なサテライト アセンブリが見つからない場合にスローされる例外。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
## デスクトップ アプリ  
 デスクトップ アプリで <xref:System.Resources.MissingManifestResourceException> ニュートラル カルチャのリソース セットは、特定のアセンブリから読み込まれませんだったためにリソースを取得する試行が失敗した場合にスローされます。 特定のリソースを取得しようとすると、例外がスローされたことが原因で発生、リソースを検索エラーではなく、リソース セットの読み込みが失敗しました。  
  
> [!NOTE]
>  詳細については、「MissingManifestResourceException 例外を処理」」セクションを参照してください、 <xref:System.Resources.ResourceManager> クラスに関するトピック。  
  
 例外の主な原因を以下に示します。  
  
-   リソース セットは、完全修飾名で識別されません。 たとえば場合、 `baseName` への呼び出しでパラメーター、 <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> メソッドは、名前空間のない設定、リソースのルート名を指定するが、リソース セットは、そのアセンブリへの呼び出しに格納されているときに、名前空間に割り当てられる、 <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> メソッドは、この例外をスローします。  
  
     実行可能ファイルに既定のカルチャのリソースを含む .resources ファイルが埋め込まれているし、アプリをスローしている場合、 <xref:System.Resources.MissingManifestResourceException>, 、リソースの完全修飾名を確認するようにリフレクション ツールを使用することができます。 ILDasm でダブルクリックしてで実行可能ファイルの **マニフェスト** を開くにはラベル、 **マニフェスト** ウィンドウです。 リソースとして表示されます `.mresource` 項目とは、外部のアセンブリ参照とアセンブリ レベルのカスタム属性の後に表示します。 名前が渡されるコマンド ライン パラメーターとしてアセンブリに埋め込まれたリソースの完全修飾名を一覧表示する次の単純なユーティリティをコンパイルすることもできます。  
  
     [!code-csharp[System.Resources.ResourceManager.Class\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]
     [!code-vb[System.Resources.ResourceManager.Class\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  
  
-   リソースの名前空間とルート ファイル名ではなく、\(省略可能な名前空間\) に加え、リソース ファイルの名前とそのファイルの拡張子によってを単独でセットを特定します。 ニュートラル カルチャのリソース セットがという名前の場合、この例外がスローされます `GlobalResources` の値を指定して `GlobalResources.resources` \(の代わりに `GlobalResources`\) に、 `baseName` のパラメーター、 <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> コンス トラクターです。  
  
-   メソッドの呼び出しで指定されているカルチャに固有のリソース セットが見つからないし、フォールバック リソース セットを読み込むことができません。 たとえば、英語 \(米国\) とロシア \(ロシア語\) のカルチャのサテライト アセンブリを作成したにニュートラル カルチャのリソース セットを提供できない場合は、この例外がスローされます、アプリの現在のカルチャが英語 \(英国\) の場合。  
  
 <xref:System.Resources.MissingManifestResourceException> 値は 0x80131532 HRESULT COR\_E\_MISSINGMANIFESTRESOURCE を使用します。  
  
 <xref:System.Resources.MissingManifestResourceException> 既定値を使用して <xref:System.Object.Equals%2A> 実装で、参照の等価性をサポートしています。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Resources.MissingManifestResourceException>, を参照してください、 <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> コンス トラクターです。  
  
> [!NOTE]
>  サテライト アセンブリが使用できない場合、アプリが失敗しないように、中立的な一連のリソースをメイン アセンブリに含めることをお勧めします。  
  
## [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリ  
 ローカライズされたリソースのサテライト アセンブリを展開して、通常はメイン アセンブリにニュートラル カルチャのリソースを保存、デスクトップ アプリとは異なり [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリが 1 つのパッケージ リソース インデックス \(.pri\) ファイルに、ニュートラル カルチャを含む複数のカルチャのリソースを展開します。 この結果、 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 優先のカルチャのリソースが見つからない場合、アプリ、 <xref:System.Resources.MissingManifestResourceException> が次の条件のいずれかでスローされます。  
  
-   アプリが .pri ファイルを含んでいないか、.pri ファイルを開けませんでした。  
  
-   アプリの .pri ファイルでは、指定したルート名のリソース セットは含まれません。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.Resources.ResourceManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Resources.MissingManifestResourceException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ <xref:System.Resources.MissingManifestResourceException>します。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">例外の原因を説明するエラー メッセージ。</param>
        <summary>指定されたエラー メッセージで <see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Resources.MissingManifestResourceException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.Exception.Message%2A>|`message` 文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MissingManifestResourceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
        <param name="context">ソースまたは例外の転送先に関する文脈情報。</param>
        <summary>シリアル化したデータから、<see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingManifestResourceException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">例外の原因を説明するエラー メッセージ。</param>
        <param name="inner">現在の例外の原因となった例外。<c>inner</c> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
        <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。<xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。  
  
 <xref:System.Resources.MissingManifestResourceException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|内部例外の参照。|  
|<xref:System.Exception.Message%2A>|エラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Resources.MissingManifestResourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>