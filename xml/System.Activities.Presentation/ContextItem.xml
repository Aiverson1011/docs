<Type Name="ContextItem" FullName="System.Activities.Presentation.ContextItem">
  <TypeSignature Language="C#" Value="public abstract class ContextItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItem" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>すべてのコンテキスト項目を派生させる必要がある基本クラスを表します。 このクラスは抽象クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテキスト項目は、デザイナーの一時的状態を表します。 コンテキスト項目は <xref:System.Activities.Presentation.ContextItemManager> によって管理されます。これはワークフロー モデルを視覚的に表すときに <xref:System.Activities.Presentation.EditingContext> によって使用される <xref:System.Activities.Presentation.WorkflowDesigner> の一部です。<xref:System.Activities.Presentation.ContextItemManager> は  <xref:System.Activities.Presentation.EditingContext.Items%2A> プロパティによって返されます。このプロパティには、ホストとデザイナーの間で共有されるデータが格納されています。  このデータは、サブスクリプションと変更通知内にフックする必要のあるメカニズムを提供します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Activities.Presentation.ContextItem" /> クラスの新しいインスタンスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ContextItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装すると、この編集中のコンテキスト クラスから派生した項目の型を取得します。</summary>
        <value>項目 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、基本 <xref:System.Activities.Presentation.ContextItem> クラスに対しては実装されていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">中で変更が加えられている <see cref="T:System.Activities.Presentation.EditingContext" />。</param>
        <param name="previousItem">以前のアクティブな <see cref="T:System.Activities.Presentation.ContextItem" />。</param>
        <summary>コンテキスト項目マネージャーに格納する前にコンテキスト項目に対して呼び出されるメソッドを表します。 コンテキスト項目マネージャーの以前の項目はパラメーターとして渡されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目には既定のコンストラクターが必要なため、項目が初めてコンテキストに渡されると既定の項目が構築されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>