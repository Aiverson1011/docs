<Type Name="SecurityManager" FullName="System.Security.SecurityManager">
  <TypeSignature Language="C#" Value="public static class SecurityManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed SecurityManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityManager" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>セキュリティ システムと対話するクラスの主要なアクセスを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 セキュリティは、アクセスし、セキュリティ ポリシーの構成を操作するメソッドを提供します。 インスタンスを作成することはできません <xref:System.Security.SecurityManager>します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckExecutionRights">
      <MemberSignature Language="C#" Value="public static bool CheckExecutionRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckExecutionRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityManager.CheckExecutionRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コードが必要になっているかどうかを示す値を取得または <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> を実行するためにします。</summary>
        <value>
          <see langword="true" /> コードがある必要場合 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> ; を実行するためにそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、する場合 `false`, 、せずコードも含む <xref:System.Security.Permissions.SecurityPermissionFlag.Execution> を実行できます。 実行チェックは、コストが、限定的なポリシーの解決方法の利点を損なうことができます。 このプロパティは、必要に応じて実行チェックを無効に提供されています。  
  
 までにこのプロパティの変更が残りません <xref:System.Security.SecurityManager.SavePolicy%2A> が呼び出されます。 レジストリ内で永続化されるまで、新しいプロセスは変更により影響ありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードがない <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />します。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadRequiresSecurityContextCapture">
      <MemberSignature Language="C#" Value="public static bool CurrentThreadRequiresSecurityContextCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CurrentThreadRequiresSecurityContextCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のスレッドが時間内では後で再作成する場合は、セキュリティ状態に、セキュリティ コンテキストのキャプチャを必要かどうかを決定します。</summary>
        <returns>
          <see langword="false" /> スタックには、部分的に信頼されたアプリケーション ドメインがありません。、部分的に信頼されたアセンブリがない、いいえが含まれている場合現在アクティブな <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> または <see cref="M:System.Security.CodeAccessPermission.Deny" /> 修飾子; <see langword="true" /> 場合は、共通言語ランタイムがスタックに、これらのいずれも含まれているを保証することはできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> メソッドが成功したセキュリティ確認要求の後に取得される機密データをキャッシュする前にします。  
  
 場合、 <xref:System.Security.CodeAccessPermission.Assert%2A> メソッドが呼び出された高いスタックに、対応するセキュリティ コンテキストをキャプチャせず、データをキャッシュしない必要があります。 取得されるデータがそれ以外の場合、機密性の高い、 <xref:System.Security.CodeAccessPermission.Assert%2A> であるコードを使用可能になる場合がありますで実行されていない可能性 <xref:System.Security.CodeAccessPermission.Assert%2A> インプレースします。  
  
> [!IMPORTANT]
>  ある場合のみ、戻り値は信頼性の高い `false`, 、保証されるは、スレッドがセキュリティ コンテキストのキャプチャを必要とすることを意味します。 セキュリティ コンテキストのキャプチャのセキュリティの脆弱性を回避する必要がない場合に、メソッドが true を返します。  
  
 <xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A> セキュリティ クリティカルに主に使用が不要なセキュリティ コンテキストを避けるためにキャプチャすると、それを使用するコードがセキュリティに関係し、監査する必要があります示すためです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetStandardSandbox">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet GetStandardSandbox(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">権限のセットに一致するようにホスト証拠。</param>
        <summary>指定された証拠を持つアプリケーションに付与しても安全なアクセス許可セットを取得します。</summary>
        <returns>指定された証拠を持つアプリケーションの許可セットとして使用できるアクセス許可セットです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 、証拠に、ホストで `evidence` 含める必要があります <xref:System.Security.Policy.Zone?displayProperty=fullName> 証拠。  
>   
>  次の表は、ゾーンごとに返されるアクセス許可セットを示します。  
  
|ゾーン|権限セット|  
|---------|-----------|  
|<xref:System.Security.SecurityZone.MyComputer>|`FullTrust`|  
|<xref:System.Security.SecurityZone.Intranet>|`LocalIntranet`|  
|<xref:System.Security.SecurityZone.Trusted>|`Internet`|  
|<xref:System.Security.SecurityZone.Internet>|`Internet`|  
|<xref:System.Security.SecurityZone.Untrusted>|なし|  
|<xref:System.Security.SecurityZone.NoZone>|なし|  
  
 などの他の証拠 <xref:System.Security.Policy.Url> または <xref:System.Security.Policy.Site>, 、考慮することがあります。  
  
 返されるアクセス許可セットは、アプリケーションを実行するサンド ボックスで使用できます。 このメソッドは、ポリシーが指定されていないがにより、ホスト アプリケーションによって要求されたアクセス許可セットが妥当かどうかを判断することに注意してください。 このメソッドは、ゾーンをサンド ボックスにマップを使用できます。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Security.SecurityManager.GetStandardSandbox%2A> サンド ボックス化されたアプリケーションのアクセス許可を取得するメソッドを設定します。 サンド ボックスで、アプリケーションを実行する方法の詳細については、次を参照してください。 [How To: Run Partially Trusted Code in a Sandbox](http://msdn.microsoft.com/ja-jp/d1ad722b-5b49-4040-bff3-431b94bb8095)します。  
  
 [!code-csharp[sandboxingApis\#1](~/samples/snippets/csharp/VS_Snippets_CLR/SandboxingAPIs/CS/program.cs#1)]
 [!code-vb[sandboxingApis\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SandboxingAPIs/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="evidence" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetZoneAndOrigin">
      <MemberSignature Language="C#" Value="public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetZoneAndOrigin(class System.Collections.ArrayList zone, class System.Collections.ArrayList origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="System.Collections.ArrayList&amp;" RefType="out" />
        <Parameter Name="origin" Type="System.Collections.ArrayList&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="zone">含む出力パラメーター、 <see cref="T:System.Collections.ArrayList" /> の与えられた <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> オブジェクトです。</param>
        <param name="origin">含む出力パラメーター、 <see cref="T:System.Collections.ArrayList" /> の与えられた <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> オブジェクトです。</param>
        <summary>現在のアセンブリのゾーン id が付与されている URL id のアクセス許可セットを取得または設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドに、推奨される代替は、URL およびゾーンの実行中のアセンブリの証拠を使用して呼び出す <xref:System.Security.SecurityManager.ResolvePolicy%2A> 証拠の種類ごとにします。 返されるアクセス許可セット、 <xref:System.Security.SecurityManager.ResolvePolicy%2A> 呼び出しがゾーンと元の URL に基づき、実行中のアセンブリに付与されるアクセス許可を識別します。  
  
> [!NOTE]
>  このメンバーは、リンク確認要求ではなく、有効な暗号化キー、擬似キー ECMA 公開キーを使用できます。 .NET Framework 内では、Microsoft 公開キーのリンク要求に ECMA 擬似キーのリンク確認要求が自動的に変換されます。 セキュリティの例外は、ECMA 擬似キーではない Microsoft 公開キーに基づきます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">要求の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> に失敗しました。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsGranted">
      <MemberSignature Language="C#" Value="public static bool IsGranted (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsGranted(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm">呼び出し元の許可と比較する権限です。</param>
        <summary>呼び出し元に、権限が与えられるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 呼び出し元に与えられるアクセス許可が、アクセス許可を含めるかどうか <paramref name="perm" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス許可の付与ポリシーによって決定され、アサートなどの上書きの対象になる要求とは異なります。 また、 <xref:System.Security.SecurityManager.IsGranted%2A> のみスタック上の他の呼び出し元に依存しない呼び出し元コード アセンブリの許可をテストします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPolicyLevelFromFile">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile(string path, valuetype System.Security.PolicyLevelType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="type" Type="System.Security.PolicyLevelType" />
      </Parameters>
      <Docs>
        <param name="path">セキュリティ ポリシー情報を含むファイルへの物理ファイル パス。</param>
        <param name="type">読み込まれるポリシー レベルの種類を指定する列挙値の 1 つ。</param>
        <summary>指定されたファイルから <see cref="T:System.Security.Policy.PolicyLevel" /> を読み込みます。</summary>
        <returns>読み込まれたポリシー レベル。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> パラメーターが指定したファイルは存在しません。</exception>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。  
  
 または  
  
 このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> がありません。  
  
 または  
  
 このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> がありません。  
  
 または  
  
 このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> がありません。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to view and modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">for reading and writing files. Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadPolicyLevelFromString">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.PolicyLevel LoadPolicyLevelFromString(string str, valuetype System.Security.PolicyLevelType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyLevel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="type" Type="System.Security.PolicyLevelType" />
      </Parameters>
      <Docs>
        <param name="str">構成ファイルに表示されることと同じ形式でセキュリティ ポリシー レベルの XML 表現。</param>
        <param name="type">読み込まれるポリシー レベルの種類を指定する列挙値の 1 つ。</param>
        <summary>読み込み、 <see cref="T:System.Security.Policy.PolicyLevel" /> 、指定した文字列から。</summary>
        <returns>読み込まれているポリシー レベルです。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="str" /> パラメーターが無効です。</exception>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードがない <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />します。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to view and modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PolicyHierarchy">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator PolicyHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerator PolicyHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.PolicyHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セキュリティ ポリシーの階層にアクセスする列挙子を、コンピューター ポリシーとユーザー ポリシーのようなレベルで提供します。</summary>
        <returns>セキュリティ ポリシーの階層を構成する <see cref="T:System.Security.Policy.PolicyLevel" /> オブジェクトの列挙子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The returned enumerator provides successive <xref:System.Security.Policy.PolicyLevel> objects that represent the policy at the respective \(machine, user, enterprise, application domain\) level of the hierarchy. These objects are the live policy objects; altering these objects can have unpredictable results.  
  
 Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level. However, the hierarchy can include additional levels.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to view and modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
        <summary>指定された証拠に基づいて、コードに与えるアクセス許可を決定します。</summary>
        <returns>セキュリティ システムで付与できるアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method invokes the security policy engine, providing it with evidence of the calling code's identity. The result is determined by the security policy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence[] evidences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidences" Type="System.Security.Policy.Evidence[]" />
      </Parameters>
      <Docs>
        <param name="evidences">ポリシーの評価に使用される証拠オブジェクトの配列。</param>
        <summary>指定された証拠に基づいて、コードに与えるアクセス許可を決定します。</summary>
        <returns>指定された証拠のすべてに適切なアクセス許可のセット。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method invokes the security policy engine, providing it with an array of <xref:System.Security.Policy.Evidence> objects. The returned permission set represents only those permissions that apply to every evidence in the array. These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence. This method behaves as if you were performing an intersection on the results of resolving policy on each of the <xref:System.Security.Policy.Evidence> objects in the array.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolvePolicy(class System.Security.Policy.Evidence evidence, class System.Security.PermissionSet reqdPset, class System.Security.PermissionSet optPset, class System.Security.PermissionSet denyPset, class System.Security.PermissionSet denied) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="reqdPset" Type="System.Security.PermissionSet" />
        <Parameter Name="optPset" Type="System.Security.PermissionSet" />
        <Parameter Name="denyPset" Type="System.Security.PermissionSet" />
        <Parameter Name="denied" Type="System.Security.PermissionSet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
        <param name="reqdPset">コードを実行するために必要なアクセス許可。</param>
        <param name="optPset">与えられた場合に使用するオプションのアクセス許可。ただし、コードを実行するためには必要ありません。</param>
        <param name="denyPset">ポリシーがその他の方法で許可しても、コードに決して与えられない拒否されるアクセス許可。</param>
        <param name="denied">与えられないアクセス許可のセットを格納する出力パラメーター。</param>
        <summary>指定された証拠と要求に基づいて、コードに与えるアクセス許可を決定します。</summary>
        <returns>セキュリティ システムが与えるアクセス許可のセット。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests. The result is determined by the security policy. This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter. The effective granted permissions are those in the granted set that are not in the denied set.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
        <exception cref="T:System.Security.Policy.PolicyException">ポリシーが <paramref name="reqdPset" /> パラメーターで指定される最小限の要求アクセス許可の付与に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolvePolicyGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerator ResolvePolicyGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">ポリシーが評価される証拠セット。</param>
        <summary>指定した証拠と一致するコード グループのコレクションを取得します。</summary>
        <returns>証拠と一致するコード グループのセットの列挙体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.  
  
 Code groups will be returned from all applicable levels of the policy hierarchy matching the **parameterReference tag is not supported!!!!**  
 parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSystemPolicy">
      <MemberSignature Language="C#" Value="public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.PermissionSet ResolveSystemPolicy(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">ポリシーの評価に使用する証拠セット。</param>
        <summary>指定した証拠に基づいたコードに対して与えるアクセス許可を判断します。<see cref="T:System.AppDomain" /> レベルのポリシーは除きます。</summary>
        <returns>セキュリティ システムで付与できるアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method invokes the security policy engine and provides it with evidence of the calling code's identity. The result is determined by the system security policy exclusive of any <xref:System.AppDomain> policy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SavePolicy">
      <MemberSignature Language="C#" Value="public static void SavePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.SavePolicy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変更されたセキュリティ ポリシーの状態を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method saves the policy as exposed by <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, and other classes that represent configuration of the security policy. Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SavePolicyLevel">
      <MemberSignature Language="C#" Value="public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePolicyLevel(class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="level">保存するポリシー レベル オブジェクト。</param>
        <summary>
          <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" /> で読み込まれて変更されたセキュリティ ポリシー レベルを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Security.Policy.PolicyLevel> will be saved to the same location from which it loaded.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードには <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> がありません。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドはコード アクセス セキュリティ \(CAS\) ポリシーを使用しており、.NET Framework 4 では互換性のために残されています。 .NET Framework の旧バージョンとの互換性のため CAS ポリシーを有効にするには、[&lt;legacyCasPolicy&gt; 要素](http://msdn.microsoft.com/ja-jp/07132b9c-4a72-4710-99d7-e702405e02d4)を使用します。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool SecurityEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityManager.SecurityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The security manager cannot be turned off on MS runtime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセキュリティが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> セキュリティが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、 [Caspol.exe \(Code Access Security Policy Tool\)](http://msdn.microsoft.com/ja-jp/d2bf6123-7b0c-4e60-87ad-a39a1c3eb2e0)  
  
 `-security` \(`-s`\) コード ベースのセキュリティをオフにするにはオプションです。  
  
 <xref:System.Security.SecurityManager.SecurityEnabled%2A> 管理者は、コード アクセス セキュリティを無効にすることができます。 コード アクセス セキュリティを無効にすると、すべてのコード アクセス要求が成功します。 すべてのコードを実際には、これにより許可 `FullTrust`します。 コードを実行できるように、セキュリティ システムをバイパスするコード アクセス セキュリティを無効にすると、同等のセキュリティ ポリシーで許可よりもわずかに良い `FullTrust` すべてのコードにします。 このプロパティは、ロールベースのセキュリティを無効になりませんしたがって、 <xref:System.Security.Permissions.PrincipalPermission> 要求は影響しません。  
  
> [!CAUTION]
>  コード アクセス セキュリティを無効にすると、システムは、ウイルスやワームなどの悪意のあるコードの攻撃を受けやすくなります。 コード アクセス セキュリティを無効にする任意の方法で実行されているからマネージ コードに自動的にブロックしません。 唯一の原因が制限なく、コード アクセス セキュリティ システムで実行するコードを管理、そして最も細心の注意によってのみ実行できる必要があります。 余分なパフォーマンスを得るためにセキュリティをオフにする必要がありますだけ実行するシステムのセキュリティを保護するため、他のセキュリティ対策を講じています。 その他のセキュリティ対策の例としては、公衆ネットワークからの切断、コンピューターの物理的な保護などがあります。  
  
 までレジストリでこのプロパティの変更は保持されません <xref:System.Security.SecurityManager.SavePolicy%2A> が呼び出されます。 レジストリ内で永続化されるまで、新しいプロセスは変更により影響ありません。 実行中のプロセスでこのプロパティの値を変更するは必ずしも状態は変更しない、期待どおりにします。 変更が有効になっていることを確認するを呼び出す必要があります <xref:System.Security.SecurityManager.SavePolicy%2A> し、新しいプロセスを開始します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">このメソッドを呼び出すコードがない <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />します。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the ability to modify policy. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolvePolicy">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コードに与えるアクセス許可を決定します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>