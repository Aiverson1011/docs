<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>マネージ コードを、スタック ウォークなしでアンマネージ コードに呼び出せるようにします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!CAUTION]
>  この属性を使用して、十分に注意します。 不適切な使用には、セキュリティ上の弱点を作成できます。  
  
 この属性は、その際に、実行時のセキュリティ チェックのパフォーマンスの低下を招くことがなくネイティブ コードを呼び出そうとメソッドに適用できます。 アンマネージ コードを呼び出すときに実行するスタック ウォークを実行時に、省略すると大幅なパフォーマンスを大幅に節約されます。 クラスでこの属性の使用は含まれているすべてのメソッドを適用します。  
  
 一般に、マネージ コードが \(PInvoke または COM 相互運用機能をネイティブ コード\) をアンマネージ コードを呼び出すたびの使用量が、 `UnmanagedCode` のアクセス権をすべての呼び出し元は、これを許可するために必要な権限を持っています。 この明示的な属性を適用すると、開発者は、実行時に要求を抑制できます。 開発者は、アンマネージ コードへの移行が他の方法で十分に保護されていることを維持するための責任を負う必要があります。 必要な `UnmanagedCode` アクセス許可はでもリンク時に実行されます。 たとえば、A を関数呼び出しが関数 B が関数 B を場合が付いて <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, 、関数 A をチェックして、対象となるアンマネージ コードのアクセス許可は実行時の後にジャスト イン タイム コンパイル中です。  
  
 この属性は、PInvoke メソッド \(または PInvoke メソッドを含むクラス\) に適用するときにのみ、または相互運用呼び出しに使用するインターフェイスの定義。 他のすべてのコンテキストでは無視されます。  
  
 この属性は、アンマネージ コードにより、システム リソースへのアクセスを提供するクラスを実装するのに便利です。 アンマネージ コードへのアクセス許可がないコードは、アンマネージ コードにアクセスするには、この属性を持つクラスを呼び出すことができます。 これは、安全でセキュリティで保護するクラスをプログラムにはこの属性を使用してクラスの作成者だけです。 存在しない場合、この属性は危険が不正に使用するコードを許可することができます。  
  
 これは、宣言セキュリティ属性が、標準の属性 \(から派生した <xref:System.Attribute>, ではなく、 <xref:System.Security.Permissions.SecurityAttribute>\)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンストラクターは、フィールドを既定値に初期化します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>