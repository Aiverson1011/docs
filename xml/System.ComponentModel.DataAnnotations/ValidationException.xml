<Type Name="ValidationException" FullName="System.ComponentModel.DataAnnotations.ValidationException">
  <TypeSignature Language="C#" Value="public class ValidationException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ValidationException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.ValidationException" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データの検証中に発生する例外を表す場合はフィールド、<see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />クラスを使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 入力値が、予期されたデータ型、範囲またはデータ フィールドのパターンに一致しない場合、検証例外が発生します。 たとえば、ユーザーがデータ フィールドに整数値を入力するかどうかは指定する必要が、<xref:System.Data.SqlDbType.DateTime>値の検証例外が発生します。  
  
 このクラスを使用して、<xref:System.ComponentModel.DataAnnotations.ValidationAttribute>検証をカスタマイズするクラス。 A<xref:System.ComponentModel.DataAnnotations.ValidationException>が、検証エラーが発生した場合にスローされます。 例外がスローされたときに、<xref:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate%2A>メソッドが呼び出されます。 検証中にスローされるすべての例外が含まれている、<xref:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions%2A>コレクション。 反復処理するそれぞれの検証例外を取得することができます、<xref:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions%2A>コレクション。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスのシステムによって生成されたエラー メッセージを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、既定のコンス トラクター、 <xref:System.ComponentModel.DataAnnotations.ValidationException> クラスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">エラーを説明する指定したメッセージ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの指定したエラー メッセージを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用する方法の詳細については、次を参照してください。 [方法: データ モデルを使用したデータ フィールド検証をカスタマイズする](http://msdn.microsoft.com/ja-jp/47d3b04e-1ab5-466d-bc58-92f163f3d7f5)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">シリアル化されたデータを保持するオブジェクト。</param>
        <param name="context">ソースまたはオブジェクトのシリアル化の転送先に関するコンテキスト情報。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスを使用してシリアル化されたデータ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ストリームで送信された例外オブジェクトを再構成する逆シリアル化中に呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージ。</param>
        <param name="innerException">検証の例外のコレクションです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの指定したエラー メッセージと内部例外インスタンスのコレクションを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常は、使用しないこのコンス トラクターに検証例外が格納されるため、 <xref:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions%2A> プロパティには、いない `innerException`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationException (System.ComponentModel.DataAnnotations.ValidationResult validationResult, System.ComponentModel.DataAnnotations.ValidationAttribute validatingAttribute, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.DataAnnotations.ValidationResult validationResult, class System.ComponentModel.DataAnnotations.ValidationAttribute validatingAttribute, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationResult" Type="System.ComponentModel.DataAnnotations.ValidationResult" />
        <Parameter Name="validatingAttribute" Type="System.ComponentModel.DataAnnotations.ValidationAttribute" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="validationResult">検証結果の一覧。</param>
        <param name="validatingAttribute">現在の例外の原因となった属性です。</param>
        <param name="value">属性の検証エラーが発生する原因となったオブジェクトの値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> 検証の結果、検証の属性と現在の例外の値を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationException (string errorMessage, System.ComponentModel.DataAnnotations.ValidationAttribute validatingAttribute, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorMessage, class System.ComponentModel.DataAnnotations.ValidationAttribute validatingAttribute, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="validatingAttribute" Type="System.ComponentModel.DataAnnotations.ValidationAttribute" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorMessage">エラーを説明するメッセージ。</param>
        <param name="validatingAttribute">現在の例外の原因となった属性です。</param>
        <param name="value">属性の検証エラーが発生する原因となったオブジェクトの値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの指定したエラー メッセージ、検証の属性と現在の例外の値を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、次を参照してください。 方法: データ モデルのデータ フィールド検証をカスタマイズします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.ValidationAttribute ValidationAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.ValidationAttribute ValidationAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.ValidationAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インスタンスを取得、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> この例外をトリガーするクラス。</summary>
        <value>この例外をトリガーした検証属性の型のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この型はデータ テーブルに関連付けられているメタデータに基づく検証を実施するために使用します。 エラーが発生する場合、 <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> クラスのトリガー、 <xref:System.ComponentModel.DataAnnotations.ValidationException>です。  
  
 このクラスをオーバーライドすると、カスタム検証属性を作成できます。  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationResult">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.ValidationResult ValidationResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.ValidationResult ValidationResult" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.ValidationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> インスタンスの検証エラーを説明します。</summary>
        <value>
          <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> インスタンスの検証エラーを説明します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ValidationException.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>原因となったオブジェクトの値を取得、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスは、この例外が発生します。</summary>
        <value>原因となったオブジェクトの値、 <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> 検証エラーが発生するクラス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>