<Type Name="UIHintAttribute" FullName="System.ComponentModel.DataAnnotations.UIHintAttribute">
  <TypeSignature Language="C#" Value="public class UIHintAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UIHintAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ フィールドを表示する動的なデータを使用して、テンプレート、またはユーザー コントロールを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ソース コードの Visual Studio のプロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?linkid=158686)します。  
  
 MVC を使用して、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> にモデルをデータ フィールドに関連付けるクラスです。 動的データを使用して、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> にユーザー コントロールをデータ フィールドに関連付けるクラスです。 動的データを使用して、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>プロパティをデータ フィールドを表示するために使用するユーザー コントロールを決定します。  
  
 属性を使用する方法の詳細については、次を参照してください。 [Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)します。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 属性をデータ フィールドの編集と表示を処理するカスタム フィールド テンプレートの名前を指定します。  
  
 コード例全体については、「[How to: Customize Data Field Display in the Data Model](http://msdn.microsoft.com/ja-jp/33c2e908-bb52-4656-ba7a-ba55fb04beb2)」を参照してください。  
  
 [!code-csharp[DynamicData.CustomFieldTemplate\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]
 [!code-vb[DynamicData.CustomFieldTemplate\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIHintAttribute (string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uiHint">データ フィールドの表示に使用するユーザー コントロールです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 指定されたユーザー コントロールを使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 指定して、このコンス トラクターで作成されたオブジェクトが初期化されて `uiHint`, 、データ フィールドを表示するために使用するユーザー コントロール \(フィールド テンプレート\) を指定します。  
  
 ASP.NET 動的データは、フィールド テンプレート、ページ テンプレート、およびデータ モデル内のデータ フィールドを表示するデータ コントロールを提供します。 これらのテンプレートと、それらをカスタマイズするコントロールを変更するか、カスタム ユーザー コントロールを作成することができます。 使用するカスタム ユーザー コントロールを作成する場合、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> プロパティを使用してデータ フィールドを表示するユーザー コントロールを指定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIHintAttribute (string uiHint, string presentationLayer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uiHint, string presentationLayer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiHint" Type="System.String" />
        <Parameter Name="presentationLayer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uiHint">データ フィールドの表示に使用するユーザー コントロール \(フィールド テンプレート\)。</param>
        <param name="presentationLayer">クラスを使用して、プレゼンテーション層です。 "HTML"、"Silverlight"、"WPF"または"WinForms"に設定できます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスの指定したユーザーの管理と指定したプレゼンテーション層を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIHintAttribute (string uiHint, string presentationLayer, object[] controlParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uiHint, string presentationLayer, object[] controlParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiHint" Type="System.String" />
        <Parameter Name="presentationLayer" Type="System.String" />
        <Parameter Name="controlParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uiHint">データ フィールドの表示に使用するユーザー コントロール \(フィールド テンプレート\)。</param>
        <param name="presentationLayer">クラスを使用して、プレゼンテーション層です。 "HTML"、"Silverlight"、"WPF"または"WinForms"に設定できます。</param>
        <param name="controlParameters">使用しているデータ ソースから値を取得するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスを指定したユーザー コントロール、プレゼンテーション層、および制御パラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> <see langword="null" /> または制約キーであります。  
  
 または  
  
 値 <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> 文字列ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; ControlParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; ControlParameters" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> を使用して任意のデータ ソースから値を取得するオブジェクト。</summary>
        <value>キーと値のペアのコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A> プロパティがデータ モデルからデータを取得することができますし、データ モデルに対する更新を追跡およびモデルのすべての変更を通知します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このインスタンスと比較するオブジェクトまたは <see langword="null" /> 参照します。</param>
        <summary>このインスタンスが、指定したオブジェクトと等しいかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 指定したオブジェクトがこのインスタンスと等しい場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>属性の現在のインスタンスのハッシュ コードを取得します。</summary>
        <returns>属性のインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentationLayer">
      <MemberSignature Language="C#" Value="public string PresentationLayer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PresentationLayer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を使用して、プレゼンテーション層、 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスです。</summary>
        <value>このクラスで使用される、プレゼンテーション層です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが使用するプレゼンテーション層を表す、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> クラスです。 このプロパティは、"HTML"、"Silverlight"、"WPF"または"WinForms"に設定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>属性の一意の識別子を取得します。</summary>
        <value>属性の一意の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用してデータ フィールドを表示するフィールド テンプレートの名前を設定します。</summary>
        <value>データ フィールドを表示するフィールド テンプレートの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET 動的データは、データ モデル内のデータ フィールドを表示するため、フィールド テンプレートとページ テンプレートを提供します。 フィールド テンプレートは、モデル内のデータ フィールドにマップされているユーザー コントロール \(.ascx ファイル\) です。 動的データには、既定のユーザー コントロールを変更するか、カスタム ユーザー フィールド テンプレートとして使用するコントロールを作成できます。 使用するカスタム ユーザー コントロールを作成する場合、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> プロパティ、プロパティをカスタム ユーザー コントロールを使用して、プロパティを表示できるようにします。<xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> プロパティは、特定の列が表示されるときに使用するフィールド テンプレートを指定します。<xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> プロパティは、動的なデータで提供されるテンプレートのいずれかに、またはカスタム テンプレートを指すことができます。 たとえば、RedText\_Edit.ascx をという名前のカスタム フィールド テンプレートを作成しを使用して、 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> RedText\_Edit.ascx コントロールが動的なデータで提供されている既定の Text\_Edit.ascx テンプレートではなく、指定したデータ フィールドの表示に使用するように指定するプロパティです。  
  
 次の例では、指定されたカスタム フィールド テンプレートを使用して、データベース内の UnitsInStock 列が表示されることを指定する方法を示します。  
  
 [!code-csharp[DynamicData.CustomFieldTemplate\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]
 [!code-vb[DynamicData.CustomFieldTemplate\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>