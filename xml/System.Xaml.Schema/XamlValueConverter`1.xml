<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase">この特定のコンバーターのクラス、CLR ベース <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を表します。 通常これは、次のいずれか: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />です。</typeparam>
    <summary>最終的な変換先の型以外の入力に基づいて XAML の初期化またはシリアル化の値を生成する方法については、共通 API サーフェイスを提供します。 これには、マークアップ拡張機能と型コンバーターが含まれます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 この型のインスタンスがなどの XAML スキーマ API のメソッドによって返される <xref:System.Xaml.XamlType.LookupTypeConverter%2A>です。 汎用実装 <xref:System.Xaml.Schema.XamlValueConverter%601> 基本的な XAML スキーマと型システムが別の値への依存関係で他のアセンブリの実装では通常の変換手法を実行する必要があるないように、System.Xaml アセンブリの間接参照を提供します。  
  
 A <xref:System.Xaml.Schema.XamlValueConverter%601> null 実装型ではなくなどで作成できます。、 <xref:System.Xaml.Schema.XamlValueConverter%601> 戻ります `null` の <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>です。  
  
 コンス トラクターのシグネチャ <xref:System.Xaml.Schema.XamlValueConverter%601> を使用して、 `converterType` 変換の動作を実装する特定の型を参照するパラメーターです。 正しく機能するため <xref:System.Xaml.Schema.XamlValueConverter%601> \(null 以外である <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>\)、 `converterType` にキャストする型が必要な `TConverterBase` 制約です。 一致しない条件は、コンス トラクターでは適用されませんが、生じる可能性があります、 <xref:System.InvalidCastException> 実行時にします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <see cref="T:System.Type" /> コンバーターの動作を実装します。</param>
        <param name="targetType">宛先\/ <see cref="T:System.Xaml.XamlType" /> の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> コンバーターの実装に基づいたクラス <see cref="T:System.Type" /> とターゲット\/先の型、 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <see cref="T:System.Type" /> コンバーターの動作を実装します。</param>
        <param name="targetType">宛先\/ <see cref="T:System.Xaml.XamlType" /> の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />です。</param>
        <param name="name">文字列名。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> コンバーターの実装に基づいたクラス <see cref="T:System.Type" /> ターゲット\/先の型、 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, 、および文字列の名前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `name` として提供される `null`, 、いずれかに基づいて、既定の名前が生成される `converterType` または `targetType`です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">次の 3 つのパラメーターはすべて <see langword="null" /> \(少なくとも 1 つが null である必要\)。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンバーターの実装の作成されたインスタンスを取得します。</summary>
        <value>コンバーターの実装の作成されたインスタンスまたは <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> 保護されている既定の実装を呼び出す <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> の値を取得する \(にアクセスする格納されている値場合と <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> が既にで一度呼び出されるこの <xref:System.Xaml.Schema.XamlValueConverter%601>します。  
  
 A <xref:System.Xaml.Schema.XamlValueConverter%601> null 実装型ではなくなどで作成できます。、 <xref:System.Xaml.Schema.XamlValueConverter%601> 戻ります `null` の <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Type" /> コンバーターの動作を実装するクラス。</summary>
        <value>
          <see cref="T:System.Type" /> コンバーターの動作を実装するクラス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コンバーターの実装のインスタンスを返します。</summary>
        <returns>コンバーターの実装のインスタンスまたは <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> 保護されています。 パブリック API でコンバーターのインスタンスを取得するには、値を取得 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>します。  
  
 A <xref:System.Xaml.Schema.XamlValueConverter%601> null 実装型ではなくなどで作成できます。、 <xref:System.Xaml.Schema.XamlValueConverter%601> 戻ります `null` の <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException">コンバーターは、適切な基本型を実装しませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較対象のオブジェクト。</param>
        <summary>決定するかどうかのこのインスタンス <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> と必要もありますが、指定されたオブジェクト、 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクト、値が同じであります。</summary>
        <returns>
          <see langword="true" /> が <paramref name="obj" /> で、このインスタンスと同じ値を保持している場合は <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を比較します。</param>
        <summary>決定するかどうかのこのインスタンス <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 別 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトが同じ値を持ちます。</summary>
        <returns>
          <see langword="true" /> が <paramref name="other" /> で、このインスタンスと同じ値を保持している場合は <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のハッシュ コードを返します。</summary>
        <returns>整数ハッシュ コード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この文字列の名前を取得 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />します。</summary>
        <value>この文字列名 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値は、次のいずれかによって確立されます。  
  
-   コンス トラクターのパラメーター \(を参照してください <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=fullName>\)。  
  
-   その他のコンス トラクターの入力を処理し、文字列を形成する内部ロジック。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
        <param name="converter2">
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が同一かどうかを判断します。</summary>
        <returns>
          <see langword="true" /> の値が <paramref name="converter1" /> の値と同じ場合は <paramref name="converter2" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
        <param name="converter2">
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が異なるかどうかを判断します。</summary>
        <returns>
          <paramref name="converter1" /> の値が <paramref name="converter2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得先\/ <see cref="T:System.Xaml.XamlType" /> の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />です。</summary>
        <value>宛先\/ <see cref="T:System.Xaml.XamlType" /> の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.String" /> これを表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />します。</summary>
        <returns>この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を表す <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> に基づいて値 <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>決定するかどうかのこのインスタンス <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクト値が同じであるとします。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>