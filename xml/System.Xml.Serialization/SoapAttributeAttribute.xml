<Type Name="SoapAttributeAttribute" FullName="System.Xml.Serialization.SoapAttributeAttribute">
  <TypeSignature Language="C#" Value="public class SoapAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定する、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> エンコード済みの SOAP 属性とクラス メンバーをシリアル化する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.SoapAttributeAttribute> を制御する属性のファミリに属しているクラスが、どのように <xref:System.Xml.Serialization.XmlSerializer> 、シリアル化または逆シリアル化、エンコードされた SOAP XML としてオブジェクトです。 結果の XML は、World Wide Web Consortium\) \(www.w3.org\) のドキュメントを"Simple Object Access Protocol \(SOAP\) 1.1"のセクション 5 に準拠しています。 類似する属性の一覧については、次を参照してください。 [Attributes That Control Encoded SOAP Serialization](http://msdn.microsoft.com/ja-jp/93ee258c-9c0f-4a08-897c-c10db7a00f91)します。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化するを作成する必要があります、 <xref:System.Xml.Serialization.XmlSerializer> を使用して、 <xref:System.Xml.Serialization.XmlTypeMapping> で作成された、 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> のメソッド、 <xref:System.Xml.Serialization.SoapReflectionImporter> クラスです。  
  
 適用、 <xref:System.Xml.Serialization.SoapAttributeAttribute> ことを指定するパブリック フィールドを <xref:System.Xml.Serialization.XmlSerializer> XML 属性としてフィールドをシリアル化します。 属性の代替名を指定するには設定して、 <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> プロパティです。 設定、 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> 場合は、この属性が特定の XML スキーマ定義言語 \(XSD\) のデータ型を指定する必要があります。 属性が特定の XML 名前空間に属している場合は、設定、 <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A> プロパティです。  
  
 属性の使用方法の詳細については、次を参照してください。 [Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)  
  
> [!NOTE]
>  語を使用できます `SoapAttribute` 代わりに、コードで <xref:System.Xml.Serialization.SoapAttributeAttribute>します。  
  
   
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.SoapAttributeAttribute> を適用します。  
  
 [!code-cpp[SoapAttribute\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.SoapAttributeOverrides" />
    <altmember cref="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して、作成、 <xref:System.Xml.Serialization.SoapAttributeAttribute> クラス メンバーのシリアル化をオーバーライドする場合。 作成、 <xref:System.Xml.Serialization.SoapAttributeAttribute>, そのプロパティを設定し、オブジェクトを設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> オブジェクトです。 詳細については、次を参照してください。、 <xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要です。  
  
   
  
## 例  
 次の例が、新たに作成 <xref:System.Xml.Serialization.SoapAttributeAttribute> フィールドのシリアル化をオーバーライドするために使用されます。 作成した後、 <xref:System.Xml.Serialization.SoapAttributeAttribute> のプロパティを設定するには、オブジェクトを設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes>です。<xref:System.Xml.Serialization.SoapAttributes> に追加し、 <xref:System.Xml.Serialization.SoapAttributeOverrides> 作成に使用される、 <xref:System.Xml.Serialization.XmlSerializer>です。  
  
 [!code-cpp[SoapAttributeAttributeEx2\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeAttributeEx2/CPP/soapattributeex2.cpp#1)]
 [!code-csharp[SoapAttributeAttributeEx2\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeAttributeEx2/CS/soapattributeex2.cs#1)]
 [!code-vb[SoapAttributeAttributeEx2\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeAttributeEx2/VB/soapattributeex2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">XML 属性の名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの XML 属性の名前として指定した値を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.SoapAttributeAttribute> を適用します。  
  
 [!code-cpp[SoapAttribute\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって生成される XML 属性の名前、 <see cref="T:System.Xml.Serialization.XmlSerializer" />です。</summary>
        <value>XML 属性の名前。 既定値は、メンバー識別子です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> プロパティを既定値を使用できない場合は、XML 属性の名前を指定します。 たとえば、XML 属性の名前がメンバーの識別子として有効でない場合、設定中に識別子の有効な名前を使用、 <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> に無効な名前にします。  
  
   
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.SoapAttributeAttribute> を適用します。<xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> プロパティを設定、 `Today` フィールドです。  
  
 [!code-cpp[SoapAttribute\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって生成される SOAP 属性の XML スキーマ定義言語 \(XSD\) データ型、 <see cref="T:System.Xml.Serialization.XmlSerializer" />です。</summary>
        <value>XML スキーマ データ型、World Wide Web Consortium\) \(www.w3.org\) のドキュメントで定義されているでは、"XML スキーマ パート 2: Datatypes 』 という名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、XML スキーマの単純なデータ型に相当します。  
  
 XML スキーマの `base64Binary` と `hexBinary` データ型の配列を使用して <xref:System.Byte> 構造体、および適用、 <xref:System.Xml.Serialization.SoapAttributeAttribute> で、 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> "base64Binary"または"hexBinary"、適切に設定します。 XML スキーマの `time` と `date` データ型を使用して、 <xref:System.DateTime> を入力し、適用、 <xref:System.Xml.Serialization.SoapAttributeAttribute> で、 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> 「日付」または"time"に設定します。  
  
 文字列にマップされているすべての XML スキーマ データ型には、適用、 <xref:System.Xml.Serialization.SoapAttributeAttribute> とその <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> プロパティが XML スキーマ データ型に設定します。 このメンバーのスキーマのみであり、シリアル化形式は変更されないことに注意してください。  
  
> [!NOTE]
>  プロパティでは、XML スキーマ データ型のいずれかに正確に設定する必要があるため、大文字小文字を区別します。  
  
> [!NOTE]
>  要素が XML 属性として渡す方がより効率的では、XML としてバイナリ データを渡すことです。  
  
 XML スキーマ データ型の詳細については、"XML スキーマ パート 2: Datatypes 』 をという名前のワールド ワイド Consortium\) \(www.w3.org\) ドキュメントを参照してください。  
  
|XSD データ型|.NET データ型|  
|--------------|---------------|  
|anyURI|<xref:System.String>|  
|base64Binary|配列 <xref:System.Byte> オブジェクト|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|エンティティ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|配列 <xref:System.Byte> オブジェクト|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名前|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.SoapAttributeAttribute> を適用します。<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> プロパティを設定、 `GroupNumber` と `Today` フィールドです。  
  
 [!code-cpp[SoapAttribute\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">指定した XML スキーマ データ型は、.NET データ型にマップできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 属性の XML 名前空間を設定します。</summary>
        <value>XML 属性の XML 名前空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> プロパティが"名前空間で XML"World Wide Web Consortium\) \(www.w3.org\) の仕様に準拠します。  
  
 プレフィックスに関連付けられている名前空間を作成するには、作成する必要があります、 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 名前空間と XML ドキュメントで使用されるプレフィックスを格納します。 各名前空間を設定する <xref:System.Xml.Serialization.XmlAttributeAttribute> 内の名前空間のいずれかに一致する必要があります、 <xref:System.Xml.Serialization.XmlSerializerNamespaces>です。 ときに、 <xref:System.Xml.Serialization.XmlSerializer> XML コードを生成それぞれの属性名を正しくプレフィックスします。  
  
   
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.SoapAttributeAttribute> を適用します。<xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A> プロパティを設定、 `GroupName` フィールドです。  
  
 [!code-cpp[SoapAttribute\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribute/CPP/soapattribute.cpp#1)]
 [!code-csharp[SoapAttribute\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribute/CS/soapattribute.cs#1)]
 [!code-vb[SoapAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribute/VB/soapattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>