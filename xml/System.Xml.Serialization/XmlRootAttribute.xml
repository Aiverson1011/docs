<Type Name="XmlRootAttribute" FullName="System.Xml.Serialization.XmlRootAttribute">
  <TypeSignature Language="C#" Value="public class XmlRootAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlRootAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlRootAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>属性ターゲットを XML ルート要素として XML シリアル化する方法を制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlRootAttribute> を制御する属性のファミリに属しているか、 <xref:System.Xml.Serialization.XmlSerializer> オブジェクトを逆シリアル化またはシリアル化します。 類似する属性の一覧については、次を参照してください。 [Attributes That Control XML Serialization](http://msdn.microsoft.com/ja-jp/414b820f-a696-4206-b576-2711d85490c7)します。  
  
 適用できる、 <xref:System.Xml.Serialization.XmlRootAttribute> クラス、構造体、列挙体、またはインターフェイス。 また、XML Web サービス メソッドの戻り値を属性を適用することができます。  
  
 すべての XML ドキュメントには、その他のすべての要素を含む単一のルート要素が必要です。<xref:System.Xml.Serialization.XmlRootAttribute> を制御できますが、どのように <xref:System.Xml.Serialization.XmlSerializer> 特定のプロパティを設定して、ルート要素を生成します。 たとえば、設定して、生成される XML 要素の名前を指定、 <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> プロパティです。  
  
 属性の使用方法については、「[Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
> [!NOTE]
>  語を使用できます `XmlRoot` 代わりに、コードで <xref:System.Xml.Serialization.XmlRootAttribute>します。  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Xml.Serialization.XmlRootAttribute> クラスにします。 属性が要素名、名前空間を指定するかどうかと、要素を修飾するかどうか、 `xsi:nil` クラスに設定されている場合、属性が生成された `null`します。  
  
 [!code-cpp[Classic XmlRootAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例のインスタンスを作成する、 <xref:System.Xml.Serialization.XmlRootAttribute> 代入して、 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> のプロパティ、 <xref:System.Xml.Serialization.XmlAttributes> オブジェクトです。 ときに、 <xref:System.Xml.Serialization.XmlSerializer> シリアル化、 `MyClass` オブジェクトを使用して、 <xref:System.Xml.Serialization.XmlRootAttribute> オブジェクトを既定のルート要素をオーバーライドします。  
  
 [!code-cpp[Classic XmlRootAttribute.XmlRootAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.XmlRootAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.XmlRootAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">XML ルート要素の名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスし、XML ルート要素の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、XmlRootAttribute のインスタンスを作成し、「生徒」という名前のクラスのインスタンスのシリアル化をオーバーライドするために使用します。  
  
 [!code-cpp[XMLRootAttribute\_Constructor\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CPP/xmlrootattribute_constructor.cpp#1)]
 [!code-csharp[XMLRootAttribute\_Constructor\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CS/xmlrootattribute_constructor.cs#1)]
 [!code-vb[XMLRootAttribute\_Constructor\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_Constructor/VB/xmlrootattribute_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML ルート要素の XSD データ型を設定します。</summary>
        <value>XSD \(XML スキーマ ドキュメント\) データ型、World Wide Web Consortium\) \(www.w3.org\) のドキュメントで定義されているでは、『 XML スキーマ: DataTypes 』 という名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表には、XSD の単純なデータ型を対応する .NET が一覧表示します。  
  
 XSD の `base64Binary` と `hexBinary` データ型の配列を使用して <xref:System.Byte> 構造体、および適用、 <xref:System.Xml.Serialization.XmlRootAttribute> で、 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> プロパティが"base64Binary"または"hexBinary"、適切に設定します。 XSD の `time` と `date` データ型を使用して、 <xref:System.DateTime> を入力し、適用、 <xref:System.Xml.Serialization.XmlRootAttribute> で、 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> 「日付」または"time"に設定します。  
  
 文字列にマップされているすべての XSD 型に対して適用、 <xref:System.Xml.Serialization.XmlRootAttribute> とその <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> プロパティが XSD 型に設定します。 ただし、メンバーのスキーマのみであり、シリアル化形式にこの変更はされません。  
  
> [!NOTE]
>  プロパティが区別ため、XSD データ型のいずれかに正確に設定する必要があります。  
  
> [!NOTE]
>  要素は XML としてバイナリ データを渡すことが XML 属性として渡すよりも効率的です。  
  
 XML データ型の詳細については、"XML スキーマ パート 2: Datatypes 』 をという名前の World Wide Web Consortium\) \(www.w3.org\) ドキュメントを参照してください。  
  
|XSD データ型|.NET データ型|  
|--------------|---------------|  
|anyURI|<xref:System.String>|  
|base64Binary|配列 <xref:System.Byte> オブジェクト|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|エンティティ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|配列 <xref:System.Byte> オブジェクト|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名前|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|recurringDate|<xref:System.String>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定が生成され、によって認識される XML 要素の名前、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> と <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> メソッド、それぞれします。</summary>
        <value>生成され、XML ドキュメントのインスタンスに認識される XML ルート要素の名前。 既定値は、シリアル化されたクラスの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定する <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> する場合は、クラス名とは異なる生成された XML 要素の名前。  
  
   
  
## 例  
 次の例のインスタンスを作成する、 <xref:System.Xml.Serialization.XmlRootAttribute> クラスとセット、 <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> プロパティを新しい値にします。 作成する、オブジェクトを使用して、 <xref:System.Xml.Serialization.XmlAttributeOverrides> オブジェクトのシリアル化をオーバーライドするために使用します。  
  
 [!code-cpp[XMLRootAttribute\_ElementName\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CPP/xmlrootattribute_elementname.cpp#1)]
 [!code-csharp[XMLRootAttribute\_ElementName\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CS/xmlrootattribute_elementname.cs#1)]
 [!code-vb[XMLRootAttribute\_ElementName\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_ElementName/VB/xmlrootattribute_elementname.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> に設定されているメンバーをシリアル化する必要があります <see langword="null" /> に、 <see langword="xsi:nil" /> 属性に設定 <see langword="true" />します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成、 <see langword="xsi:nil" /> 属性です。 それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構造の XML スキーマ仕様では、要素のコンテンツが見つからないことを明示的に通知する XML ドキュメントを使用します。 このような要素には、属性が含まれています。 `xsi:nil` 設定 `true`します。 詳細については、名前付き http:\/\/www.w3.org\/TR\/xmlschema\-1\/ 仕様を参照してください。 `XML Schema Part 1: Structures`します。  
  
 場合、 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> プロパティに設定されて `true`, 、 `xsi:nil` 属性を次の XML に示すように生成します。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:nil="true" />  
```  
  
 場合、 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> プロパティは、 `false`, 、次のコードに示すように、空の要素が作成されました。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" />  
```  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。 例では、適用、 <xref:System.Xml.Serialization.XmlRootAttribute> クラス、およびセットと、 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> プロパティを `false`します。  
  
 [!code-cpp[Classic XmlRootAttribute.IsNullable Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.IsNullable Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.IsNullable Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML ルート要素の名前空間を設定します。</summary>
        <value>XML 要素の名前空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> という名前の World Wide Web Consortium\) \(www.w3.org\) 仕様に準拠しているプロパティ `Namespaces in XML`します。  
  
 XML ドキュメントでは、プレフィックス付き名前空間を作成するには、作成、 <xref:System.Xml.Serialization.XmlSerializerNamespaces> プレフィックスと名前空間のすべてのペアを格納するオブジェクト。 各名前空間を設定する <xref:System.Xml.Serialization.XmlArrayAttribute> に含まれている必要があります、 <xref:System.Xml.Serialization.XmlSerializerNamespaces> オブジェクトです。 ときに、 <xref:System.Xml.Serialization.XmlSerializer> 、ドキュメントを生成の各配列項目要素名を正しくプレフィックスします。  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Xml.Serialization.XmlRootAttribute> クラスとセットに、 <xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A> プロパティです。  
  
 [!code-cpp[Classic XmlRootAttribute.Namespace Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.Namespace Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.Namespace Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> クラスし、クラス名の XML ルート要素名として使用します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>