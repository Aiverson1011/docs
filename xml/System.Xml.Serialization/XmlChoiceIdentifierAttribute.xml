<Type Name="XmlChoiceIdentifierAttribute" FullName="System.Xml.Serialization.XmlChoiceIdentifierAttribute">
  <TypeSignature Language="C#" Value="public class XmlChoiceIdentifierAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlChoiceIdentifierAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>列挙体を使用してメンバーをさらに検出できるように指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 という名前の XML schema 要素定義 `xsi:choice` インスタンス内の 1 つだけの子を含めることができる複合型の要素を定義するために使用 \(maxoccurs \= 1\)。 いくつかの名前の 1 つ持つことができます、その子には、いくつかの種類のいずれかを指定できます。 それぞれの名前は、特定の種類に関連付けられました。ただし、いくつかの名前と同じ型に関連付けることができます。 このため、このような要素のインスタンスでは、別です。 たとえば、このような不明瞭という名前の要素を定義する次のスキーマ フラグメント `MyChoice`します。  
  
```  
<xsd:complexType name="MyChoice">  
 <xsd:sequence>  
 <xsd:choice minOccurs="0" maxOccurs="1">  
 <xsd:element minOccurs="1" maxOccurs="1" name="ChoiceOne" type="xsd:string" />  
 <xsd:element minOccurs="1" maxOccurs="1" name="ChoiceTwo" type="xsd:string" />  
 </xsd:choice>  
 </xsd:sequence>  
</xsd:complexType>  
```  
  
 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> メンバーの各インスタンスに特別な列挙値を割り当てることができます。 必要がありますか、列挙体自分で作成したまたはによって生成できる、 [XML Schema Definition Tool \(Xsd.exe\)](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2)です。 次の c\# コード示す方法、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> に適用、 `Item` フィールド、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> プロパティをさらに、選択を検出するために使用される列挙体を含むフィールドを識別します。  
  
```  
public class Choices{  
 [XmlChoiceIdentifier("ItemType")]  
 [XmlChoiceIdentifier("ChoiceOne")]  
 [XmlChoiceIdentifier("ChoiceTwo")]  
 public string MyChoice;  
  
 // Do not serialize this next field:  
 [XmlIgnore]  
 public ItemChoiceType ItemType;  
}  
// Do not include this enumeration in the XML schema.  
[XmlType(IncludeInSchema = false)]  
public enum ItemChoiceType{  
 ChoiceOne,  
 ChoiceTwo,  
}  
```  
  
 このコードは、設定されている場合は、シリアル化し、設定してこのクラスを逆シリアル化、 `ItemType` フィールドを適切な列挙値にします。 たとえば、シリアル化するため、 `Choice` クラス、c\# コード、次のようになります。  
  
```  
Choices mc = new Choices();  
mc.MyChoice = "Item Choice One";  
mc.ItemType = ItemChoiceType.ChoiceOne;  
```  
  
 逆シリアル化するときに、c\# コードは、次のようになります。  
  
```  
MyChoice mc = (MyChoice) myXmlSerializer.Deserialize(myReader);  
if(mc.ItemType == ItemChoiceType.ChoiceOne)  
 {  
     // Handle choice one.  
 }  
if(mc.ItemType == ItemChoiceType.ChoiceTwo)  
 {  
     // Handle choice two.  
 }  
if(mc.ItemType != null)  
 {  
     throw CreateUnknownTypeException(mc.Item);  
 }  
```  
  
 2 番目のシナリオがあるときに、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> を使用します。 次のスキーマで、メンバーは、項目の配列を返すフィールド \(maxOccurs \="unbounded"\) です。 配列は 1 つのオブジェクトを含めることができます \("D\-a\-t で a"\)、および 2 番目のオプション \("MoreData"\) です。  
  
```  
<xsd:complexType name="MyChoice">  
 <xsd:sequence>  
 <xsd:choice minOccurs="0" maxOccurs="unbounded">  
 <xsd:element minOccurs="1" maxOccurs="1" name="D-a-t-a" type="xsd:string" />  
 <xsd:element minOccurs="1" maxOccurs="1" name="MoreData" type="xsd:string" />  
 </xsd:choice>  
 </xsd:sequence>  
</xsd:complexType>  
```  
  
 結果として得られるクラスは、このフィールドを使用して項目の配列を取得します。 対応する、配列の各項目の `ItemChoiceType` もは列挙型を見つける必要があります。 によって返される配列に一致する列挙体が含まれる、 `ItemsElementName` フィールドです。  
  
```  
public class MyChoice {  
 [System.Xml.Serialization.XmlElementAttribute("D-a-t-a", typeof(string), IsNullable=false)]  
 [System.Xml.Serialization.XmlElementAttribute("MoreData", typeof(string), IsNullable=false)]  
 [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]  
 public string[] Items;  
 [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]  
 [System.Xml.Serialization.XmlIgnoreAttribute()]  
 public ItemsChoiceType[] ItemsElementName;  
}  
[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]  
public enum ItemsChoiceType {  
 [System.Xml.Serialization.XmlEnumAttribute("D-a-t-a")]  
 Data,  
 MoreData,  
}  
```  
  
 幅広い選択肢を含んでいるオブジェクトを逆シリアル化するときに、制御構造を使用して \(if など...、else 構造の\) 特定の値を逆シリアル化する方法を決定します。 制御構造体で列挙値をチェックし、それに応じて値を逆シリアル化します。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Choices` 2 つのフィールドを含む `MyChoice` と `ManyChoices`です。<xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> を指定する各フィールドに適用される \(を通じて、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> プロパティ\) を取得または設定の列挙体メンバーの値を検出する別のクラスのメンバーです。`MyChoice` フィールドに対応する列挙体メンバーに 1 つの値に設定できる、 `EnumType` フィールドです。`ManyChoices` フィールドはオブジェクトの配列を返します。`ChoiceArray` フィールドが列挙値の配列を返します。 場合は、各配列メンバーに対して、 `ManyChoices` フィールドによって返される配列に、対応するメンバーが見つかりましたが、 `ChoiceArray` フィールドです。  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlChoiceIdentifierAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Choices` 2 つのフィールドを含む `MyChoice` と `ManyChoices`です。<xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> を指定する各フィールドに適用される \(を通じて、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> プロパティ\) を取得または設定の列挙体メンバーの値を検出する別のクラスのメンバーです。`MyChoice` フィールドに対応する列挙体メンバーに 1 つの値に設定できる、 `EnumType` フィールドです。`ManyChoices` フィールドはオブジェクトの配列を返します。`ChoiceArray` フィールドが列挙値の配列を返します。 場合は、各配列メンバーに対して、 `ManyChoices` フィールドによって返される配列に、対応するメンバーが見つかりましたが、 `ChoiceArray` フィールドです。  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlChoiceIdentifierAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">選択肢を検出するために使用される列挙体を返すメンバーの名前。</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の種類の検出時に使用する列挙体を返すフィールドの名前。</summary>
        <value>列挙体を返すフィールドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 少なくとも 1 つのメンバーでという名前のフィールドによって返される列挙内に存在する必要があります、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> 値。 既定では、その列挙名フィールドの名前を受け取り、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> に適用されます。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Choices` 2 つのフィールドを含む `MyChoice` と `ManyChoices`です。<xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute> を指定する各フィールドに適用される \(を通じて、 <xref:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName%2A> プロパティ\) を取得または設定の列挙体メンバーの値を検出する別のクラスのメンバーです。`MyChoice` フィールドに対応する列挙体メンバーに 1 つの値に設定できる、 `EnumType` フィールドです。`ManyChoices` フィールドはオブジェクトの配列を返します。`ChoiceArray` フィールドが列挙値の配列を返します。 場合は、各配列メンバーに対して、 `ManyChoices` フィールドによって返される配列に、対応するメンバーが見つかりましたが、 `ChoiceArray` フィールドです。  
  
 [!code-cpp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CPP/choice.cpp#1)]
 [!code-csharp[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/CS/choice.cs#1)]
 [!code-vb[XmlChoiceIdentifierAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlChoiceIdentifierAttribute Example/VB/choice.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>