<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定する、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> XML 属性として、クラスのメンバーをシリアル化する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlAttributeAttribute> を制御する属性のファミリに属しているか、 <xref:System.Xml.Serialization.XmlSerializer> 、シリアル化または逆シリアル化オブジェクト。 類似する属性の一覧については、次を参照してください。 [Attributes That Control XML Serialization](http://msdn.microsoft.com/ja-jp/414b820f-a696-4206-b576-2711d85490c7)します。  
  
 パブリック フィールドまたはプロパティに適用すると、 <xref:System.Xml.Serialization.XmlAttributeAttribute> 通知、 <xref:System.Xml.Serialization.XmlSerializer> XML 属性としてメンバーをシリアル化します。 既定では、 <xref:System.Xml.Serialization.XmlSerializer> パブリック フィールドとプロパティを XML 要素としてシリアル化します。  
  
 割り当てることができます、 <xref:System.Xml.Serialization.XmlAttributeAttribute> にパブリック フィールドまたは値 \(または値の配列\) を返すパブリック プロパティは、XML スキーマ定義言語 \(XSD\) の単純型のいずれかにマップできます \(XSD から派生したすべての組み込みデータ型を含む `anySimpleType` 型\)。 可能な型を含めるなど、XSD の単純型にマップできる <xref:System.Guid>, 、<xref:System.Char>, 、および列挙体です。 参照してください、 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> XSD 型とはどのようにの一覧のプロパティが to.NET データ型をマップします。  
  
 設定できる 2 つの特別な属性がある、 <xref:System.Xml.Serialization.XmlAttributeAttribute> : `xml:lang` \(言語を指定します\) と `xml:space` \(空白文字を処理する方法を指定します\) の属性です。 これらの属性は、XML を処理するアプリケーションのみに関連する情報を伝達することができます。 これらの設定の例を次のコードに示します。  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space   
 [Visual Basic]  
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 属性の使用方法については、「[Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
> [!NOTE]
>  語を使用できます `XmlAttribute` 代わりに、コードで <xref:System.Xml.Serialization.XmlAttributeAttribute>します。  
  
   
  
## 例  
 次の例をいくつかのフィールドを含むクラスをシリアル化、 <xref:System.Xml.Serialization.XmlAttributeAttribute> を適用します。  
  
 [!code-cpp[Classic XmlAttributeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 [!code-cpp[XMLAttributeAttribute\_ctr1\_2\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute\_ctr1\_2\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute\_ctr1\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">XML の名前属性が、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成されます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスし、生成される XML 属性の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 [!code-cpp[XMLAttributeAttribute\_ctr1\_2\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute\_ctr1\_2\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute\_ctr1\_2\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> 属性を格納するために使用します。</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName">生成される XML 属性の名前。</param>
        <param name="type">
          <see cref="T:System.Type" /> 属性を格納するために使用します。</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 属性の名前を設定します。</summary>
        <value>XML 属性の名前。 既定値は、メンバーの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> プロパティを既定値を使用できない場合は、XML 属性の名前を指定します。 たとえば、XML 属性の名前がメンバーの識別子として有効でない場合は、設定中に識別子の有効な名前を使用できる、 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> に無効な名前にします。  
  
   
  
## 例  
 次の例のセット、 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> のプロパティ、 <xref:System.Xml.Serialization.XmlAttributeAttribute>です。  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって生成される XML 属性の XSD データ型、 <see cref="T:System.Xml.Serialization.XmlSerializer" />です。</summary>
        <value>XSD \(XML スキーマ ドキュメント\) データ型、World Wide Web Consortium\) \(www.w3.org\) のドキュメントで定義されているでは、『 XML スキーマ: DataTypes 』 という名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表には、相当に XSD の単純なデータ型が一覧表示します。  
  
 XSD の `base64Binary` と `hexBinary` データ型の配列を使用して <xref:System.Byte> 構造体、および適用、 <xref:System.Xml.Serialization.XmlArrayItemAttribute> で、 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> プロパティが"base64Binary"または"hexBinary"、適切に設定します。 XSD の `time` と `date` データ型を使用して、 <xref:System.DateTime> を入力し、適用、 <xref:System.Xml.Serialization.XmlAttributeAttribute> で、 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 「日付」または"time"に設定します。  
  
 文字列にマップされているすべての XSD 型に対して適用、 <xref:System.Xml.Serialization.XmlAttributeAttribute> とその <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> プロパティが XSD 型に設定します。 ただし、メンバーのスキーマのみであり、シリアル化形式にこの変更はされません。  
  
> [!NOTE]
>  プロパティが区別ため、XSD データ型のいずれかに正確に設定する必要があります。  
  
> [!NOTE]
>  要素は XML としてバイナリ データを渡すことが XML 属性として渡すよりも効率的です。  
  
 XML データ型の詳細については、"XML スキーマ パート 2: Datatypes 』 をという名前の World Wide Web Consortium\) \(www.w3.org\) ドキュメントを参照してください。  
  
|XSD データ型|.NET データ型|  
|--------------|---------------|  
|anyURI|<xref:System.String>|  
|base64Binary|配列 <xref:System.Byte> オブジェクト|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|エンティティ|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|配列 <xref:System.Byte> オブジェクト|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整数|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名前|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Xml.Serialization.XmlAttributeAttribute> に 2 つのメンバー、およびセット、 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> プロパティが異なる値に設定します。  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を XML 属性の名前がによって生成されたかどうかを示す値、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> は修飾されます。</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか。 既定値は、<see langword="XmlForm.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> プロパティは、XML 要素は、修飾名または修飾されていないかどうかを決定します。<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> プロパティは、1999 http:\/\/www.w3.org 仕様に準拠している `Namespaces in XML`します。  
  
 場合、 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> プロパティが設定すると、任意の値に設定されている、 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> プロパティを `XmlSchemaForm.Unqualified` 例外をスローします。  
  
 既定の設定 `XmlSchemaForm.None`, 、指示、 <xref:System.Xml.Serialization.XmlSerializer> 、スキーマ名前空間を修飾するかどうかを判断する XML ドキュメントを確認します。 スキーマで個々 の要素または属性の値が指定されていない場合、 <xref:System.Xml.Serialization.XmlSerializer> を使用して、 `elementFormDefault` と `attributeFormDefault` 要素または属性を修飾するかどうかを確認します。 次の XML コードは、スキーマを示します。  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 ときに、 <xref:System.Xml.Serialization.XmlSerializer> 、スキーマを読み取り、 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 両方の値、 `Name` と `Number` は `XmlSchemaForm.None`, が、 `Name` 要素を修飾すると、中に、 `Number` 要素が修飾されていません。  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Xml.Serialization.XmlAttributeAttribute> クラスに含まれる 2 つのフィールドにします。  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 属性の XML 名前空間を設定します。</summary>
        <value>XML 属性の XML 名前空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> Http:\/\/www.w3.org 仕様に準拠しているプロパティ `Namespaces in XML`します。  
  
 プレフィックスに関連付けられている名前空間を作成するには、作成する必要があります、 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 名前空間と XML ドキュメントで使用されるプレフィックスを含むオブジェクト。 各名前空間を設定する <xref:System.Xml.Serialization.XmlAttributeAttribute> 内の名前空間のいずれかに一致する必要があります、 <xref:System.Xml.Serialization.XmlSerializerNamespaces> オブジェクトです。 ときに、 <xref:System.Xml.Serialization.XmlSerializer> XML コードを生成それぞれの属性名を正しくプレフィックスします。  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Xml.Serialization.XmlAttributeAttribute> クラスに含まれる 2 つのフィールドにします。 設定すると、例を <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> メンバー識別子以外の値には、各属性のプロパティです。  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 属性の複合型を設定します。</summary>
        <value>XML 属性の型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>