<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>生成されるスキーマを制御、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスがシリアル化と、SOAP でエンコードされた XML とします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.SoapTypeAttribute> を制御する属性のファミリに属しているクラスが、どのように <xref:System.Xml.Serialization.XmlSerializer> でエンコードされた SOAP XML としてオブジェクトを逆シリアル化またはシリアル化します。 結果の XML は、World Wide Web Consortium\) \(www.w3.org\) のドキュメントを"Simple Object Access Protocol \(SOAP\) 1.1"のセクション 5 に準拠しています。 類似する属性の一覧については、次を参照してください。 [&#91;\<topic:\/\/cpconAttributesThatControlSOAPEncodedSerialization\>&#93;](http://msdn.microsoft.com/ja-jp/93ee258c-9c0f-4a08-897c-c10db7a00f91)します。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化するために作成、 <xref:System.Xml.Serialization.XmlSerializer> を使用して、 <xref:System.Xml.Serialization.XmlTypeMapping> で作成された、 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> のメソッド、 <xref:System.Xml.Serialization.SoapReflectionImporter> クラスです。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute> クラス宣言にのみ適用できます。  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> プロパティは、生成された XML ストリームの XML スキーマ ドキュメント \(.xsd\) の結果として得られる XML 要素の型が含まれているかどうかを決定します。 スキーマを表示するには、DLL ファイルにクラスをコンパイルします。 引数として生成されたファイルを渡す、 [&#91;\<topic:\/\/cpconXMLSchemaDefinitionToolXsdexe\>&#93;](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2)です。 ツールのインスタンスで、クラスがシリアル化する場合に生成される XML ストリームの XML スキーマの生成、 <xref:System.Xml.Serialization.XmlSerializer> クラスです。  
  
 別の名前空間を設定すると、クラスがシリアル化する場合に生成される XML ストリームを別のスキーマ \(.xsd\) ファイルに書き込む場合、Xsd.exe とします。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> と共に、クラスに適用されるが、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成、 <xref:System.Xml.Serialization.SoapTypeAttribute> 型のシリアル化をオーバーライドする場合。 オブジェクトに割り当てる、 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> し、追加、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapAttributeOverrides>です。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要です。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">XML の名前を入力する、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスをシリアル化 \(および、クラスのインスタンスを逆シリアル化時に認識される\) 場合に生成します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスし、XML 型の名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成、 <xref:System.Xml.Serialization.SoapTypeAttribute> 型のシリアル化をオーバーライドする場合。 オブジェクトに割り当てる、 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> し、追加、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapAttributeOverrides>です。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要です。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">XML の名前を入力する、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスをシリアル化 \(および、クラスのインスタンスを逆シリアル化時に認識される\) 場合に生成します。</param>
        <param name="ns">型の XML 名前空間。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスし、型の XML 名前空間と名前を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成、 <xref:System.Xml.Serialization.SoapTypeAttribute> 型のシリアル化をオーバーライドする場合。 オブジェクトに割り当てる、 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> し、追加、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapAttributeOverrides>です。 参照してください、 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP シリアル化のオーバーライドの詳細については、クラスの概要です。  
  
 設定した場合、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 種類以上の値 \(異なる 2 つ以上のクラスに属性を適用する場合は、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 つの値\)、 [XML スキーマ定義ツール \(Xsd.exe\)](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2) 種類ごとに個別のスキーマ ファイル \(.xsd\) を生成します。 これは、種類ごとに別の名前空間を設定するレンダリング各種、他のユーザーから、異なる各種類に対する個別のエンティティとして記述するために必要な機能を備えているためです。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または SOAP エンコード済み XML スキーマ ドキュメントの種類を含めるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> SOAP エンコード済み XML スキーマ ドキュメントで型を含めるそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 適用、 <xref:System.Xml.Serialization.SoapTypeAttribute> 型を XML スキーマ ドキュメントに含めるかどうかを指定するクラスの宣言にします。 プロパティの設定の結果を表示する、 <xref:System.Xml.Serialization.SoapTypeAttribute> クラス、実行可能ファイルまたは DLL として、アプリケーションをコンパイルおよび結果として得られるファイルを渡す、 [XML スキーマ定義ツール \(Xsd.exe\)](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2)します。 このツールは、クラスがシリアル化する場合に生成される XML ストリームの種類の定義を含むスキーマを書き込みます。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 型の名前空間を設定します。</summary>
        <value>XML 型の名前空間。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定した場合、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 種類以上の値 \(異なる 2 つ以上のクラスに属性を適用する場合は、 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 1 つの値\)、 [XML スキーマ定義ツール \(Xsd.exe\)](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2) 種類ごとに個別のスキーマ ファイル \(.xsd\) を生成します。 これは、種類ごとに別の名前空間を設定するレンダリング各種、他のユーザーから、異なる各種類に対する個別のエンティティとして記述するために必要な機能を備えているためです。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XML 型の名前を設定します。</summary>
        <value>XML 型の名前。 既定では、クラス名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 適用、 <xref:System.Xml.Serialization.SoapTypeAttribute> XML 型の名前空間、XML 型の名前と型を XML スキーマ ドキュメントに含めるかどうかを指定するためにクラスです。 設定の結果を表示する、 <xref:System.Xml.Serialization.SoapTypeAttribute> オブジェクトのプロパティが、アプリケーション実行可能ファイルまたは DLL としてコンパイルしを結果として得られるファイルを渡すと、 [XML スキーマ定義ツール \(Xsd.exe\)](http://msdn.microsoft.com/ja-jp/a6e6e65c-347f-4494-9457-653bf29baac2)します。 このツールは、型定義を含むスキーマを書き込みます。  
  
   
  
## 例  
 次の例は、という名前のクラスをシリアル化 `Group`します。<xref:System.Xml.Serialization.SoapTypeAttribute> を持つクラスに適用される、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"に設定します。<xref:System.Xml.Serialization.SoapTypeAttribute> はもオーバーライドされると、変更、 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 「チーム」にします。 2 つのファイルにその結果、両方のバージョンがシリアル化: SoapType.xml と SoapType2.xml です。  
  
 [!code-cpp[SoapTypeAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>