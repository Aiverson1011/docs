<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールが、どのように <see cref="T:System.Xml.Serialization.XmlSerializer" /> 列挙体のメンバーをシリアル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.Serialization.SoapEnumAttribute> を制御する属性のファミリに属しているクラスが、どのように <xref:System.Xml.Serialization.XmlSerializer> でエンコードされた SOAP XML としてオブジェクトを逆シリアル化またはシリアル化します。 生成される XML は、W3C \(World Wide Web Consortium\) \(www.w3.org\) のドキュメント『Simple Object Access Protocol \(SOAP\) 1.1』のセクション 5 に準拠します。 類似する属性の一覧については、次を参照してください。 [&#91;\<topic:\/\/cpconAttributesThatControlSOAPEncodedSerialization\>&#93;](http://msdn.microsoft.com/ja-jp/93ee258c-9c0f-4a08-897c-c10db7a00f91)します。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化するを作成する必要があります、 <xref:System.Xml.Serialization.XmlSerializer> を使用して、 <xref:System.Xml.Serialization.XmlTypeMapping> で作成された、 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> のメソッド、 <xref:System.Xml.Serialization.SoapReflectionImporter> クラスです。  
  
 使用して、 <xref:System.Xml.Serialization.SoapEnumAttribute> 列挙型を変更するのにする、 <xref:System.Xml.Serialization.XmlSerializer> を生成するか \(シリアル化または、それぞれ、クラスを逆シリアル化\) 場合を認識します。 例では、列挙体には、という名前のメンバーが含まれている場合の `One`, 、XML 出力が指定したいが、 `Single`, 、適用、 <xref:System.Xml.Serialization.SoapEnumAttribute> に列挙体のメンバーを設定し、 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> プロパティを提供する「単一」にします。  
  
 オーバーライドすることができます、 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> のプロパティの値、 <xref:System.Xml.Serialization.SoapEnumAttribute> のインスタンスを作成することで、 <xref:System.Xml.Serialization.SoapEnumAttribute> クラスおよびに割り当てること、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes>です。 詳細については、「、 <xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要です。  
  
 エンコードされた SOAP メッセージとしてオブジェクトをシリアル化するを作成する必要があります、 <xref:System.Xml.Serialization.XmlSerializer> を使用して、 <xref:System.Xml.Serialization.XmlTypeMapping> で作成された、 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> のメソッド、 <xref:System.Xml.Serialization.SoapReflectionImporter> クラスです。  
  
> [!NOTE]
>  語を使用できます `SoapEnum` 代わりに、コードで <xref:System.Xml.Serialization.SoapEnumAttribute>します。  
  
 属性の使用方法については、「[&#91;\<topic:\/\/cpconExtendingMetadataUsingAttributes\>&#93;](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
   
  
## 例  
 次の例では、 <xref:System.Xml.Serialization.XmlSerializer> という名前のクラスをシリアル化する `Food` という名前の列挙を含む `FoodType`します。`FoodType` 列挙体が作成することでオーバーライドされる、 <xref:System.Xml.Serialization.SoapEnumAttribute> の各列挙と設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapEnumAttribute>です。<xref:System.Xml.Serialization.SoapAttributes> に追加、 <xref:System.Xml.Serialization.SoapAttributeOverrides> 作成に使用される、 <xref:System.Xml.Serialization.XmlSerializer>です。  
  
 [!code-cpp[SoapEnumOverrides\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> を既存の列挙体をオーバーライドします。 新しい <xref:System.Xml.Serialization.SoapEnumAttribute>, そのプロパティを設定し、オブジェクトを割り当てます、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes>です。 列挙体の各メンバーに対して作成する必要が新しい <xref:System.Xml.Serialization.SoapAttributes> にそれを追加し、 <xref:System.Xml.Serialization.SoapAttributeOverrides>です。 詳細については、次を参照してください。、 <xref:System.Xml.Serialization.SoapAttributeOverrides> クラスの概要です。  
  
> [!NOTE]
>  語を使用できます `SoapEnum` 代わりに、コードで <xref:System.Xml.Serialization.SoapEnumAttribute>します。  
  
   
  
## 例  
 次の例では、 <xref:System.Xml.Serialization.XmlSerializer> という名前のクラスをシリアル化する `Food` という名前の列挙を含む `FoodType`します。`FoodType` 列挙体が作成することでオーバーライドされる、 <xref:System.Xml.Serialization.SoapEnumAttribute> の各列挙と設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapEnumAttribute>です。<xref:System.Xml.Serialization.SoapAttributes> に追加、 <xref:System.Xml.Serialization.SoapAttributeOverrides> 作成に使用される、 <xref:System.Xml.Serialization.XmlSerializer>です。  
  
 [!code-cpp[SoapEnumOverrides\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">によって生成される XML 要素名、 <see cref="T:System.Xml.Serialization.XmlSerializer" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの指定された要素名を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定の <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 、列挙に見つかった場合、生成された XML 列挙子が列挙子とは異なります。  
  
> [!NOTE]
>  語を使用できます `SoapEnum` 代わりに、コードで <xref:System.Xml.Serialization.SoapEnumAttribute>します。  
  
   
  
## 例  
 次の例では、 <xref:System.Xml.Serialization.XmlSerializer> という名前のクラスをシリアル化する `Food` という名前の列挙を含む `FoodType`します。`FoodType` 列挙体が作成することでオーバーライドされる、 <xref:System.Xml.Serialization.SoapEnumAttribute> の各列挙と設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapEnumAttribute>です。<xref:System.Xml.Serialization.SoapAttributes> に追加、 <xref:System.Xml.Serialization.SoapAttributeOverrides> 作成に使用される、 <xref:System.Xml.Serialization.XmlSerializer>です。  
  
 [!code-cpp[SoapEnumOverrides\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントは XML で生成された値を取得または設定の場合、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 列挙型、または列挙型のメンバーを逆シリアル化時に認識する値をシリアル化します。</summary>
        <value>XML で生成された値時期を文書化、 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 列挙型、または列挙型のメンバーを逆シリアル化時に認識値をシリアル化します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定の <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 、列挙に見つかった場合、生成された XML 列挙子が列挙子とは異なります。  
  
> [!NOTE]
>  語を使用できます `SoapEnum` という短いのではなく <xref:System.Xml.Serialization.SoapEnumAttribute>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Xml.Serialization.XmlSerializer> という名前のクラスをシリアル化する `Food` という名前の列挙を含む `FoodType`します。`FoodType` 列挙体が作成することでオーバーライドされる、 <xref:System.Xml.Serialization.SoapEnumAttribute> の各列挙と設定、 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> のプロパティ、 <xref:System.Xml.Serialization.SoapAttributes> に、 <xref:System.Xml.Serialization.SoapEnumAttribute>です。<xref:System.Xml.Serialization.SoapAttributes> に追加、 <xref:System.Xml.Serialization.SoapAttributeOverrides> 作成に使用される、 <xref:System.Xml.Serialization.XmlSerializer>です。  
  
 [!code-cpp[SoapEnumOverrides\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>