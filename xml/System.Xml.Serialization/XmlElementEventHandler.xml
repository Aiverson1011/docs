<Type Name="XmlElementEventHandler" FullName="System.Xml.Serialization.XmlElementEventHandler">
  <TypeSignature Language="C#" Value="public delegate void XmlElementEventHandler(object sender, XmlElementEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlElementEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Xml.Serialization.XmlElementEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">A <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> イベント データを格納します。</param>
    <summary>処理するメソッドを表す、 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> のイベント、 <see cref="T:System.Xml.Serialization.XmlSerializer" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成するときに、 <xref:System.Xml.Serialization.XmlElementEventHandler> デリゲート、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> を呼び出したときのみイベントが発生した、 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> メソッドです。  
  
   
  
## 例  
 次の例には、という名前のクラスが逆シリアル化 `Group` UnknownElements.xml という名前のファイルからです。 要素は、クラスに対応するメンバーがないファイル内にあるときに、 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> イベントが発生します。 この例を実行するには、UnknownElements.xml という名前のファイルに次の XML コードを貼り付けます。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>