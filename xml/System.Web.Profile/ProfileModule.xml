<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>プロファイル イベント、ユーザー プロファイルの作成を管理します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET を使用して、ユーザー プロファイルが有効にすると、 <xref:System.Web.Profile.ProfileModule> ユーザー プロファイルを作成し、保存、 <xref:System.Web.HttpContext.Profile%2A> 、現在のプロパティ <xref:System.Web.HttpContext>します。  
  
 <xref:System.Web.Profile.ProfileModule> 次に、アプリケーションで認証を構成する処理できるイベントを公開します。  
  
-   <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> イベント、匿名ユーザーのログイン時に、認証済みのプロファイルに匿名プロファイルからプロファイル設定を移行します。  
  
-   <xref:System.Web.Profile.ProfileModule.Personalize> イベント、ユーザー プロファイルを作成する方法をカスタマイズします。  
  
-   <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> ときに、ユーザー プロファイルが保存された方法を制御する、イベント、 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> にプロパティが設定されている `true`します。  
  
 ユーザー プロファイルを有効にする方法については、次を参照してください。 [profile 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)します。  
  
   
  
## 例  
 次の例では、匿名の識別および匿名ユーザーをサポートするプロファイルのプロパティを使用する Web.config ファイルを示します。  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 次のコード例は、 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> 、ASP.NET アプリケーションの Global.asax ファイルに含まれるイベントです。<xref:System.Web.Profile.ProfileModule.MigrateAnonymous> イベントは、匿名プロファイルからプロファイル プロパティの値を現在のユーザーのプロファイルにコピーします。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Profile.ProfileModule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。  
  
 <xref:System.Web.HttpApplication> は ASP.NET アプリケーションを起動するときに作成します。<xref:System.Web.HttpApplication> 呼び出し、 <xref:System.Web.Profile.ProfileModule> コンス トラクターを作成する、 <xref:System.Web.Profile.ProfileModule> アプリケーションです。<xref:System.Web.Profile.ProfileModule> はアプリケーションの構成で指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Profile.ProfileModule" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is not intended to be called from application code.  
  
 An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the <xref:System.Web.Profile.ProfileModule.Dispose%2A> method when the object is released. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">現在のアプリケーション。</param>
        <summary>初期化を呼び出すときにコードを <see cref="T:System.Web.Profile.ProfileModule" /> オブジェクトを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.HttpApplication> は ASP.NET アプリケーションを起動するときに作成します。<xref:System.Web.HttpApplication> 呼び出し、 <xref:System.Web.Profile.ProfileModule.Init%2A> メソッドを作成するとき、 <xref:System.Web.Profile.ProfileModule> アプリケーションです。<xref:System.Web.Profile.ProfileModule> はアプリケーションの構成で指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロファイルに対する匿名のユーザーがログインするときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセスできる、 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> のイベント、 <xref:System.Web.Profile.ProfileModule> を使用して ASP.NET アプリケーションの Global.asax ファイル内のクラス、 `Profile_MigrateAnonymous` グローバル イベントで、このトピックの例に示すようにします。  
  
 使用することができます、 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> イベント プロファイル プロパティをコピーする値を匿名プロファイルから認証済みのプロファイルに、アプリケーションが匿名でを使用したユーザーがログインするとします。  
  
 ASP.NET が型の新しいクラスを作成して有効になっているユーザー プロファイルを持つアプリケーションが開始されると、 `ProfileCommon`, から継承される、 <xref:System.Web.Profile.ProfileBase> クラスです。 厳密に型指定されたアクセサーに追加、 `ProfileCommon` 構成セクションで定義されている各プロパティのクラスです。 A `GetProfile` メソッドを使用すると、取得、 `ProfileCommon` オブジェクトに基づいて、ユーザー名。 使用することができます、 `GetProfile` 匿名プロファイルのプロパティ値を取得する現在の認証済みのプロファイルのメソッドです。 匿名のプロパティの値は、認証されたユーザーの現在のプロファイルにコピーできます。  
  
   
  
## 例  
 次の例では、匿名の識別および匿名ユーザーをサポートするプロファイルのプロパティを使用する Web.config ファイルを示します。  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 次のコード例は、 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> 、ASP.NET アプリケーションの Global.asax ファイルに含まれるイベントです。<xref:System.Web.Profile.ProfileModule.MigrateAnonymous> イベントは、匿名プロファイルからプロファイル プロパティの値を現在のユーザーのプロファイルにコピーします。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー プロファイルが作成される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileModule.Personalize> 中にイベントが発生した、 <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> イベントです。 アクセスできる、 <xref:System.Web.Profile.ProfileModule.Personalize> のイベント、 <xref:System.Web.Profile.ProfileModule> クラスを使用して ASP.NET アプリケーションの Global.asax ファイルで、 `Profile_Personalize` グローバル イベントとして、このトピックの例に示すようにします。  
  
 使用することができます、 <xref:System.Web.Profile.ProfileModule.Personalize> カスタム ユーザー プロファイルを指定するイベントです。 場合、 <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> に指定されたプロパティ値、 <xref:System.Web.Profile.ProfileEventHandler> のイベント ハンドラー、 <xref:System.Web.Profile.ProfileModule.Personalize> イベントはない値に設定されている `null` ときに、 <xref:System.Web.Profile.ProfileModule.Personalize> イベントの終了時刻、 <xref:System.Web.Profile.ProfileModule> の指定した値を使用、 <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> プロパティの値として、 <xref:System.Web.HttpContext.Profile%2A> 、現在のプロパティ <xref:System.Web.HttpContext>します。  
  
   
  
## 例  
 次のコード例は、 <xref:System.Web.Profile.ProfileModule.Personalize> イベントは、アプリケーションの Global.asax ファイルで宣言されています。 イベントのコードでは、ロールのメンバーシップに基づくユーザーのユーザー プロファイルを読み込みます。  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロファイルの自動保存が有効になっている場合は、ページの実行の最後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> イベントはページの実行の最後に、 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> プロパティは `true`です。 アクセスできる、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> のイベント、 <xref:System.Web.Profile.ProfileModule> クラスを使用して ASP.NET アプリケーションの Global.asax ファイルで、 `Profile_ProfileAutoSaving` グローバル イベントで、このトピックの例に示すようにします。  
  
 <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> メソッド チェック、 <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> の各プロパティの値 <xref:System.Configuration.SettingsPropertyValue> かどうかについてのプロパティをユーザー プロファイルにプリミティブ型、文字列の構成または <xref:System.DateTime> オブジェクトが変更されました。<xref:System.Configuration.SettingsBase.Save%2A> メソッドは、カスタム クラスが変更されたかどうか明示的に決定ことはできません。 使用することができます、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> カスタム オブジェクトが変更されたかどうか、および変更したオブジェクトの保存、automatic モードで続行するかを判断する場合、またはオブジェクトを変更していない場合は、自動保存をキャンセルするイベントです。  
  
 プロファイルの自動保存操作をキャンセルする、 <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> プロパティを `false` で、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> イベントです。 それ以外の場合、設定、 <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> プロパティを `true`します。  
  
 複数のサブスクライバーがある可能性があります、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> イベントです。<xref:System.Web.Profile.ProfileModule> が使用する最後の値を <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> プロパティに設定されています。 明示的に設定するため、勧め、 <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> プロパティに、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> イベントをキャンセルまたは自動を続行するかどうかを付けて、以前のサブスクライバーによって設定された値を上書きする必要があります。  
  
   
  
## 例  
 次のコード例は、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> 、ASP.NET アプリケーションの Global.asax ファイルに含まれるイベントです。  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>