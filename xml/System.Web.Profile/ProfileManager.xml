<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー プロファイル データと設定を管理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET プロファイルを使用してを保存およびデータベースなどのデータ ソース内のユーザー設定を取得します。 使用して、ユーザー プロファイルをアクセス、 <xref:System.Web.HttpContext.Profile%2A> 、現在のプロパティ <xref:System.Web.HttpContext>します。 プロファイルの情報とプロパティの値は、プロファイル プロバイダーを使用して管理されます。  
  
 <xref:System.Web.Profile.ProfileManager> プロファイル設定の管理、ユーザー プロファイルを検索および使用して、不要になったユーザー プロファイルを削除するクラスを使用します。<xref:System.Web.Profile.ProfileManager> クラスには、静的メソッドおよび参照することでアクセスできるプロパティが用意されています、 <xref:System.Web.Profile.ProfileManager> 、アプリケーション コード内のクラスです。 例についてを参照してくださいの使用例」セクションを参照し、その他の例のトピックでのメンバーに対して、 <xref:System.Web.Profile.ProfileManager> クラスです。  
  
 既定では、すべての ASP.NET アプリケーションのユーザー プロファイルは無効です。 ユーザー プロファイルを有効にするには設定、 `enabled` を true に次の例に示すように構成要素の属性です。  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 ユーザー プロファイルの詳細については、次を参照してください。 [ASP.NET Profile Properties Overview](http://msdn.microsoft.com/ja-jp/89439440-92ea-48c3-a4bd-dea40307899d)します。  
  
 プロファイル プロバイダーを使用してを保存およびユーザー プロファイルのプロパティを取得します。 .NET Framework は、 <xref:System.Web.Profile.SqlProfileProvider> SQL Server データベースにユーザー プロファイル プロパティを格納するクラス。 A <xref:System.Web.Profile.SqlProfileProvider> という名前のインスタンス `AspNetSqlProvider` は既定のプロファイル プロバイダーとしてのマシン構成で指定します。`AspNetSqlProvider` インスタンスがローカル Web サーバーの SQL Server データベースに接続します。 指定できます、 <xref:System.Web.Profile.SqlProfileProvider> 構成要素を使用して既定のプロファイル プロバイダーとして別の SQL Server に接続して、 `defaultProvider` ように次の例に示すように、構成要素の属性です。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページの表示、 <xref:System.Web.Profile.ProfileManager> を非アクティブなプロファイルを管理するクラス。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-vb[System.Web.Profile.ProfileManager\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" />
      </Parameters>
      <Docs>
        <param name="property">プロパティの設定を追加します。</param>
        <summary>プログラムを使用して、プロファイル プロパティを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは機能的にプロパティを追加するのには、 `profile` 構成ファイルのセクションです。 プロファイル プロパティを追加するには、このメソッドを呼び出すでマークされているメソッドの呼び出しを行う必要があります、 <xref:System.Web.PreApplicationStartMethodAttribute> 属性です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または格納およびプロファイル情報を取得する対象のアプリケーションの名前を設定します。</summary>
        <value>プロファイル情報を格納および取得するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager> を使用して、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> にプロファイル情報をさまざまなアプリケーションに関連付けるプロパティ。 これにより、複数のアプリケーションを同じデータベースを使用して、重複するユーザー間で競合が発生することがなくユーザー情報を保存できます。 複数の ASP.NET アプリケーションは、同じユーザー データベースを使用してに同じ値を指定することによって、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティです。<xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティをプログラムで設定できるまたはことで設定できます宣言によって Web アプリケーションの構成ファイルを使用して、 `applicationName` 属性です。  
  
 値が指定されていない場合、 `applicationName` .NET Framework に含まれているプロファイル プロバイダーを使用して、Web アプリケーションの構成ファイルで属性、 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> ASP.NET アプリケーションのプロパティの値。 非 ASP.NET アプリケーションを既定値は、 <xref:System.Diagnostics.ProcessModule.ModuleName%2A> ファイル拡張子のないプロパティの値。  
  
 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティを公開、 <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> 既定のプロファイル プロバイダーのプロパティです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合は、別のアプリケーション名で構成することがあります。 既定のプロバイダー以外のプロファイル プロバイダーのアプリケーション名にアクセスするを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティとアクセス、 <xref:System.Configuration.SettingsProvider.ApplicationName%2A> 直接プロバイダーのプロパティです。  
  
> [!CAUTION]
>  すべてで処理された要求の 1 つの既定のプロファイル プロバイダーのインスタンスが使用されるため、 <xref:System.Web.HttpApplication> オブジェクト、複数の要求が同時に実行し、設定しようとした、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティの値。<xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティは複数の書き込みに対して安全、かつ変化のスレッドではありません、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティの値は、アプリケーションの複数のユーザーに対して予期しない動作をされることができます。 設定できるコードを記述しないことをお勧めしますが、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティが必要になる場合を除き、します。 アプリケーションの例の設定場所、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティが必要な可能性がありますが複数のアプリケーションのプロファイル データを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。  
  
   
  
## 例  
 次の構成ファイルの抜粋では、ASP.NET アプリケーションの Web.config ファイルのセクションで、要素を示します。 アプリケーションの既定のプロファイル プロバイダーに設定して、 <xref:System.Web.Profile.SqlProfileProvider> インスタンスとセット、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> に `MyApplication`です。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET ページの実行の最後に、ユーザー プロファイルを自動的に保存するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ASP.NET ページの実行の最後に、ユーザー プロファイルが自動的に保存されている場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> プロパティは、アプリケーションのユーザー プロファイルの自動保存が有効になっているかどうかを示します。 自動保存が有効になっている場合、 <xref:System.Web.Profile.ProfileModule> オブジェクト、 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> イベントと呼び出し、 <xref:System.Web.Profile.ProfileBase.Save%2A> メソッド中に、 <xref:System.Web.HttpApplication.EndRequest> ASP.NET ページの実行の終了時にイベントです。  
  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> を使用してプロパティを設定、 `automaticSaveEnabled` 、ASP.NET アプリケーションの Web.config ファイル内の要素の属性です。  
  
   
  
## 例  
 次の構成ファイルの抜粋では、ASP.NET アプリケーションの Web.config ファイルのセクションで、要素を示します。 指定するアプリケーションの既定のプロファイル プロバイダー、 <xref:System.Web.Profile.SqlProfileProvider> インスタンスとセット、 `automaticSaveEnabled` 属性を `true`します。  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">取得しようとしましたが、 <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> プロパティ値は、少なくともせず <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 権限です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルを削除します。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> を識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <summary>最後のアクティビティの日付と時刻で指定した日付と時刻の前に起こったをユーザー プロファイル データを削除します。</summary>
        <returns>データ ソースから削除するプロファイルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> メソッドを使用してで指定されたアプリケーションのデータ ソースから未使用のプロファイル データを削除、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかのプロファイルを <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> または、指定された操作が発生 `userInactiveSinceDate` パラメーターの値を削除します。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のデータ ソース内のプロファイル情報は削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを削除するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 ボタンは、指定した日数の使用された、したがって使用頻度の低いと見なさすべてのプロファイルを削除するのには提供されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-vb[System.Web.Profile.ProfileManager\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">削除するプロファイルのユーザー名。</param>
        <summary>データ ソースから指定されたユーザー名のプロファイルを削除します。</summary>
        <returns>
          <see langword="true" /> ユーザー プロファイルが見つかり、削除された場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> メソッドすべてのプロファイル情報と、指定されたユーザー プロファイルのプロパティを削除 `username` 、指定されたデータ ソースから <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>します。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 削除操作を実行する既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。<xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> を削除する 1 つのプロファイルを選択すると、メソッドが呼び出されます。 プロファイルがアクティブでないと見なされるかどうかを指定した日付に基づいて、 `userInactiveSinceDate` に渡されるパラメーター値、 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-vb[System.Web.Profile.ProfileManager\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列 \(""\) またはコンマが含まれています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">削除するプロファイルのユーザー名の文字列配列。</param>
        <summary>プロファイルのプロパティとユーザー名のリストで指定された情報を削除します。</summary>
        <returns>データ ソースから削除するプロファイルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドで指定されたアプリケーションのデータ ソースからのすべてのプロファイル情報と指定したプロファイルのプロパティの削除、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティです。 削除するプロファイルの一覧については、ユーザー名の文字列の配列として指定します。 プロファイルのプロパティと情報のユーザー名のデータ ソースに存在する場合、 `usernames` パラメーターは、削除されます。  
  
 戻り値の指定した配列の長さが異なる場合があります `usernames`します。 示しますいくつかの指定した配列内のプロファイルの `usernames` データ ストアから既に削除されていた。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 A <xref:System.Web.UI.WebControls.GridView> コントロールには、返される非アクティブなプロファイルが表示されます。 行ごと、 <xref:System.Web.UI.WebControls.GridView> コントロールへの呼び出しでデータ ソースからその行のプロファイルを削除するボタンには、 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-vb[System.Web.Profile.ProfileManager\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernames" /> の長さが 0 です。  
  
 または  
  
 内の項目のいずれかの <paramref name="usernames" /> 空の文字列 \(""\) またはコンマが含まれています。  
  
 または  
  
 2 つ以上の項目で <paramref name="usernames" /> 値が同じであります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> は <see langword="null" /> です。  
  
 または  
  
 内の項目のいずれかの <paramref name="usernames" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> を削除するプロファイルのプロファイル情報を格納しています。</param>
        <summary>プロファイルのリストで指定されたデータ ソースからプロファイル プロパティと情報を削除します。</summary>
        <returns>データ ソースから削除するプロファイルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドで指定されたアプリケーションのデータ ソースからのすべてのプロファイル情報と指定したプロファイルのプロパティの削除、 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティです。 使用して削除するプロファイルの一覧を指定する <xref:System.Web.Profile.ProfileInfoCollection> として渡された、 `profiles` パラメーター。 A <xref:System.Web.Profile.ProfileInfoCollection> から返される、 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, 、<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, 、<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, 、および <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドです。  
  
 戻り値が異なる場合がありますなお、 <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> 指定された値 <xref:System.Web.Profile.ProfileInfoCollection>です。 示します一部の指定したプロファイル <xref:System.Web.Profile.ProfileInfoCollection> データ ストアから既に削除されていた。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルには、既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれていますは削除されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルのプロパティを削除するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例は、ユーザーを使用してプロファイルを検索する、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> と <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドです。 ユーザーへの呼び出しで返されるプロファイルを削除し、できる、 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-vb[System.Web.Profile.ProfileManager\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> 値は 0 です。  
  
 または  
  
 いずれか、 <see cref="T:System.Web.Profile.ProfileInfo" /> 内のオブジェクト <paramref name="profiles" /> が、 <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> は空の文字列 \(""\)、コンマが含まれるか。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> は <see langword="null" /> です。  
  
 または  
  
 いずれか、 <see cref="T:System.Web.Profile.ProfileInfo" /> オブジェクト <paramref name="profiles" /> が、 <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> つまり <see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのユーザー プロファイルが有効になっているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザー プロファイルが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、アプリケーションのユーザー プロファイルが有効になっている、 `enabled` 構成要素の属性です。  
  
   
  
## 例  
 次のコード例では、ユーザー プロファイルが有効になって、ASP.NET アプリケーションの Web.config ファイルのセクションで、要素を示します。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="usernameToMatch">検索対象のユーザー名。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> を識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <summary>指定した日付より前に、または、アクティビティの最後の日付が発生したし、時間とプロファイルのユーザー名が指定した名前と一致するすべてのプロファイルのプロファイル情報を取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> ユーザー名が、指定された一致する非アクティブなプロファイルのユーザー プロファイル情報を含む <paramref name="usernameToMatch" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> で指定されたアプリケーションのすべての未使用のユーザー プロファイルのプロファイル情報を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 このメソッドは、プロファイルのユーザー名が、指定されたを一致プロファイルのみを取得 `usernameToMatch` パラメーターの値。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのいずれかのプロファイルを <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> または、指定された操作が発生 `userInactiveSinceDate` パラメーターの値が返されます。  
  
 オーバー ロードを使用してデータのページでは、この情報を取得する、 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> を受け取る追加メソッド `pageIndex` と `pageSize` パラメーター。  
  
> [!NOTE]
>  プロファイル プロバイダーでのワイルドカード文字はサポート可能性があります、 `usernameToMatch` パラメーター。 たとえば、 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> のメソッド、 <xref:System.Web.Profile.SqlProfileProvider> クラスでワイルドカード文字をサポートする、 `usernameToMatch` パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、ユーザーに対して入力、 `usernameToMatch` 値と <xref:System.Web.Profile.ProfileAuthenticationOption> プロファイル、一致するプロファイルの情報の列挙値を取得します。 このサンプルは、のみ非アクティブなプロファイルを返すかどうかを指定できます。 ユーザーが非アクティブなプロファイルのみを指定した場合、 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドが呼び出された場合は、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-vb[System.Web.Profile.ProfileManager\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> が空の文字列 \(""\) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> の値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="usernameToMatch">検索対象のユーザー名。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> を識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">このメソッドが戻るとき、プロファイルの合計数を識別する整数を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>プロファイルのプロファイル、または指定した日付より前に、最後のアクティビティの日付が発生したし、時間とプロファイルのユーザー名が指定した名前と一致するデータ ページの情報を取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> がユーザー名と一致する、指定された非アクティブなプロファイルのユーザー プロファイル情報を含む <paramref name="usernameToMatch" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> で指定されたアプリケーションを使用していないユーザー プロファイルのプロファイル情報を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 このメソッドはユーザー名が、指定されたを一致プロファイルのみを取得 `usernameToMatch` パラメーターの値。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルの任意のプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> または、指定された操作が発生 `userInactiveSinceDate` パラメーターの値。  
  
 によって返される結果 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Profile.ProfileInfo> で返されるオブジェクト、 <xref:System.Web.Profile.ProfileInfoCollection> コレクションです。`pageIndex` パラメーターが返される結果のページを示します。 0 は最初のページを識別します。`totalRecords` パラメーターは、 `out` 、構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター `applicationName`, に基づいて、 `authenticationOption` と `userInactiveSinceDate` パラメーター。 構成された 13 のユーザーがある場合など `applicationName`, 、および `pageIndex` 値は 1、 `pageSize` 5 の <xref:System.Web.Profile.ProfileInfoCollection> が返される 6 番目の 10 番目の非アクティブなプロファイルを含みます。`totalRecords` パラメーターを 13 に設定されます。  
  
 プロファイル プロバイダー可能性がありますでワイルドカード文字はサポート、 `usernameToMatch` パラメーター。 たとえば、 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> のメソッド、 <xref:System.Web.Profile.SqlProfileProvider> クラスでワイルドカード文字をサポートする、 `usernameToMatch` パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている非アクティブなプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、ユーザーに対して入力、 `usernameToMatch` 値と <xref:System.Web.Profile.ProfileAuthenticationOption> 値し、一致するプロファイルのプロファイル情報を取得します。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーが非アクティブなプロファイルのみを指定した場合、 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドが呼び出された場合は、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-vb[System.Web.Profile.ProfileManager\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="pageIndex" /> が 0 未満です。  
  
 または  
  
 <paramref name="pageSize" /> 1 より小さいです。  
  
 または  
  
 <paramref name="pageIndex" /> 乗算 <paramref name="pageSize" /> よりも大きい <see cref="F:System.Int32.MaxValue" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="usernameToMatch">検索対象のユーザー名。</param>
        <summary>ユーザー名が指定した名前に一致するプロファイルのすべてのプロファイル情報を取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> がユーザー名と一致する、指定されたプロファイルのユーザー プロファイル情報を含む <paramref name="usernameToMatch" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドのすべてのプロファイル情報のユーザー名と一致する、指定された一覧を返します `usernameToMatch` パラメーターの値に、構成された <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> プロパティの値。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 オーバー ロードを使用してデータのページでユーザー プロファイルのプロファイル情報を取得する、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> を受け取る追加メソッド `pageIndex` と `pageSize` パラメーター。  
  
 プロファイル プロバイダー可能性がありますでワイルドカード文字はサポート、 `usernameToMatch` パラメーター。 たとえば、 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> のメソッド、 <xref:System.Web.Profile.SqlProfileProvider> クラスでワイルドカード文字をサポートする、 `usernameToMatch` パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、ユーザーに対して入力、 `usernameToMatch` 値と <xref:System.Web.Profile.ProfileAuthenticationOption> プロファイル、一致するプロファイルの情報の列挙値を取得します。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーが非アクティブなプロファイルのみを指定した場合、 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドが呼び出された場合は、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-vb[System.Web.Profile.ProfileManager\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> が空の文字列 \(""\) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="usernameToMatch">検索対象のユーザー名。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">このメソッドが戻るとき、プロファイルの合計数を識別する整数を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>ユーザー名が指定した名前に一致するプロファイルのデータのページでプロファイル情報を取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> がユーザー名と一致する、指定されたプロファイルのユーザー プロファイル情報を含む <paramref name="usernameToMatch" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドをプロファイルのユーザー名と一致する、指定されたプロファイル情報の一覧を返します `usernameToMatch` 構成されているパラメーター値 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 プロファイル プロバイダー可能性がありますでワイルドカード文字はサポート、 `usernameToMatch` パラメーター。 たとえば、 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> のメソッド、 <xref:System.Web.Profile.SqlProfileProvider> クラスでワイルドカード文字をサポートする、 `usernameToMatch` パラメーター。  
  
 によって返される結果 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Profile.ProfileInfo> で返されるオブジェクト、 <xref:System.Web.Profile.ProfileInfoCollection>です。`pageIndex` パラメーターが返される結果のどのページを識別する 0 は最初のページを識別します。`totalRecords` パラメーターは、 `out` パラメーターで指定されたアプリケーションの非アクティブなユーザー プロファイルの合計数に設定されている、 `applicationName` に基づいて、指定された構成ファイルで属性 `authenticationOption`します。 構成された 13 のユーザーがある場合など `applicationName`, 、および `pageIndex` 値は 1、 `pageSize` 5 の <xref:System.Web.Profile.ProfileInfoCollection> が返される 6 番目の 10 番目のプロファイルを含みます。`totalRecords` パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、ユーザーに対して入力、 `usernameToMatch` 値と <xref:System.Web.Profile.ProfileAuthenticationOption> 取得プロファイルのプロファイルを一致するすべての情報とします。 例は、非アクティブなプロファイルだけを返すかどうかを指定できます。 ユーザーが非アクティブなプロファイルのみを指定した場合、 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> メソッドが呼び出された場合は、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> メソッドが呼び出されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-vb[System.Web.Profile.ProfileManager\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="pageIndex" /> が 0 未満です。  
  
 または  
  
 <paramref name="pageSize" /> 1 より小さいです。  
  
 または  
  
 <paramref name="pageIndex" /> 乗算 <paramref name="pageSize" /> よりも大きい <see cref="F:System.Int32.MaxValue" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> を識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <summary>指定した日付と時刻以前に発生した最後のアクティビティ日付プロファイルのすべてのユーザー プロファイル データを取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> 非アクティブなプロファイルに関するユーザーのプロファイル情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> で指定されたアプリケーションの未使用のユーザー プロファイルのすべてのデータ ソースからのプロファイル情報を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルの任意のプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> または、指定された操作が発生 `userInactiveSinceDate` パラメーターの値。  
  
 オーバー ロードを使用してデータのページで非アクティブなユーザー プロファイルのプロファイル情報を取得する、 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> を受け取る追加メソッド `pageIndex` と `pageSize` パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されている未使用のプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET ページを示します。 ボタンは、すべての非アクティブなプロファイルを削除するのには提供されます。 プロファイルがアクティブでないと見なされるかどうかを指定した日付に基づいて、 `userInactiveSinceDate` パラメーター。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-vb[System.Web.Profile.ProfileManager\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> を識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">このメソッドが戻るとき、プロファイルの合計数を識別する整数を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>ページを取得 <see cref="T:System.Web.Profile.ProfileInfo" /> ユーザー プロファイルが指定した日付と時刻以前に発生した最後のアクティビティの日付のオブジェクト。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> 非アクティブなプロファイルに関するユーザーのプロファイル情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> メソッドの使用を未使用のユーザー プロファイルで指定されたアプリケーション用のデータ ソースからのプロファイル情報の取得、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルの任意のプロファイルが返されますが、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 、指定の前に発生する `userInactiveSinceDate` パラメーターの値。  
  
 によって返される結果 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Profile.ProfileInfo> で返されるオブジェクト、 <xref:System.Web.Profile.ProfileInfoCollection>です。`pageIndex` パラメーターが返される結果のどのページを識別する 0 は最初のページを識別します。`totalRecords` パラメーターは、 `out` 、構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター `applicationName`, に基づいて、 `authenticationOption` と `userInactiveSinceDate` パラメーター。 などに、構成された 13 のユーザーがある場合 `applicationName`, 、および `pageIndex` 値は 1 に、 `pageSize` 5 の <xref:System.Web.Profile.ProfileInfoCollection> が返される 6 番目の 10 番目の非アクティブなプロファイルを含みます。`totalRecords` パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例では、非アクティブなプロファイルを管理する ASP.NET Web ページを示します。 ボタンは、すべての非アクティブなプロファイルを削除するのには提供されます。 プロファイルがアクティブでないと見なされるかどうかを指定した日付に基づいて、 `userInactiveSinceDate` パラメーター。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-vb[System.Web.Profile.ProfileManager\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <summary>データ ソース内のプロファイル用のユーザー プロファイル データを取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> のすべてのデータ ソースのプロファイルのユーザー プロファイル情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> で指定されたアプリケーションのデータ ソースからのプロファイル情報を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 ページを取得する <xref:System.Web.Profile.ProfileInfo> のオーバー ロードを使用して、ユーザー プロファイル用のオブジェクト、 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> を受け取る追加メソッド `pageIndex` と `pageSize` パラメーター。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例には、構成済みのプロファイルのすべてのプロファイル情報が表示されます。 `applicationName`します。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-vb[System.Web.Profile.ProfileManager\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">このメソッドが戻るとき、プロファイルの合計数を識別する整数を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>ユーザー プロファイル データのページを取得します。</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> のすべてのデータ ソースのプロファイルのユーザー プロファイル情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> で指定されたアプリケーションのデータ ソースからのプロファイル情報を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
 によって返される結果 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Profile.ProfileInfo> で返されるオブジェクト、 <xref:System.Web.Profile.ProfileInfoCollection>です。`pageIndex` パラメーターが返される結果のどのページを識別する 0 は最初のページを識別します。`totalRecords` パラメーターは、 `out` 、構成済みの非アクティブなユーザー プロファイルの合計数に設定されているパラメーター `applicationName`, 、指定されたに基づいて、 `authenticationOption`です。 などに、構成された 13 のユーザーがある場合 `applicationName`, 、および `pageIndex` 値は 1 に、 `pageSize` 5 の <xref:System.Web.Profile.ProfileInfoCollection> が返される 6 番目の 10 番目のプロファイルを含みます。`totalRecords` パラメーターを 13 に設定されます。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> メソッドの呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 既定のプロファイル プロバイダーのメソッドです。 使用して既定のプロファイル プロバイダーを指定、 `defaultProvider` 構成要素の属性です。 ユーザー プロファイルに既定のプロバイダー以外のプロファイル プロバイダーによって管理されるプロパティが含まれている場合、その他のプロファイル プロバイダのデータ ソースは検索されません。 既定のプロバイダー以外のプロファイル プロバイダーによって管理されているプロファイルを検索するを使用してプロファイル プロバイダーへの参照を取得、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロパティと呼び出し、 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> プロバイダーを直接のメソッドです。  
  
   
  
## 例  
 次のコード例には、構成済みのプロファイルのすべてのプロファイル情報が表示されます。 `applicationName` データのページにします。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-vb[System.Web.Profile.ProfileManager\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> オブジェクトを識別するユーザー プロファイルがアクティブでないと見なされます。 場合、 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> ユーザーのプロファイルにまたは発生前にこの日付と時刻をプロファイルと見なされますアクティブでないです。</param>
        <summary>指定した日付またはそれ以前は、最後のアクティビティの日付が発生したプロファイルの数を取得します。</summary>
        <returns>最後のアクティビティの日付が指定した日付と時刻の前に発生したデータ ソース内のプロファイルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> で指定されたアプリケーションのデータ ソースからのすべての未使用のユーザー プロファイルの数を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。 検索対象のプロファイルのすべてのプロファイルは、カウントを持つ、 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> または、指定された操作が発生 `userInactiveSinceDate` パラメーターの値。  
  
   
  
## 例  
 次のコード例は、ユーザーを表示および検索条件に基づいて、アクティブおよび非アクティブのプロファイルの情報を削除できます。 結果を使用して、非アクティブなプロファイルの数が表示される、 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-vb[System.Web.Profile.ProfileManager\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">いずれか、 <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 列挙値を指定する認証かどうか匿名で、または両方の種類のプロファイルが返されます。</param>
        <summary>データ ソース内のプロファイルの数を取得します。</summary>
        <returns>データ ソース内のプロファイルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A> で指定されたアプリケーションのデータ ソースからのすべてのユーザー プロファイルの数を取得するメソッドが使用される、 `applicationName` 構成ファイル内の属性です。 使用して、 `authenticationOption` のみ匿名プロファイルするかどうかを指定するパラメーターは、プロファイル、または検索対象のすべてのプロファイルにのみ認証します。  
  
   
  
## 例  
 次のコード例には、構成済みのプロファイルのすべてのプロファイル情報が表示されます。 `applicationName` し、プロファイルの数を返します。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-vb[System.Web.Profile.ProfileManager\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの既定のプロファイル プロバイダーへの参照を取得します。</summary>
        <value>アプリケーションの既定のプロファイル プロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.Provider%2A> プロパティでは、アプリケーションの既定のプロファイル プロバイダーを直接参照することができます。 これはよくはないプロファイル プロバイダーのカスタムのメンバーにアクセスする使用の一部では、 <xref:System.Web.Profile.ProfileProvider> 抽象基本クラスです。  
  
   
  
## 例  
 次のコード例は、既定のプロファイル プロバイダーのプロパティを一覧表示します。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-vb[System.Web.Profile.ProfileManager\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">取得しようとしましたが、 <see cref="P:System.Web.Profile.ProfileManager.Provider" /> プロパティ値は、少なくともせず <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 権限です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET アプリケーションのプロファイル プロバイダーのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Web.Profile.ProfileProviderCollection" /> プロファイル プロバイダーが ASP.NET アプリケーション用に構成します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Profile.ProfileManager.Providers%2A> マシンの構成で追加されたプロバイダーを含むプロパティは、すべてのアプリケーションに対して有効になっているプロファイル プロバイダーを参照して、プロバイダーは、すべての Web.config ファイルに追加します。 プロファイル プロバイダーは、構成ファイルでセクションの要素を使用して、アプリケーションの使用を制御できます。 たとえば、次の Web.config ファイルは親構成ファイルで指定されているプロファイル プロバイダーを削除し、追加、 <xref:System.Web.Profile.SqlProfileProvider> 、アプリケーションのプロファイル プロバイダーとしてのインスタンス。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 設定して既定のプロバイダーを指定する必要があります、セクションを指定する場合、 `defaultProvider` 属性です。 コンピューター構成から値が使用される Web.config ファイルでセクションを指定しない場合、 <xref:System.Web.Profile.SqlProfileProvider> AspNetSqlProvider という名前のインスタンスが既定のプロバイダーとして確立します。  
  
 プロバイダーへの参照を厳密に型を取得する、 <xref:System.Web.Profile.ProfileManager.Providers%2A> プロファイル プロバイダーを名前によってインデックスおよび目的の型としてキャストして、コレクションです。  
  
   
  
## 例  
 次のコード例では、アプリケーションとそれらの種類に対して有効なプロバイダーが一覧表示します。  
  
 [!code-csharp[System.Web.Profile.ProfileManager\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-vb[System.Web.Profile.ProfileManager\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">取得しようとしましたが、 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> プロパティ値は、少なくともせず <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 権限です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した日付と時刻以前に発生した最後のアクティビティの日付のプロファイルのユーザー プロファイル データを取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ユーザー名が指定した名前に一致するプロファイルのプロファイル情報を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した日付より前に、または、アクティビティの最後の日付が発生したし、時間とプロファイルのユーザー名は、指定した名前と一致するプロファイルのプロファイル情報を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたプロファイルの一覧については、データ ソースからプロファイル プロパティと情報を削除します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ ソース内のプロファイル用のユーザー プロファイル データを取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>