<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Web アプリケーションのキャッシュを実装します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション ドメインごとに、このクラスの 1 つのインスタンスが作成され、は、アプリケーション ドメインがアクティブな限り有効です。 このクラスのインスタンスに関する情報はを介して使用できる、`Cache`のプロパティ、<xref:System.Web.HttpContext>オブジェクトまたは`Cache`のプロパティ、<xref:System.Web.UI.Page>オブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache>クラスは、ASP.NET アプリケーションの外部で使用するものではありません。 Web アプリケーションのキャッシュを提供する ASP.NET で使用するためのテストし、設計にされました。 Windows フォーム アプリケーション、コンソール アプリケーションなど、アプリケーションの他の種類を使用して、<xref:System.Runtime.Caching.ObjectCache>クラスです。  
  
   
  
## 例  
 次の例が、キャッシュ内の項目に割り当てられた値をユーザーに表示されるページで、項目がキャッシュから削除されたときに通知します。 作成、`RemovedCallback`メソッドのシグネチャを持つの`CacheItemRemovedCallback`キャッシュ項目が削除され、使用時にユーザーに通知する、デリゲート、<xref:System.Web.Caching.CacheItemRemovedReason>列挙型を削除された理由を伝えます。 また、使用、<xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName>プロパティ キャッシュにオブジェクトを追加し、それらのオブジェクトの値を取得します。`AddItemToCache`メソッドを使用して、<xref:System.Web.Caching.Cache.Add%2A?displayProperty=fullName>キャッシュにアイテムを追加するメソッド。 使用する、`CacheItemRemovedCallback`デリゲート、キャッシュにこのメソッドを使用して項目を追加する必要がありますまたは<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>メソッド、ASP.NET が適切なメソッドを自動的に実行できることを呼び出して、項目が削除されるためです。 カスタム`RemoveItemFromCache`メソッドを使用、<xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName>メソッドは明示的に、キャッシュから項目を削除する原因と、`RemovedCallback`呼び出されるメソッド。  
  
> [!NOTE]
>  次のコードによってアクセスされるキャッシュのインスタンスのメンバーである、<xref:System.Web.UI.Page>このサンプルを継承するオブジェクト。  
  
 [!code-csharp[System.Web.Caching Examples\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-vb[System.Web.Caching Examples\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Caching.Cache" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ キーは、項目を参照するために使用します。</param>
        <param name="value">キャッシュに追加する項目。</param>
        <param name="dependencies">ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときにオブジェクトは無効なようになり、キャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <see langword="null" />です。</param>
        <param name="absoluteExpiration">時間を追加するオブジェクトが有効期限が切れるし、キャッシュから削除します。 スライド式有効期限を使用している場合、 <c>absoluteExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />します。</param>
        <param name="slidingExpiration">追加されたオブジェクトが最後にアクセスし、そのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分のと同じである場合は、オブジェクトは有効期限が切れるしが最後にアクセスした後、20 分、キャッシュから削除します。 絶対有効期限を使用している場合、 <c>slidingExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />します。</param>
        <param name="priority">によって表されるオブジェクトの相対的なコスト、 <see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙します。 キャッシュは、オブジェクトが削除されるときにこの値を使用してください。コストの低いオブジェクトは、コストの高いオブジェクトの前にキャッシュから削除されます。</param>
        <param name="onRemoveCallback">指定した場合、オブジェクトがキャッシュから削除されたときに呼び出されるデリゲート。 アプリケーションに通知する、オブジェクトがキャッシュから削除されたときに、これを使用することができます。</param>
        <summary>指定した項目を追加、 <see cref="T:System.Web.Caching.Cache" /> のオブジェクトの依存関係、有効期限と優先順位ポリシーとがデリゲートから挿入された項目が削除されると、アプリケーションに通知を使用することができます、 <see langword="Cache" />です。</summary>
        <returns>項目がキャッシュに保存されていた場合に追加された項目を表すオブジェクトそれ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの呼び出しは失敗では、同じ項目 `key` にパラメーターが既に格納されている、 `Cache`です。 既存の上書き `Cache` 項目を使用して同じ `key` パラメーターを使用する、 <xref:System.Web.Caching.Cache.Insert%2A> メソッドです。  
  
 両方を設定することはできません、 `absoluteExpiration` と `slidingExpiration` パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 特定の時点へのパラメーターと `slidingExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 一定時間後に有効期限が経過する項目が最後にアクセスする場合は、キャッシュ項目は、設定する、 `slidingExpiration` パラメーターの有効期限の間隔を `absoluteExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## 例  
 次の例を作成し、 `AddItemToCache` メソッドです。 このメソッドが呼び出されるときに、設定、 `itemRemoved` プロパティを `false` し、登録、 `onRemove` メソッドの新しいインスタンスを <xref:System.Web.Caching.CacheItemRemovedCallback> を委任します。 デリゲートのシグネチャが使用される、 `RemovedCallback` メソッドです。`AddItemToCache` メソッドに関連付けられている値をチェックし、 `Key1` キャッシュ内のキー。 値の場合 `null`, 、 `Add` メソッド キャッシュ内のキーを持つ項目を配置する `Key1`, の値 `Value 1`, 、60 秒とキャッシュが高優先度の絶対有効期限。 使用して、 `onRemove` 引数としてメソッドです。 これにより、 `RemovedCallback` この項目がキャッシュから削除されたときに呼び出されるメソッド。  
  
> [!NOTE]
>  使用する方法の例については、 <xref:System.Web.Caching.CacheDependency> クラスおよび <xref:System.Web.Caching.CacheItemRemovedCallback> 委任は、「 [Caching Application Data](http://msdn.microsoft.com/ja-jp/206f977d-7860-4d20-bdd5-c3b3d8479f3d)します。  
  
 [!code-csharp[System.Web.Caching Examples\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> または <paramref name="value" /> にパラメーターが設定されている <see langword="null" />します。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="slidingExpiration" /> に設定されているパラメーターより小さい <see langword="TimeSpan.Zero" /> または 1 年以上です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> と <paramref name="slidingExpiration" /> パラメーターは両方を追加しようとしている項目の設定、 <see langword="Cache" />です。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュに格納された項目の数を取得します。</summary>
        <value>キャッシュに格納された項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、アプリケーションのパフォーマンスを監視する場合や、ASP.NET のトレース機能を使用する場合に便利で指定できます。  
  
   
  
## 例  
 次の例の値を取得する、 `Count` プロパティは、文字列に変換しに文字列を割り当てます、 <xref:System.Web.UI.WebControls.Label.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Label> Web サーバー コントロール `Label1`します。  
  
 [!code-csharp[System.Web.Caching.Cache.Count\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET は、キャッシュからアイテムの削除を開始する前に、アプリケーションで使用できる物理メモリの割合を取得します。</summary>
        <value>アプリケーションで使用できる物理メモリの割合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> プロパティは、アプリケーションに使用可能な物理メモリの割合を返します。 使用可能な割合が少なくなると、キャッシュ アルゴリズムは、キャッシュからアイテムの削除を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> でプロパティを設定できる、 `percentagePhysicalMemoryUsedLimit` の属性、 [\(ASP.NET 設定スキーマ\) の caching の cache 要素](http://msdn.microsoft.com/ja-jp/68fa0040-5abf-4c73-93fc-17e3c6af3299) アプリケーションの構成ファイル内の要素。 場合、 `percentagePhysicalMemoryUsedLimit` 属性が設定されていない、キャッシュ アルゴリズムが、キャッシュの最大サイズを決定し、 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> プロパティが計算されます。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[The .NET Framework 3.5 Architecture](http://msdn.microsoft.com/ja-jp/f75a72de-e2f2-4a7a-9574-3f278684ea90)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュの使用可能なバイト数を取得します。</summary>
        <value>キャッシュの使用可能なバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> プロパティは、アプリケーションのプロセスで使用できるバイト数を返します。 この制限に達すると、キャッシュ アルゴリズムは、キャッシュを積極的に清掃を開始します。  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> でプロパティを設定できる、 `privateBytesLimit` の属性、 [\(ASP.NET 設定スキーマ\) の caching の cache 要素](http://msdn.microsoft.com/ja-jp/68fa0040-5abf-4c73-93fc-17e3c6af3299) アプリケーションの構成ファイル内の要素。 ときに、 `privateBytesLimit` 属性が設定されていない、キャッシュ アルゴリズムが、キャッシュの最大サイズを決定し、 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> プロパティには、アルゴリズムで選択したサイズが含まれています。  
  
   
  
## 例  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ項目の識別子。</param>
        <summary>指定した項目を取得、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトです。</summary>
        <returns>取得するキャッシュ項目または <see langword="null" /> 、キーが見つからなかった場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、ASP.NET のテキスト ボックスのサーバー コントロール用にキャッシュ値を取得する方法を示します。  
  
 [!code-csharp[Classic Cache.Get Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キーの設定を反復処理するために使用するディクショナリ列挙子と、キャッシュに格納されている値を取得します。</summary>
        <returns>反復処理する列挙子、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目に追加またはこのメソッドは、項目の列挙処理中にキャッシュから削除します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Collections.IDictionaryEnumerator> オブジェクト、 `CacheEnum`, を使用して、 `GetEnumerator` メソッドです。 列挙子は、キャッシュから移動しながら各キャッシュ項目の値を文字列に変換し、Web フォーム ページに値を書き込みます。  
  
 [!code-csharp[Cache.GetEnumerator\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ キーは、項目を参照するために使用します。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <summary>項目を挿入、 <see cref="T:System.Web.Caching.Cache" /> によって提供される既定値を使用して、その場所を参照するキャッシュ キーのオブジェクト、 <see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは既存のキーを持つと一致するキャッシュ アイテムを上書き、 `key` パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、 `Insert` メソッドがファイルまたはキャッシュ依存関係のない、優先度が挿入される <xref:System.Web.Caching.CacheItemPriority.Default>, 、スライディング有効期限の値の <xref:System.Web.Caching.Cache.NoSlidingExpiration>, との絶対有効期限値 <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## 例  
 次の例では、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ キーは、アイテムを識別するために使用します。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">ファイルまたはキャッシュ キーの依存関係挿入されたオブジェクト。 すべての依存関係が変更されたときにオブジェクトは無効なようになり、キャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <see langword="null" />です。</param>
        <summary>オブジェクトを挿入、 <see cref="T:System.Web.Caching.Cache" /> ファイルまたはキーの依存関係を持ちます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは既存のキーを持つと一致するキャッシュ アイテムを上書き、 `key` パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、 `Insert` メソッドがファイルまたはキャッシュ依存関係のない、優先度が挿入される <xref:System.Web.Caching.CacheItemPriority.Default>, 、スライディング有効期限の値の <xref:System.Web.Caching.Cache.NoSlidingExpiration>, との絶対有効期限値 <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>です。  
  
   
  
## 例  
 次の例では、XML 構成ファイルのキャッシュ依存関係と、アプリケーションのキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert1 Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトを参照するために使用するキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">ファイルまたはキャッシュ キーの依存関係挿入されたオブジェクト。 すべての依存関係が変更されたときにオブジェクトは無効なようになり、キャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <see langword="null" />です。</param>
        <param name="absoluteExpiration">時間を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <see cref="P:System.DateTime.UtcNow" /> なく <see cref="P:System.DateTime.Now" /> このパラメーターの値にします。 絶対有効期限を使用している場合、 <c>slidingExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />します。</param>
        <param name="slidingExpiration">そのオブジェクトの有効期限が切れる時刻と、挿入されたオブジェクトが最後にアクセスした時刻の間の間隔。 この値が 20 分のと同じである場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後、20 分、キャッシュから削除します。 スライド式有効期限を使用している場合、 <c>absoluteExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />します。</param>
        <summary>オブジェクトを挿入、 <see cref="T:System.Web.Caching.Cache" /> の依存関係と有効期限ポリシーを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは既存の上書き `Cache` では、同じ項目 `key` パラメーター。  
  
 場合、 `slidingExpiration` にパラメーターが設定されている <xref:System.Web.Caching.Cache.NoSlidingExpiration>, 、スライディング有効期限が無効になっています。 設定した場合、 `slidingExpiration` よりも大きな値をパラメーター <xref:System.TimeSpan.Zero>, 、 `absoluteExpiration` にパラメーターが設定されている <xref:System.DateTime.Now%2A> に格納された値と、 `slidingExpiration` パラメーター。 指定された時間内にアイテムがキャッシュから要求された場合、 `absoluteExpiration` 、パラメーター、項目をもう一度キャッシュに配置されますと `absoluteExpiration` に再設定されます `DateTime.Now` に格納された値と、 `slidingExpiration` パラメーター。 かどうか、項目が要求されていないキャッシュからの日付のうち、 `absoluteExpiration` パラメーター、アイテムがキャッシュから削除します。 」を参照してください。 優先順位で、insert メソッドのこのオーバー ロードを使用してキャッシュに追加された項目が挿入された <xref:System.Web.Caching.CacheItemPriority.Default>します。  
  
   
  
## 例  
 次の例では、絶対有効期限とアプリケーションのキャッシュに項目を挿入する方法を示します。  
  
> [!NOTE]
>  この形式の後、 `Insert` メソッドは、アイテムが依存関係を持たない場合に、キャッシュ依存関係をサポートする必要がありますを宣言する、 `dependency` パラメーターとして `null` \(`Nothing` Visual Basic で\) パラメーターのコンマ区切りの一覧でします。  
  
 [!code-csharp[Classic Cache.Insert2 Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 次の例では、スライド式有効期限を設定してキャッシュに項目を挿入する方法を示します。  
  
 [!code-csharp[Classic Cache.Insert2 Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定する、 <paramref name="slidingExpiration" /> パラメーターより小さい <see langword="TimeSpan.Zero" /> または 1 年以上に相当します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> と <paramref name="slidingExpiration" /> パラメーターは両方を追加しようとしている項目の設定、 <see langword="Cache" />です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトを参照するために使用するキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときにオブジェクトは無効なようになり、キャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <see langword="null" />です。</param>
        <param name="absoluteExpiration">時間を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <see cref="P:System.DateTime.UtcNow" /> の代わりに <see cref="P:System.DateTime.Now" /> このパラメーターの値にします。 絶対有効期限を使用している場合、 <c>slidingExpiration</c> パラメーターを設定する必要があります <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />します。</param>
        <param name="slidingExpiration">キャッシュされたオブジェクトが最後にアクセス時間とそのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分のと同じである場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後、20 分、キャッシュから削除します。 スライド式有効期限を使用している場合、 <c>absoluteExpiration</c> パラメーターを設定する必要があります <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />します。</param>
        <param name="onUpdateCallback">オブジェクトがキャッシュから削除される前に呼び出されるデリゲート。 キャッシュされた項目を更新し、キャッシュから削除されていないことを確認するには、これを使用できます。</param>
        <summary>オブジェクトを挿入、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトと依存関係、有効期限ポリシー、およびアプリケーションに通知する、キャッシュから項目を削除する前に使用できるデリゲートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Caching.Cache.Insert%2A> メソッドを使用すると、キャッシュに新しい項目を挿入し、項目がキャッシュから削除する前に呼び出されるデリゲートを指定します。 デリゲートでは、キャッシュされたアイテムを更新し、これにより、キャッシュから削除されないようにできます。  
  
 このメソッドは既存の上書き `Cache` では、同じ項目 `key` パラメーター。  
  
 両方を設定することはできません、 `absoluteExpiration` と `slidingExpiration` パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 特定の時点へのパラメーターと `slidingExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 項目からの経過時間の設定時間後に期限切れに最後にアクセスする場合は、キャッシュ項目設定する必要が、 `slidingExpiration` パラメーターを \[有効期限の間隔の設定、 `absoluteExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" />, 、<paramref name="value" />, 、または <paramref name="onUpdateCallback" /> パラメーターは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定する、 <paramref name="slidingExpiration" /> パラメーターより小さい <see langword="TimeSpan.Zero" /> または 1 年以上に相当します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> と <paramref name="slidingExpiration" /> パラメーターは両方を追加しようとしている項目の設定、 <see langword="Cache" />です。  
  
 または  
  
 <paramref name="dependencies" /> パラメーターは <see langword="null" />, 、および <paramref name="absoluteExpiration" /> にパラメーターが設定されている <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />, 、および <paramref name="slidingExpiration" /> にパラメーターが設定されている <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />します。</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">オブジェクトを参照するために使用するキャッシュ キー。</param>
        <param name="value">キャッシュに挿入するオブジェクト。</param>
        <param name="dependencies">ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときにオブジェクトは無効なようになり、キャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <see langword="null" />です。</param>
        <param name="absoluteExpiration">時間を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <see cref="P:System.DateTime.UtcNow" /> なく <see cref="P:System.DateTime.Now" /> このパラメーターの値にします。 絶対有効期限を使用している場合、 <c>slidingExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />します。</param>
        <param name="slidingExpiration">挿入されたオブジェクトが最後にアクセスし、そのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分のと同じである場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後、20 分、キャッシュから削除します。 スライド式有効期限を使用している場合、 <c>absoluteExpiration</c> パラメーターである必要があります <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />します。</param>
        <param name="priority">オブジェクトによって表される、キャッシュに格納されているその他の項目のコスト、 <see cref="T:System.Web.Caching.CacheItemPriority" /> 列挙します。 オブジェクトが削除されるときに、この値が、キャッシュで使用されます。コストの低いオブジェクトは、コストの高いオブジェクトの前にキャッシュから削除されます。</param>
        <param name="onRemoveCallback">指定した場合ときに、呼び出されるオブジェクトがキャッシュから削除するデリゲート。 アプリケーションに通知する、オブジェクトがキャッシュから削除されたときに、これを使用することができます。</param>
        <summary>オブジェクトを挿入、 <see cref="T:System.Web.Caching.Cache" /> のオブジェクトの依存関係、有効期限と優先順位ポリシーとがデリゲートから挿入された項目が削除されると、アプリケーションに通知を使用することができます、 <see langword="Cache" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは既存の上書き `Cache` では、同じ項目 `key` パラメーター。  
  
 両方を設定することはできません、 `absoluteExpiration` と `slidingExpiration` パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 特定の時点へのパラメーターと `slidingExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoSlidingExpiration>します。  
  
 場合は、キャッシュ項目を一定時間後に期限切れが最後のアクセス以降に渡す、項目を設定する、 `slidingExpiration` パラメーターの有効期限の間隔を `absoluteExpiration` パラメーターを <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>します。  
  
   
  
## 例  
 次の例では、アプリケーションに挿入すると、項目に高い優先度を割り当てる `Cache` オブジェクトです。  
  
> [!NOTE]
>  このメソッドを使用する方法の詳細についての <xref:System.Web.Caching.CacheItemRemovedCallback> 委任は、「 [How to: Notify an Application When an Item Is Removed from the Cache](http://msdn.microsoft.com/ja-jp/38c33aa0-afe9-40ba-a1a4-1ebab95286ef)します。  
  
 [!code-csharp[Classic Cache.Insert3 Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定する、 <paramref name="slidingExpiration" /> パラメーターより小さい <see langword="TimeSpan.Zero" /> または 1 年以上に相当します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> と <paramref name="slidingExpiration" /> パラメーターは両方を追加しようとしている項目の設定、 <see langword="Cache" />です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> キャッシュ項目のキーを表すオブジェクト。</param>
        <summary>取得またはキャッシュ項目を指定したキーに設定します。</summary>
        <value>指定されたキャッシュ項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたキャッシュ項目の値を取得またはのキャッシュに項目と、キーを追加するのには、このプロパティを使用できます。 項目を使用してキャッシュに追加する、 <xref:System.Web.Caching.Cache.Item%2A> プロパティを呼び出すことは、 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例では、 `Item` に関連付けられているキャッシュされたオブジェクトの値を取得するプロパティを `Key1` キー。 次を使用して、 <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> Web フォーム ページに、値と説明テキストと B の HTML 要素を書き込みます。  
  
 [!code-csharp[System.Web.Caching Examples\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 次の例では、このプロパティを使用して、キャッシュにテキスト ボックスの値を挿入するを示します。  
  
 [!code-csharp[Classic Cache.this Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用される、 <paramref name="absoluteExpiration" /> 内のパラメーター、 <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> した項目のメソッド呼び出しは有効期限はありません。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用すると、このフィールドを設定、 `absoluteExpiration` パラメーターと等しい <xref:System.DateTime.MaxValue>, 、これは、定数を表す最大の可能な `DateTime` 値、12\/31\/9999 11時 59分: 59 PM。  
  
   
  
## 例  
 次の例では、使用して、 `NoAbsoluteExpiration` 内の項目を挿入するときに、絶対有効期限を無効にするフィールド、 `Cache`です。  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>として使用される、 <paramref name="slidingExpiration" /> 内のパラメーター、 <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> または <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> スライディング有効期限を無効にするメソッドの呼び出しです。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフィールドが設定を使用する場合、 `slidingExpiration` パラメーターを <xref:System.TimeSpan.Zero?displayProperty=fullName> を定数値 0 を持つフィールドです。 に従ってキャッシュされた項目は期限切れ、 `absoluteExpiration` パラメーターに関連付けられている、 `Insert` または `Add` メソッドの呼び出しです。  
  
   
  
## 例  
 次の例では、Insert メソッドを使用して項目を追加する方法、 <xref:System.Web.Caching.Cache> オブジェクトを使用して、 `NoSlidingExpiration` フィールドです。  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> を削除するキャッシュ項目の識別子。</param>
        <summary>指定した項目をアプリケーションから削除 <see cref="T:System.Web.Caching.Cache" /> オブジェクトです。</summary>
        <returns>削除される項目、 <see langword="Cache" />です。 キー パラメーターの値が見つからない場合 <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例を作成し、 `RemoveItemFromCache` メソッドです。 このメソッドが呼び出されると、それを使用して、 <xref:System.Web.Caching.Cache.Item%2A> プロパティ キャッシュに関連付けられているオブジェクトが含まれているかどうか確認を `Key1` キーの値。 そのような場合、 `Remove` オブジェクトを削除するメソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Caching Examples\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>反復処理できる列挙子を返します、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトのコレクション。</summary>
        <returns>反復処理できる列挙子、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>項目を挿入、 <see cref="T:System.Web.Caching.Cache" /> オブジェクトです。 このメソッドのバージョンのいずれかを使用して、既存の上書き <see langword="Cache" /> では、同じ項目 <paramref name="key" /> パラメーター。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>