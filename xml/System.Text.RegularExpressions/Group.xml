<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>単一キャプチャ グループによるキャプチャの結果を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A capturing group can capture zero, one, or more strings in a single match because of quantifiers. \(For more information, see [Quantifiers](http://msdn.microsoft.com/ja-jp/36b81212-6511-49ed-a8f1-ff080415312f).\) All the substrings matched by a single capturing group are available from the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Information about the last substring captured can be accessed directly from the **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 properties. \(That is, the <xref:System.Text.RegularExpressions.Group> instance is equivalent to the last item of the collection returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property, which reflects the last capture made by the capturing group.\)  
  
 An example helps to clarify this relationship between a <xref:System.Text.RegularExpressions.Group> object and the <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=fullName> that is returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property. The regular expression pattern `(\b(\w+?)[,:;]?\s?)+[?.!]` matches entire sentences. The regular expression is defined as shown in the following table.  
  
|Pattern|Description|  
|-------------|-----------------|  
|`\b`|Begin the match at a word boundary.|  
|`(\w+?)`|Match one or more word characters, but as few characters as possible. This is the second \(inner\) capturing group. \(The first capturing group includes the **languageKeyword tag is not supported!!!!**<br /> language element.\)|  
|`[,:;]?`|Match zero or one occurrence of a comma, colon, or semicolon.|  
|`\s?`|Match zero or one occurrence of a white\-space character.|  
|`(\b(\w+?)[,:;]?\s?)+`|Match the pattern consisting of a word boundary, one or more word characters, a punctuation symbol, and a white\-space character one or more times. This is the first capturing group.|  
|`[?.!]`|Match any occurrence of a period, question mark, or exclamation point.|  
  
 In this regular expression pattern, the subpattern `(\w+?)` is designed to match multiple words within a sentence. However, the value of the <xref:System.Text.RegularExpressions.Group> object represents only the last match that `(\w+?)` captures, whereas the <xref:System.Text.RegularExpressions.Group.Captures%2A> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> that represents all captured text. As the output shows, the <xref:System.Text.RegularExpressions.CaptureCollection> for the second capturing group contains four objects. The last of these corresponds to the <xref:System.Text.RegularExpressions.Group> object.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最も内側の左端優先順でのキャプチャ グループに一致するすべてのキャプチャのコレクションを取得 \(または右端にある最初の最も内側の順序で正規表現が変更された場合、 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> オプション\)。 コレクションには、0 個以上の項目があります。</summary>
        <value>グループに一致する部分文字列のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 量指定子は、キャプチャには適用されない場合にグループ化、によって返されるコレクション、 <xref:System.Text.RegularExpressions.Group.Captures%2A> プロパティには、1 つが含まれています。 <xref:System.Text.RegularExpressions.Capture> として同じ部分文字列の情報を提供するオブジェクト、 <xref:System.Text.RegularExpressions.Group> オブジェクトです。 この例を次に示します。 正規表現を定義して `\b(\w+)\b`, 、1 つの word の文から抽出します。<xref:System.Text.RegularExpressions.Group> し 1 つのオブジェクトを使用して、"This"オブジェクトは、単語をキャプチャ、 <xref:System.Text.RegularExpressions.CaptureCollection> 同じキャプチャについての情報が含まれています。  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 実用的なユーティリティ、 <xref:System.Text.RegularExpressions.Group.Captures%2A> プロパティの場合は、グループが 1 つの正規表現内の複数の部分文字列をキャプチャするように、量指定子がキャプチャ グループに適用されます。 ここで、 <xref:System.Text.RegularExpressions.Group> オブジェクトは、一方にキャプチャされた最後の部分文字列に関する情報を格納、 <xref:System.Text.RegularExpressions.Group.Captures%2A> プロパティには、グループによってキャプチャされたすべての部分文字列に関する情報が含まれています。 次の例では、正規表現で `\b(\w+\s*)+\.` 、ピリオドで終わる全体の文と一致します。 グループ `(\w+\s*)+` コレクション内の個々 の単語をキャプチャします。<xref:System.Text.RegularExpressions.Group> コレクションには、キャプチャされた最後の部分文字列のみに関する情報が含まれています。、、センテンス内"文の"最後の単語をキャプチャします。 ただし、グループによってキャプチャされた各単語がによって返されるコレクションから利用可能な <xref:System.Text.RegularExpressions.Group.Captures%2A> プロパティです。  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで表すキャプチャ グループの名前を返します。</summary>
        <value>現在のインスタンスで表されるキャプチャ グループの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一致が成功したかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 照合が正常に終了した場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Success` プロパティが true の場合は、少なくとも 1 つの部分文字列がこのグループによってキャプチャされていました。 ブール式と同等です \(Group.Captures.Count \> 0\)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" />
      </Parameters>
      <Docs>
        <param name="inner">入力 <see cref="T:System.Text.RegularExpressions.Group" /> オブジェクトです。</param>
        <summary>返します。、 <see langword="Group" /> 安全に複数のスレッド間で共有オブジェクトを指定した 1 つに相当します。</summary>
        <returns>正規表現 <see langword="Group" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inner" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>