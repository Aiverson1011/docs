<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>zip アーカイブ形式の圧縮ファイルのパッケージを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Zip アーカイブや、ファイルのエントリを操作するための方法は 3 つのクラス間で分散: <xref:System.IO.Compression.ZipFile>、 <xref:System.IO.Compression.ZipArchive>、および<xref:System.IO.Compression.ZipArchiveEntry>です。  
  
|目的|用途|  
|--------|--------|  
|ディレクトリからの zip のアーカイブを作成します。|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  
|ディレクトリの zip アーカイブのコンテンツを抽出します。|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  
|既存の zip アーカイブを新しいファイルを追加します。|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  
|Zip アーカイブからファイルを取得します。|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  
|Zip アーカイブからのすべてのファイルを取得します。|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  
|Zip アーカイブに含まれている 1 つのファイル ストリームを開く|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  
|Zip アーカイブからファイルを削除します。|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  
  
 新しいエントリを作成するときに、ファイルが圧縮し、zip パッケージに追加します。<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>メソッドでは、エントリを追加するときに、ディレクトリの階層を指定することができます。 Zip パッケージ内の新しいエントリの相対パスが含まれます。 たとえば、新しいエントリを作成する相対パスを持つ`AddedFolder\NewFile.txt`AddedFolder をという名前のディレクトリに圧縮されたテキスト ファイルを作成します。  
  
 参照する場合、`System.IO.Compression.FileSystem`アセンブリのプロジェクトで次の 3 つの拡張メソッドにアクセスすることができます \(から、<xref:System.IO.Compression.ZipFileExtensions>クラス\) の<xref:System.IO.Compression.ZipArchive>クラス: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>、 <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>、および<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>です。 これらの拡張メソッドでは、圧縮および圧縮解除をファイルにエントリの内容を有効にします。`System.IO.Compression.FileSystem`アセンブリでは使用できません[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリ。[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリでは、圧縮して使用してファイルを圧縮解除、、<xref:System.IO.Compression.DeflateStream>または<xref:System.IO.Compression.GZipStream>クラスを使用する方法、[!INCLUDE[wrt](~/includes/wrt-md.md)]型[Compressor](http://go.microsoft.com/fwlink/p/?LinkID=246357)と[Decompressor](http://go.microsoft.com/fwlink/p/?LinkID=246358)です。  
  
   
  
## 例  
 最初の例では、新しいエントリを作成し、ストリームを使用して、書き込みにする方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 次の例では、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 3 番目の例では、拡張メソッドを使用して、既存のファイルからの zip のアーカイブに新しいエントリを作成し、アーカイブの内容を抽出する方法を示します。 参照する必要があります、`System.IO.Compression.FileSystem`アセンブリ コードを実行します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">読み取るアーカイブを格納しているストリーム。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.IO.Compression.ZipArchive" />指定したストリームからのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に閉じられていますか、読み取りをサポートしません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は、zip アーカイブ形式でができません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.IO.Compression.ZipArchive" />指定されたモードを使用して、指定したストリームからのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" />無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip アーカイブとして、ストリームの内容を解釈できませんでした。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />され、エントリ アーカイブが見つからないかまたは破損している、読み取ることができません。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />エントリが大きすぎてメモリに収まるようとします。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen">
          <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.IO.Compression.ZipArchive" />クラスは、指定したモード、および必要に応じて、ストリームを開いたままの指定したストリームにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" />無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip アーカイブとして、ストリームの内容を解釈できませんでした。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />され、エントリ アーカイブが見つからないかまたは破損している、読み取ることができません。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />エントリが大きすぎてメモリに収まるようとします。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen">
          <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <param name="entryNameEncoding">このアーカイブのエントリ名の読み取りまたは書き込み時に使用するエンコード。 エントリ名の UTF\-8 エンコードをサポートしない zip アーカイブ ツールとライブラリとの相互運用性のためにエンコードが必要な場合にのみ、このパラメーターの値を指定してください。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.IO.Compression.ZipArchive" />指定したモードで指定したストリームにクラスは、エントリ名の指定されたエンコーディングを使用し、必要に応じて、ストリームが開いたままにされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`に設定されている`null`エントリ名は、次の規則に従ってデコードします。  
  
-   エンコード \(ローカル ファイル ヘッダーの汎用のビット フラグの内容\) フラグが設定されていないときに現在のシステム既定のコード ページはエントリ名のデコードに使用されます。  
  
-   言語エンコード フラグを設定すると、utf\-8 が、エントリ名のデコードに使用されます。  
  
 読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`以外の値に設定されて`null`エントリ名は、次の規則に従ってデコードします。  
  
-   ときにエンコード フラグが設定されていない、指定した`entryNameEncoding`エントリ名のデコードに使用します。  
  
-   言語エンコード フラグを設定すると、utf\-8 が、エントリ名のデコードに使用されます。  
  
 アーカイブ ファイルを記述する場合と`entryNameEncoding`に設定されている`null`エントリ名は、次のルールに従ってエンコードします。  
  
-   ASCII の範囲外の文字を含むエントリ名、言語エンコード フラグを設定すると、し、エントリ名は、utf\-8 を使用してエンコードされました。  
  
-   ASCII 文字のみを含むエントリ名、言語エンコード フラグが設定されていない、エントリ名は、現在のシステム既定のコード ページを使用してエンコードされました。  
  
 アーカイブ ファイルを記述する場合と`entryNameEncoding`以外の値に設定されて`null`、指定した`entryNameEncoding`エントリの名前をバイトにエンコードするために使用します。 フラグ \(ローカル ファイル ヘッダーの汎用のビット フラグ\) でのエンコード方法は、指定したエンコーディングが utf\-8 エンコードの場合にのみ設定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に閉じられて、または、ストリームの機能が、モードが一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" />無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip アーカイブとして、ストリームの内容を解釈できませんでした。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />され、エントリ アーカイブが見つからないかまたは破損している、読み取ることができません。  
  
 または  
  
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />エントリが大きすぎてメモリに収まるようとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <summary>指定したパスとエントリ名を持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `entryName` 文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合は、エントリが作成されたが、zip アーカイブの内容を抽出する場合は、例外を取得する可能性があります。 アーカイブに指定されたパスと名前を持つエントリが既に存在する場合は、同じパスと名前を持つ 2 番目のエントリが作成されます。  
  
 値、 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> という新しい項目のプロパティは、現在の時刻に設定されています。 エントリは、基になる圧縮アルゴリズムの既定の圧縮レベルを使用して圧縮します。 別の圧縮レベルを指定する場合を使用して、 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> メソッドです。  
  
   
  
## 例  
 次の例では、エントリを作成し、ストリームを使用して書き込む方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">Zip アーカイブは、書き込みをサポートしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <param name="compressionLevel">エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の 1 つ。</param>
        <summary>指定したエントリ名と圧縮レベルを持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `entryName` 文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合は、エントリが作成されたが、zip アーカイブの内容を抽出する場合は、例外を取得する可能性があります。 アーカイブに指定した名前のエントリが既に存在する場合は、同じ名前の 2 番目のエントリが作成されます。  
  
 値、 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> という新しい項目のプロパティは、現在の時刻に設定されています。 設定、 `compressionLevel` パラメーターを <xref:System.IO.Compression.CompressionLevel.Optimal> 圧縮するファイルをできるだけ多くの必要な場合です。 設定、 `compressionLevel` パラメーターを <xref:System.IO.Compression.CompressionLevel.Fastest> 圧縮操作は、自分のシナリオに迅速に完了しませんは懸念している場合にのみです。  
  
   
  
## 例  
 次の例では、最適な圧縮レベルでエントリを作成する方法を示します。 これもストリームを使用して、新しいエントリを書き込みます。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">Zip アーカイブは、書き込みをサポートしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Compression.ZipArchive" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method finishes writing the archive and releases all resources used by the <xref:System.IO.Compression.ZipArchive> object. Unless you construct the object by using the <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> constructor overload and set its **parameterReference tag is not supported!!!!**  
 parameter to **languageKeyword tag is not supported!!!!**  
, all underlying streams are closed and no longer available for subsequent write operations.  
  
 When you are finished using this instance of <xref:System.IO.Compression.ZipArchive>, call <xref:System.IO.Compression.ZipArchive.Dispose> to release all resources used by this instance. You should eliminate further references to this <xref:System.IO.Compression.ZipArchive> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> calls the <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> method, which contains the code to release managed and unmanaged resources. For more information, see .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> アーカイブの書き込みを終了し、アンマネージ コードとマネージ リソースを解放するには <see langword="false" /> をアンマネージ リソースだけを解放します。</param>
        <summary>によって呼び出される、 <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> と <see cref="M:System.Object.Finalize" /> の現在のインスタンスによって使用されているアンマネージ リソースを解放する方法、 <see cref="T:System.IO.Compression.ZipArchive" /> クラス、および必要に応じて、アーカイブの書き込みを終了し、マネージ リソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `disposing` に設定されている `true`, を使用してオブジェクトを構築する場合を除き、すべての基になるストリームが閉じていて、それ以降の書き込み操作の場合は利用できなく、 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> コンス トラクターのオーバー ロードは、セット、 `leaveOpen` パラメーターを `true`します。  
  
 このメソッドは、パブリックによってのみ呼び出さ <xref:System.IO.Compression.ZipArchive.Dispose> と <xref:System.Object.Finalize> メソッドです。 このメソッドを直接呼び出す必要はありません。  
  
 ブール型パラメーター、dispose パターンを実装する場合、 <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> メソッドを次のように使用する必要があります。  
  
-   <xref:System.IO.Compression.ZipArchive.Dispose> 、現在のオブジェクトのメソッドを呼び出す必要があります <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> ブール型のパラメーターを設定した `true` マネージとアンマネージの両方のリソースを解放します。  
  
-   <xref:System.Object.Finalize> 、現在のオブジェクトのメソッドを呼び出す必要があります <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> ブール型のパラメーターを設定した `false` をアンマネージ リソースだけを解放します。  
  
 詳細については、次を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在 zip アーカイブ内にあるエントリのコレクションを取得します。</summary>
        <value>現在 zip アーカイブ内にあるエントリのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.IO.Compression.ZipArchive.Entries%2A> エントリのコレクション全体を取得するプロパティです。 使用して、 <xref:System.IO.Compression.ZipArchive.GetEntry%2A> 名前によって 1 つのエントリを取得します。  
  
   
  
## 例  
 次の例では、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zip アーカイブは、読み取りをサポートしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip アーカイブ壊れており、そのエントリを取得することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">取得するエントリを識別する、アーカイブのルートを基準とするパス。</param>
        <summary>zip アーカイブ内の指定したエントリのラッパーを取得します。</summary>
        <returns>保管場所に指定されたエントリのラッパー <see langword="null" /> アーカイブのエントリが存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した名前を持つ複数のエントリは、アーカイブに存在する場合は、1 つ目が返されます。 エントリの名前と比較されます `entryName` 序数に基づく比較を使用します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.IO.Compression.ZipArchive.GetEntry%2A> エントリを取得します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">Zip アーカイブは、読み取りをサポートしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip アーカイブ壊れており、そのエントリを取得することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>zip アーカイブがエントリで実行できる操作の種類を示す値を取得します。</summary>
        <value>zip のアーカイブがエントリ上で実行できる操作の種類 \(読み込み、作成、または更新\) を示す列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値を指定する、 <xref:System.IO.Compression.ZipArchive> プロパティのインスタンスを作成するときに、 <xref:System.IO.Compression.ZipArchive> クラスです。 使用して、 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> または <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> の値を指定するコンス トラクター、 <xref:System.IO.Compression.ZipArchive.Mode%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>空のエントリを zip アーカイブに作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>