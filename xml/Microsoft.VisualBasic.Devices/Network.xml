<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プロパティ、イベント、およびコンピューターが接続されているネットワークとやり取りするためのメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、関連するタスクの例については、 `My.Computer.Network` オブジェクトです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
|接続状態を確認します。|[How to: Check Connection Status in Visual Basic](http://msdn.microsoft.com/ja-jp/4d9ee8ab-9a6f-4279-ace4-b75afc976a74)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` http:\/\/www.cohowinery.com\/uploads にします。  
  
 [!code-vb[VbVbalrMyNetwork\#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.Devices.Network" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リンク先のファイルが既に存在する場合、 `DownloadFile` メソッドは、既存のファイルを上書きしません。 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 既存のファイルを上書きするように指定する方法、ユーザーの資格情報を提供または特定のタイムアウト値を指定します。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リンク先のファイルが既に存在する場合、 `DownloadFile` メソッドは、既存のファイルを上書きしません。 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 既存のファイルを上書きするように指定する方法、ユーザーの資格情報を提供または特定のタイムアウト値を指定します。`DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リンク先のファイルが既に存在する場合、 `DownloadFile` メソッドは、既存のファイルを上書きしません。 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドを既存のファイルを上書きまたは特定のタイムアウト値を指定するように指定します。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リンク先のファイルが既に存在する場合、 `DownloadFile` メソッドは、既存のファイルを上書きしません。 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドを既存のファイルを上書きまたは特定のタイムアウト値を指定するように指定します。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> または <see cref="T:System.Uri" />。 ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">
          <see langword="String" />。 ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />。 提供される資格情報。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />。 タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="networkCredentials">提供される資格情報。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときの動作を指定 **キャンセル** または **いいえ** の結果として表示されるダイアログ ボックスで <c>showUI</c> に設定 <see langword="True" />します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときの動作を指定 **キャンセル** または **いいえ** の結果として表示されるダイアログ ボックスで <c>ShowUI</c> に設定 <see langword="True" />します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ファイルの名前とホストのアドレスなどをダウンロードするファイルのパス。</param>
        <param name="destinationFileName">ファイル名と、ダウンロードしたファイルのパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列""です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列""です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒\)。 既定値は、100 秒です。</param>
        <param name="overwrite">
          <see langword="True" /> 既存のファイルを上書きするにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときの動作を指定 **キャンセル** または **いいえ** の結果として表示されるダイアログ ボックスで <c>ShowUI</c> に設定 <see langword="True" />します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、 **キャンセル** \] ボタンをクリックして、操作を取り消すために使用できます。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合 `connectionTimeout`, 操作が取り消されると、例外がスローされます。  
  
 `DownloadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが見つからない場合、サーバーによっては 500 \(内部サーバー エラー\) を返すことがあります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、 <xref:System.Net.WebClient> クラスです。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.DownloadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをダウンロードします。|[How to: Download a File in Visual Basic](http://msdn.microsoft.com/ja-jp/ac479f81-c0e2-4b99-af73-217f446b73da)|  
  
   
  
## 例  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`です。  
  
 [!code-vb[VbVbalrMyNetwork\#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード `WineList.txt` から `http://www.cohowinery.com/downloads` に保存および `C:\Documents and Settings\All Users\Documents`, 、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> 末尾のスラッシュを終了します。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> 設定されている <see langword="False" /> とコピー先ファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンピューターがネットワークに接続されているかどうかを示します。</summary>
        <value>
          <see langword="True" /> コンピューターがネットワークに接続されている場合それ以外の場合 <see langword="False" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `IsAvailable` 常に返します `False` から呼び出された場合、 `Click Once` アプリケーションまたはユーザーがいないかどうかは <xref:System.Net.NetworkInformation.NetworkInformationPermission>です。  
  
 次の表に、関連するタスクの例については、 `My.Computer.Network.IsAvailable` プロパティです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|コンピューターがネットワークに接続されているかどうかを確認します。|[How to: Check Connection Status in Visual Basic](http://msdn.microsoft.com/ja-jp/4d9ee8ab-9a6f-4279-ace4-b75afc976a74)|  
  
   
  
## 例  
 この例では、プロパティのステータスを確認し、それを報告します。  
  
 [!code-vb[VbVbalrMyNetwork\#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ネットワークの可用性が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 An application raises the **languageKeyword tag is not supported!!!!**  
 event every time the availability of the network changes. You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the **parameterReference tag is not supported!!!!**  
 parameter to get the new state of the network connection. To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.  
  
 In a Windows Forms application, this event is raised on the application's main thread with the other user\-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user\-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.  
  
 You cannot use the **languageKeyword tag is not supported!!!!**  
 statement to handle the **languageKeyword tag is not supported!!!!**  
 event; you must use the **languageKeyword tag is not supported!!!!**  
 statement.  
  
 In Windows Forms applications, the **languageKeyword tag is not supported!!!!**  
 object exposes a **languageKeyword tag is not supported!!!!**  
 event that provides the same functionality as this event, but you can handle it with the **languageKeyword tag is not supported!!!!**  
 statement.  
  
> [!NOTE]
>  Many network hubs provide a network connection, even if the hub is disconnected from a larger network. Consequently, for wired connections, this event indicates a change in the connection between the computer and a hub.  
  
> [!NOTE]
>  The **languageKeyword tag is not supported!!!!**  
>  event is not raised by applications that run on Windows 95 and Windows 98 or by applications that are run on Windows 2000 by a non\-administrator. If your application might run on those platforms, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.  
  
   
  
## 例  
 This example uses the **languageKeyword tag is not supported!!!!**  
 event to update the user interface of a form or control.  
  
 This code should to be in a form or control that has a <xref:System.Windows.Forms.Label> named `Label1`.  
  
 [!code-vb[VbVbalrMyApplication\#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL、コンピューター名または IP の数、サーバーに対して ping を実行します。</param>
        <summary>指定したサーバーに ping を実行します。</summary>
        <returns>処理が正常に実行された場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Ping` メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートを無効にすることがありますか、ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡されるアドレス、 `Ping` メソッドは、DNS 名前解決をする必要があるあり、"http:\/\/"の前にすることはできません。  
  
   
  
## 例  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返す `True`します。  
  
 [!code-vb[VbVbalrMyNetwork\#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換 `"198.01.01.01"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返されます `True` を 1000年ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換 `"www.cohowinery.com"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続がありません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が無効でした。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describes a set of security permissions applied to code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controls rights to make or accept connections on a transport address. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controls access to a Windows NT performance counter component. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controls access to network information and traffic statistics for the local computer. Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Ping を実行するサーバーの URI。</param>
        <summary>指定したサーバーに ping を実行します。</summary>
        <returns>処理が正常に実行された場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Ping` メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートを無効にすることがありますか、ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡されるアドレス、 `Ping` メソッドは、DNS 名前解決をする必要があるあり、"http:\/\/"の前にすることはできません。  
  
   
  
## 例  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返す `True`します。  
  
 [!code-vb[VbVbalrMyNetwork\#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換 `"198.01.01.01"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返されます `True` を 1000年ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換 `"www.cohowinery.com"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続がありません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が無効でした。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describes a set of security permissions applied to code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controls rights to make or accept connections on a transport address. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controls access to a Windows NT performance counter component. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controls access to network information and traffic statistics for the local computer. Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL、コンピューター名または IP の数、サーバーに対して ping を実行します。</param>
        <param name="timeout">接続先のミリ秒単位の時間のしきい値 既定値は 500 です。</param>
        <summary>指定したサーバーに ping を実行します。</summary>
        <returns>処理が正常に実行された場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Ping` メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートを無効にすることがありますか、ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡されるアドレス、 `Ping` メソッドは、DNS 名前解決をする必要があるあり、"http:\/\/"の前にすることはできません。  
  
   
  
## 例  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返す `True`します。  
  
 [!code-vb[VbVbalrMyNetwork\#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換 `"198.01.01.01"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返されます `True` を 1000年ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換 `"www.cohowinery.com"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続がありません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が無効でした。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describes a set of security permissions applied to code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controls rights to make or accept connections on a transport address. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controls access to a Windows NT performance counter component. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controls access to network information and traffic statistics for the local computer. Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">Ping を実行するサーバーの URI。</param>
        <param name="timeout">接続先のミリ秒単位の時間のしきい値 既定値は 500 です。</param>
        <summary>指定したサーバーに ping を実行します。</summary>
        <returns>処理が正常に実行された場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Ping` メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートを無効にすることがありますか、ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡されるアドレス、 `Ping` メソッドは、DNS 名前解決をする必要があるあり、"http:\/\/"の前にすることはできません。  
  
   
  
## 例  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返す `True`します。  
  
 [!code-vb[VbVbalrMyNetwork\#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換 `"198.01.01.01"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例を調べることによって、サーバーを ping できるかどうかを報告するかどうか、 `Ping` メソッドが返されます `True` を 1000年ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork\#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換 `"www.cohowinery.com"` に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続がありません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が無効でした。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Describes a set of security permissions applied to code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Controls rights to make or accept connections on a transport address. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Controls access to a Windows NT performance counter component. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Controls access to network information and traffic statistics for the local computer. Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドをユーザーの資格情報を提供または特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ソース ファイルのパスが正しくありません。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドをユーザーの資格情報を提供または特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ソース ファイルのパスが正しくありません。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドを特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 他のオーバー ロードのいずれかを使用する、 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドを特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">サーバーは、既定のタイムアウト \(100 秒\) 内では応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="networkCredentials">認証の資格情報。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="networkCredentials">認証の資格情報。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときに実行されるアクションを **キャンセル**します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="showUI">
          <see langword="True" /> 操作の進行状況を表示するにはそれ以外の場合 <see langword="False" />します。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときに実行されるアクションを **キャンセル**します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">パスおよびアップロードするファイルの名前。</param>
        <param name="address">URL、IP アドレス、または移行先サーバーの URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列: <c>""</c>です。</param>
        <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 \(ミリ秒単位\)。 既定値は、100 秒です。</param>
        <param name="onUserCancel">ユーザーがクリックしたときに実行されるアクションを **キャンセル**します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `showUI` に設定されている `True`, 、ダイアログ ボックスが操作の進行状況が表示され、含まれています、 **キャンセル** 操作をキャンセルするにはユーザーがクリックされるボタンをクリックします。 ダイアログ ボックスはモーダルではないために、ユーザー入力をプログラムの他のウィンドウにはブロックされません。  
  
 指定した間隔内で、サーバーが応答しない場合 `connectionTimeout`, 、操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Enabling Network Tracing](http://msdn.microsoft.com/ja-jp/5fff458c-51a6-4134-ba47-8a6137ddc41e)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルでは、プレーン テキストでパスワードを含む、情報を送信し、機密情報を送信するため使用しないでします。  
  
 次の表に、関連するタスクの例、 `My.Computer.Network.UploadFile` メソッドです。  
  
|||  
|-|-|  
|目的|参照トピック|  
|ファイルをアップロードします。|[How to: Upload a File in Visual Basic](http://msdn.microsoft.com/ja-jp/a8b37924-c523-4fd3-b5ca-cb0074df29cd)|  
  
   
  
## 例  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork\#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、ファイル アップロード `Order.txt` に `http://www.cohowinery.com/uploads` 500 ミリ秒のタイムアウト間隔をユーザー名またはパスワードを指定せず、アップロードの進行状況が表示されます。  
  
 [!code-vb[VbVbalrMyNetwork\#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> ファイル名は含まれません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定したサーバーが応答しない <paramref name="connectionTimeout" />します。</exception>
        <exception cref="T:System.Net.WebException">要求は、対象の web サーバーによって拒否されます。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Controls the permissions related to user interfaces and the clipboard. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Controls rights to access HTTP Internet resources. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したファイルを指定したホストのアドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリモート ファイルをダウンロードし、指定した場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したサーバーに ping を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>