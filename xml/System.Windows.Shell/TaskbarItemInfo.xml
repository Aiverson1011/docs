<Type Name="TaskbarItemInfo" FullName="System.Windows.Shell.TaskbarItemInfo">
  <TypeSignature Language="C#" Value="public sealed class TaskbarItemInfo : System.Windows.Freezable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskbarItemInfo extends System.Windows.Freezable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.TaskbarItemInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>タスク バーのサムネイルを表示する方法に関する情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Shell.TaskbarItemInfo> クラスのマネージ ラッパーを提供する [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーの機能です。 Windows シェルおよびネイティブ タスク バー Api の詳細については、次を参照してください。 [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479)します。 <xref:System.Windows.Shell.TaskbarItemInfo> として公開される、 <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> の依存関係プロパティを <xref:System.Windows.Window>します。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーがタスク バーの項目を使用してユーザー状態を通信し、ウィンドウを最小化または非表示にするときに、一般的なタスクを公開できるようにする拡張機能を提供します。 によって公開される機能、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスより古いバージョンの Windows で使用することはありません [!INCLUDE[win7](~/includes/win7-md.md)]します。 使用するアプリケーション、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスは、Windows の以前のバージョンで引き続き実行できます。 ただし、\[これらのタスク バーの拡張機能は以前のバージョンでは使用できません。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)], 、いくつかのタスク バーの機能は、ユーザーの設定によって、使用できるでない可能性があります。 たとえば、\[タスク バーの機能は使用できない場合 [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] が無効になったり、管理者特権を持つかどうか、アプリケーションを起動します。 アプリケーションでのタスク バーの拡張機能に依存しない、ユーザーと対話するには、他の方法を提供する必要があります [!INCLUDE[win7](~/includes/win7-md.md)]します。  
  
 通常、タスク バーの右端にある通知領域にプログラム アイコンはユーザーにアプリケーションの状態を通信するために使用されます。 既定では、 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーには、通知領域にプログラム アイコンが非表示にします。 ただし、設定、 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> メッセージング アプリケーションのオンラインの状態などの状態を通信するために、タスク バー ボタンにイメージを追加するプロパティです。 オーバーレイのイメージを使用して、通知領域にプログラム アイコンを表示することはできない場合でも、アプリケーションの状態を表示できます。 タスク バー ボタンに設定してタスクの実行の進行状況を表示することも、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> と <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティです。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーでは、タスク バー ボタンの上にマウス ポインターを移動すると、アプリケーションのサムネイルが表示されます。 既定では、全体のアプリケーション ウィンドウが表示されます。 設定して、サムネイルで表示するウィンドウの特定の部分を指定する、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> プロパティです。 指定することも、 <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> タスク バーのサムネイルの上のツールヒントに表示されます。 ユーザー設定のため、サムネイルが表示されない場合でも、ツールヒントが表示されます。  
  
 タスク バーの縮小表示をアプリケーション ウィンドウに切り替えることがなく一般的なタスクへのアクセスを提供するボタンを追加できます。 たとえば、Window Media Player では、再生、一時停止、転送、およびアプリケーションが最小化したときに戻る\] ボタンを使用することがタスク バーのサムネイルからメディアの再生を制御を提供します。 タスク バーのサムネイルのボタンがによって表される <xref:System.Windows.Shell.ThumbButtonInfo> に含まれているオブジェクトとは、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> コレクションです。  
  
 次の図の拡張機能、 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バー。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーの拡張機能  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Shell.TaskbarItemInfo> マークアップにします。<xref:System.Windows.Shell.TaskbarItemInfo> のコレクションを含む <xref:System.Windows.Shell.ThumbButtonInfo> タスク バー項目の再生および停止コマンドにアクセスを提供するオブジェクト。  
  
 [!code-xml[Shell\_TaskbarItemSample\#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 次のマークアップとコードは、その完全なコンテキストで、前の例を示します。 アプリケーションを使用して、 <xref:System.ComponentModel.BackgroundWorker> 0 から 100 までがカウントし、ユーザー インターフェイスで、進行状況を表示します。 タスクを開始し、タスク バー プレビューから停止できます。 進行状況は、タスク バー ボタンに表示されます。  
  
 [!code-xml[Shell\_TaskbarItemSample\#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  
  
 [!code-csharp[Shell\_TaskbarItemSample\#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[Shell\_TaskbarItemSample\#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskbarItemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタスク バー項目のツールヒントのテキストを設定します。</summary>
        <value>タスク バー項目のツールヒントのテキストです。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス ポインターがタスク バー ボタンの上にあるときは、タスク バーのサムネイルの上、ツールヒントが表示されます。 ユーザー設定のために、タスク バーのサムネイルが表示されない場合でも、ツールヒントが表示されます。  
  
 次の図は、タスク バー <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> ツールヒント。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーの説明  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Shell.TaskbarItemInfo> とセットのマークアップに、 <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> プロパティです。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-xml[Shell\_TaskbarItemSample\#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Overlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Overlay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタスク バー ボタンのプログラム アイコンの上に表示されるイメージを設定します。</summary>
        <value>タスク バー ボタンのプログラム アイコンの上に表示されるイメージです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーにアプリケーションの状態を通信するためにタスク バー ボタンのプログラム アイコンには、イメージを追加できます。 オーバーレイが静的なを使用して、またはアニメーション化 <xref:System.Windows.Media.ImageSource> タスク バー ボタンのアイコンの右下隅の上に移動します。 オーバーレイは、ユーザーが小さいアイコンを表示する、タスク バーを設定する場合に表示されません。  
  
 通常、タスク バーの右端にある通知領域にプログラム アイコンはユーザーにアプリケーションの状態を通信するために使用されます。[!INCLUDE[win7](~/includes/win7-md.md)], 、通知領域にプログラム アイコンは、既定では、非表示になっているし、以下ではこのため、状態を通信するために便利です。 \[タスク バー ボタンのオーバーレイを使用する [!INCLUDE[win7](~/includes/win7-md.md)] 通知領域にアイコンが表示されていない場合は、状態を通信するためにします。 アプリケーションでは、Windows のバージョンを検出して、オペレーティング システムに適した方法で通知を提供することができます。  
  
 イメージのオーバーレイは、適切なサイズでレンダリングされます。 場合、 <xref:System.Windows.Media.ImageSource> を表す、 <xref:System.Drawing.Icon>, 、適切なビット深さも使用します。  
  
 次の図は、タスク バー <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>します。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーのオーバーレイ  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Shell.TaskbarItemInfo> とセットのマークアップに、 <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> プロパティです。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-xml[Shell\_TaskbarItemSample\#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> プロパティを設定する方法を示しています。  
  
 [!code-csharp[Shell\_TaskbarItemSample\#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]
 [!code-vb[Shell\_TaskbarItemSample\#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OverlayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverlayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverlayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressState">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Shell.TaskbarItemProgressState ProgressState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemProgressState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタスク バー ボタンの進行状況インジケーターを表示する方法を示す値を設定します。</summary>
        <value>タスク バー ボタンに進行状況インジケーターを表示する方法を示す列挙値。 既定値は、<see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 進行状況インジケーターを表示することで時間のかかるタスクの進行状況を通信できる、 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バー ボタンをクリックします。 インジケーターの色によって決まります、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> プロパティの 1 つを含む、 <xref:System.Windows.Shell.TaskbarItemProgressState> 列挙値。 ときに、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> は <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, 、インジケーターが緑色です。 ときに <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, が黄色のインジケーターです。 ときに <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, 、インジケーターは赤です。 これらの状態を <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティは、タスク バー ボタンの量は、設定の進行状況インジケーターを決定します。<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 他の値は無視されます <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>します。<xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 全体のタスク バー ボタンの間でパルスを発する緑色のインジケーターを示します。 インジケーターは表示されません <xref:System.Windows.Shell.TaskbarItemProgressState.None>します。  
  
 次の図は、タスク バーで進行状況インジケーター、 <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> 状態です。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーの進行状況インジケーター  
  
   
  
## 例  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> プロパティを設定する方法を示しています。 ハンドラーに、状態が設定、 <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=fullName> をバック グラウンド タスクが、ユーザーが停止したかどうかを示すイベントが、エラーで終了するか正常に終了します。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-csharp[Shell\_TaskbarItemSample\#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[Shell\_TaskbarItemSample\#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValue">
      <MemberSignature Language="C#" Value="public double ProgressValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ProgressValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタスク バー ボタンで進行状況インジケーターの充填率を示す値を設定します。</summary>
        <value>タスク バー ボタンで進行状況インジケーターの充填率を示す値です。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティは 0.0 ~ 1.0 の値として表されます。 および拡大の数値は、それらの範囲内に強制されます。<xref:System.Double.NaN> 0 に強制的に変換されます。  
  
 進行状況インジケーターを表示することで時間のかかるタスクの進行状況を通信できる、 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バー ボタンをクリックします。 インジケーターの色によって決まります、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> プロパティの 1 つを含む、 <xref:System.Windows.Shell.TaskbarItemProgressState> 列挙値。 場合、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> プロパティは、 <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, 、<xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, 、または <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, 、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティは、進行状況インジケーターの充填率を決定します。<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> いくつかの値は無視されます <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>します。<xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 全体のタスク バー ボタンの間でパルスを発する緑色のインジケーターを示します。 インジケーターは表示されません <xref:System.Windows.Shell.TaskbarItemProgressState.None>します。  
  
 次の図に、タスク バーの進行状況インジケーターで、 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> 82% です。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーの進行状況インジケーター  
  
   
  
## 例  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティを設定する方法を示しています。 ハンドラーで値を設定、 <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=fullName> をバック グラウンド タスクの現在の進行状況を示すイベント。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-csharp[Shell\_TaskbarItemSample\#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[Shell\_TaskbarItemSample\#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfos">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.ThumbButtonInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のコレクション <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> オブジェクトに関連付けられている、 <see cref="T:System.Windows.Window" />です。</summary>
        <value>コレクション <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> オブジェクトに関連付けられている、 <see cref="T:System.Windows.Window" />です。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タスク バーのサムネイルがなくてもアプリケーション ウィンドウに切り替えるに一般的なタスクへのユーザー アクセスできるようにするには、ボタンを追加できます。 たとえば、Windows Media Player では、アプリケーションが最小化されているタスク バーのサムネイルからユーザー コントロールのメディアの再生に便利な再生、一時停止、転送、および背面のボタンが表示されます。 タスク バーのサムネイルのボタンがによって表される <xref:System.Windows.Shell.ThumbButtonInfo> に含まれているオブジェクトとは、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> コレクションです。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)] シェルがタスク バーのサムネイルで最大 7 つのボタンを使用します。 7 つ以上の場合 <xref:System.Windows.Shell.ThumbButtonInfo> にオブジェクトを追加、 <xref:System.Windows.Shell.ThumbButtonInfoCollection>, 、追加のオブジェクトは、オーバーフローとして扱われます。 ボタンの場合は <xref:System.Windows.Visibility.Collapsed>, 、表示されている要素がない、およびその領域が予約されていません。 この場合、その他のボタンからで、 <xref:System.Windows.Shell.ThumbButtonInfoCollection> オーバーフローが表示されます。  
  
 次の図は、2 つの親指ボタンのコレクションを使用してタスク バー プレビューを示します。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーのつまみをボタンします。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Shell.TaskbarItemInfo> マークアップにします。<xref:System.Windows.Shell.TaskbarItemInfo> のコレクションを含む <xref:System.Windows.Shell.ThumbButtonInfo> タスク バー項目の再生および停止コマンドにアクセスを提供するオブジェクト。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-xml[Shell\_TaskbarItemSample\#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfosProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbButtonInfosProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依存関係プロパティ。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness ThumbnailClipMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness ThumbnailClipMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタスク バーのサムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を示す値を設定します。</summary>
        <value>タスク バーのサムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を指定する値。 既定値は空の <see cref="T:System.Windows.Thickness" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーには、アプリケーション ウィンドウのクライアント領域の拡大\/縮小されたサムネイルが表示されます。 設定することができます、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> サムネイルに表示されているクライアント ウィンドウのトリミングされた領域を指定するプロパティです。 たとえば、このプロパティは、アプリケーションのツールバーを除外するときにウィンドウのコンテンツのサムネイルにフォーカスする場合に役立ちます。 このプロパティは、表示されていないアプリケーション ウィンドウで、サムネイルでコンテンツを表示する使用できません。  
  
 設定して、サムネイルに表示される領域を指定する、 <xref:System.Windows.Thickness> 領域の周りに罫線のです。 罫線は、クライアント ウィンドウの端から開始し、指定した量によって内側に向かっています。 境界線内のコンテンツは、サムネイルに表示されます。  
  
 次の図は、罫線を定義する、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>です。  
  
 baee33f8-61ab-49ec-b05d-195b78f9f5d6  
サムネイルのクリップ領域の枠線  
  
 次の図は、クリップされたサムネイルのプレビューを示します。  
  
 cdacfba2-f256-4c82-bb62-bbf9b4a9d669  
Windows タスク バーのサムネイルのプレビュー  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Shell.TaskbarItemInfo> とセットのマークアップに、 <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> プロパティです。 この例に示されている例の一部である、 <xref:System.Windows.Shell.TaskbarItemInfo> クラスです。  
  
 [!code-xml[Shell\_TaskbarItemSample\#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbnailClipMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依存関係プロパティ。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>