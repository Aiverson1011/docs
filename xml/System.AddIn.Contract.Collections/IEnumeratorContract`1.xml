<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">列挙するオブジェクトの型。<c>C</c> 実装する必要があります、 <see cref="T:System.AddIn.Contract.IContract" /> インターフェイスです。</typeparam>
    <summary>ジェネリック コレクションの要素を列挙 <see cref="T:System.AddIn.Contract.IContract" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。  
  
 最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。 この位置での戻り値 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は定義されていません。 そのため、呼び出す必要があります <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 列挙子を呼び出す前にコレクションの最初の要素に進める <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>します。  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 戻り値の設定 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 次の要素にします。  
  
 場合 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> コレクション、列挙子の末尾が、コレクション内の最後の要素の後に配置されているパスと <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 返します `false`します。 列挙子があるときはこの位置にある場合、それ以降の呼び出しは、 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> を返すことも `false`です。 最後の呼び出しの場合 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 返される `false`, の戻り値 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は定義されていません。  
  
 コレクションが変更されない限り、列挙子は有効です。 コレクションに対して変更 \(要素の追加、変更、削除など\) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.AddIn.Contract.IContract" /> コレクション内の列挙子の現在の位置にします。</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.IContract" /> コレクション内の列挙子の現在の位置にします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 次の条件のいずれかが定義されていません。  
  
-   列挙子が作成された直後後、または後に、コレクションの最初の要素の前に、列挙子が配置されている <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> が呼び出されます。<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 列挙子を呼び出す前にコレクションの最初の要素に進める呼び出さなければならない <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>します。  
  
-   最後の呼び出しを <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
-   列挙子は、追加、変更、または削除する要素など、コレクションで行われた変更により無効になりました。  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> は、<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 戻り値の設定 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 次の要素にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子をコレクションの次の要素に進めます。</summary>
        <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> メソッドが呼び出されると、列挙子がコレクションの最初の要素の前に位置付けられます。 最初の呼び出し、 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> メソッドは、コレクションの最初の要素に、列挙子を移動します。  
  
 場合 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> コレクション、列挙子の末尾が、コレクション内の最後の要素の後に配置されているパスと <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 返します `false`します。 列挙子があるときはこの位置にある場合、それ以降の呼び出しは、 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> を返すことも `false` まで <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> が呼び出されます。  
  
 コレクションが変更されない限り、列挙子は有効です。 無効になり、次の呼び出しの変更が加えられた場合を追加するなど、コレクションを変更すると、要素を削除するには、列挙子は回復不可能 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> または <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> スロー、 <xref:System.InvalidOperationException>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクションが変更されない限り、列挙子は有効です。 無効になり、次の呼び出しの変更が加えられた場合を追加するなど、コレクションを変更すると、要素を削除するには、列挙子は回復不可能 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> または <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> スロー、 <xref:System.InvalidOperationException>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>