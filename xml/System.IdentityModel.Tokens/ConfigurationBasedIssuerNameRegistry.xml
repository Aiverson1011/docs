<Type Name="ConfigurationBasedIssuerNameRegistry" FullName="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
  <TypeSignature Language="C#" Value="public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationBasedIssuerNameRegistry extends System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.IssuerNameRegistry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>各発行者名、発行者によって生成されるトークンの署名を検証するために必要な X.509 証明書に関連付けるアプリケーションの構成ファイル内の要素から読み込まれる信頼された発行者のリストを保持する発行者名レジストリを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> クラスはその発行者を参照する名前を各信頼された発行者の証明書をマップして、信頼された発行者のディクショナリを保持します。 拇印の形式でエンコードされた ASN.1 を使用して、証明書を指定します。 発行者名は、アプリケーションのスコープ内で一意である限り、任意の文字列にすることができます。 このディクショナリはを介してアクセスできる、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> プロパティです。 クラスは、X.509 証明書のみを解決できます。  
  
 信頼された発行者のマップが下にあるエントリを追加することで、構成ファイルで指定された、 [\<trustedIssuers\>](http://msdn.microsoft.com/ja-jp/d818c917-07b4-40db-9801-8676561859fd) 要素。`<trustedIssuers>` 要素の子要素、 [\<issuerNameRegistry\>](http://msdn.microsoft.com/ja-jp/58b39d12-c953-40c4-88af-d7eb3343ca28) 要素が有効な場合に、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> でクラスを指定、 `type` その要素の属性です。 詳細については、これらの各要素内のドキュメントを参照してください、 [Windows Identity Foundation Configuration Schema](http://msdn.microsoft.com/ja-jp/4d4f6d76-49a5-4bad-b345-097b2e2844e9)です。 発行者名レジストリの詳細については、次を参照してください。、 <xref:System.IdentityModel.Tokens.IssuerNameRegistry> クラスです。  
  
 派生できます <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> を独自の構成に基づいての発行者名レジストリを実装します。 どのメソッドをオーバーライドするには、実装は異なります。 たとえば、オーバーライド、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> カスタム構成スキーマから構成を読み込みます。  
  
   
  
## 例  
 次の XML の構成を表示する、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> したセキュリティ トークン ハンドラーのコレクションに追加します。`<trustedIssuers>` 要素は、従来の .NET 構成コレクションのように動作できるように、 `<add>`, 、`<delete>` と `<clear>` 子要素としての要素。  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <securityTokenHandlersCollection>  
      <securityTokenHandlerConfiguration>  
        <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel">  
          <trustedIssuers>  
             <add thumbprint="97249e … 158de" name="contoso.com" />  
         </trustedIssuers>  
        </issuerNameRegistry>  
      </securityTokenHandlerConfiguration>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationBasedIssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrustedIssuer">
      <MemberSignature Language="C#" Value="public void AddTrustedIssuer (string certificateThumbprint, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTrustedIssuer(string certificateThumbprint, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateThumbprint" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateThumbprint">ASN.1 は、発行元の証明書の拇印の形式をエンコードします。</param>
        <param name="name">発行者の名前。</param>
        <summary>発行者を信頼された発行者のディクショナリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発行者を追加するには、このメソッドを呼び出すことができます、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> ディクショナリ。 派生クラスからこのメソッドを呼び出すことができます、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> 発行者をディクショナリに追加します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateThumbprint" /> が <see langword="null" /> または空です。  
  
 または  
  
 <paramref name="name" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.InvalidOperationException">指定された発行者 <paramref name="certificateThumbprint" /> は既に構成されています。 \(発行元に既に存在する、 <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" /> ディクショナリです\)。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfiguredTrustedIssuers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ConfiguredTrustedIssuers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ConfiguredTrustedIssuers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスの構成されている信頼された発行者のディクショナリを取得します。</summary>
        <value>信頼された発行者を格納するディクショナリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ディクショナリのキーは、ASN.1 エンコードの信頼された発行者の証明書の拇印の形式で、値は、発行者名です。 ディクショナリには、構成で指定されている発行者とに追加されているその他の発行者が含まれる、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">発行者名が要求されるセキュリティ トークンです。 代入する必要があります <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />します。</param>
        <summary>指定された関連付けられている発行者名を返します <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 証明書の拇印を信頼された発行者ディクショナリ内の名前にマッピングしています。</summary>
        <returns>発行者名に、トークンの証明書の拇印のエントリが存在する場合、 <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" /> 辞書。 そうしないと、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装の既定の検索、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> ディクショナリで指定された X.509 証明書の拇印の `securityToken`です。 エントリがある場合、発行者名が返されます。それ以外の場合、 `null` が返されます。 場合 `securityToken` から割り当てることができません <xref:System.IdentityModel.Tokens.X509SecurityToken>, 、`null` が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityToken" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfiguration" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfiguration">この XML 構成ファイルで指定されている信頼された発行者のマップを表します。</param>
        <summary>構成から信頼された発行者を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> 構成インフラストラクチャによって呼び出されます。 このメソッドが呼び出されると、 `nodelist` の最上位レベルの子要素が表示されます、 [\<issuerNameRegistry\>](http://msdn.microsoft.com/ja-jp/58b39d12-c953-40c4-88af-d7eb3343ca28) 構成ファイルからの要素。 属性または子要素は、派生クラスの定義の構成スキーマに応じて、これらの各に含めること、ことがあります。  
  
 このメソッドは、構成インフラストラクチャによって呼び出されます。 既定の実装がから構成を読み込み、 [\<trustedIssuers\>](http://msdn.microsoft.com/ja-jp/d818c917-07b4-40db-9801-8676561859fd) 要素 \(で構成されている、 [\<issuerNameRegistry\>](http://msdn.microsoft.com/ja-jp/58b39d12-c953-40c4-88af-d7eb3343ca28) 要素\)。 派生クラスで、独自のカスタム構成要素をサポートするには、このメソッドをオーバーライドすることができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customConfiguration" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">構成には、認識されない 1 つまたは複数の要素が含まれています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>