<Type Name="EncryptedKeyEncryptingCredentials" FullName="System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials">
  <TypeSignature Language="C#" Value="public class EncryptedKeyEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedKeyEncryptingCredentials extends System.IdentityModel.Tokens.EncryptingCredentials" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.EncryptingCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>資格情報を暗号化して、暗号化キーを表します。 これらは通常の資格情報を暗号化するデータとしてトークンなどの暗号化に使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">キーの暗号化に使用される証明書。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> クラスは、指定された X.509 証明書に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 折り返し資格情報が X.509 証明書と、既定値はそれぞれ RSA OAEP および AES256 アルゴリズムと暗号化アルゴリズムの折り返しを使用する場合は、このコンス トラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int keySizeInBits, string encryptionAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int32 keySizeInBits, string encryptionAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="wrappingCredentials">セッション キーの暗号化に使用される資格情報をラップするキー。</param>
        <param name="keySizeInBits">ラップされたセッション キーのキー サイズ。</param>
        <param name="encryptionAlgorithm">セッション キーを使用する場合は、暗号化アルゴリズムを表す URI。 これは、対称キー アルゴリズムでなければなりません。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> クラスに基づいて、指定した <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> オブジェクト、キーのサイズと暗号化アルゴリズムです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既にある場合は、このコンス トラクターを使用して、 <xref:System.IdentityModel.Tokens.EncryptingCredentials> 折り返し資格情報として使用するオブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wrappingCredentials" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int keySizeInBits, string encryptionAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int32 keySizeInBits, string encryptionAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="keyWrappingAlgorithm" Type="System.String" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate">キーの暗号化に使用される証明書。</param>
        <param name="keyWrappingAlgorithm">キー ラップ アルゴリズムを表す URI。 これは、非対称アルゴリズムでなければなりません。</param>
        <param name="keySizeInBits">ラップされたセッション キーのキー サイズ。</param>
        <param name="encryptionAlgorithm">セッション キーを使用する場合は、暗号化アルゴリズムを表す URI。 これは、対称キー アルゴリズムでなければなりません。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> クラス アルゴリズム、キーのサイズと暗号化アルゴリズムの折り返し、指定の X.509 証明書に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 折り返し資格情報が X.509 証明書と、独自のラップのアルゴリズムと暗号化アルゴリズムを指定する場合は、このコンス トラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrappingCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラップされたセッション キーの暗号化に使用される資格情報キーを取得します。たとえば、 <see cref="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />です。</summary>
        <value>
          <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> セッション キーの暗号化に使用する資格情報を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>