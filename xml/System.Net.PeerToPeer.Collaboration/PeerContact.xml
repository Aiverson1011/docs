<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ユーザーが拡張情報を取得するピアを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 連絡先は、信頼されているピアを表します。 A <xref:System.Net.PeerToPeer.Collaboration.PeerContact> はリモート ピアには、オブジェクトを作成する必要があるまたは <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 「近くの人」範囲外にあるときに、リモート ピアと共同作業するユーザー。 A <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトは、リモート コンピューターまたはリモート コンピューターのユーザーで実行されている、アプリケーションが存在できます。 このクラスのインスタンスを追加できる、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> 永続的な方法で、連絡先情報を格納します。  
  
 アプリケーションへの招待、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> は両方の認証および暗号化します。  ピア連絡先からの招待を承認または拒否 UI ダイアログ ボックスでは、招待者が信頼されていることを示します。  
  
 サブスクライブ、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトはリモート ピアは、その登録済みのアプリケーション、オブジェクトとプレゼンス情報を見ることができます。 サブスクライブする、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, 、呼び出し元を使用してピア共同作業インフラストラクチャにサインインする必要があります <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> または Windows の UI を使用してサインインします。  その他のすべての操作は、サインインは必要ありません。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="streamingContext">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に関連付けられているシリアル化の転送先。</param>
        <summary>このクラスでは、パブリック コンストラクターが定義されていません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 An instance of this object can be obtained from the <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A><xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> or <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> methods.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントは、アプリケーションに関連付けられているときに発生、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> が変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 X509Certificate \(公開キー\) これで識別されるピアの <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンス。</summary>
        <value>X509Certificate \(公開キー\) これで識別されるピアの <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンス。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態は、ピア コラボレーション セッションの開始時に作成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の表示名を表す文字列、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</summary>
        <value>
          <see cref="T:System.String" /> この表示名を表す <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />します。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示名は内の連絡先を区別するために使用される場合があります、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> のインスタンスで場所、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 複数の電子メール アドレスを持つことがありますか、同じ表示名に複数のピアがある場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="True" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>アンマネージ リソースを解放します。オプションで <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトによって使用されているマネージ リソースも解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> leaves a collaboration session, certain objects are no longer required.  If this contact had been collaborating with any other endpoint\(s\) not directly registered with the peer host, and the host expects to continue to collaborate with them, the host must register those endpoints within an application or within its <xref:System.Net.PeerToPeer.Collaboration.ContactManager> before disposing of this <xref:System.Net.PeerToPeer.Collaboration.PeerContact> object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられている電子メール アドレス、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</summary>
        <value>
          <see cref="T:System.Net.Mail.MailAddress" /> 電子メール アドレスを格納しているオブジェクトに関連付けられている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Net.Mail.MailAddress> メール アドレスを表すオブジェクトを使用します。  Contact Manager では、1 つのインスタンス内で複数の電子メール アドレス。 このプロパティの既定値は `null` です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>決定するかどうか、 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> この <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトは、別のオブジェクトの名前に相当します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返します。 `true` 場合は、指定した <xref:System.Object> 同じ <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 現在のインスタンス、それ以外の場合と `false`です。 このメソッドが戻るも `false` 渡されたパラメーターがあれば `null`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンスが等しいかどうかをテストします。</param>
        <summary>比較、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> を指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンス。</summary>
        <returns>返します。 <see langword="true" /> 場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 指定されたインスタンスが他のデータに一致する <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 正規化は、比較の前にその文字列に対しては発生しません。  正規化はすべてに作成したとき、および作成する前に、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 、指定したオブジェクトのインスタンス。</param>
        <summary>比較、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 、指定したオブジェクトのインスタンス。</summary>
        <returns>返します。 <see langword="true" /> 場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 指定されたインスタンスが他のデータに一致する <see langword="false" />です。 このメソッドが戻るも <see langword="false" /> 場合は、渡されたパラメーターが <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 その他のオブジェクトと比較することがあります <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクト ピアのホスト名、相対ピア名を含めるし、他の名前がカプセル化解除 <xref:System.Net.PeerToPeer> オブジェクトです。  
  
 正規化は、比較の前にその文字列に対しては発生しません。  正規化はすべてに作成したとき、および作成する前に、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">比較対象となる最初の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="objB">比較対象となる 2 番目の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <summary>指定するかどうか、指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンスが等しいと見なされます。</summary>
        <returns>返します。 <see langword="true" /> 場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 提供するインスタンスが他のデータを一致する <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これ使用を判別するかどうか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> は 2 つの異なるリモート ピアが同時に使用します。  
  
 その他のオブジェクトと比較することがあります <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクト ピアのホスト名、相対ピア名を含めるし、他の名前がカプセル化解除 <xref:System.Net.PeerToPeer> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">再構築に使用される XML エンコーディング、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</param>
        <summary>作成、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に基づいてインスタンスは、XML データを提供します。</summary>
        <returns>エンコードの XML オブジェクト モデルを表す文字列、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーターを取得するようにするように渡す文字列 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>します。  
  
 このクラスは、全般的な XML オブジェクト モデルとして使用しないでください、コラボレーション インフラストラクチャ内で使用するための単純な XML オブジェクト モデルの軽量な実装を目的としています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">パラメーターを指定できません。 <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   完了できません <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 操作。  
  
-   パラメーターが有効ではありません <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> オブジェクトです。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> リモート ピアがローカル キャッシュに登録されているオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この機能はでのみ公開、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> クラスです。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> リモート ピアがローカル キャッシュに登録されているオブジェクト。</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> ローカル キャッシュからです。 関連付けられているアプリケーションが見つからない場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, 、ゼロ \(0\) が返されるサイズのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
 この機能はでのみ公開、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> クラスです。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">
          <see cref="T:System.Guid" /> ピア アプリケーションを取得するのです。</param>
        <summary>コレクションを取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 、指定したオブジェクト <see cref="T:System.Guid" /> ローカル キャッシュからです。</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> ローカル キャッシュからです。 指定されたを要求しているアプリケーションがない場合 <paramref name="applicationId" />, 、ゼロ \(0\) が返されるサイズのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
 この機能はでのみ公開、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> クラスです。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">関連付けられているエンドポイント情報を含む、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</param>
        <summary>指定された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> を取得します。</summary>
        <returns>指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 アプリケーションが、指定された関連付けられていない場合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, 、ゼロ \(0\) が返されるサイズのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
 この機能はでのみ公開、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> クラスです。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">関連付けられたエンドポイント、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />です。</param>
        <param name="applicationId">関連付けられているアプリケーションの情報を格納、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</param>
        <summary>指定された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> を取得します。</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> に関連付けられた <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトのコレクション。  
  
 ID によって識別されたアプリケーションが見つからない場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, 、またはエンドポイントの ID が <see langword="null" /> または無効か、サイズがゼロ \(0\) のコレクションが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
 この機能はでのみ公開、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> クラスです。  この機能は、セキュリティ上の理由には、ピア ツー ピアの他の型には公開されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハッシュ コードを返す、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンス。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このハッシュ コード値を使用して、プログラムを使用してこの型のインスタンスを比較します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトに関連付けられたシリアル化データを保持します。</param>
        <param name="context">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> をシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A derived type must call the <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> method of the base type.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">オブジェクトを取得する対象のエンドポイントです。</param>
        <summary>取得、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> によって指定された登録 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ローカル キャッシュに格納されているとします。</summary>
        <returns>指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 アプリケーションが、エンドポイントに関連付けられていない場合、コレクション サイズのゼロ \(0\) が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に関連付けられている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">オブジェクトを取得する対象のエンドポイントです。</param>
        <param name="objectId">
          <see cref="T:System.Guid" /> の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> を取得します。</param>
        <summary>ピアのコレクションを指定した登録されているオブジェクトを取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> で登録されていると、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> によって指定された識別 <see cref="T:System.Guid" />します。</summary>
        <returns>指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 アプリケーションが、エンドポイントに関連付けられていない場合、コレクション サイズのゼロ \(0\) が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元のピアがサブスクライブしていない場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> に指定された関連付けられている <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> メソッドは、このメソッドを呼び出す前に呼び出す必要があります。  
  
 呼び出し元にサインインするコラボレーション インフラストラクチャを正常に完了するには、このメソッドの呼び出しは成功する必要がないときに <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> またはのいずれか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> メソッド完了しなければならない、呼び出し元が以前にサインインする間にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼び出し元のピアがサブスクライブしていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />です。  
  
-   呼び出し元のピアがまだ呼び出される、 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> メソッドです。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作します。</exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>送信者がスポンサーとなったピア コラボレーション アクティビティへの参加を招待状を送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>送信者がスポンサーとなったピアへの参加を招待状を送信します。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 招待を受信したピアからです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトが破棄されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 、現在のアプリケーションが存在しません。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">招待を受信するエンドポイント。</param>
        <summary>特定のエンドポイントへの招待の送信側ピアにへの招待を送信します。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 招待を受信したピアのエンドポイントからです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトが破棄されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> 操作します。  
  
-   現在実行中のアプリケーションは、ピア共同作業インフラストラクチャに登録されていません。  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 指定された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトが無効です。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 招待状が送信されるのです。</param>
        <param name="message">アプリケーションへの招待と共にリモート ピアに送信するメッセージ。</param>
        <param name="invitationData">招待に関連付けるユーザー定義データ blob。  そのサイズは、16,384 バイト未満になります。</param>
        <summary>指定したへの参加を指定した招待を送信 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 送信者後援します。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 招待を受信したピアからです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態は、ピア コラボレーション セッションの開始時に作成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトが破棄されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> の現在のアプリケーションが存在しないか空です。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">エンドポイントまたは招待状を送信するために、リモート ピアです。</param>
        <param name="applicationToInvite">招待状を送信するアプリケーションです。</param>
        <param name="message">アプリケーションへの招待と共にリモート ピアに送信するメッセージ。  メッセージには、255 Unicode 文字を指定できます。</param>
        <param name="invitationData">招待に関連付けるユーザー定義データ blob。  そのサイズは、16,384 バイト未満になります。</param>
        <summary>指定した指定済みの招待を送信 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 、指定したへの参加を <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 送信者後援アプリケーションです。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 招待を受信したピアからです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">エンドポイントで <paramref name="PeerEndPoint" /> することはできません <see langword="null" />します。</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトを空にすることはできません。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトにすることはできません <see langword="null" />します。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトが破棄されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> の現在のアプリケーションが存在しないか空です。</exception>
        <block subset="none" type="usage">
          <para>Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>参加するエンドポイントの非同期招待操作を開始、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 後援してへの招待の送信側アプリケーションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元にサインインする必要はありません、 <xref:System.Net.PeerToPeer.Collaboration> このメソッドが正常に完了するためのインフラストラクチャです。 A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> 招待者から、同じではありません招待者の共同作業をする招待を承諾します。 アプリケーションをインストールしていないリモート ピアに招待状を送信すると、招待は自動的に拒否されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">非同期操作のコールバックに渡すユーザー定義オブジェクト。 キャンセルの非同期操作を識別する場合にも使用されます。 このパラメーターは指定する必要があり、進行中のすべての非同期招待操作において一意です。</param>
        <summary>エンドポイントが招待の送信側が勧める <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> アプリケーションに参加するように、非同期の招待操作を開始します。 指定した <see cref="T:System.Object" /> を使用して、招待状が識別されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The caller is not required to sign\-in to the <xref:System.Net.PeerToPeer.Collaboration> infrastructure for this method to complete successfully. A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the invitee is not the same as the invitee accepting the invitation to collaborate. If an invitation is sent to a remote peer that has not installed the application, the invitation is automatically declined.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   現在のアプリケーションの <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> は存在しないか空です。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> として <see langword="null." /> を使用することはできません。</exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">招待状の送信先となるエンドポイントまたはリモート ピア。</param>
        <param name="userToken">非同期操作のコールバックに渡すユーザー定義オブジェクト。 キャンセルの非同期操作を識別する場合にも使用されます。 このパラメーターは指定する必要があり、進行中のすべての非同期招待操作において一意です。</param>
        <summary>指定したピア エンドポイントが、招待の送信側が勧める <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> アプリケーションに参加するように、非同期の招待操作を開始します。 指定した <see cref="T:System.Object" /> を使用して、招待状が識別されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The caller is not required to sign\-in to the <xref:System.Net.PeerToPeer.Collaboration> infrastructure for this method to complete successfully. A <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the invitee is not the same as the invitee accepting the invitation to collaborate. If an invitation is sent to a remote peer that has not installed the application, the invitation is automatically declined.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> として <see langword="null." /> を使用することはできません。  
  
-   <paramref name="peerEndPoint" /> のエンドポイントとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerEndPoint" /> オブジェクトとして <see langword="null." /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">現在のアプリケーションの <see cref="T:System.Guid" /> は存在しないか空です。</exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">招待状が送信されるアプリケーション。</param>
        <param name="message">アプリケーションへの招待と共にリモート ピアに送信するメッセージ。  メッセージは最長 255 Unicode 文字までです。</param>
        <param name="invitationData">招待に関連付けるユーザー定義データ Blob。  そのサイズは最大 16,384 バイトです。</param>
        <param name="userToken">非同期操作のコールバックに渡すユーザー定義オブジェクト。 キャンセルの非同期操作を識別する場合にも使用されます。 このパラメーターは指定する必要があり、進行中のすべての非同期招待操作において一意です。</param>
        <summary>指定したピア エンドポイントが、招待の送信側が勧める指定したグループ作業 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> に参加するように、非同期の招待操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The caller is not required to sign\-in to the [InviteAsync メソッド \(PeerApplication, String, Byte\<xref:System.Net.PeerToPeer.Collaboration> infrastructure for this method to complete successfully. A [InviteAsync メソッド \(PeerApplication, String, Byte\<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the invitee is not the same as the invitee accepting the invitation to collaborate. If an invitation is sent to a remote peer that has not installed the application, the invitation is automatically declined.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトとして <see langword="null." /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   現在のアプリケーションの <see cref="T:System.Guid" /> は存在しないか空です。  
  
-   エンドポイント コレクションは空であるか、<see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">招待状の送信先となるエンドポイントまたはリモート ピア。</param>
        <param name="message">アプリケーションへの招待と共にリモート ピアに送信するメッセージ。  メッセージは最長 255 Unicode 文字までです。</param>
        <param name="invitationData">招待に関連付けるユーザー定義データ Blob。  そのサイズは最大 16,384 バイトです。</param>
        <param name="applicationToInvite">招待状が送信されるアプリケーション。</param>
        <param name="userToken">非同期操作のコールバックに渡すユーザー定義オブジェクト。 キャンセルの非同期操作を識別する場合にも使用されます。 このパラメーターは指定する必要があり、進行中のすべての非同期招待操作において一意です。</param>
        <summary>指定した <paramref name="peerEndPoint" /> が、招待の送信側が勧める指定したグループ作業 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> に参加するように、非同期の招待操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The caller is not required to sign\-in to the [InviteAsync メソッド \(PeerEndPoint, String, Byte\<xref:System.Net.PeerToPeer.Collaboration> infrastructure for this method to complete successfully. A [InviteAsync メソッド \(PeerEndPoint, String, Byte\<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the invitee is not the same as the invitee accepting the invitation to collaborate. If an invitation is sent to a remote peer that has not installed the application, the invitation is automatically declined.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> に null は指定できません。  
  
-   <paramref name="peerEndPoint" /> で指定したエンドポイントとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトと <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトとして <see langword="null." /> を使用することはできません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">現在のアプリケーションの <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> は存在しないか空です。</exception>
        <block subset="none" type="usage">
          <para>Additional overloads are defined on the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class instead of the subclasses <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
 Calling this method requires a <see cref="T:System.Security.Permissions.PermissionState" /> of <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. This state is created when the peer collaboration session begins.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を指定する値かどうか、現在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> がサブスクライブしているか、エンドポイントを解除します。 このプロパティを取得またはかどうか、現在のピアのホストまたはホスト アプリケーションがサブスクライブしているか、このサブスクリプションを取り消したを指定する値を設定する代わりに、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</summary>
        <value>
          <see langword="True" /> この場合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> は、このエンドポイントにサブスクライブ <see langword="false" /> 場合は、メンバーがサブスクライブがないか、購読解除ができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 多くの場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> ピアのホストと同じではありません。 ピアのホストがインスタンス内で、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> リモート ピアの関係は、ピア共同作業を行うを要請することとします。  エンドポイントには、独自の連絡先のマネージャーおよびピアのホスト内でインスタンス化"Me"が、リレーションシップが指定されていません。  
  
 ピアのホストされている場合、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, 、ピア連絡先を選択しないように <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>, 、その <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> にお問い合わせください Manager からホストからのエントリを削除するのではなく、ブロックされるの値を持つことができます。  
  
 ローカル ピア、リモート ピア、ピアのホスト、およびサブスクリプションの間の多対多リレーションシップがあります。  サブスクリプションは、ユーザーはなく、プロセス、アプリケーション、またはドメインごとです。 サブスクリプションに関連付けられている結果として、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトがサブスクライブしている連絡先の一覧には、元となる更新プログラムが必要です。  独自のアプリケーション、オブジェクト、およびプレゼンス情報に、それらの連絡先がか、更新がまたはの連絡先に関する情報を更新する、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager>です。  
  
 このプロパティは常に返します `true` オブジェクトがある場合、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> を表すローカル コンピューターまたは"Me"連絡先、連絡先がそれ自体に常にサブスクライブしているためです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表す文字列、 <paramref name="Nickname" /> の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</summary>
        <value>
          <see cref="T:System.String" /> ニックネームを表す、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ニックネームを使用できます、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトと同じ表示名の複数のピアが発生した場合。  コラボレーション セッションは、大規模なコラボレーション作業でよく使用されるリモート ピアを指定するのにニックネームを使用することもできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントがシグナル状態になるたびに、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> に関連付けられている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> が変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態は、ピア コラボレーション セッションの開始時に作成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">
          <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> イベントに関連付けられているデリゲートに渡される <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Application changes occur when an application is launched, registered or unregistered from the collaboration infrastructure.  They also occur when peers join or leave a collaboration session or change network endpoint locations.  Peer scope changes may also effect a change in an application.  
  
 Classes that inherit from this class can override this method to perform additional tasks when the event occurs.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>In a derived class, be sure to call the base class implementation of this method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">
          <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> により指定されたオブジェクト変更の型。</param>
        <summary>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> がリモート ピアにより追加、更新または削除されると、<see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> イベントが発生します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">
          <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> イベントに関連付けられているデリゲートに渡される <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> オブジェクト。</param>
        <summary>ピアの <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> が変化したときに、<see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Presence changes occur when a peer signs out of an application, an application is registered or unregistered from the collaboration infrastructure, or a peer unsubscribes from a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> or <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> イベントに関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> または <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Classes that inherit from this class can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> event occurs.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A derived class must call the base class implementation of this method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> を取得します。</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> コレクションに関連付けられた <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />します。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 かどうか、 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> はローカル ピア、リモート ピア、またはこのインスタンスで表されるピア連絡先のホストのピアがの存在に関係がない、 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> 、いずれかのエンドポイントで <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> または <xref:System.Net.PeerToPeer.Collaboration.ContactManager>です。  
  
   
  
## 例  
 次のコード例の正しい使用方法を示しています、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> プロパティ。  
  
 [!code-csharp[NCLPNRPContacts\#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerName" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.String" /> 表す、 <see cref="T:System.Net.PeerToPeer.PeerName" /> の <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アドレス帳にない 2 つの連絡先と同じであることができます <xref:System.Net.PeerToPeer.PeerName>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントが発生するたびに、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> のプレゼンス状態が変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出し元ピアを <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に定期受信し、その結果ピアは、<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に関連付けられている今後のあらゆる<see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> イベントを受信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> updates occur asynchronously after the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method has succeeded. As a result, it is possible for a <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> to be added to the collection of a <xref:System.Net.PeerToPeer.Collaboration.PeerContact> before the associated <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> is provided.  
  
 To monitor these changes, it is recommended that the user subscribe to the relevant events; for example, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the peer collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">呼び出し元ピアが、近くの人との接続にサインインしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> 操作を完了できません。 エラーの原因として、ピアへの TCP 接続を確立できないことが考えられます。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を指定する値かどうか、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> ピアまたはの所有権を持つアプリケーションに関連付けられているコラボレーション イベントに公開される、 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> この <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが存在します。</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> 列挙値を指定するかどうかこの <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> コラボレーション イベント ピアのホストに属しているか、アプリケーションをホストに公開されます。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定 <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed>はこれが指定されているリモート ピア <xref:System.Net.PeerToPeer.Collaboration.PeerContact> できる登録済みのアプリケーションやオブジェクトを所有しているアプリケーションとユーザーのプレゼンス情報を参照してください。、 <xref:System.Net.PeerToPeer.Collaboration.ContactManager> この <xref:System.Net.PeerToPeer.Collaboration.PeerContact> オブジェクトが存在します。  
  
 このプロパティ効果はありません、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> を表すインスタンス、ローカルまたは"Me"連絡先、連絡先がそれ自体に常にサブスクライブしているためです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
 オブジェクトが破棄されています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 操作に関する情報を格納するユーザー定義の <see cref="T:System.Object" />。</param>
        <summary>呼び出し元ピアを <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に非同期に定期受信し、その結果ピアは、<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に関連付けられている今後のあらゆる <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> イベントを受信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> event is raised upon completion of this operation. If collaboration activities are not required to be asynchronous, the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> method should be used instead.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the peer collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="UserToken" /> として <see langword="null." /> を使用することはできません。</exception>
        <exception cref="T:System.InvalidOperationException">呼び出し元ピアが、近くの人との接続にサインインしていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトは破棄されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />識別子が重複しています。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サブスクリプションの操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントが発生すると、エラーのプロパティ、 <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> オブジェクトを調べて確認する必要があるかどうか、 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> が正常に完了します。  
  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態は、ピア コラボレーション セッションの開始時に作成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">これは、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトが破棄されています。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">関連付けられているシリアル化されたデータを保持して、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトです。</param>
        <param name="context">関連付けられているシリアル化ストリームの転送先を格納、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトです。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> インスタンスをシリアル化するために必要なデータを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.String" /> の表現、 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> に関連付けられている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</summary>
        <returns>
          <see cref="T:System.String" /> 表現、 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル化、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 永続的な記憶装置またはネットワークの転送用の XML 文字列にします。</summary>
        <returns>XML エンコーディング、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">完了できません。 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> 操作します。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> へのサブスクリプションを削除し、その結果、呼び出し元ピアは <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> に関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> イベントを受信しなくなりました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If the calling peer is not subscribed to the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> specified the result is a no\-op. A calling peer can verify whether it is subscribed to events for the peer identified by this instance with the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> property.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the peer collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">この <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> オブジェクトは破棄されました。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ローカル キャッシュからピア オブジェクトのコレクションを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>