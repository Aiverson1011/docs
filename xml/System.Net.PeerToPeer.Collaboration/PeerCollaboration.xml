<Type Name="PeerCollaboration" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaboration">
  <TypeSignature Language="C#" Value="public static class PeerCollaboration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeerCollaboration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ピア コラボレーション インフラストラクチャと対話します。 主要なコラボレーション シナリオの多くは、このクラスを使用して開始します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは静的クラス: これはシールされた抽象パブリック コンス トラクターがありません。 およびアプリケーション、オブジェクト、およびコラボレーション セッションへの招待を承諾するピアのプレゼンス情報を管理するために使用します。 ピア、オブジェクト、およびアプリケーションの場合は、観点からは、PeerCollaboration クラスは、インターフェイスまたはコンピューターの他にどんなが起こっているかの接続ポイントとして、コレクションごとに 1 つ、3 つのアクセサーを提供します。  このクラスは継承できません。このシール クラスが基底クラスとして指定されている場合、コンパイル時エラーが発生します。  
  
 このクラスのメソッドとプロパティを使用できます。  
  
-   起動し、共同作業アプリケーションを管理します。  
  
-   登録し、アプリケーションと \(証明書、画像、アバター、テキストの説明など\) の共同作業オブジェクトの削除  
  
-   スコープおよびインターネット経由で識別するオブジェクトなどのアイテムを含む、コラボレーション セッションにピアを招待します。  
  
-   ピアを許可する <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> と <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A> コラボレーション インフラストラクチャの連絡先の一覧を管理または相互に自分の存在を発行します。  
  
-   利用 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> プロパティおよびイベントの名前、プレゼンス、アプリケーション、またはその他のオブジェクトの変更では特に、アプリケーションの非同期通信を調整します。  
  
 「リンク ローカル クラウド」、「呼び出し元のサブネットのピア」、「近くの人スコープ」は、同義の用語です。 「インターネット スコープ」と「サーバーレス プレゼンス」は同義です。 サイト ローカル <xref:System.Net.PeerToPeer.PnrpScope> コラボレーション名前空間と同じを持ちません。  
  
 すべてのメソッドまたはこのクラスのプロパティの使用が必要です、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態は、ピア コラボレーション セッションの開始時に作成されます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationLaunchInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> はリモート ピアからコラボレーション要求により、アプリケーションを開始したときに必要な情報を格納しているオブジェクト。</summary>
        <value>招待により、アプリケーションを起動した場合、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> アプリケーションへの招待と自体への招待を送信したピアに関する情報の両方を格納しているオブジェクトを返します。 それ以外の場合、 <see langword="null" /> が返されます。  このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コラボレーション認識で使用される、このプロパティは <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> はリモート ピアから共同作業要求が原因が起動されているかどうかを決定する開始した後をインスタンス化します。  呼び出し元のアプリケーションを調べる必要があります、 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A> と <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> をさらに招待要求に関する情報を取得するプロパティです。  
  
 このプロパティへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="ContactManager">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.ContactManager ContactManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.ContactManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてを含む永続的なストアを取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> のリモート ピア オブジェクトです。</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> リモート ピアのすべてのピアに、連絡先オブジェクトを含むオブジェクトです。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">登録を解除する <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>呼び出し元のピアに関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> の登録を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Peer objects are automatically deregistered \(removed\) from the Peer Collaboration infrastructure when a reference to the object is no longer valid.  If a caller does not maintain a reference to the object, it is deregistered from the Peer Collaboration infrastructure.  Alternatively, an object can be manually deregistered by using this method.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerObject" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作を完了できません。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalRegisteredApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 、ローカル コンピューターに登録されているオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用してピア共同作業インフラストラクチャにサインインするために必要な呼び出し元、 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> メソッドまたは前にこのメソッドを使用します。  
  
 このプロパティへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 次のコード例は、共同作業インフラストラクチャに登録されているアプリケーションのコレクションを取得する方法を示しています。  
  
 [!code-csharp[NCLPNRPContacts\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてを取得します <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 、ローカル コンピューターに登録されているオブジェクト。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> をローカル コンピューターに登録されているすべてのアプリケーションが含まれています。 アプリケーションが見つからない場合、コレクション サイズのゼロ \(0\) が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用してピア共同作業インフラストラクチャにサインインするには、呼び出し元が必要、 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> このメソッドを使用する前にメソッドです。  
  
 このプロパティへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">このメソッドがこのピアに登録されているアプリケーションを列挙するときに、無効な値が返されました。 すべてのアプリケーションが有効なレジストリ値を持つことを確認してください。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications(valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 指定したアプリケーションに返します。</param>
        <summary>すべてのコレクションを取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトは、指定されたローカル コンピューターに登録されている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />します。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> の指定したすべてのアプリケーションを含む <paramref name="type" /> 、ローカル コンピューターに登録されています。 アプリケーションが見つからない場合、コレクション サイズのゼロ \(0\) が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用してピア共同作業インフラストラクチャにサインインするには、呼び出し元が必要、 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> このメソッドを使用する前にメソッドです。  
  
 このメソッドへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="type" /> パラメーターは、既知の値に設定されていない、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 列挙します。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">このメソッドがこのピアに登録されているアプリケーションを列挙するときに、無効な値が返されました。 すべてのアプリケーションが有効なレジストリ値を持つことを確認してください。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalSetObjects">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべて取得 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> で呼び出し元のピアでインスタンスが登録されている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> このコンピューター上のインフラストラクチャです。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> すべてを含む、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> で呼び出し元のピアでインスタンスが登録されている、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 、ローカル コンピューター上のインフラストラクチャです。  
  
 登録されている場合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> インスタンスは、ローカル コンピューターで検出されない、サイズがゼロ \(0\) のコレクションが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">このメソッドが使用可能なすべてを列挙するときに、無効な値は返された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> インスタンス。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetPeersNearMe">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerNearMeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのコレクションを返す、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 現在サインインして呼び出し元のピアのネットワーク サブネット上のエンドポイント。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> すべてを含む、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> "近くの人"スコープ、現在サインイン エンドポイント。  
  
 サブネットには、ピアは検出されない、サイズがゼロ \(0\) のコレクションが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の完全に設定された <xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection> このメソッドを使用して、不確定な記号に対応するネットワーク トポロジと待機時間の後の時間を要求できます。  
  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 次のコード例では、PeersNearMe、PeerNearMeCollection としてを取得する方法を示します。  
  
 [!code-csharp[NCLPNRPContacts\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">"近くの人"スコープ、ピアが署名されていません。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">このメソッドがすべて既知 People Near Me のエンドポイントを列挙するときに、無効な値が返されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalApplicationChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>いつ発生するか、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> で、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> ローカル ホスト上のローカルのピアが変更されたりします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPointName">
      <MemberSignature Language="C#" Value="public static string LocalEndPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalEndPointName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の名前、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 呼び出し元のピアに関連付けられています。</summary>
        <value>
          <see cref="T:System.String" /> 呼び出し元のピアのエンドポイントに関連付けられた名前を表す \(として提供される、 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> プロパティ\)。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティへのアクセスが必要とする <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">設定できません。 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />します。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="LocalNameChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>いつ発生するかの名前、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ローカル ピアのローカル ホスト上で変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalObjectChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> で、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> ローカル ホスト上のローカルのピアが変更されたりします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> のローカル ホスト上のローカルのピアが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または内で呼び出し元のピアに存在することを設定、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> インフラストラクチャです。</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> が登録した呼び出し元のピアのプレゼンス情報を格納している、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> セッションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出す必要があります、 <xref:System.Security.Permissions.PermissionState> の <xref:System.Security.Permissions.PermissionState.Unrestricted>です。 この状態が作成された、 <xref:System.Net.PeerToPeer.Collaboration.Peer> コラボレーション セッションを開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 指定できません。 <see langword="null" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> オフラインします。  
  
-   設定できません。  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RegisterApplication">
      <MemberSignature Language="C#" Value="public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">関連付けられたスコープ内 \(グローバル、ローカル、およびリンク ローカル\) の呼び出し元ピアを登録するための <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
        <param name="type">実行する登録の種類。  アプリケーションは、呼び出し元のピアだけに登録することも、またはコンピューターを使用するすべてのピアに登録することもできます。</param>
        <summary>呼び出し元のピアとのグループ作業セッションのために指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> を登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The calling peer is required to sign in to the peer collaboration infrastructure with the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> method prior to calling this method.  
  
 Access to this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
   
  
## 例  
 The following code example illustrates how to register an application with the Collaboration infrastructure:  
  
 [!code-csharp[NCLPNRPContacts\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="application" /> に渡された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> オブジェクトの <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> プロパティが <see langword="null." /> です。  
  
-   指定された Peer Application のインスタンスには、既に登録されているアプリケーションと同じグローバル一意識別子 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> があります。  指定した識別子で新しいアプリケーションを登録する前に、既存の登録を解除する必要があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="application" /> パラメーターと <paramref name="type" /> パラメーターを <see langword="null" /> にすることはできません。  両方のパラメーターを指定する必要があります。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">型パラメーターが <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 列挙体の既知の値に設定されていません。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">呼び出し元がインフラストラクチャにサインインするまでは<see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作を完了できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">登録する <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>呼び出し元のピアに関連付けられている <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> を登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method allows the object to be queried by remote peers participating in the scope in which the object was registered. If the object was previously registered, this method updates its registration. If a registered object falls out of scope, it can be retrieved via the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A> method.  
  
 The size of the data portion of the <xref:System.Net.PeerToPeer.Collaboration.PeerObject> must be less than or equal to 16,384 bytes.  
  
 Access to this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">オブジェクトは既に登録されています</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> として <see langword="null." /> を使用することはできません。  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> として <see langword="null." /> を使用することはできません。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作を完了できませんでした。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignIn(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> アクティビティを結合するためにピアが使用しているスコープ。</param>
        <summary>指定された <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> でコラボレーション インフラストラクチャへのピアに署名します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Display names are not necessarily unique. Users should verify the identity of the person using the display name by e\-mail, phone, or in person before accepting a collaboration invitation.  
  
 This function signs the users into the Collaboration Infrastructure.  
  
 Access to this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
   
  
## 例  
 The following code example illustrates how to sign the users into the Collaboration infrastructure.  
  
 [!code-csharp[NCLPNRPContacts\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="peerScope" /> が <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" /> に設定されます。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="peerScope" /> パラメーターに正しくない列挙値が含まれています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作を完了できませんでした。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignInScope">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.PeerToPeer.Collaboration.PeerScope SignInScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 呼び出し元のピアがプレゼンス、機能、およびオブジェクトの情報を発行できます。</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 呼び出し元のピアが参加するスコープを指定するオブジェクト。 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピアのホストまたはホスト アプリケーションが制限または個別のスコープを使用してコラボレーション アクティビティへのピアの参加を区別することがあります。  
  
 呼び出し元のピアでは、正常に実行できるさらにアクションを決定するには、このメソッドからの戻り値を調べる必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> によって指定された列挙体をスコープします。</param>
        <summary>指定したスコープ外のピアに署名します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is not an application\-specific operation and signing out may affect other applications that may be currently running. If the user is not already signed into the specified scope calling this method results in a no\-op.  
  
 When a user signs out of People Near Me, their published information is deleted from the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> endpoint object set.  This includes <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> and <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A>, in addition to any identifying objects registered by the calling peer into the collaboration infrastructure. Because this information is deleted, it is no longer available to either remote peers or a peer host for collaboration. From the perspective of the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> class, other sharing of the same information with trusted contacts is not relevant; use of the <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> class does not affect other objects in which this information was persisted, such as a remote peer <xref:System.Net.PeerToPeer.Collaboration.ContactManager> object. Likewise, deleting a peer from the <xref:System.Net.PeerToPeer.Collaboration.ContactManager> does not affect its presence in a collaboration application; other contacts are still able to view its presence and collaborate with it.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="peerScope" /> パラメーターに正しくない列挙値が含まれています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作を完了できませんでした。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはすべてのイベント ハンドラーのコールバック オブジェクトのイベント ハンドラーを設定します。</summary>
        <value>持つオブジェクト <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> のアプリケーションのスレッドの同期に使用するために実装します。  
  
 このプロパティの既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterApplication">
      <MemberSignature Language="C#" Value="public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">呼び出し元のピアに対して登録を解除する <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
        <param name="type">呼び出し元のピア、またはコンピューターに存在するすべてのピアに対して実行する登録解除の種類。</param>
        <summary>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> インフラストラクチャから、指定した <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> の登録を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Deregistering a <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> stops the calling peer from receiving collaboration invitations for it.  If the application being deregistered was not previously registered, this is a no\-op.  
  
 Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState.Unrestricted>. This state is created when the <xref:System.Net.PeerToPeer.Collaboration.Peer> collaboration session begins.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定したアプリケーションのグローバルに一意な <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> は、存在しないか空です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="application" /> または <paramref name="type" /> パラメーターが <see langword="null." /> に設定されています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="type" /> パラメーターが、<see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> の既知の値に設定されていません。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作を完了できませんでした。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
  </Members>
</Type>