<Type Name="IIdentifierCreationService" FullName="System.Workflow.ComponentModel.Design.IIdentifierCreationService">
  <TypeSignature Language="C#" Value="public interface IIdentifierCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIdentifierCreationService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IIdentifierCreationService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定した範囲のアクティビティ全体を通して一意となる名前の識別子を作成するための機構を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService> は、ある範囲のアクティビティ全体を通して一意となる名前の識別子を作成するための機構を提供します。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService> を実装する例を次に示します。 このサービスは、現在のワークフロー内で使用される各識別子が一意になるようにします。  
  
 [!code-csharp[WF\_Samples\#41](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#41)]
 [!code-vb[WF\_Samples\#41](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#41)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureUniqueIdentifiers">
      <MemberSignature Language="C#" Value="public void EnsureUniqueIdentifiers (System.Workflow.ComponentModel.CompositeActivity parentActivity, System.Collections.ICollection childActivities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureUniqueIdentifiers(class System.Workflow.ComponentModel.CompositeActivity parentActivity, class System.Collections.ICollection childActivities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers(System.Workflow.ComponentModel.CompositeActivity,System.Collections.ICollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivity" Type="System.Workflow.ComponentModel.CompositeActivity" />
        <Parameter Name="childActivities" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="parentActivity">一意の名前が付けられたアクティビティが格納された <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</param>
        <param name="childActivities">一意の名前が付けられるようにするアクティビティのコレクション。</param>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> に追加されるアクティビティに一意の名前を付ける機構を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers%2A> に挿入されるアクティビティに一意の識別子を持たせるには、<xref:System.Workflow.ComponentModel.CompositeActivity> を使用します。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService> を実装する例を次に示します。 このサービスは、現在のワークフロー内で使用される各識別子が一意になるようにします。  
  
 [!code-csharp[WF\_Samples\#43](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#43)]
 [!code-vb[WF\_Samples\#43](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifier">
      <MemberSignature Language="C#" Value="public void ValidateIdentifier (System.Workflow.ComponentModel.Activity activity, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateIdentifier(class System.Workflow.ComponentModel.Activity activity, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier(System.Workflow.ComponentModel.Activity,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity">識別子のテスト対象の <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
        <param name="identifier">有効性をテストする識別子。</param>
        <summary>識別子が <see cref="T:System.Workflow.ComponentModel.Activity" /> 内で一意かどうかをテストするための機構を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子が一意であり、指定した <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier%2A> 内で使用できる正しい形式になっていることを確認するには、<xref:System.Workflow.ComponentModel.Activity> を使用します。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.Design.IIdentifierCreationService> を実装する例を次に示します。 このサービスは、現在のワークフロー内で使用される各識別子が一意になるようにします。  
  
 [!code-csharp[WF\_Samples\#42](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#42)]
 [!code-vb[WF\_Samples\#42](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>