<Type Name="WorkflowDesignerMessageFilter" FullName="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter">
  <TypeSignature Language="C#" Value="public abstract class WorkflowDesignerMessageFilter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowDesignerMessageFilter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべてのワークフロー メッセージ フィルターの基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ワークフロー デザイナーは、イベント処理用に置換可能なメッセージ フィルター オブジェクトを作成するための `Strategy` デザイン パターンを提供します。  
  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> クラスから派生して、ワークフロー デザイナー イベント \(ドラッグ操作、レイアウトとペイント操作、その他のデザイナー イベント\) に応答できるメッセージ フィルターを作成します。 カスタム メッセージ フィルターをメッセージ フィルター チェーンに追加するには、 <xref:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter%2A> で <xref:System.Workflow.ComponentModel.Design.WorkflowView> を呼び出すか、カスタム ルート アクティビティで <xref:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters%2A> 仮想プロパティをオーバーライドして、基本クラスから返されたコレクションにカスタム メッセージ フィルターを追加します。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> から派生したカスタム デザイナー メッセージ フィルターのコード例を、次に示します。`CustomMessageFilter` という名前のクラスは、その基本クラスの多数のメソッドをオーバーライドします。オーバーライドされるメソッドには、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseEnter%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown%2A> があります。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_Samples\#237](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#237)]
 [!code-vb[wf\_Samples\#237](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#237)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowDesignerMessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>派生クラスとして実装された場合、<see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> で使用したリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with disposing set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is **languageKeyword tag is not supported!!!!**  
, this method releases all resources held by any managed objects that this <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
> [!NOTE]
>  `Dispose` can be called multiple times by other objects. When overriding `Dispose(Boolean)`, be careful not to reference objects that have been previously disposed of in an earlier call to `Dispose`. [!INCLUDE[crabout](~/includes/crabout-md.md)] how to implement `Dispose(Boolean)`, see [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)] `Dispose` and `Finalize`, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Overriding the Finalize Method](http://msdn.microsoft.com/ja-jp/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WorkflowDesignerMessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ガベージ コレクションでオブジェクトがクリアされる前に、<see langword="Dispose(false)" /> を呼び出して、リソースの解放を試みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは `Dispose(false)` を呼び出してリソースをクリーンアップします。`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize (System.Workflow.ComponentModel.Design.WorkflowView parentView);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize(class System.Workflow.ComponentModel.Design.WorkflowView parentView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Initialize(System.Workflow.ComponentModel.Design.WorkflowView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentView" Type="System.Workflow.ComponentModel.Design.WorkflowView" />
      </Parameters>
      <Docs>
        <param name="parentView">
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に関連付ける <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</param>
        <summary>関連付けられた <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> を使用して <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージ フィルターを <xref:System.Workflow.ComponentModel.Design.WorkflowView> に関連付けることにより、マウス イベント、キーボード イベント、描画\/レイアウト イベントなどのユーザー操作から発生するメッセージをキャプチャできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageHitTestContext">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Design.HitTestInfo MessageHitTestContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.HitTestInfo MessageHitTestContext" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.MessageHitTestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> のコンテキストを示す <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> を取得します。</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> のコンテキストに関する情報を格納している <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.HitTestInfo> には、領域およびヒットした領域のコンテキスト \(ヒットしたデザイナーなど\)、ヒットしたデザイナー上の領域に関する情報が含まれます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual bool OnDragDrop (System.Windows.Forms.DragEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDragDrop(class System.Windows.Forms.DragEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
        <summary>ドラッグ操作中にオブジェクト上でマウス ボタンが離されると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragDrop%2A> は、ドラッグ操作中にオブジェクト上でマウス ボタンが離されると発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual bool OnDragEnter (System.Windows.Forms.DragEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDragEnter(class System.Windows.Forms.DragEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
        <summary>ドラッグ操作中にマウス ポインターがオブジェクトの境界内に入ると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter%2A> は、ドラッグ操作中にマウス ポインターがオブジェクトの境界内に入ると発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#247](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#247)]
 [!code-vb[wf\_samples\#247](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#247)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual bool OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragLeave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ドラッグ操作中にマウス ポインターがオブジェクトの境界から出ると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragLeave%2A> は、ドラッグ操作中にマウス ポインターがオブジェクトの境界から出ると発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragLeave%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#249](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#249)]
 [!code-vb[wf\_samples\#249](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#249)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual bool OnDragOver (System.Windows.Forms.DragEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDragOver(class System.Windows.Forms.DragEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
        <summary>ドラッグ操作中にマウス ポインターがオブジェクトの境界内を移動すると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver%2A> は、ドラッグ操作中にマウス ポインターがオブジェクトの境界内を移動すると発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#248](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#248)]
 [!code-vb[wf\_samples\#248](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#248)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual bool OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
        <summary>ドラッグ操作中に発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback%2A> は、ドラッグ操作が始まると発生します。<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback%2A> は、ドラッグ対象に応じてマウス ポインターの外観を変え、何をドラッグしているのか目で見て確認できるようにするために使います。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#251](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#251)]
 [!code-vb[wf\_samples\#251](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#251)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual bool OnKeyDown (System.Windows.Forms.KeyEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnKeyDown(class System.Windows.Forms.KeyEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>キーが押されたときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown%2A> は、特定のオブジェクトにフォーカスがあるときにキーが押されると発生します。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown%2A> メソッドをオーバーライドしてワークフロー デザイン サーフェイスからのアクティビティの削除の仕方をカスタマイズする方法を、次のコード例に示します。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#253](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#253)]
 [!code-vb[wf\_samples\#253](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#253)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual bool OnKeyUp (System.Windows.Forms.KeyEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnKeyUp(class System.Windows.Forms.KeyEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>キーが離されたときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyUp%2A> は、特定のオブジェクトにフォーカスがあるときにキーが離されると発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyUp%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#254](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#254)]
 [!code-vb[wf\_samples\#254](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#254)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
        <summary>子オブジェクトを再配置する必要があるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnLayout%2A> は、親コンテナー内で子オブジェクトを再配置する必要があるときに発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseCaptureChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseCaptureChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseCaptureChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マウスをドラッグして選択された項目が変わったときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseCaptureChanged%2A> は、マウスをドラッグして選択された項目が変わったときに発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseCaptureChanged%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#246](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#246)]
 [!code-vb[wf\_samples\#246](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#246)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウスがダブルクリックされたときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick%2A> は、マウスがダブルクリックされたときに発生します。 オペレーティング システムのマウス設定に応じて、ダブルクリックが決定されます。 2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#241](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#241)]
 [!code-vb[wf\_samples\#241](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseDown (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseDown(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ボタンがクリックされると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown%2A> は、マウス ボタンがクリックされると発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#238](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#238)]
 [!code-vb[wf\_samples\#238](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#238)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseEnter (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseEnter(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseEnter(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ポインターがオブジェクトの境界内に入ったときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseEnter%2A> は、マウス ポインターがオブジェクトの境界内に入ったときに発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#242](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#242)]
 [!code-vb[wf\_samples\#242](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#242)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseHover (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseHover(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ポインターがオブジェクト上に置かれたときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover%2A> は、マウス ポインターがオブジェクト上に置かれたときに発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#243](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#243)]
 [!code-vb[wf\_samples\#243](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#243)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マウス ポインターがオブジェクトの境界から出たときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave%2A> は、マウス ポインターがオブジェクトの境界から出たときに発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave%2A> メソッドをオーバーライドして `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#244](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#244)]
 [!code-vb[wf\_samples\#244](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseMove (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseMove(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ポインターがオブジェクトの境界内で移動すると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove%2A> は、マウス ポインターがオブジェクトの境界内で移動すると発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove%2A> メソッドをオーバーライドしてスクロール位置と `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにしています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#239](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#239)]
 [!code-vb[wf\_samples\#239](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#239)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseUp (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseUp(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ボタンが離されると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp%2A> は、マウス ボタンが離されると発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp%2A> メソッドをオーバーライドしてスクロール位置と `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにしています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#240](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#240)]
 [!code-vb[wf\_samples\#240](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual bool OnMouseWheel (System.Windows.Forms.MouseEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMouseWheel(class System.Windows.Forms.MouseEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>マウス ホイールが動くと発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseWheel%2A> は、マウス ホイールが動くと発生します。  
  
   
  
## 例  
 次のコード例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseWheel%2A> メソッドをオーバーライドして、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の <xref:System.Windows.Forms.MouseEventArgs.Delta%2A> プロパティに基づいて <xref:System.Windows.Forms.MouseEventArgs> オブジェクトを拡大\/縮小すると共に `false` を返し、デザイナー アーキテクチャの他のコンポーネントがメソッドを処理できるようにしています。  
  
 [!code-csharp[wf\_samples\#245](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#245)]
 [!code-vb[wf\_samples\#245](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#245)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual bool OnPaint (System.Windows.Forms.PaintEventArgs eventArgs, System.Drawing.Rectangle viewPort, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPaint(class System.Windows.Forms.PaintEventArgs eventArgs, valuetype System.Drawing.Rectangle viewPort, class System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaint(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.PaintEventArgs" />
        <Parameter Name="viewPort" Type="System.Drawing.Rectangle" />
        <Parameter Name="ambientTheme" Type="System.Workflow.ComponentModel.Design.AmbientTheme" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <param name="viewPort">描画する領域を示す <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="ambientTheme">テーマに関する情報を取得するために使用される <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
        <summary>描画メッセージを受け取ると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaint%2A> は、描画メッセージを受け取ると発生します。<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaint%2A> に渡されるパラメーターを使用して、描画される領域、使用されるテーマ、および `PaintEventArgs` で渡されるイベントに関する追加情報を確認できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintWorkflowAdornments">
      <MemberSignature Language="C#" Value="protected virtual bool OnPaintWorkflowAdornments (System.Windows.Forms.PaintEventArgs eventArgs, System.Drawing.Rectangle viewPort, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPaintWorkflowAdornments(class System.Windows.Forms.PaintEventArgs eventArgs, valuetype System.Drawing.Rectangle viewPort, class System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaintWorkflowAdornments(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.PaintEventArgs" />
        <Parameter Name="viewPort" Type="System.Drawing.Rectangle" />
        <Parameter Name="ambientTheme" Type="System.Workflow.ComponentModel.Design.AmbientTheme" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see langword="PaintEventArgs" />。</param>
        <param name="viewPort">描画する領域を示す <see langword="Rectangle" />。</param>
        <param name="ambientTheme">テーマに関する情報を取得するために使用される <see langword="AmbientTheme" />。</param>
        <summary>ワークフローが修飾を再描画する必要があるときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `OnPaintWorkflowAdornments` は、ワークフローが修飾を再描画する必要があるときに発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual bool OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
        <summary>ドラッグ操作中に発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `OnQueryContinueDrag` は、ドラッグ操作中に発生します。`OnQueryContinueDrag` イベントにより、ドラッグ ソースはドラッグ操作をキャンセルする必要があるかどうかを判断できます。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnQueryContinueDrag%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#252](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#252)]
 [!code-vb[wf\_samples\#252](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#252)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual bool OnScroll (System.Windows.Forms.ScrollBar sender, int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnScroll(class System.Windows.Forms.ScrollBar sender, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Windows.Forms.ScrollBar" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">ユーザーがスクロールした <see cref="T:System.Windows.Forms.ScrollBar" />。</param>
        <param name="value">スクロール バーの位置。</param>
        <summary>ユーザーがワークフロー デザイナーでスクロールすると発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnScroll%2A> は、デザイナーのスクロール バーを使用して、上、下、左、または右にスクロールされたときに発生します。  
  
 派生クラスでオーバーライドしない限り、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnScroll%2A> は常に `false` を返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowContextMenu">
      <MemberSignature Language="C#" Value="protected virtual bool OnShowContextMenu (System.Drawing.Point screenMenuPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnShowContextMenu(valuetype System.Drawing.Point screenMenuPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnShowContextMenu(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenMenuPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="screenMenuPoint">コンテキスト メニューを表示するポイント。</param>
        <summary>ワークフローがコンテキスト メニューを表示する必要があるときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnShowContextMenu%2A> は、ワークフローがコンテキスト メニューを表示する必要があるときに発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnShowContextMenu%2A> メソッドをオーバーライドして常に `true` を返すようにする方法を示しています。  
  
 このコード例は、DesignerShell.cs ファイルから抜粋した Basic Designer Hosting の SDK サンプルの一部です。[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/ja-jp/55925adf-2daa-4dc2-b1bf-61aa0190d734).  
  
 [!code-csharp[wf\_samples\#255](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#255)]
 [!code-vb[wf\_samples\#255](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#255)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnThemeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThemeChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnThemeChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ワークフローのテーマが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnThemeChange%2A> は、ワークフロー テーマに変更が加えられると発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentView">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Design.WorkflowView ParentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowView ParentView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ParentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に関連付けられている <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> を取得します。</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に関連付けられている <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージ フィルターは、<xref:System.Workflow.ComponentModel.Design.WorkflowView> でのイベントに応答します。 メッセージ フィルターは、<xref:System.Workflow.ComponentModel.Design.WorkflowView> を使用して <xref:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter%2A> に関連付けられます。<xref:System.Workflow.ComponentModel.Design.WorkflowView> でイベントが発生すると、メッセージが <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> に渡されて処理されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessMessage (System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessMessage(valuetype System.Windows.Forms.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ProcessMessage(System.Windows.Forms.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="message">処理対象の <see langword="Message" />。</param>
        <summary>未加工の Win32 メッセージを処理する必要があるときに発生します。</summary>
        <returns>メッセージが処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.Design.WorkflowView> は、オペレーティング システムから未加工の Win32 メッセージを受け取ることができます。 メッセージは、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> に転送されて処理されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> で使用したリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>