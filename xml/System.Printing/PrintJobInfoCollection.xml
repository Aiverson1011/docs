<Type Name="PrintJobInfoCollection" FullName="System.Printing.PrintJobInfoCollection">
  <TypeSignature Language="C#" Value="public class PrintJobInfoCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintJobInfoCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintSystemJobInfo&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintJobInfoCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>1 つまたは複数を表す <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!CAUTION]
>  クラス内で、 <xref:System.Printing> Windows サービスや ASP.NET アプリケーションまたはサービス内で使用する名前空間はサポートされていません。 これらのアプリケーションの種類のいずれかの内側からこれらのクラスを使用しようと、予期しない問題が発生する可能性があります、低下しているなどのサービスのパフォーマンスと実行時の例外です。  
  
 Windows フォーム アプリケーションから印刷するを参照して、 <xref:System.Drawing.Printing> 名前空間。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintJobInfoCollection (System.Printing.PrintQueue printQueue, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.#ctor(System.Printing.PrintQueue,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printQueue">印刷キューが印刷ジョブを含むコレクションが設定されます。</param>
        <param name="propertyFilter">プロパティのサブセットの一覧、 <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Printing.PrintJobInfoCollection" /> を含むクラス、 <see cref="T:System.Printing.PrintSystemJobInfo" /> 指定するすべてのジョブ オブジェクト <see cref="T:System.Printing.PrintQueue" /> し、指定したプロパティ フィルターに記載されているプロパティでのみこれらのオブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Printing.PrintSystemJobInfo> に記載されているこれらのプロパティでのみ、コレクション内のオブジェクトが初期化されて、 `propertyFilter`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintSystemJobInfo printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintSystemJobInfo printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Add(System.Printing.PrintSystemJobInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintSystemJobInfo" />
      </Parameters>
      <Docs>
        <param name="printObject">追加するオブジェクト。</param>
        <summary>メンバーを追加、 <see cref="T:System.Printing.PrintJobInfoCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>使用されているアンマネージ リソースを解放、 <see cref="T:System.Printing.PrintJobInfoCollection" /> マネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、パブリック `Dispose()` メソッドおよび <xref:System.Object.Finalize%2A> メソッドです。`Dispose()` 保護対象の起動 `Dispose(Boolean)` 無名のブール型パラメーターを設定したメソッド `true`します。<xref:System.Object.Finalize%2A> 呼び出す `Dispose` パラメーターを設定した `false`します。  
  
 このメソッドがすべてのマネージ オブジェクトによって保持されているすべてのリソースを解放するブール型パラメーターが true の場合この <xref:System.Printing.PrintJobInfoCollection> 参照します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintSystemJobInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ジェネリックを実装するオブジェクトを取得 <see cref="T:System.Collections.IEnumerator" /> を閉じるにはインターフェイス <see cref="T:System.Printing.PrintSystemJobInfo" />します。</summary>
        <returns>ジェネリックを実装するオブジェクト <see cref="T:System.Collections.IEnumerator" /> を反復処理インターフェイスと、 <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトを <see cref="T:System.Printing.PrintJobInfoCollection" /> が含まれています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することをお勧めします `foreach` コレクションのすべてのメンバーを反復処理します。 使用する <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> などその他のすべてのメンバーをスキップすることにより、反復処理をカスタマイズする必要がある場合のみです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非ジェネリックを実装するオブジェクトを取得 <see cref="T:System.Collections.IEnumerator" /> インターフェイスです。</summary>
        <returns>非ジェネリックを実装するオブジェクト <see cref="T:System.Collections.IEnumerator" /> を反復処理インターフェイスと、 <see cref="T:System.Printing.PrintSystemJobInfo" /> オブジェクトを <see cref="T:System.Printing.PrintJobInfoCollection" /> が含まれています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することをお勧めします `foreach` コレクションのすべてのメンバーを反復処理します。 など、他のすべてのメンバーをスキップすることにより、反復処理をカスタマイズする必要がある場合にのみ、列挙子オブジェクトを使用します。  
  
 ジェネリック、タイプ セーフな関数を使用することをお勧め独自の列挙子にする場合は、 <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> の代わりに <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>します。<xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A> がパブリックの要件を満たすためにのみ、 <xref:System.Collections.IEnumerable> このコレクションによって実装されるインターフェイスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>