<Type Name="SrgsDocument" FullName="System.Speech.Recognition.SrgsGrammar.SrgsDocument">
  <TypeSignature Language="C#" Value="public class SrgsDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>準拠する厳密に型指定されたランタイムの文法の構築に使用するデザイン時のオブジェクトを定義、 [Speech Recognition Grammar Specification \(SRGS\) Version 1.0](http://www.w3.org/TR/speech-grammar/)します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ことができます、空の構築 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> インスタンス化し、文法をなど SRGS 要素を表すクラスのインスタンスを追加してビルド <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>,、<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>, 、および <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>です。 構築することも、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> のインスタンスから、既存の SRGS 準拠の XML 文法ファイルからインスタンス <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, 、またはのインスタンスから <xref:System.Speech.Recognition.GrammarBuilder>します。  
  
 後に、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトが作成されるに読み込むことができます、 <xref:System.Speech.Recognition.Grammar> オブジェクトまたはによってコンパイル <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>, に読み取るようにして有効にすると、 <xref:System.Speech.Recognition.Grammar> オブジェクトです。  
  
 参照してください [Create Grammars Using SrgsGrammar](http://msdn.microsoft.com/ja-jp/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) で、 [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/ja-jp/610116c7-3817-40ff-857b-5d41e8511043) 詳細と例についてです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンス トラクターを使用して、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> クラスのインスタンスを作成する <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> から、 <xref:System.Speech.Recognition.GrammarBuilder>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, 、または <xref:System.Xml.XmlReader> の空のインスタンスを開始するオブジェクトを XML 形式の文法へのパスを含む文字列のことも <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、空を作成 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> インスタンス。 空の文法を構築する <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> インスタンスなど SRGS 要素を表すクラスのインスタンスを追加、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, 、<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, と <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>です。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトし、という名前のパブリック ルールを作成し、 `winnerRule`です。 これは、後、作成、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> 文字列で構成される"が勝った場合はワールド カップの民族は:"、によってこの項目を追加し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> 規則のプロパティです。 2 つ以上のルールを作成し \(`ruleEurope` と `ruleSAmerica`\)、それぞれは、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> 3 種類を含むオブジェクト <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> オブジェクトです。 その後、もう 1 つ <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> を含むオブジェクトが作成される <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> を参照するオブジェクト `ruleEurope` と `ruleSAmerica`です。 新しい <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> オブジェクトに追加し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> の `winnerRule`です。 その後、次の 3 つすべてのルール \(`winnerRule`, 、`ruleEurope`, 、および `ruleSAmerica`\) に追加、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> のプロパティ <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>します。 最後に、3 つのルールは、文法のバイナリ表現にコンパイルされます。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  String fileName = Path.GetTempFileName();  
  using (FileStream stream = new FileStream(fileName, FileMode.Create))   
  {   
  
    // Compile the grammar to a binary format.  
    SrgsGrammarCompiler.Compile(document, stream);   
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <see cref="T:System.Speech.Recognition.GrammarBuilder" /> オブジェクトの作成に使用される、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスからの <see cref="T:System.Speech.Recognition.GrammarBuilder" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、文法の基づいて、 <xref:System.Speech.Recognition.GrammarBuilder> インスタンスを使用して <xref:System.Speech.Recognition.Choices> オブジェクトです。 これは、後、作成、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> から、 <xref:System.Speech.Recognition.GrammarBuilder> オブジェクトです。  
  
```csharp  
GrammarBuilder builder = null;  
  
// Create new Choices objects and add countries, and create GrammarBuilder objects.  
Choices choicesEurope = new Choices(new string[] { "England", "France", "Germany", "Italy" });  
GrammarBuilder europe = new GrammarBuilder(choicesEurope);  
  
Choices choicesSAmerica = new Choices(new string[] { "Argentina", "Brazil", "Uruguay" });  
GrammarBuilder sAmerica = new GrammarBuilder(choicesSAmerica);  
  
Choices worldCupWinnerChoices = new Choices(new GrammarBuilder[] {choicesEurope, choicesSAmerica});  
  
// Create new GrammarBuilder from a Choices object.  
builder = new GrammarBuilder(worldCupWinnerChoices);  
  
// Create an SrgsDocument object from a GrammarBuilder object.  
SrgsDocument document = new SrgsDocument(builder);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule grammarRootRule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="grammarRootRule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Parameters>
      <Docs>
        <param name="grammarRootRule">
          <see langword="root rule" /> で、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスし、指定、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> の文法のルート ルールを使用するオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターに指定されたルールの追加、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> の <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトし、設定として、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A> 、文法の規則。  
  
   
  
## 例  
 次の例は、2 つのルールを作成します。 \(`chooseCities` と `destCities`\) のフライトの出発地と目的の都市を選択します。 例では、初期化、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> インスタンスを使用して、 `chooseCities` を引数としてルール。 この例は、ルールのコレクションの内容と、ルート ルールの名前をコンソールに書き出します。  
  
```csharp  
// Create a rule that contains a list of destination cities.  
SrgsRule destCities = new SrgsRule("Destination");  
SrgsOneOf toCities = new SrgsOneOf(new string[] { "New York", "Seattle", "Denver" });  
destCities.Add(toCities);  
  
// Create a list of origin cities and supporting phrases.  
SrgsOneOf fromCities = new SrgsOneOf(new SrgsItem[] {   
  new SrgsItem("Dallas"), new SrgsItem("Miami"), new SrgsItem("Chicago") });  
SrgsItem intro = new SrgsItem("I want to fly from");  
SrgsItem to = new SrgsItem("to");  
  
// Create the root rule of the grammar, and assemble the components.  
SrgsRule chooseCities = new SrgsRule("Trip");  
chooseCities.Add(intro);  
chooseCities.Add(fromCities);  
chooseCities.Add(to);  
chooseCities.Add(new SrgsRuleRef(destCities));  
  
// Create the SrgsDocument and specify the root rule to add.  
SrgsDocument bookFlight = new SrgsDocument(chooseCities);  
  
// Add the rule for the destination cities to the document's rule collection.  
bookFlight.Rules.Add(new SrgsRule[] { destCities });  
  
// Display the contents of the Rules collection and the name of the root rule.  
foreach (SrgsRule rule in bookFlight.Rules)  
{  
  Console.WriteLine("Rule " + rule.Id + " is in the rules collection");  
}  
Console.WriteLine("Root Rule " + bookFlight.Root.Id);  
  
// Create a Grammar object and load it to the recognizer.  
Grammar g = new Grammar(bookFlight);  
g.Name = ("City Chooser");  
recognizer.LoadGrammarAsync(g);  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="grammarRootRule" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">SRGS XML ファイルの場所。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 文書を保存、XML の場所を指定するクラスが塗りつぶしに使用される、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例が、新たに作成 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> "srgsDocumentFile.xml"という名前のファイルからです。  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
   document = new SrgsDocument(srgsDocumentFile);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsDocument (System.Xml.XmlReader srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar">
          <see cref="T:System.Xml.XmlReader" /> を使用して作成されたオブジェクト、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> XML インスタンスです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスのインスタンスから <see cref="T:System.Xml.XmlReader" /> XML 形式の文法ファイルを参照します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の新しいインスタンスを作成する <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> のインスタンスから <xref:System.Xml.XmlReader> "srgsDocumentFile.xml"ファイルを参照します。  
  
```csharp  
string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
SrgsDocument document = null;  
  
if (File.Exists(srgsDocumentFile))  
{  
  XmlReader reader = XmlReader.Create(srgsDocumentFile);  
  document = new SrgsDocument(reader);  
  reader.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsGrammar" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyReferences">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; AssemblyReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; AssemblyReferences" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、アセンブリの参照情報も、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" /> プロパティ アセンブリ参照の一覧を含む文字列のコレクションを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBehind">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; CodeBehind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; CodeBehind" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コードの情報を取得、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" /> プロパティは、コードのドキュメントの一覧を含んでいる文字列コレクションを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カルチャ情報を取得または設定、<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />インスタンス。</summary>
        <value>A<see cref="T:System.Globalization.CultureInfo" />の現在のカルチャ情報を格納しているオブジェクト<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Microsoft Windows および System.Speech API は、すべての有効な言語\-国コードを受け取ります。 指定された言語を使用する音声認識を実行する、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture%2A>プロパティ、言語、国コードをインストールする必要がありますをサポートする音声認識エンジンです。 Microsoft Windows 7 に同梱されている音声認識エンジンは、次の言語、国コードで動作します。  
  
-   en GB です。 英語 \(英国\)  
  
-   EN\-US です。 英語 \(米国\)  
  
-   de DE です。 ドイツ語 \(ドイツ\)  
  
-   ES\-ES です。 スペイン語 \(スペイン\)  
  
-   fr\-fr などです。 フランス語 \(フランス\)  
  
-   JA\-JP です。 日本語 \(日本\)  
  
-   ZH\-CN です。 中国語 \(中国\)  
  
-   zh\-tw があります。 中国語 \(台湾\)  
  
 "En"、"fr"などの 2 文字の言語コードまたは"es"も許可されています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">割り当てられる値<see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />は<see langword="null" />します。</exception>
        <exception cref="T:System.ArgumentException">割り当てられる値<see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" />は<see cref="P:System.Globalization.CultureInfo.InvariantCulture" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Debug">
      <MemberSignature Language="C#" Value="public bool Debug { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Debug" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはインライン スクリプトに行番号を追加するかどうかを設定します。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" /> プロパティを返します。 <see langword="true" /> 行番号を追加する場合はデバッグのためです。 それ以外の場合、プロパティを返します <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ImportNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ImportNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の関連する名前空間を取得 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" /> プロパティに関連する名前空間の一覧を含んでいる文字列コレクションを返します、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定でインライン コードを使用するプログラミング言語、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" /> するプログラミング言語を返します <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 設定されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>モードを取得または設定、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>認識モード、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode%2A> プロパティのメンバーを返します、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode> 入力の種類を指定すること、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> が必要です。 2 つの有効な値は `Voice` 音声入力と `Dtmf` の電話に一般的に関連付けられている音がデュアル トーン多重周波数 \(DTMF\) の入力します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の名前空間、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>
          <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" /> プロパティは、現在の名前空間を返します <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticAlphabet">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet PhoneticAlphabet" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の音標文字、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>カスタムの発音を指定する必要がある音標文字を返す、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 音声のアルファベット文字、数字、または組み合わせの場合もありますの文字で構成される電話で構成されます。 各電話番号では、音声認識の一意のサウンドについて説明します。 これは、ラテン語アルファベットとは対照的任意の文字が複数のサウンドが音声を表すことがあります。 単語の「もの」と「、」で単語「のごまかし」と「停止」で文字"c"の別の発音や文字の組み合わせの異なる発音"th"を検討します。  
  
 System.Speech で使用できます phonetic アルファベットの 3 つのカスタムの発音を指定する: 国際電話記号 \(IPA\)、ユニバーサル電話設定 \(UPS\)、または、SAPI 電話のセットです。 指定の音標文字決定のインライン発音の定義に使用するどの電話設定 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> オブジェクトです。 指定された電話 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> で指定された音声記号に一致する必要があります <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>します。  
  
 詳細については、「[Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/ja-jp/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRule Root { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRule Root" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のルート ルール、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>ルート ルールとして指定されているルールを返す、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> オブジェクトは、ドキュメントに既にあります <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> 設定する前に、 **ルート ルール**します。  
  
 ルート ルールを設定することも、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトを使用して、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> オブジェクトを引数として、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> コンス トラクターです。  
  
   
  
## 例  
 次の例は、という名前のルールを作成 `winnerRule`, 、し、作成、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> という名前のオブジェクト `document`します。 例では、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> ドキュメントにルールを追加します。 最後に、ドキュメントの設定例は、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root%2A> プロパティを `winnerRule`, 、それによってことが、 `root rule` の文法で定義されているため、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトです。  
  
```csharp  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
SrgsDocument document = new SrgsDocument();  
  
document.Rules.Add(winnerRule);  
document.Root = winnerRule;   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Docs>
    </Member>
    <Member MemberName="Rules">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection Rules" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在定義されている規則のコレクションを取得、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>に対して定義された規則を返す、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加する <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> オブジェクトを <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> を使用して、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> メソッドを <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> プロパティです。 初期化する場合、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトし、指定、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> オブジェクトを引数として、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> が自動的に追加、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection> の <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>です。  
  
   
  
## 例  
 次の例では、語句を認識する文法が勝った場合はワールド カップの国の名前に続いて「が勝った場合はワールド カップの民族は」です。 例を作成し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクト、およびという名前のパブリック ルールを作成し、 `winnerRule`です。 ルールに文字列を追加した後 `winnerRule`, 、例では、2 つ以上のルールを作成する \(`ruleEurope` と `ruleSAmerica`\)、国のリストが含まれる各します。 使用して、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add%2A> メソッド、例では、次の 3 つすべてのルールを追加する \(`winnerRule`, 、`ruleEurope`, 、および `ruleSAmerica`\) に、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> のプロパティ、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>です。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のスクリプト言語を .NET、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>
          <see langword="Script" /> プロパティの現在の .NET スクリプト言語を取得する、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  このプロパティは推奨されていません。 使用は推奨されなくなりました。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定しようとしましたが、 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> プロパティを null にします。</exception>
        <exception cref="T:System.ArgumentException">設定しようとしましたが、 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> プロパティを空の文字列にします。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSrgs">
      <MemberSignature Language="C#" Value="public void WriteSrgs (System.Xml.XmlWriter srgsGrammar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSrgs(class System.Xml.XmlWriter srgsGrammar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srgsGrammar" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="srgsGrammar">
          <see cref="T:System.Xml.XmlWriter" /> 書き込みに使用される、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> インスタンス。</param>
        <summary>内容を書き込み、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> オブジェクトに準拠した XML 形式の文法ファイルを [Speech Recognition Grammar Specification \(SRGS\) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例を作成し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクト、およびという名前のパブリック ルールを作成し、 `winnerRule`です。 これは、後、作成、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> 文字列で構成される"が勝った場合はワールド カップの民族は:"、によってこの項目を追加し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> 規則のプロパティです。 2 つ以上のルールを作成し \(`ruleEurope` と `ruleSAmerica`\)、それぞれは、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> 3 種類を含むオブジェクト <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> オブジェクトです。 その後、もう 1 つ <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> を含むオブジェクトが作成される <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> を参照するオブジェクト `ruleEurope` と `ruleSAmerica`です。 新しい <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> オブジェクトに追加し、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> の `winnerRule`です。 その後、次の 3 つすべてのルール \(`winnerRule`, 、`ruleEurope`, 、および `ruleSAmerica`\) に追加、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules%2A> のプロパティ、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>です。 この例が空の XML ファイルとのインスタンスを作成する最後に、 <xref:System.Xml.XmlWriter>です。<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs%2A> メソッドの使用方法、 <xref:System.Xml.XmlWriter> インスタンスの内容の書き込みを <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> XML ファイルにします。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
  
  // Create a string object with the path to the file to use.  
  string srgsDocumentFile = Path.Combine(Path.GetTempPath(), "srgsDocumentFile.xml");  
  
  // Create an XmlWriter object and pass the file path.  
  XmlWriter writer = XmlWriter.Create(srgsDocumentFile);  
  
  // Write the contents of the XmlWriter object to an SRGS-compatible XML file.  
  document.WriteSrgs(writer);  
  writer.Close();  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsGrammar" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlBase">
      <MemberSignature Language="C#" Value="public Uri XmlBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri XmlBase" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のベース URI、 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> クラスです。</summary>
        <value>現在のベース URI <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A> プロパティ内の相対 Uri を解決するために使用する値を取得する、 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> オブジェクトです。 値があると <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase%2A> "http:\/\/www.contoso.com\/"は、および <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> など、別のドキュメントへの参照相対ルールにはが含まれています `SrgsRuleRef("ExternalGrammar.grxml")`します。 こうと、外部ドキュメントへの次の絶対パス: `http://www.contoso.com/ExternalGrammar.grxml`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>