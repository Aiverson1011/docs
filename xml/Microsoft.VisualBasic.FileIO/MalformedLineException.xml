<Type Name="MalformedLineException" FullName="Microsoft.VisualBasic.FileIO.MalformedLineException">
  <TypeSignature Language="C#" Value="public class MalformedLineException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable MalformedLineException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>場合にスローされる例外、 <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> メソッドは、指定した書式を使用して行を解析できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 確認、 `TextFieldType` と `Delimiter` パラメーターが正しく定義されています。  
  
 場合、 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> メソッドは、指定された形式を使用して行を解析できない、 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 例外がスローされます。 この例外には、誤った形式の行の行番号が含まれています。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外を示しますが、 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> メソッドは、指定した書式を使用して行を解析できません。  
  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|||  
|-|-|  
|プロパティ|値|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">エラーについて説明するメッセージ。</param>
        <summary>指定したエラー メッセージを使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `message` パラメーターの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。  
  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 継承、 <xref:System.Exception> クラスです。 このコンス トラクターのプロパティの設定、 <xref:System.Exception> オブジェクトの次の表に示すようにします。  
  
|||  
|-|-|  
|プロパティ|値|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.Exception.Message%2A>|`message` 文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MalformedLineException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> 元または転送先に関するコンテキスト情報を格納する構造体。</param>
        <summary>シリアル化したデータを使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> エラーを説明します。</param>
        <param name="innerException">
          <see cref="T:System.Exception" /> オブジェクトの現在の例外の原因となった例外。<see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
        <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `message` パラメーターの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。  
  
 前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。<xref:System.Exception.InnerException%2A> プロパティが同じ場合は、コンス トラクター、または null 参照に渡される値を返します、 <xref:System.Exception.InnerException%2A> プロパティがコンス トラクターに内部例外値を提供していません。  
  
 <xref:System.ApplicationException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|||  
|-|-|  
|プロパティ|値|  
|<xref:System.Exception.InnerException%2A>|`innerException` 参照します。|  
|<xref:System.Exception.Message%2A>|`message` 文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, long lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, int64 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="message">例外のメッセージ。</param>
        <param name="lineNumber">形式が正しくない行の行番号。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスは、指定したエラー メッセージと行番号を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `message` パラメーターの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。 `lineNumber` パラメーターを初期化、 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A> プロパティです。  
  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 継承、 <xref:System.Exception>です。 このコンス トラクターのプロパティの設定、 <xref:System.Exception> オブジェクトの次の表に示すようにします。  
  
|||  
|-|-|  
|プロパティ|値|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.Exception.Message%2A>|`message` 文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MalformedLineException (string message, long lineNumber, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, int64 lineNumber, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">例外のメッセージ。</param>
        <param name="lineNumber">形式が正しくない行の行番号。</param>
        <param name="innerException">
          <see cref="T:System.Exception" /> 現在の例外の原因であります。<see cref="P:System.Exception.InnerException" /> パラメーターが null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> した指定したエラー メッセージ、行番号では、この例外の原因となった内部例外への参照。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `message` パラメーターの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。 `lineNumber` パラメーターを初期化、 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A> プロパティです。  
  
 前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。<xref:System.Exception.InnerException%2A> プロパティが同じ場合は、コンス トラクター、または null 参照に渡される値を返します、 <xref:System.Exception.InnerException%2A> プロパティがコンス トラクターに内部例外値を提供していません。  
  
 <xref:System.ApplicationException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|||  
|-|-|  
|プロパティ|値|  
|<xref:System.Exception.InnerException%2A>|`innerException` 参照します。|  
|<xref:System.Exception.Message%2A>|`message` 文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> 元または転送先に関するコンテキスト情報を格納する構造体。</param>
        <summary>例外に関する情報を使用して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、設定、 <xref:System.Runtime.Serialization.SerializationInfo> シリアル化の対象となるすべての例外オブジェクト データを含むオブジェクト。 逆シリアル化中に、ストリームで転送された <xref:System.Runtime.Serialization.SerializationInfo> から例外が再構成されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>形式が正しくない行の行番号を取得します。</summary>
        <value>形式が正しくない行の行番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> メソッドは、指定された形式を使用して行を解析できない、 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 例外がスローされます。 この例外には、誤った形式の行の行番号が含まれています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の例外の文字列形式を作成して返します。</summary>
        <returns>現在の例外の文字列形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString%2A> ユーザーが理解できるものでは現在の例外の表現を返します。 文字列の形式がによって返される例外は、カルチャに依存したデータを含む、場所 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString%2A> が現在のシステム カルチャが考慮する必要です。 返される文字列の形式の正確な要件はありませんが、ユーザー側で認識されるオブジェクトの値を反映するようにしたものでする必要があります。  
  
 既定の実装 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString%2A> 、メッセージ、呼び出しの結果の現在の例外をスローしたクラスの名前を取得 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString%2A> 内部の例外の呼び出しの結果に <xref:System.Environment.StackTrace%2A>, 、およびこれらのメンバーのいずれかが null 参照である場合は、形式が正しくない行の行番号 \(`Nothing` Visual Basic で\)、その値が返される文字列に含まれません。  
  
 エラー メッセージが存在しない場合、または空の文字列である場合 \(""\)、エラー メッセージは表示されませんします。 名前は、内部例外とスタック トレースが null 参照がない場合にのみ返されます \(`Nothing` Visual Basic で\)。  
  
 このメソッドは <xref:System.Exception.ToString%2A?displayProperty=fullName>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>