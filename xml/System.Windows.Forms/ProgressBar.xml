<Type Name="ProgressBar" FullName="System.Windows.Forms.ProgressBar">
  <TypeSignature Language="C#" Value="public class ProgressBar : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProgressBar extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ProgressBar" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows プログレス バー コントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Forms.ProgressBar> コントロールは、3 つのスタイルのいずれかで時間のかかる操作の進行状況を視覚的を示します。  
  
-   左から右へ徐々 に増加し、セグメント化のブロックです。  
  
-   左から右に入力される継続的なバー。  
  
-   スクロール可能ブロック、 <xref:System.Windows.Forms.ProgressBar> マーキー的にします。  
  
 <xref:System.Windows.Forms.ProgressBar.Style%2A> プロパティのスタイルを決定する <xref:System.Windows.Forms.ProgressBar> が表示されます。 なお、 <xref:System.Windows.Forms.ProgressBar> コントロールのみ可能指向水平方向にします。 垂直方向を作成する方法の例については <xref:System.Windows.Forms.ProgressBar>, を参照してください、 <xref:System.Windows.Forms.ProgressBarRenderer> クラスです。<xref:System.Windows.Forms.ProgressBar> コントロールは通常、アプリケーション ファイルのコピーやドキュメントの印刷などのタスクを実行する場合に使用します。 アプリケーションのユーザーに可能性がありますアプリケーションが視覚的な通知がない場合は応答しなくなった考えます。 使用して、 <xref:System.Windows.Forms.ProgressBar> 、アプリケーションで警告を表示するユーザー、アプリケーション実行しているが、時間のかかるタスクと、アプリケーションが応答していること。  
  
 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> と <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティは、タスクの進行状況を表す値の範囲を定義します。<xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティは通常 0 の値に設定され、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティは、通常、タスクの完了を示す値に設定します。 たとえば、ファイルのグループをコピーするときに進行状況を正しく表示するため、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティは、コピーされるファイルの合計数に設定することができます。  
  
 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、アプリケーションが加えた操作の完了に向けた進行状況を表します。 表示される値、 <xref:System.Windows.Forms.ProgressBar> のみの現在の値を近似、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティです。 サイズに基づいて、 <xref:System.Windows.Forms.ProgressBar>, 、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、次のブロックを表示またはバーのサイズを大きくタイミングを決定します。  
  
 さまざまなによって表示される値を変更する方法がある、 <xref:System.Windows.Forms.ProgressBar> 以外の変更、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティを直接します。 使用することができます、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティをインクリメントする特定の値を指定する、 <xref:System.Windows.Forms.ProgressBar.Value%2A> で、プロパティを次、 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> 値をインクリメントします。 増分値を変更するには、使用することができます、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドをインクリメントする値を指定し、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティです。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.Control.BackColor%2A> の変更、 <xref:System.Windows.Forms.ProgressBar> で visual スタイルが有効な場合に受け入れられません [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] 以降。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ProgressBar> ファイルのコピー操作の進行状況を表示するコントロール。 例では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> の範囲を指定するプロパティ、 <xref:System.Windows.Forms.ProgressBar> をコピーするファイルの数に相当する機能はします。 コードを使用しても、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> の値をインクリメントする方法、 <xref:System.Windows.Forms.ProgressBar> ファイルがコピーされるときです。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> と呼ばれる作成されたコントロール `pBar1` 内で作成される、 <xref:System.Windows.Forms.Form> 、メソッドが存在して作成と呼ばれる `CopyFile` \(ファイルのコピー操作が正常に完了したことを示すブール値を返す\) ファイルのコピー操作を実行します。 コードは、コピーするファイルを含む文字列の配列が作成されに渡されることにも必要な `CopyWithProgress` メソッドの例で定義し、別のメソッドまたはイベントから、メソッドが呼び出される、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[ProgressBarOverview\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBarOverview/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBarOverview\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBarOverview/CS/form1.cs#1)]
 [!code-vb[ProgressBarOverview\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBarOverview/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProgressBar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ProgressBar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティが 0 に設定されている、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティが 100 に設定され、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティが 10 に設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Maximum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Minimum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Step" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロールにドラッグしたデータを、そのコントロールが受け入れることができるかどうかを示す値を取得または設定します。</summary>
        <value>コントロールでドラッグ アンド ドロップ操作を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.AllowDrop" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景画像、 <see cref="T:System.Windows.Forms.ProgressBar" /> コントロールです。</summary>
        <value>現在の背景イメージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.BackgroundImage%2A> の外観に影響を与えません、 <xref:System.Windows.Forms.ProgressBar>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.BackgroundImageChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.BackgroundImage" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.BackgroundImage%2A> の外観に影響を与えません、 <xref:System.Windows.Forms.ProgressBar>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プログレス バーの背景イメージのレイアウトを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageLayout" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.BackgroundImageLayout%2A> プロパティがの外観に影響を与えません、 <xref:System.Windows.Forms.ProgressBar> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.BackgroundImageLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.BackgroundImageLayout" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.BackgroundImageLayout%2A> プロパティがの外観に影響を与えません、 <xref:System.Windows.Forms.ProgressBar> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがフォーカスを受け取った時点で、検証を必要とするコントロールに対する検証を実行するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> コントロールが、フォーカスを受け取った時点で検証を必要とする任意のコントロールで実行する検証が発生した場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.CausesValidationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.CausesValidation" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.CreateHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのハンドルを作成します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き <see cref="P:System.Windows.Forms.Control.CreateParams" />します。</summary>
        <value>コントロールを作成するときに必要な情報。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">for access to unmanaged code when getting the property value. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがサポートしている既定の IME \(Input Method Editor\) モードを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImeMode" /> 値のいずれか。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のサイズを取得します。</summary>
        <value>A <see cref="T:System.Drawing.Size" /> コントロールの既定のサイズを表します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 次バッファーを使用してコントロールの画面を再描画するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 2 次バッファーを使用する場合 <see langword="false" /> それ以外の場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.DoubleBuffered%2A> プロパティも何も起こりません、 <xref:System.Windows.Forms.ProgressBar> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロールをダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> コントロールは発生しません、 <xref:System.Windows.Forms.ProgressBar.DoubleClick> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.Enter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスが移ったときに発生する、 <see cref="T:System.Windows.Forms.ProgressBar" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このイベントは使用されません。  
  
 <xref:System.Windows.Forms.ProgressBar> を生成しないので、コントロールがキーボード フォーカスを受け取ることはできません、 <xref:System.Windows.Forms.ProgressBar.Enter> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内のテキストのフォント、 <see cref="T:System.Windows.Forms.ProgressBar" />です。</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> のテキスト。 既定値はコンテナーによって設定されたフォントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.FontChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.Font" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、入力方式エディター \(IME\)、 <see cref="T:System.Windows.Forms.ProgressBar" /></summary>
        <value>
          <see cref="T:System.Windows.Forms.ImeMode" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.ImeModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.ImeMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public void Increment (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Increment(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.Increment(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">プログレス バーの現在位置をインクリメントする量。</param>
        <summary>指定した量だけプログレス バーの現在位置を進めます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドでは、特定の量によって進行状況バーの値をインクリメントすることができます。 進行状況バーをインクリメントするのには、このメソッドを使用するような <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッドです。<xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの現在位置を指定する、 <xref:System.Windows.Forms.ProgressBar>です。 呼び出し後の場合、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドを <xref:System.Windows.Forms.ProgressBar.Value%2A> の値より大きい、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティには、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値のまま、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティです。 呼び出し後の場合、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> に負の値で指定されたメソッド、 `value` パラメーター、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、の値より小さい、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティには、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値のまま、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティです。  
  
 <xref:System.Windows.Forms.ProgressBar> オブジェクトにスタイルが設定されている <xref:System.Windows.Forms.ProgressBarStyle.Marquee> の代わりに継続的にスクロール バーが表示されます、 <xref:System.Windows.Forms.ProgressBar.Value%2A>, 、呼び出し元 <xref:System.Windows.Forms.ProgressBar.Increment%2A> 必要はありませんし、発します、 <xref:System.InvalidOperationException>です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドおよび <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値をインクリメント、 <xref:System.Windows.Forms.ProgressBar> で、 <xref:System.Windows.Forms.Timer.Tick> のイベント、 <xref:System.Windows.Forms.Timer>です。 また、表示、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティに、 <xref:System.Windows.Forms.StatusBarPanel> のテキスト表現を提供する、 <xref:System.Windows.Forms.ProgressBar>です。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> という名前のコントロール `progressBar1`, 、および <xref:System.Windows.Forms.StatusBar> コントロールが含まれていますが、 <xref:System.Windows.Forms.StatusBarPanel>, 、名前付き `statusBarPanel1`です。<xref:System.Windows.Forms.Timer>, 、名前付き `time`, 、メンバーとしてフォームに追加する必要があります。  
  
 [!code-cpp[ProgressBar.Increment\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBar.Increment/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBar.Increment\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBar.Increment/CS/form1.cs#1)]
 [!code-vb[ProgressBar.Increment\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBar.Increment/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ProgressBar.Style" /> プロパティが <see cref="F:System.Windows.Forms.ProgressBarStyle.Marquee" /> に設定されている。</exception>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Maximum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Minimum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Value" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Step" />
        <altmember cref="M:System.Windows.Forms.ProgressBar.PerformStep" />
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.KeyDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときに、ユーザーがキーを押すと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> を生成しないので、コントロールがキーボード フォーカスを受け取ることはできません、 <xref:System.Windows.Forms.ProgressBar.KeyDown> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.KeyPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときに、ユーザーがキーを押すと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> を生成しないので、コントロールがキーボード フォーカスを受け取ることはできません、 <xref:System.Windows.Forms.ProgressBar.KeyPress> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.KeyUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときに、ユーザーがキーを離すと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> を生成しないので、コントロールがキーボード フォーカスを受け取ることはできません、 <xref:System.Windows.Forms.ProgressBar.KeyUp> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.Leave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスを離れると発生、 <see cref="T:System.Windows.Forms.ProgressBar" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> を生成しないので、コントロールがキーボード フォーカスを受け取ることはできません、 <xref:System.Windows.Forms.ProgressBar.Leave> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarqueeAnimationSpeed">
      <MemberSignature Language="C#" Value="public int MarqueeAnimationSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarqueeAnimationSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.MarqueeAnimationSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プログレス ブロックがプログレス バー内をスクロールするためにかかる時間を、ミリ秒単位で取得または設定します。</summary>
        <value>プログレス ブロックがプログレス バー内をスクロールするためにかかる時間 \(ミリ秒単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マーキー スタイルの進行状況インジケーターに進行状況が表示されません。代わりに、進行状況バーと交差プログレス ブロックが移動することで、操作が実行されていることを示します。  
  
 マーキー アニメーションの速度が低速で高番号の結果とが高速で下位の数値結果の値を設定期間のためです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された時間が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public int Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの範囲の最大値を取得または設定します。</summary>
        <value>範囲の最大値。 既定値は 100 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの数の上限を指定する、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティです。 時の値、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティが変更された、 <xref:System.Windows.Forms.ProgressBar> コントロールがコントロールの新しい範囲を反映するように再描画されます。 時の値、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、の値と等しく、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティには、進行状況バーがいっぱいです。  
  
 このプロパティを使用する値を指定する、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティを設定する必要があります \(設定して、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティまたはを使用して、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> または <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッド\)、操作が完了したことを示すためにします。 値を設定するなど、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティをファイルのコピー操作でファイルの総数。 ファイルがコピーされるたび、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、ファイルの総数がコピーされるまで、1 ずつ増やすことができます。 その時点で進行状況バーを完全に入力するとします。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ProgressBar> ファイルのコピー操作の進行状況を表示するコントロール。 例では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> の範囲を指定するプロパティ、 <xref:System.Windows.Forms.ProgressBar> をコピーするファイルの数に相当する機能はします。 コードを使用しても、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> の値をインクリメントする方法、 <xref:System.Windows.Forms.ProgressBar> ファイルがコピーされるときです。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> と呼ばれる作成されたコントロール `pBar1` 内で作成される、 <xref:System.Windows.Forms.Form> 、メソッドが存在して作成と呼ばれる `CopyFile` \(ファイルのコピー操作が正常に完了したことを示すブール値を返す\) ファイルのコピー操作を実行します。 コードは、コピーするファイルを含む文字列の配列が作成されに渡されることにも必要な `CopyWithProgress` メソッドの例で定義し、別のメソッドまたはイベントから、メソッドが呼び出される、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[ProgressBarOverview\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBarOverview/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBarOverview\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBarOverview/CS/form1.cs#1)]
 [!code-vb[ProgressBarOverview\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBarOverview/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された値は、0 より小さい値です。</exception>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Minimum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Value" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public int Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの範囲の最小値を取得または設定します。</summary>
        <value>範囲の最小値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは指定の下限、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティです。 時の値、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティが変更された、 <xref:System.Windows.Forms.ProgressBar> コントロールがコントロールの新しい範囲を反映するように再描画されます。 時の値、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、の値と等しく、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティは、進行状況バーは空です。 進行状況バーの値を変更するには、使用、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッドを使用して、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドの値を設定または、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティを直接します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ProgressBar> ファイルのコピー操作の進行状況を表示するコントロール。 例では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> の範囲を指定するプロパティ、 <xref:System.Windows.Forms.ProgressBar> をコピーするファイルの数に相当する機能はします。 コードを使用しても、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> の値をインクリメントする方法、 <xref:System.Windows.Forms.ProgressBar> ファイルがコピーされるときです。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> と呼ばれる作成されたコントロール `pBar1` 内で作成される、 <xref:System.Windows.Forms.Form>, 、メソッドが存在して作成と呼ばれる `CopyFile` \(ファイルのコピー操作が正常に完了したことを示すブール値を返す\) ファイルのコピー操作を実行します。 コードは、コピーするファイルを含む文字列の配列が作成されに渡されることにも必要な `CopyWithProgress` 例では、メソッドが定義されていると、別のメソッドまたはイベントから、メソッドが呼び出される、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[ProgressBarOverview\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBarOverview/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBarOverview\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBarOverview/CS/form1.cs#1)]
 [!code-vb[ProgressBarOverview\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBarOverview/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティに指定された値は、0 より小さい値です。</exception>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Maximum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Value" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロールをダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar> コントロールは発生しません、 <xref:System.Windows.Forms.ProgressBar.MouseDoubleClick> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.OnBackColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ProgressBar.OnBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ProgressBar.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ProgressBar.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.OnForeColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ProgressBar.OnForeColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.ForeColor%2A> visual スタイルが有効になっており、オペレーティング システムには、visual スタイルがサポートしているときに、変更は受け入れられません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ProgressBar.OnForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ProgressBar.OnForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>オーバーライド <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.OnHandleDestroyed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ProgressBar.OnHandleDestroyed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ProgressBar.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ProgressBar.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.RightToLeftLayout" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ProgressBar.OnRightToLeftLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ProgressBar.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ProgressBar.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ProgressBar" /> コントロールの端とその内容との間隔を取得または設定します。</summary>
        <value>常に <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.ProgressBar.Padding%2A> プロパティにはの外観に影響はありません、 <xref:System.Windows.Forms.ProgressBar>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.PaddingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.Padding" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.Paint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.ProgressBar" /> を描画します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformStep">
      <MemberSignature Language="C#" Value="public void PerformStep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformStep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.PerformStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>量だけプログレス バーの現在位置を進めます、 <see cref="P:System.Windows.Forms.ProgressBar.Step" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッドで指定した量だけプログレス バーの値をインクリメント、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティです。 使用することができます、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを操作で完了した各タスクが進行状況バーの値を変更する時間を指定します。 たとえば、一連のファイルをコピーする場合の値を設定する、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティの値 1 を <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティをコピーするファイルの総数をします。 各ファイルをコピーするときに呼び出す、 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> 進行状況バーを増分の値に使用するメソッド、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティです。 進行状況バーの値をより柔軟に制御する場合は、使用、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドの値を設定または、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティを直接します。  
  
 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの現在位置を指定する、 <xref:System.Windows.Forms.ProgressBar>です。 呼び出し後の場合、 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッドを <xref:System.Windows.Forms.ProgressBar.Value%2A> の値より大きい、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティには、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値のまま、 <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティです。 呼び出し後の場合、 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> に負の値で指定されたメソッド <xref:System.Windows.Forms.ProgressBar.Step%2A>, 、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティは、の値より小さい、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティには、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値のまま、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> プロパティです。  
  
 <xref:System.Windows.Forms.ProgressBar> オブジェクトにスタイルが設定されている <xref:System.Windows.Forms.ProgressBarStyle.Marquee> の代わりに継続的にスクロール バーが表示されます、 <xref:System.Windows.Forms.ProgressBar.Value%2A>, 、呼び出し元 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> 必要はありませんし、発します、 <xref:System.InvalidOperationException>です。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ProgressBar> ファイルのコピー操作の進行状況を表示するコントロール。 例では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> の範囲を指定するプロパティ、 <xref:System.Windows.Forms.ProgressBar> をコピーするファイルの数に相当する機能はします。 コードを使用しても、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> の値をインクリメントする方法、 <xref:System.Windows.Forms.ProgressBar> ファイルがコピーされるときです。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> と呼ばれる作成されたコントロール `pBar1` 内で作成される、 <xref:System.Windows.Forms.Form>, 、メソッドが存在して作成と呼ばれる `CopyFile` \(ファイルのコピー操作が正常に完了したことを示すブール値を返す\) ファイルのコピー操作を実行します。 コードは、コピーするファイルを含む文字列の配列が作成されに渡されることにも必要な `CopyWithProgress` 例では、メソッドが定義されていると、別のメソッドまたはイベントから、メソッドが呼び出される、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[ProgressBarOverview\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBarOverview/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBarOverview\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBarOverview/CS/form1.cs#1)]
 [!code-vb[ProgressBarOverview\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBarOverview/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ProgressBar.Style" /> が <see cref="F:System.Windows.Forms.ProgressBarStyle.Marquee" /> に設定されます。</exception>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Maximum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Minimum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Step" />
        <altmember cref="M:System.Windows.Forms.ProgressBar.PerformStep" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Value" />
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.ResetForeColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リセット、 <see cref="P:System.Windows.Forms.Control.ForeColor" /> 既定値にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはリセット通話、 <xref:System.Windows.Forms.Control.ForeColor%2A> に <xref:System.Drawing.SystemColors.Highlight%2A> メソッドが派生クラスでオーバーライドされない限りです。<xref:System.Windows.Forms.ProgressBar.ResetForeColor%2A> メソッドは、コントロールのデザイナーを作成することもが組み込まれており、独自のコントロールを作成するときに、 <xref:System.Windows.Forms.ProgressBar>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Forms.ProgressBar" /> とが含まれている任意のテキストが右から左に表示されます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.ProgressBar" /> が右から左に表示されているそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ProgressBar.RightToLeftLayout%2A> プロパティは、右から左に読む言語で使用するアプリケーションを作成するときに役立ちます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.RightToLeftLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.RightToLeftLayout" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ProgressBar.RightToLeftLayoutChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ProgressBar> という `ProgressBar1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ProgressBar.RightToLeftLayoutChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#519](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#519)]
 [!code-vb[System.Windows.Forms.EventExamples\#519](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#519)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Step">
      <MemberSignature Language="C#" Value="public int Step { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Step" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Step" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定を取得またはへの呼び出し、 <see cref="M:System.Windows.Forms.ProgressBar.PerformStep" /> メソッドは、進行状況バーの現在位置を増加します。</summary>
        <value>呼び出すごとに進行状況バーをインクリメントする量、 <see cref="M:System.Windows.Forms.ProgressBar.PerformStep" /> メソッドです。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを操作で完了した各タスクが進行状況バーの値を変更する時間を指定します。 たとえば、一連のファイルをコピーする場合の値を設定する、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティの値 1 を <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティをコピーするファイルの総数をします。 各ファイルをコピーするときに呼び出す、 <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> 進行状況バーを増分の値に使用するメソッド、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティです。 進行状況バーの値をより柔軟に制御する場合は、使用、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドの値を設定または、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティを直接します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ProgressBar> ファイルのコピー操作の進行状況を表示するコントロール。 例では、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> の範囲を指定するプロパティ、 <xref:System.Windows.Forms.ProgressBar> をコピーするファイルの数に相当する機能はします。 コードを使用しても、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> の値をインクリメントする方法、 <xref:System.Windows.Forms.ProgressBar> ファイルがコピーされるときです。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> と呼ばれる作成されたコントロール `pBar1` 内で作成される、 <xref:System.Windows.Forms.Form>, 、メソッドが存在して作成と呼ばれる `CopyFile` \(ファイルのコピー操作が正常に完了したことを示すブール値を返す\) ファイルのコピー操作を実行します。 コードは、コピーするファイルを含む文字列の配列が作成されに渡されることにも必要な `CopyWithProgress` 例では、メソッドが定義されていると、別のメソッドまたはイベントから、メソッドが呼び出される、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[ProgressBarOverview\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBarOverview/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBarOverview\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBarOverview/CS/form1.cs#1)]
 [!code-vb[ProgressBarOverview\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBarOverview/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ProgressBar.PerformStep" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Value" />
        <altmember cref="M:System.Windows.Forms.ProgressBar.Increment(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ProgressBarStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ProgressBarStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ProgressBarStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プログレス バーで進行状況を示す方法を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ProgressBarStyle" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.ProgressBarStyle.Blocks" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 進行状況になっている、進行状況の数量を指定しないでを示すために必要なときに、マーキー スタイルを使用できます。<xref:System.Windows.Forms.ProgressBarStyle.Marquee> スタイルは、visual スタイルが有効になっている場合にのみ受け入れられます。<xref:System.Windows.Forms.ProgressBarStyle.Continuous> Visual スタイルが有効になっていないとき、スタイルが受け入れられます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値がのメンバーではない、 <see cref="T:System.Windows.Forms.ProgressBarStyle" /> 列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き <see cref="P:System.Windows.Forms.Control.TabStop" />します。</summary>
        <value>ユーザーが Tab キーを使用することによってコントロールにフォーカスを移すことができる場合は true。それ以外の場合は false。 既定値は true です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.TabStopChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.TabStop" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールに関連付けられているテキストを取得または設定します。</summary>
        <value>このコントロールに関連付けられたテキスト。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ProgressBar.TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ProgressBar.Text" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ProgressBar.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ProgressBar" /> コントロールを表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Windows.Forms.ProgressBar" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の文字列型の値を含む、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A>, 、<xref:System.Windows.Forms.ProgressBar.Maximum%2A>, 、および <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ProgressBar.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プログレス バーの現在位置を取得または設定します。</summary>
        <value>プログレス バーの範囲内の位置。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最小値と最大値、 <xref:System.Windows.Forms.ProgressBar.Value%2A> でプロパティが指定された、 <xref:System.Windows.Forms.ProgressBar.Minimum%2A> と <xref:System.Windows.Forms.ProgressBar.Maximum%2A> プロパティです。 このプロパティでは、進行状況バーの直接の値を増減することができます。 値に一貫性のある増加を実行する、 <xref:System.Windows.Forms.ProgressBar> コントロールを使用することができます、 <xref:System.Windows.Forms.ProgressBar.Step%2A> プロパティを <xref:System.Windows.Forms.ProgressBar.PerformStep%2A> メソッドです。 でさまざまな量だけプログレス バーの値を増加させるのには、使用、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.ProgressBar.Increment%2A> メソッドおよび <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティの値をインクリメント、 <xref:System.Windows.Forms.ProgressBar> で、 <xref:System.Windows.Forms.Timer.Tick> のイベント、 <xref:System.Windows.Forms.Timer>です。 また、表示、 <xref:System.Windows.Forms.ProgressBar.Value%2A> プロパティに、 <xref:System.Windows.Forms.StatusBarPanel> のテキスト表現を提供する、 <xref:System.Windows.Forms.ProgressBar>です。 この例である必要があります、 <xref:System.Windows.Forms.ProgressBar> という名前のコントロール `progressBar1`, 、および <xref:System.Windows.Forms.StatusBar> コントロールが含まれていますが、 <xref:System.Windows.Forms.StatusBarPanel>, 、名前付き `statusBarPanel1`です。<xref:System.Windows.Forms.Timer>, 、名前付き `time`, 、メンバーとしてフォームに追加する必要があります。  
  
 [!code-cpp[ProgressBar.Increment\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ProgressBar.Increment/CPP/form1.cpp#1)]
 [!code-csharp[ProgressBar.Increment\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ProgressBar.Increment/CS/form1.cs#1)]
 [!code-vb[ProgressBar.Increment\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ProgressBar.Increment/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された値がの値よりも大きい、 <see cref="P:System.Windows.Forms.ProgressBar.Maximum" /> プロパティです。  
  
 または  
  
 指定された値がの値より小さい、 <see cref="P:System.Windows.Forms.ProgressBar.Minimum" /> プロパティです。</exception>
        <altmember cref="P:System.Windows.Forms.ProgressBar.Maximum" />
        <altmember cref="P:System.Windows.Forms.ProgressBar.Minimum" />
      </Docs>
    </Member>
  </Members>
</Type>