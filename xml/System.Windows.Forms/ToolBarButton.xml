<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows ツール バー ボタンを表します。<see cref="T:System.Windows.Forms.ToolStripButton" /> コントロールは、以前のバージョンの <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールに代わると共に追加の機能を提供します。ただし、<see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールも、下位互換性を保つ目的および必要に応じて将来使用する目的で保持されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton> コントロールの親に <xref:System.Windows.Forms.ToolBar> コントロールです。 ツール バー ボタンを作成した後に設定する一般的なプロパティは <xref:System.Windows.Forms.ToolBarButton.Text%2A> と <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>です。 設定、 <xref:System.Windows.Forms.ToolBarButton.Text%2A> の下に、または画像の右にテキストを表示するボタンのプロパティです。 作成することで、ボタンにイメージを割り当てるには、 <xref:System.Windows.Forms.ImageList>, に割り当てること、 <xref:System.Windows.Forms.ToolBar.ImageList%2A> ツールバーのプロパティをイメージのインデックス値を割り当てる、 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> ボタンのプロパティです。  
  
 ツールバーに割り当てられているツール バー ボタンの外観を変更するには、設定、 <xref:System.Windows.Forms.ToolBar.Appearance%2A> 親ツール バー コントロールのプロパティです。`ToolBarAppearance.Flat` 外観は、ボタンにフラットな外観を与えます。 マウス ポインターをボタンの上に移動すると、ボタンを 3 次元の外観が変化します。 区切り記号は、ボタンがフラットな外観のボタンの間のスペースではなく線として表示されます。 場合、 <xref:System.Windows.Forms.ToolBar.Appearance%2A> にプロパティが設定されている `ToolBarAppearance.Normal`, 、発生し、3 次元ボタンが表示され、ボタンの間の間隔として、区切り記号が表示されます。  
  
 割り当てることができます、 <xref:System.Windows.Forms.ContextMenu> ボタンに場合は、 <xref:System.Windows.Forms.ToolBarButton.Style%2A> にプロパティが設定されている `ToolBarButtonStyle.DropDown`します。 ボタンがクリックされたときに割り当てられたメニューが表示されます。  
  
 コレクションを作成する <xref:System.Windows.Forms.ToolBarButton> で表示するコントロールを <xref:System.Windows.Forms.ToolBar>, を使用して、ボタンを個別に追加、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> のメソッド、 <xref:System.Windows.Forms.ToolBar.Buttons%2A> プロパティです。 またを使用していくつかのツール バー ボタンを追加することができます、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> メソッドです。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールです。 ツール バー ボタンがボタン コレクションに割り当てられている、コレクションが、ツールバーに割り当てられているおよびツールバーは、フォームに追加します。<xref:System.Windows.Forms.ToolBar.ButtonClick> 、ツールバーのイベント、 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> のプロパティ、 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> が評価される適切なダイアログ ボックスを開くとします。 このコードでは、する必要があります、 <xref:System.Windows.Forms.Form>, 、 <xref:System.Windows.Forms.OpenFileDialog>, 、 <xref:System.Windows.Forms.SaveFileDialog>, 、および <xref:System.Windows.Forms.PrintDialog> がすべて作成されています。  
  
 [!code-cpp[Classic ToolBar.ToolBar Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しく作成した <xref:System.Windows.Forms.ToolBarButton> 既定値を持たない <xref:System.Windows.Forms.ToolBarButton.Text%2A> または <xref:System.Drawing.Image> 割り当てられます。 ボタンの既定のスタイルは `ToolBarButtonStyle.PushButton`です。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新しい表示されるテキストを <see cref="T:System.Windows.Forms.ToolBarButton" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスし、ボタンに割り当てられているテキストを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しく作成された <xref:System.Windows.Forms.ToolBarButton> 持たない <xref:System.Drawing.Image> に割り当てられています。 ボタンの既定のスタイルは <xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>です。`text` にパラメーターが割り当てられている、 <xref:System.Windows.Forms.ToolBarButton.Text%2A> プロパティされ、新しいツールバー ボタン コントロールに表示されます。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ToolBarButton> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツールバーのドロップダウンに表示されるメニューを設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ContextMenu" /> ドロップダウン ツールバー ボタンに表示されます。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定できます、 <xref:System.Windows.Forms.ContextMenu> ドロップダウン ボタンがクリックされたときに表示されます。 しない限り、このプロパティは使用されませんが、 <xref:System.Windows.Forms.ToolBarButton.Style%2A> にプロパティの値が設定されている <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=fullName>します。  
  
> [!NOTE]
>  ですが、 <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> としてプロパティが定義されている、 <xref:System.Windows.Forms.Menu> 型を割り当てる必要があります、 <xref:System.Windows.Forms.ContextMenu> 正しく表示するには。 独自に作成している場合 <xref:System.Windows.Forms.MenuItem> 派生クラスがそのオブジェクトを割り当てる必要があります、 <xref:System.Windows.Forms.ContextMenu> を割り当てると、 <xref:System.Windows.Forms.ContextMenu> に、 <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> プロパティです。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">割り当てられたオブジェクトは、 <see cref="T:System.Windows.Forms.ContextMenu" />です。</exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このボタンは有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ボタンが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> にプロパティが設定されている `false`, 、ツールバーのボタンをクリックすることはできません、およびボタンの外観が変化します。<xref:System.Drawing.Image> と <xref:System.Windows.Forms.ToolBarButton.Text%2A> ボタンに割り当てられているがグレー表示されます。 イメージやテキストの色を複数の場合、単色の灰色で表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタンに割り当てられているイメージのインデックス値を設定します。</summary>
        <value>インデックス値、 <see cref="T:System.Drawing.Image" /> ツール バー ボタンに割り当てられます。 既定値は \-1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> 値内のイメージのインデックス付きの値を参照して、 <xref:System.Windows.Forms.ImageList> 親に割り当てられている <xref:System.Windows.Forms.ToolBar> コントロールです。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">割り当てられた値は、\-1 未満です。</exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタンに割り当てられているイメージの名前を設定します。</summary>
        <value>名前、 <see cref="T:System.Drawing.Image" /> ツール バー ボタンに割り当てられます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A> 値がでイメージを示す、 <xref:System.Windows.Forms.ImageList> 親に割り当てられている <xref:System.Windows.Forms.ToolBar> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンの名前。</summary>
        <value>ボタンの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得するキーとしてボタンの名前を使用することができます、 <xref:System.Windows.Forms.ToolBarButton> から、 <xref:System.Windows.Forms.ToolBar.Buttons%2A> のコレクション、 <xref:System.Windows.Forms.ToolBar> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンに割り当てられているツール バー コントロールを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBar" /> コントロールによって、 <see cref="T:System.Windows.Forms.ToolBarButton" /> に割り当てられます。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはスタイルの切り替えツールバーのボタンが部分的に押されているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 部分的にスタイルの切り替えツールバーのボタンが押されて; 場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> に設定されている `true`, 、グレーで表示されるボタンを使用して、ツール バー ボタンが表示されます。 この外観は淡色表示と異なる場合、 <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> にプロパティが設定されている `false` 部分プッシュ外観全体のボタンのイメージをもやを提供するためです。 このプロパティも何も起こりませんしない限り、 <xref:System.Windows.Forms.ToolBarButtonStyle> に設定されている `ToggleButton`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, 、および <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> プロパティです。 例を実行するを含むフォームで次のコードを貼り付け、 <xref:System.Windows.Forms.RichTextBox> というコントロール `RichTextBox1`します。呼び出す、 `InitializeToolBar` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはスタイルの切り替えツールバーのボタンが現在押されている状態かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> スタイルの切り替えツールバーのボタンが現在のプッシュされた状態である場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A> に設定されている `true`, 、くぼんだまたはその他のボタンを基準とした埋め込みツールバーのボタンが表示されます。 このプロパティも何も起こりませんしない限り、 <xref:System.Windows.Forms.ToolBarButtonStyle> に設定されている `ToggleButton`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, 、および <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> プロパティです。 例を実行するを含むフォームで次のコードを貼り付け、 <xref:System.Windows.Forms.RichTextBox> というコントロール `RichTextBox1`します。 呼び出す、 `InitializeToolBar` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンの外接する四角形を取得します。</summary>
        <value>範囲の外接する <see cref="T:System.Drawing.Rectangle" /> ツール バー ボタンのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.ToolBar> し、現在のボタンは、どちらも <xref:System.Windows.Forms.ToolBarButton.Visible%2A>, 、このプロパティで、ボタンが含まれている現在の外接する四角形が取得されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツール バー ボタンのスタイルを設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 値のいずれか。 既定値は、<see langword="ToolBarButtonStyle.PushButton" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、ボタン <xref:System.Windows.Forms.ToolBarButton.Style%2A> に設定されている <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton> を指定できます、 <xref:System.Windows.Forms.MenuItem> ドロップダウン ボタンが押されたときに表示されます。 スタイルに設定されている場合は、 `ToolBarButtonStyle.Separator`, 、およびボタンとしてではなく、ボタンの区切り記号として、ツール バー ボタンが表示されます。`ToolBarButtonStyle.ToggleButton` スタイルで、ツールバーのトグル ボタンのように動作は、; で実行できます、または状態を無効にします。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">割り当てられた値は、のいずれかではありません、 <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 値。</exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツール バー ボタンに関するデータを格納するオブジェクトを設定します。</summary>
        <value>
          <see cref="T:System.Object" /> ツール バー ボタンに関するデータを格納します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得またはツール バー ボタンに関連付けられているデータを割り当てます。 どの <xref:System.Object> 派生型は、このプロパティに割り当てることができます。 Windows フォーム デザイナーでは、このプロパティを設定するは、テキストのみが割り当てることができます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, 、<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, 、および <xref:System.Windows.Forms.ToolBarButton.Tag%2A> プロパティです。 例を実行するを含むフォームで次のコードを貼り付け、 <xref:System.Windows.Forms.RichTextBox> というコントロール `RichTextBox1`します。 呼び出す、 `InitializeToolBar` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツール バー ボタンに表示されるテキストを設定します。</summary>
        <value>ツール バー ボタンに表示されるテキスト。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のテキスト プロパティの値は空の文字列 \(""\) を持つコントロールを作成した場合を除き、 <xref:System.Windows.Forms.ToolBar.%23ctor%2A> をテキスト文字列をパラメーターとして受け取るコンス トラクターです。 ツール バー ボタンのテキストの向きを基準、 <xref:System.Windows.Forms.ToolBar.TextAlign%2A> ボタンの親のプロパティ <xref:System.Windows.Forms.ToolBar>, のいずれかに設定できるある、 <xref:System.Windows.Forms.ToolBarTextAlign> 列挙値。 方向とは、ボタンに割り当てられているイメージに関連します。 領域がありますが、ボタンにイメージが割り当てられていない場合、ツール バー ボタンの表面に 1 つのままにします。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタンのツールヒントとして表示されるテキストを設定します。</summary>
        <value>ツール バー ボタン上にマウス ポインターが移動したときに表示されるテキストです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ボタンの上にマウス ポインターを移動すると、ツールヒントのテキストの表示を有効に設定、 <xref:System.Windows.Forms.ToolBar.ShowToolTips%2A> ボタンの親のプロパティ <xref:System.Windows.Forms.ToolBar> に `true`します。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> および 3 つ <xref:System.Windows.Forms.ToolBarButton> コントロールのツールバーにボタンを割り当て、およびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>, 、<xref:System.Windows.Forms.ImageList>, 、<xref:System.Windows.Forms.ToolTip> と <xref:System.Windows.Forms.Form> 作成されていると、 <xref:System.Windows.Forms.ImageList> が少なくとも 1 つ <xref:System.Drawing.Image> に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールを表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Windows.Forms.ToolBarButton" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolBarButton.ToString%2A> メソッド、型との値を含む文字列を返します、 <xref:System.Windows.Forms.ToolBarButton.Style%2A> と <xref:System.Windows.Forms.ToolBarButton.Text%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツール バー ボタンを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ツール バー ボタンを表示する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ツール バー ボタンが表示されていない場合は、ツールバーでは表示されませんし、そのため、ユーザー入力を受信することはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>