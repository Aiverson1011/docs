<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Windows.Forms.Binding.Format" /> イベントおよび <see cref="E:System.Windows.Forms.Binding.Parse" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.ConvertEventArgs> is used to format and unformat values displayed by a Windows Forms control that is bound to data through a <xref:System.Windows.Forms.Binding> object. The <xref:System.Windows.Forms.Binding.Format> event occurs whenever a control property is bound to a value and the <xref:System.Windows.Forms.Binding.Parse> event occurs whenever the bound value changes.  
  
 The <xref:System.Windows.Forms.Binding.Format> and <xref:System.Windows.Forms.Binding.Parse> events allow you to create custom formats for displaying data. For example, if the data in a table is of type <xref:System.Decimal>, you can specify that the data should be displayed in the local currency format\-\-by setting the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> property of the <xref:System.Windows.Forms.ConvertEventArgs> to the formatted value in the <xref:System.Windows.Forms.Binding.Format> event. You must consequently unformat the displayed value in the <xref:System.Windows.Forms.Binding.Parse> event.  
  
 For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## 例  
 The following code example creates a <xref:System.Windows.Forms.Binding>, adds a <xref:System.Windows.Forms.ConvertEventHandler> delegate to both the <xref:System.Windows.Forms.Binding.Parse> and <xref:System.Windows.Forms.Binding.Format> events, and uses the <xref:System.Windows.Forms.Control.DataBindings%2A> property to add the <xref:System.Windows.Forms.Binding> to the <xref:System.Windows.Forms.BindingsCollection> of a <xref:System.Windows.Forms.TextBox> control. The `DecimalToCurrencyString` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Format> event, uses the <xref:System.Decimal.ToString%2A> method to format the bound value \(a <xref:System.Decimal> type\) as currency. The `CurrencyStringToDecimal` event delegate, which is added to the <xref:System.Windows.Forms.Binding.Parse> event, converts the value displayed by the control back to the <xref:System.Decimal> type.  
  
 [!code-cpp[Classic ConvertEventArgs Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> 現在のプロパティの値を格納します。</param>
        <param name="desiredType">
          <see cref="T:System.Type" /> の値。</param>
        <summary>
          <see cref="T:System.Windows.Forms.ConvertEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必要な値のデータ型を取得します。</summary>
        <value>
          <see cref="T:System.Type" /> の目的の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティでは、値に変換されるプロパティの種類を確認することができます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティを 1 つの型の間の変換を続行するかどうかを判断します。`DecimalToCurrencyString` メソッド テストするかどうか、 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> 文字列です。 それ以外の場合は、コードは、メソッドを終了します。 同様に、 `CurrencyStringToDecimal` メソッド テストするかどうか、 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> は、 <xref:System.Decimal>, 、されていない場合に終了して `true`です。  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、 <see cref="T:System.Windows.Forms.ConvertEventArgs" />です。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ConvertEventArgs" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれる値、 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティをイベントに依存、 <xref:System.Windows.Forms.ConvertEventArgs> が返されます。<xref:System.Windows.Forms.ConvertEventArgs> いずれかが返される、 <xref:System.Windows.Forms.Binding.Format> イベントまたは <xref:System.Windows.Forms.Binding.Parse> イベントです。  
  
 ときに、 <xref:System.Windows.Forms.ConvertEventArgs> で返される、 <xref:System.Windows.Forms.Binding.Format> 、イベント、 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティには、データ ソースの書式設定されていないプロパティの値が含まれています。 内で、 <xref:System.Windows.Forms.Binding.Format> イベント、プロパティの値を読み取りの値の書式設定およびリセット、 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> プロパティを新しい \(書式設定された\) 値に、これにより、データ バインド コントロールに表示される値を設定します。  
  
 ときに、 <xref:System.Windows.Forms.ConvertEventArgs> で返される、 <xref:System.Windows.Forms.Binding.Parse> イベント、プロパティには、データ バインド コントロールのカスタム形式の値が含まれています。 内で、 <xref:System.Windows.Forms.Binding.Parse> イベント、する必要があります書式設定された値を読み取り、解析して、およびデータ ソースと同じデータ型に変換します。 リセットすることができますし、 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 、書式設定されていないプロパティ値に設定して、これにより、データ ソースの値を設定します。 データ ソースの種類を特定する、 <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> プロパティの値。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Windows.Forms.Binding>, 、追加、 <xref:System.Windows.Forms.ConvertEventHandler> 両方へのデリゲート、 <xref:System.Windows.Forms.Binding.Parse> と <xref:System.Windows.Forms.Binding.Format> イベント、および使用して、 <xref:System.Windows.Forms.Control.DataBindings%2A> プロパティを追加する、 <xref:System.Windows.Forms.Binding> に、 <xref:System.Windows.Forms.BindingsCollection> の <xref:System.Windows.Forms.TextBox> コントロールです。`DecimalToCurrencyString` に追加されるイベント デリゲート、 <xref:System.Windows.Forms.Binding.Format> イベントを使用して、 <xref:System.Decimal.ToString%2A> バインドされた値の書式設定メソッド \(、 <xref:System.Decimal> 型\) の通貨として。`CurrencyStringToDecimal` に追加されるイベント デリゲート、 <xref:System.Windows.Forms.Binding.Parse> イベントがコントロールによって表示される値に変換に、 <xref:System.Decimal> 型です。  
  
 [!code-cpp[Classic ConvertEventArgs Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>