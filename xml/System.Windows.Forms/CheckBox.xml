<Type Name="CheckBox" FullName="System.Windows.Forms.CheckBox">
  <TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CheckBox extends System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("CheckState")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckedChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows を表す <see cref="T:System.Windows.Forms.CheckBox" />します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.CheckBox> 、はい\/いいえ、または true または false などのオプションをユーザーに提供します。<xref:System.Windows.Forms.CheckBox> コントロールは、イメージやテキストまたはその両方を表示できます。  
  
 <xref:System.Windows.Forms.CheckBox> <xref:System.Windows.Forms.RadioButton> コントロールのような関数がある: ユーザーがオプションの一覧から選択できます。<xref:System.Windows.Forms.CheckBox> コントロールでは、ユーザーがオプションの組み合わせを選択できるようにします。 これに対し、 <xref:System.Windows.Forms.RadioButton> コントロールには、ユーザーが相互に排他的なオプションから選択ができるようにします。  
  
 <xref:System.Windows.Forms.CheckBox.Appearance%2A> プロパティを決定するかどうか、 <xref:System.Windows.Forms.CheckBox> 標準として表示されます <xref:System.Windows.Forms.CheckBox> ボタンか。  
  
 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティは、コントロールが 2 または 3 つの状態をサポートしているかどうかを決定します。 使用して、 <xref:System.Windows.Forms.CheckBox.Checked%2A> を取得または 2 つの状態の値を設定する <xref:System.Windows.Forms.CheckBox> 制御および使用して、 <xref:System.Windows.Forms.CheckBox.CheckState%2A> を取得または 3 つの状態の値を設定する <xref:System.Windows.Forms.CheckBox> コントロールです。  
  
> [!NOTE]
>  場合、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Forms.CheckBox.Checked%2A> が返される `true` オフ、未確定のいずれかの状態にします。  
  
 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> プロパティは、スタイルおよびコントロールの外観を決定します。 場合、 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> にプロパティが設定されている <xref:System.Windows.Forms.FlatStyle.System?displayProperty=fullName>, 、ユーザーのオペレーティング システムは、コントロールの外観を指定します。  
  
> [!NOTE]
>  ときに、 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> にプロパティが設定されている <xref:System.Windows.Forms.FlatStyle.System?displayProperty=fullName>, 、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> プロパティは無視されを使用して、コントロールを表示、 <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=fullName> または <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=fullName> 配置します。 場合、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> プロパティの右側のアラインメントのいずれかに設定されてを使用して、コントロールが表示されます、 <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=fullName> 配置します。 それ以外の場合、表示されている、 <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=fullName> 配置します。  
  
 中間の状態を以下に示します: がある場合、 <xref:System.Windows.Forms.CheckBox> 場合を決定するで選択したテキスト、 <xref:System.Windows.Forms.RichTextBox> が太字です。 クリックしてテキストを選択すると、 <xref:System.Windows.Forms.CheckBox> 選択範囲を太字にします。 同様に、いくつかのテキストを選択すると、 <xref:System.Windows.Forms.CheckBox> 、選択したテキストが太字かどうかが表示されます。 選択したテキストに太字で、通常、テキストが含まれている場合、 <xref:System.Windows.Forms.CheckBox> 、不定状態になります。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.CheckBox>, 、トグル ボタンの外観を与えますが、設定 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> に `false`, に追加し、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.CheckBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、新しい <xref:System.Windows.Forms.CheckBox> がインスタンス化される <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> に設定されている `true`, 、<xref:System.Windows.Forms.CheckBox.Checked%2A> に設定されている `false`, 、および <xref:System.Windows.Forms.CheckBox.Appearance%2A> に設定されている <xref:System.Windows.Forms.Appearance.Normal>します。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.CheckBox>, 、トグル ボタンの外観を与えますが、設定 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> に `false`, に追加し、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Appearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Appearance Appearance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Appearance Appearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Appearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Appearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の外観を決定する値、 <see cref="T:System.Windows.Forms.CheckBox" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Appearance" /> 値のいずれか。 既定値は <see cref="F:System.Windows.Forms.Appearance.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Windows.Forms.CheckBox.Appearance%2A> に値が設定されている <xref:System.Windows.Forms.Appearance.Normal>, 、 <xref:System.Windows.Forms.CheckBox> が標準的な外観です。 値が設定されている場合 `Button`, 、 <xref:System.Windows.Forms.CheckBox> トグル ボタンのことで、稼働する、つまり押された状態かを切り替えられるように表示されます。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.CheckBox>, 、トグル ボタンの外観を与えますが、設定 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> に `false`, に追加し、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">割り当てられている値は、のいずれかではない、 <see cref="T:System.Windows.Forms.Appearance" /> 値。</exception>
        <altmember cref="T:System.Windows.Forms.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AppearanceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppearanceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.CheckBox.AppearanceChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.CheckBox> という `CheckBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.CheckBox.AppearanceChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#139)]
 [!code-vb[System.Windows.Forms.EventExamples\#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#139)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AutoCheck">
      <MemberSignature Language="C#" Value="public bool AutoCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> または <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 値と <see cref="T:System.Windows.Forms.CheckBox" />の外観に変更に自動的に、 <see cref="T:System.Windows.Forms.CheckBox" /> をクリックします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> 値または <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 値およびコントロールの外観に自動的に変更、 <see cref="E:System.Windows.Forms.Control.Click" /> イベント以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> を更新するコードを追加する必要を false に設定されている、 <xref:System.Windows.Forms.CheckBox.Checked%2A> または <xref:System.Windows.Forms.CheckBox.CheckState%2A> の値、 <xref:System.Windows.Forms.Control.Click> イベント ハンドラーです。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.CheckBox>, 、トグル ボタンの外観を与えますが、設定 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> に `false`, に追加し、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment CheckAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment CheckAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、チェック マークの水平および垂直方向の配置、 <see cref="T:System.Windows.Forms.CheckBox" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Drawing.ContentAlignment" /> 値のいずれか。 既定値は <see langword="MiddleLeft" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、ラベルに 3 つのプロパティの値を表示します。<xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティが交互に `true` と `false` がコントロールのクリックを交互に使用され、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> を交互に、 `MiddleRight` と `MiddleLeft` の値 <xref:System.Drawing.ContentAlignment>です。 この例では、としてプロパティの値を変更する方法、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティの変更と、コントロールがチェックされます。 この例で必要とする、 <xref:System.Windows.Forms.CheckBox>, 、<xref:System.Windows.Forms.Label> と <xref:System.Windows.Forms.Button> すべてインスタンス化されたフォームで、ラベルはへの参照と同様に、テキストの 3 つの線を表示するのに十分な大きさの <xref:System.Drawing?displayProperty=fullName> 名前空間。 このコードを呼び出す必要があります、 <xref:System.Windows.Forms.Control.Click> コントロールのイベント ハンドラーです。  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">割り当てられている値は、のいずれかではない、 <see cref="T:System.Drawing.ContentAlignment" /> 列挙値。</exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Forms.CheckBox" /> チェックされた状態にします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.CheckBox" /> チェック付きでは、状態以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。  
  
 <block subset="none" type="note">  
<para>  
 場合、 <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> にプロパティが設定されている <see langword="true" />, 、 <see cref="P:System.Windows.Forms.CheckBox.Checked" /> が返される <see langword="true" /> のいずれか、 <see langword="Checked" /> または <see langword="Indeterminate" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />します。  
  
</para>  
</block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値が `true`, 、 <xref:System.Windows.Forms.CheckBox> コントロールの部分には、チェック マークが表示されます。 場合、 <xref:System.Windows.Forms.CheckBox.Appearance%2A> にプロパティが設定されている `Button`, 、コントロールが表示されます浮き彫り <xref:System.Windows.Forms.CheckBox.Checked%2A> は `true` され、標準のように生成ボタン `false`します。  
  
   
  
## 例  
 次のコード例では、ラベルに 3 つのプロパティの値を表示します。<xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティが交互に `true` と `false` がコントロールのクリックを交互に使用され、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> を交互に、 <xref:System.Drawing.ContentAlignment> の値 `MiddleRight` と `MiddleLeft`です。 この例では、としてプロパティの値を変更する方法、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティの変更と、コントロールがチェックされます。 この例で必要とする、 <xref:System.Windows.Forms.CheckBox>, 、<xref:System.Windows.Forms.Label> と <xref:System.Windows.Forms.Button> すべてインスタンス化されたフォームで、ラベルはへの参照と同様に、テキストの 3 つの線を表示するのに十分な大きさの <xref:System.Drawing?displayProperty=fullName> 名前空間。 このコードを呼び出す必要があります、 <xref:System.Windows.Forms.Control.Click> コントロールのイベント ハンドラーです。  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CheckedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckBox.Checked" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.CheckBox.CheckedChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.CheckBox> という `CheckBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.CheckBox.CheckedChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#140)]
 [!code-vb[System.Windows.Forms.EventExamples\#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#140)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CheckState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CheckState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の状態、 <see cref="T:System.Windows.Forms.CheckBox" />です。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckState" /> 列挙値のいずれか。 既定値は <see langword="Unchecked" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> にプロパティが設定されている `false`, 、 <xref:System.Windows.Forms.CheckBox.CheckState%2A> プロパティの値のみ設定できます `CheckState.Indeterminate` コードおよびユーザーの操作ではありません。  
  
 次の表、 <xref:System.Windows.Forms.Appearance?displayProperty=fullName> の <xref:System.Windows.Forms.CheckBox> のさまざまな状態での制御、 `Normal` と `Button` コントロールのスタイルを <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=fullName>します。  
  
|CheckState|Appearance.Normal|Appearance.Button|  
|----------------|-----------------------|-----------------------|  
|`Checked`|<xref:System.Windows.Forms.CheckBox> チェック マークが表示されます。|浮き彫りとしたときに、コントロールが表示されます。|  
|`Unchecked`|<xref:System.Windows.Forms.CheckBox> が空です。|発生したとしたときに、コントロールが表示されます。|  
|`Indeterminate`|<xref:System.Windows.Forms.CheckBox> チェック マークを表示しが影付きにします。|フラットとしたときに、コントロールが表示されます。|  
  
   
  
## 例  
 次のコード例では、ラベルに 3 つのプロパティの値を表示します。<xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティが交互に `true` と `false` がコントロールのクリックを交互に使用され、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> を交互に、 `MiddleRight` と `MiddleLeft` の値 <xref:System.Drawing.ContentAlignment?displayProperty=fullName>です。 この例では、としてプロパティの値を変更する方法、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティの変更と、コントロールがチェックされます。 この例で必要とする、 <xref:System.Windows.Forms.CheckBox>, 、<xref:System.Windows.Forms.Label> と <xref:System.Windows.Forms.Button> すべてインスタンス化されたフォームで、ラベルはへの参照と同様に、テキストの 3 つの線を表示するのに十分な大きさの <xref:System.Drawing?displayProperty=fullName> 名前空間。 このコードを呼び出す必要があります、 <xref:System.Windows.Forms.Control.Click> コントロールのイベント ハンドラーです。  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">割り当てられている値は、のいずれかではない、 <see cref="T:System.Windows.Forms.CheckState" /> 列挙値。</exception>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="CheckStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## 例  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#141)]
 [!code-vb[System.Windows.Forms.EventExamples\#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#141)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.CheckBox" /> コントロールの新しいユーザー補助オブジェクトを作成します。</summary>
        <returns>コントロールの新しい <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If you do not explicitly call the <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  
  
> [!NOTE]
>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the **languageKeyword tag is not supported!!!!**  
>  assembly installed with the .NET Framework.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> method.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</summary>
        <value>コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class. The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>. This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.  
  
 [!code-cpp[CreateParams\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のサイズを取得します。</summary>
        <value>既定のサイズ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.CheckBox" /> コントロールをダブルクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.DoubleClick> event is not raised.  
  
 This event is not relevant to this class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.CheckBox" /> コントロールをダブルクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=fullName> と <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=fullName> スタイル ビットに設定されます `false` の <xref:System.Windows.Forms.CheckBox> コントロール、および <xref:System.Windows.Forms.CheckBox.MouseDoubleClick> イベントは発生しません。  
  
 このクラスでは、このイベントは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearanceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearanceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearanceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.Click" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckBox.OnClick%2A> メソッドが変更された、 <xref:System.Windows.Forms.CheckBox.CheckState%2A> プロパティです。 場合、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> にプロパティが設定されている `true`, 、以降のクリックして、 <xref:System.Windows.Forms.CheckBox> になります <xref:System.Windows.Forms.CheckBox.OnClick%2A> の繰り返しのすべての値を <xref:System.Windows.Forms.CheckBox.CheckState%2A> 列挙します。 それ以外の場合、 <xref:System.Windows.Forms.CheckBox.OnClick%2A> 間の切り替えの <xref:System.Windows.Forms.CheckState.Checked> と <xref:System.Windows.Forms.CheckState.Unchecked>です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckBox.OnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>
          <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary>OnMouseUp イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">処理対象の文字。</param>
        <summary>ニーモニック文字を処理します。</summary>
        <returns>文字がコントロールによってニーモニックとして処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コントロールのニーモニック文字を処理する機会を与えるために呼び出されます。 メソッドは、コントロールがニーモニックを処理する状態になっているかどうか特定の文字がニーモニックを表しているかどうかを決定する必要があります。 かどうか、メソッドの動作を実行ニーモニックと戻り値に関連付けられている `true`します。 場合は、メソッドが返す、 `false`です。 多くの場合、このメソッドの実装を使用して、 <xref:System.Windows.Forms.Control.IsMnemonic%2A> コントロールのテキストでニーモニックが特定の文字に一致するかどうかを決定する方法です。  
  
 例:  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
    // Perform action associated with mnemonic.  
    }  
```  
  
 この既定の実装の <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> メソッドは単に返す `false` コントロールにアクセラレータ キーがないことを表します。  
  
   
  
## 例  
 次のコード例をオーバーライドする button クラスの拡張機能を示しています、 <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> メソッドがカスタム動作。 この例では、使用についても示します、 <xref:System.Windows.Forms.Control.CanSelect%2A> と <xref:System.Windows.Forms.Control.IsMnemonic%2A> プロパティです。 この例を実行するには、同じファイル内のフォーム クラスを使用して、次のコードを貼り付けます。 型のボタンを追加する `MnemonicButton` をフォームにします。  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public override System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または上のテキストの配置の設定、 <see cref="T:System.Windows.Forms.CheckBox" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Drawing.ContentAlignment" /> 値のいずれか。 既定値は、<see cref="F:System.Drawing.ContentAlignment.MiddleLeft" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.ThreeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Forms.CheckBox" /> 3 つの 2 つではなく状態チェックを許可します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.CheckBox" /> を 3 つのチェック状態を表示できません。 それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> にプロパティが設定されている `false`, 、 <xref:System.Windows.Forms.CheckBox.CheckState%2A> プロパティの値のみ設定できます、 `Indeterminate` の値 <xref:System.Windows.Forms.CheckState?displayProperty=fullName> コードおよびユーザーの操作ではありません。  
  
   
  
## 例  
 次のコード例では、ラベルに 3 つのプロパティの値を表示します。<xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティが交互に `true` と `false` がコントロールのクリックを交互に使用され、 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> を交互に、 `MiddleRight` と `MiddleLeft` の値 <xref:System.Drawing.ContentAlignment?displayProperty=fullName>です。 この例では、としてプロパティの値を変更する方法、 <xref:System.Windows.Forms.CheckBox.ThreeState%2A> プロパティの変更と、コントロールがチェックされます。 このコードが必要ですが、 <xref:System.Windows.Forms.CheckBox>, 、<xref:System.Windows.Forms.Label> と <xref:System.Windows.Forms.Button> すべてインスタンス化されたフォームで、ラベルはへの参照と同様に、テキストの 3 つの線を表示するのに十分な大きさ、 <xref:System.Drawing?displayProperty=fullName> 名前空間。 このコードを呼び出す必要があります、 <xref:System.Windows.Forms.Control.Click> コントロールのイベント ハンドラーです。  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Windows.Forms.CheckBox" /> コントロールを表す文字列を返します。</summary>
        <returns>コントロールの種類との状態を示す文字列、 <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> プロパティです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>