<Type Name="DataGridViewRowDividerDoubleClickEventArgs" FullName="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs">
  <TypeSignature Language="C#" Value="public class DataGridViewRowDividerDoubleClickEventArgs : System.Windows.Forms.HandledMouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRowDividerDoubleClickEventArgs extends System.Windows.Forms.HandledMouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.HandledMouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データを提供、 <see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /> のイベント、 <see cref="T:System.Windows.Forms.DataGridView" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、この型の使用を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.DataGridView> という `DataGridView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples\#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRowDividerDoubleClickEventArgs (int rowIndex, System.Windows.Forms.HandledMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 rowIndex, class System.Windows.Forms.HandledMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs.#ctor(System.Int32,System.Windows.Forms.HandledMouseEventArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="e" Type="System.Windows.Forms.HandledMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowIndex">ダブルクリックされた行の区分線の上の行のインデックス。</param>
        <param name="e">新しい <see cref="T:System.Windows.Forms.HandledMouseEventArgs" /> 継承されたイベント データを格納します。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターの値が初期化、 <xref:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs.RowIndex%2A> プロパティを使用して、 `rowIndex` 値。 プロパティの値から継承 <xref:System.Windows.Forms.HandledMouseEventArgs> で指定された値に初期化されます `e`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> \-1 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダブルクリックされた行の区分線の上の行のインデックス。</summary>
        <value>区分線の上の行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インデックスは、内の行の 0 から始まるインデックス、 <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> コレクションです。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick?displayProperty=fullName> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.DataGridView> という `DataGridView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick?displayProperty=fullName> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples\#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>