<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" />、<see cref="E:System.Windows.Forms.Control.MouseMove" /> の各イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Control.MouseDown> イベント ポインターがコントロールの上にあるときに、ユーザーがマウス ボタンを押したときに発生します。<xref:System.Windows.Forms.Control.MouseUp> イベントは、ポインターがコントロール上でマウス ボタンを離したときに発生します。<xref:System.Windows.Forms.Control.MouseMove> イベント、コントロールの上にマウス ポインターを動かしたときに発生します。 A <xref:System.Windows.Forms.MouseEventArgs> どちらのマウス ボタンが押された、何回マウス ボタンが押され、リリースされると、マウス、およびマウス ホイールを移動量の座標を指定します。  
  
 受信することは、 <xref:System.Windows.Forms.Control.MouseDown> イベントを対応するなし <xref:System.Windows.Forms.Control.MouseUp>, 、ユーザーがマウス ボタンを解放する前に別のアプリケーションにフォーカスを切り替える場合は、です。  
  
 これら 3 つのイベントがの存在、 <xref:System.Windows.Forms.Control>, 、<xref:System.Windows.Forms.AxHost>, 、および <xref:System.Windows.Forms.NotifyIcon> クラスです。  
  
 イベント モデルについては、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例のハンドル、 <xref:System.Windows.Forms.Control.MouseDown> でイベントを <xref:System.Windows.Forms.TextBox> を制御できるため、コントロールのすべてのテキストを選択するマウスの右ボタンをクリックします。 この例を含むフォームである必要があります、 <xref:System.Windows.Forms.TextBox> という名前は、コントロールを `textBox1`します。  
  
 [!code-csharp[MouseEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 次のコード例では、 `Location` を追跡するプロパティは、ユーザー入力に一連の線分を描画して、マウスの左ボタンのクリックします。 例では、再描画されない行は、フォームを非表示にすると、それを再表示します。このコードは、わかりやすくするために省略されています。  
  
 [!code-csharp[MouseEventArgs\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 次のコード例では、 <xref:System.Windows.Forms.MouseEventArgs.X%2A> と <xref:System.Windows.Forms.MouseEventArgs.Y%2A> にマウス ポインターの現在位置を表示するプロパティ、 <xref:System.Windows.Forms.ToolTip> ウィンドウです。  
  
 [!code-csharp[MouseEventArgs\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">いずれか、 <see cref="T:System.Windows.Forms.MouseButtons" /> どちらのマウス ボタンが押されたかを示す値。</param>
        <param name="clicks">マウス ボタンが押された回数。</param>
        <param name="x">マウスの x 座標 \(ピクセル単位\)\] をクリックします。</param>
        <param name="y">マウスの y 座標 \(ピクセル単位\)\] をクリックします。</param>
        <param name="delta">マウス ホイールの回転回数を表す符号付きの数値。</param>
        <summary>
          <see cref="T:System.Windows.Forms.MouseEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスのどのボタンが押されたかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.MouseButtons" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control. This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.  
  
 [!code-csharp[MouseEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ボタンが押されて離された回数を取得します。</summary>
        <value>
          <see cref="T:System.Int32" /> マウス ボタンが押され、リリースされた回数の合計を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows インターフェイスを定義しますが、標準のマウス イベントのいずれかとしてシングル クリックまたはダブルクリックする、個々 のアプリケーションが単一のイベントとして多数の数回のクリックを解釈できます。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> イベントです。 このレポートによって、イベントが発生してデバッグに役立つについて学びます。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行するから継承する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.Control>, など、 <xref:System.Windows.Forms.Button> または <xref:System.Windows.Forms.ComboBox>です。 インスタンスを名前 `Control1` イベント ハンドラーが関連付けられていることを確認し、 <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples\#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ホイールの回転回数を表す符号付きの数値に定数 WHEEL\_DELTA の値を乗算した値を取得します。 マウス ホイールのノッチ 1 つ分が 1 移動量に相当します。</summary>
        <value>マウス ホイールの回転回数を表す符号付きの数値に定数 WHEEL\_DELTA の値を乗算した値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The mouse wheel combines the features of a wheel and a mouse button. The wheel has discrete, evenly spaced notches. When you rotate the wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL\_DELTA, which is 120. A positive value indicates that the wheel was rotated forward \(away from the user\); a negative value indicates that the wheel was rotated backward \(toward the user\).  
  
 Currently, a value of 120 is the standard for one detent. If higher resolution mice are introduced, the definition of WHEEL\_DELTA might become smaller. Most applications should check for a positive or negative value rather than an aggregate total.  
  
   
  
## 例  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples\#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス イベント生成時のマウスの位置を取得します。</summary>
        <value>A <see cref="T:System.Drawing.Point" /> \(ピクセル単位\)、フォームの左上隅に対して相対的に、x と y マウス座標を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.MouseEventArgs.Location%2A> プロパティを左のマウス クリックを追跡し、ユーザー入力に一連の線分を描画します。 フォームを非表示にし、それを再表示する場合に、例で描画された行が保持されません。このコードは、わかりやすくするため省略されました。  
  
 [!code-csharp[MouseEventArgs\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス イベント生成時のマウスの x 座標を取得します。</summary>
        <value>マウスの x 座標 \(ピクセル単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウスの座標は、発生したイベントによって異なります。 たとえば、 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> イベントが処理される、マウスの座標の値は、イベントを発生させたコントロールの座標。 ドラッグ アンド ドロップの操作に関連するいくつかのイベントには、フォームの原点または画面の原点とする相対的なマウス座標の値が関連付けられています。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.MouseEventArgs.X%2A> と <xref:System.Windows.Forms.MouseEventArgs.Y%2A> にマウス ポインターの現在位置を表示するプロパティ、 <xref:System.Windows.Forms.ToolTip> ウィンドウです。  
  
 [!code-csharp[MouseEventArgs\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス イベント生成時のマウスの y 座標を取得します。</summary>
        <value>マウスの y 座標 \(ピクセル単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウスの座標は、発生したイベントによって異なります。 たとえば、 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> イベントが処理される、マウスの座標の値は、イベントを発生させたコントロールの座標。 ドラッグ アンド ドロップの操作に関連するいくつかのイベントには、フォームの原点または画面の原点とする相対的なマウス座標の値が関連付けられています。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.MouseEventArgs.X%2A> と <xref:System.Windows.Forms.MouseEventArgs.Y%2A> にマウス ポインターの現在位置を表示するプロパティ、 <xref:System.Windows.Forms.ToolTip> ウィンドウです。 このコードを使用する呼び出し `TrackCoordinates` フォームのコンス トラクターからです。  
  
 [!code-csharp[MouseEventArgs\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>