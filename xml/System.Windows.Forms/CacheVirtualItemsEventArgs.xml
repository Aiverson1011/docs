<Type Name="CacheVirtualItemsEventArgs" FullName="System.Windows.Forms.CacheVirtualItemsEventArgs">
  <TypeSignature Language="C#" Value="public class CacheVirtualItemsEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheVirtualItemsEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CacheVirtualItemsEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ListView.CacheVirtualItems> イベント発生時の新しい領域、 <xref:System.Windows.Forms.ListView> 仮想モードでは公開され、 <xref:System.Windows.Forms.ListView> 項目の新しい範囲が必要と判断します。  
  
   
  
## 例  
 次のコード例では、この型の使用を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ListView.CacheVirtualItems> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ListView> という `ListView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ListView.CacheVirtualItems> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#465](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#465)]
 [!code-vb[System.Windows.Forms.EventExamples\#465](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#465)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheVirtualItemsEventArgs (int startIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 startIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CacheVirtualItemsEventArgs.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">必要な項目の範囲の開始インデックス、 <see cref="T:System.Windows.Forms.ListView" /> 次の <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> に発生するイベントです。</param>
        <param name="endIndex">必要な項目の範囲の終了インデックス、 <see cref="T:System.Windows.Forms.ListView" /> 次の <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> に発生するイベントです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> クラスの指定した開始アドレスと終了インデックス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIndex">
      <MemberSignature Language="C#" Value="public int EndIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CacheVirtualItemsEventArgs.EndIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必要な値の範囲の終了インデックスを取得、 <see cref="T:System.Windows.Forms.ListView" /> 仮想モードで制御します。</summary>
        <value>必要な値の範囲の終了位置のインデックス、 <see cref="T:System.Windows.Forms.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された値の範囲、 <xref:System.Windows.Forms.CacheVirtualItemsEventArgs.StartIndex%2A> と <xref:System.Windows.Forms.CacheVirtualItemsEventArgs.EndIndex%2A> プロパティは、バーチャル マシンで多くの場合に必要な値の範囲を表す <xref:System.Windows.Forms.ListView> コントロールの次の出現箇所を <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> イベントです。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ListView.CacheVirtualItems?displayProperty=fullName> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ListView> という `ListView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ListView.CacheVirtualItems?displayProperty=fullName> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#465](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#465)]
 [!code-vb[System.Windows.Forms.EventExamples\#465](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#465)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CacheVirtualItemsEventArgs.StartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必要な値の範囲の開始インデックスを取得、 <see cref="T:System.Windows.Forms.ListView" /> 仮想モードで制御します。</summary>
        <value>必要な値の範囲の開始位置のインデックス、 <see cref="T:System.Windows.Forms.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された値の範囲、 <xref:System.Windows.Forms.CacheVirtualItemsEventArgs.StartIndex%2A> と <xref:System.Windows.Forms.CacheVirtualItemsEventArgs.EndIndex%2A> プロパティは、バーチャル マシンで多くの場合に必要な値の範囲を表す <xref:System.Windows.Forms.ListView> コントロールの次の出現箇所を <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> イベントです。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ListView.CacheVirtualItems?displayProperty=fullName> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ListView> という `ListView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ListView.CacheVirtualItems?displayProperty=fullName> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#465](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#465)]
 [!code-vb[System.Windows.Forms.EventExamples\#465](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#465)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>