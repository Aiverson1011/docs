<Type Name="MenuStrip" FullName="System.Windows.Forms.MenuStrip">
  <TypeSignature Language="C#" Value="public class MenuStrip : System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuStrip extends System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuStrip" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>フォーム用のメニュー システムを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MenuStrip> 最上位のコンテナーを置き換える <xref:System.Windows.Forms.MainMenu>します。 キーを処理し、マルチ ドキュメント インターフェイス \(MDI\) の機能も提供します。 機能的には、 <xref:System.Windows.Forms.ToolStripDropDownItem> と <xref:System.Windows.Forms.ToolStripMenuItem> と共に作業 <xref:System.Windows.Forms.MenuStrip>, から派生しているが、 <xref:System.Windows.Forms.ToolStripItem>です。  
  
 次の項目が両方とシームレスに連携に特化した <xref:System.Windows.Forms.ToolStripSystemRenderer> と <xref:System.Windows.Forms.ToolStripProfessionalRenderer> すべての向きにします。 デザイン時に、既定では、 <xref:System.Windows.Forms.MenuStrip> コントロール。  
  
-   <xref:System.Windows.Forms.ToolStripMenuItem>  
  
-   <xref:System.Windows.Forms.ToolStripTextBox>  
  
-   <xref:System.Windows.Forms.ToolStripComboBox>  
  
 <xref:System.Windows.Forms.MenuStrip> コントロールがフォームのメニュー構造のコンテナーを表します。 追加することができます <xref:System.Windows.Forms.ToolStripMenuItem> オブジェクトを <xref:System.Windows.Forms.MenuStrip> メニュー構造の個々 のメニュー コマンドを表します。 各 <xref:System.Windows.Forms.ToolStripMenuItem> 、アプリケーションのコマンドやその他のサブメニュー項目の親メニューにすることができます。  
  
 <xref:System.Windows.Forms.MenuStrip> は置換し、する機能を追加、 <xref:System.Windows.Forms.MainMenu> 以前のバージョンの制御 <xref:System.Windows.Forms.MainMenu> を選択した場合に下位互換性と将来の使用の両方を保持します。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Windows.Forms.MenuStrip> シナリオでマルチ ドキュメント インターフェイス \(MDI\)。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc\#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc\#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripMenuItem" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuStrip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.MenuStrip" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して、作成、 <xref:System.Windows.Forms.MenuStrip> 追加できる <xref:System.Windows.Forms.ToolStripMenuItem> オブジェクトです。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Windows.Forms.MenuStrip.%23ctor%2A> コンス トラクターです。 この例に示されている例の一部である、 <xref:System.Windows.Forms.ToolStripPanel> クラスです。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc\#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc\#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanOverflow">
      <MemberSignature Language="C#" Value="public bool CanOverflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.CanOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.MenuStrip" /> がオーバーフロー機能をサポートするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.MenuStrip" /> オーバーフロー機能をサポートしない場合は、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーフロー機能がでそれらを表示するための十分なスペースがないときに、ドロップダウン メニューにメニュー項目を移動、 <xref:System.Windows.Forms.MenuStrip>です。 設定すると、 <xref:System.Windows.Forms.MenuStrip.CanOverflow%2A> プロパティを `true`, を設定して特定のメニュー項目のオーバーフローを有効にする必要がありますも、 <xref:System.Windows.Forms.ToolStripMenuItem.Overflow%2A?displayProperty=fullName> プロパティです。 既定では、使用可能な領域を収めることができない場合、メニュー項目は表示されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの新しいユーザー補助オブジェクトを作成します。</summary>
        <returns>コントロールの新しい <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If you do not explicitly call the <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=fullName> property is referenced.  
  
> [!NOTE]
>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=fullName> property, you must add a reference to the **languageKeyword tag is not supported!!!!**  
>  assembly installed with the .NET Framework.  
  
 For a code example of using <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A>, see <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A?displayProperty=fullName>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultItem">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ToolStripItem CreateDefaultItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.Forms.ToolStripItem CreateDefaultItem(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">
          <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> で使用するテキスト。<c>text</c> パラメーターがハイフン \(\-\) の場合、このメソッドは <see cref="T:System.Windows.Forms.ToolStripSeparator" /> を作成します。</param>
        <param name="image">
          <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> に表示される <see cref="T:System.Drawing.Image" />。</param>
        <param name="onClick">
          <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> がクリックされた時点で <see cref="E:System.Windows.Forms.Control.Click" /> イベントを発生させるイベント ハンドラー。</param>
        <summary>作成、 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 新しいで指定されたテキスト、イメージ、およびイベント ハンドラーで <see cref="T:System.Windows.Forms.MenuStrip" />します。</summary>
        <returns>
          <see cref="M:System.Windows.Forms.ToolStripMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)" />。<paramref name="text" /> パラメーターがハイフン \(\-\) の場合は <see cref="T:System.Windows.Forms.ToolStripSeparator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.MenuStrip.CreateDefaultItem%2A> を追加するメソッド、 <xref:System.Windows.Forms.ToolStripMenuItem> 通常使用する特性を使用、 <xref:System.Windows.Forms.MenuStrip>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGripMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultGripMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultGripMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultGripMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイズ変更グリップと <see cref="T:System.Windows.Forms.MenuStrip" /> の端との間の既定の間隔をピクセル単位で取得します。</summary>
        <value>間隔をピクセル単位で表す <see cref="T:System.Windows.Forms.Padding" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>間隔を取得します \(ピクセル単位\)、左下端の間、 <see cref="T:System.Windows.Forms.MenuStrip" /> フォームの端からです。</summary>
        <value>A <see cref="T:System.Windows.Forms.Padding" /> 間隔を表します。 既定値は、<c>{Left=6, Top=2, Right=0, Bottom=2}</c> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.MenuStrip.DefaultPadding%2A> コントロール間の内部間隔を設定するプロパティです。 コントロールが項目のコンテナーである場合は、余白は、コンテナーの端から領域を表します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShowItemToolTips">
      <MemberSignature Language="C#" Value="protected override bool DefaultShowItemToolTips { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.MenuStrip" /> のツールヒントを既定で表示するかどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips%2A?displayProperty=fullName> property always returns **languageKeyword tag is not supported!!!!**  
 because typically, ToolTips are not used for menus or menu items.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平および垂直方向のサイズ \(ピクセル単位\) を取得、 <see cref="T:System.Windows.Forms.MenuStrip" /> 最初の作成時にします。</summary>
        <value>A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> 値を表す、 <see cref="T:System.Windows.Forms.MenuStrip" /> ピクセル単位での水平および垂直方向です。 既定値は 200 x 21 ピクセルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripGripStyle GripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripGripStyle GripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.GripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの位置変更に使用するグリップの可視性を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripGripStyle" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.ToolStripGripStyle.Hidden" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiWindowListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripMenuItem MdiWindowListItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripMenuItem MdiWindowListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.MdiWindowListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.MdiWindowListItemConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripMenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> マルチ ドキュメント インターフェイス \(MDI\) 子フォームの一覧を表示に使用されます。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> アプリケーションで開かれている MDI 子フォームのリストを表示するメニュー項目を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> プロパティに指定するか、発見を <xref:System.Windows.Forms.ToolStripMenuItem> MDI 子フォームが表示されます。  
  
 使用して、 <xref:System.Windows.Forms.MenuStrip.MenuActivate> と <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> の値に変更を反映するように子メニュー上のイベント <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A>です。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> プロパティです。 この例に示されている例の一部である、 <xref:System.Windows.Forms.ToolStripPanel> クラスです。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc\#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc\#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuActivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがキーボードまたはマウスを使用してメニューにアクセスしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ALT キーをアクティブになったとき、 <xref:System.Windows.Forms.MenuStrip> または <xref:System.Windows.Forms.ToolStrip> をどちらも通常も、現在フォーカスがコントロールからフォーカスを削除します。 内でホストされるコントロールがあるかどうか、 <xref:System.Windows.Forms.MenuStrip> またはのボックスに、 <xref:System.Windows.Forms.MenuStrip>, 、ユーザーが TAB キーを押したときに、コントロールがフォーカスを取得します。 一般に、 <xref:System.Windows.Forms.Control.GotFocus>, 、<xref:System.Windows.Forms.Control.LostFocus>, 、<xref:System.Windows.Forms.Control.Enter>, 、および <xref:System.Windows.Forms.Control.Leave> のイベント <xref:System.Windows.Forms.MenuStrip> キーボードによってアクティブ化されてときに発生しない可能性があります。 このような場合は、使用して、 <xref:System.Windows.Forms.MenuStrip.MenuActivate> と <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> イベント代わりにします。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MenuStrip.MenuActivate> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MenuStrip> という `MenuStrip1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MenuStrip.MenuActivate> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#489](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#489)]
 [!code-vb[System.Windows.Forms.EventExamples\#489](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#489)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuDeactivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuDeactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuDeactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuDeactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.MenuStrip" /> が非アクティブ化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ALT キーをアクティブになったとき、 <xref:System.Windows.Forms.MenuStrip> または <xref:System.Windows.Forms.ToolStrip> をどちらも通常も、現在フォーカスがコントロールからフォーカスを削除します。 内でホストされるコントロールがあるかどうか、 <xref:System.Windows.Forms.MenuStrip> またはのボックスに、 <xref:System.Windows.Forms.MenuStrip>, 、ユーザーが TAB キーを押したときに、コントロールがフォーカスを取得します。 一般に、 <xref:System.Windows.Forms.Control.GotFocus>, 、<xref:System.Windows.Forms.Control.LostFocus>, 、<xref:System.Windows.Forms.Control.Enter>, 、および <xref:System.Windows.Forms.Control.Leave> のイベント <xref:System.Windows.Forms.MenuStrip> キーボードによってアクティブ化されてときに発生しない可能性があります。 このような場合は、使用して、 <xref:System.Windows.Forms.MenuStrip.MenuActivate> と <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> イベント代わりにします。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MenuStrip> という `MenuStrip1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#490](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#490)]
 [!code-vb[System.Windows.Forms.EventExamples\#490](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#490)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMenuActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.MenuStrip.MenuActivate" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MenuStrip.OnMenuActivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.MenuStrip.MenuDeactivate" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MenuStrip.OnMenuDeactivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <summary>コマンド キーを処理します。</summary>
        <returns>文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the immediate caller to call unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のツールヒントを表示するかどうかを示す値、 <see cref="T:System.Windows.Forms.MenuStrip" />です。</summary>
        <value>
          <see langword="true" /> ツールヒントを表示する場合、 <see cref="T:System.Windows.Forms.MenuStrip" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MenuStrip.ShowItemToolTips%2A?displayProperty=fullName> プロパティを返します。 `false` 既定では通常、ツールヒントは、メニューやメニュー項目に使用されていないためです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public bool Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Forms.MenuStrip" /> コンテナーの端から端まで拡大します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.MenuStrip" /> エンド ツー エンドをコンテナーの端まで拡大それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.WndProc(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>Windows メッセージを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてのメッセージ、 <xref:System.Windows.Forms.Control.WndProc%2A> をフィルターで選択を取得した後に、 <xref:System.Windows.Forms.Control.PreProcessMessage%2A> メソッドです。  
  
 <xref:System.Windows.Forms.Control.WndProc%2A> メソッドは、Windows `WindowProc` 関数に正確に対応しています。 Windows メッセージの処理の詳細については、次を参照してください。、 `WindowProc` 関数のドキュメントを Windows プラットフォーム SDK リファレンスが http:\/\/msdn.microsoft.com\/library を MSDN ライブラリに格納します。  
  
   
  
## 例  
 次のコード例では、オーバーライドを示しています、 <xref:System.Windows.Forms.Control.WndProc%2A> で識別されるオペレーティング システムのメッセージを処理するメソッドを <xref:System.Windows.Forms.Message> 構造体。 別のアプリケーションがアクティブになる時期を知るには、この例では、WM\_ACTIVATEAPP オペレーティング システムのメッセージが処理されます。 理解、使用可能な http:\/\/msdn.microsoft.com\/library で MSDN library 内にあるプラットフォーム SDK ドキュメントのリファレンスを参照してください <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>, 、<xref:System.Windows.Forms.Message.LParam%2A?displayProperty=fullName>, 、および <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=fullName> 値。 実際の定数値はでもある MSDN で利用できるプラットフォーム SDK \(Core SDK セクション\) のダウンロードに含まれる windows.h ヘッダー ファイルに記載されています。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the immediate caller to call unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>