<Type Name="MaskedTextBox" FullName="System.Windows.Forms.MaskedTextBox">
  <TypeSignature Language="C#" Value="public class MaskedTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MaskedTextBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MaskInputRejected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Mask")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー入力が適切か不適切かを区別するマスクを使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> クラスは、強化された <xref:System.Windows.Forms.TextBox> を受け入れるか、またはユーザーの入力を拒否するための宣言の構文をサポートするコントロール。 使用して、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティには、次のアプリケーションで、カスタム検証ロジックを記述することがなく入力を指定することができます。  
  
-   入力文字が必要です。  
  
-   省略可能な入力文字です。  
  
-   マスク内の指定位置に必要な入力の型たとえば、数字、または、アルファベット順または英数字文字です。  
  
-   マスク リテラル文字で直接表示する必要がありますが、 <xref:System.Windows.Forms.MaskedTextBox>; たとえば、電話番号、または価格の通貨記号でハイフン \(\-\)。  
  
-   入力文字の特殊な処理たとえば、アルファベットの文字を大文字に変換するには、です。  
  
 ときに、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが実行時に表示される、一連のプロンプト文字と省略可能なリテラル文字として、マスクを表します。 必須またはオプションの入力を表す各編集可能なマスク位置には、単一のプロンプト文字が表示されます。 たとえば、文字の数字の入力に対してシャープ記号 \(\#\) がよくプレース ホルダーとして使用されます。 使用することができます、 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> プロパティをカスタム プロンプト文字を指定します。<xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> プロパティは、コントロールを失ったときに入力フォーカスがユーザーにプロンプト文字が表示される場合を決定します。  
  
 ユーザーの種類の入力マスクされたテキスト ボックスに、有効な入力文字は連続してそれぞれのプロンプト文字を置き換えます。 置換は発生しませんが、場合に、ビープ音を発行する代わりに、ユーザーが無効な入力文字を入力した場合、 <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> にプロパティが設定されている `true`, 、および <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。 このイベントを処理して、独自のカスタム エラー ロジックを提供できます。  
  
 現在のカーソルがリテラル文字と、ユーザーはいくつかのオプションがあります。  
  
-   プロンプト文字以外の文字が型指定された、リテラルは自動的にスキップされます、入力文字は、次の編集可能な位置に適用される、によって表されます次のプロンプト文字です。  
  
-   プロンプト文字が入力した場合は、 <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> プロパティが true の場合、プロンプト文字と挿入の入力が上書きされますポイントは、マスク内の次の位置に移動されます。  
  
-   同様に、常に、前後の位置に移動する方向キーを使用できます。  
  
 使用することができます、 <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティをユーザーがすべての必要な入力を入力するかどうかどうかを確認します。<xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティは常にマスクに従って書式設定されたユーザーの入力を取得し、 <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティです。  
  
 <xref:System.Windows.Forms.MaskedTextBox> コントロールが実際にすべてのマスク処理を延期、 <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> で指定されたクラス、 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティです。 この標準のプロバイダーは、サロゲートを除くすべての Unicode 文字をサポートし、垂直方向の文字の組み合わせただし、 <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> 、文字セット a ~ z、A ~ Z および 0 ~ 9 への入力を制限するプロパティを使用できます。  
  
 マスクでは必ずしも保証されません、ユーザーの入力が指定された型の有効な値を表すことたとえば、年齢の\-9 を入力する可能性があります。 ユーザーの入力にその値の型のインスタンスを割り当てることで有効な値を表すことを確認することができます、 <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティです。 ユーザーがからフォーカスを削除するかどうかを検出する <xref:System.Windows.Forms.MaskedTextBox> 監視することにより、無効な値がある場合、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントです。 値を表すオブジェクトがを通じて利用する型の検証が成功した場合、 <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> のプロパティ、 <xref:System.Windows.Forms.TypeValidationEventArgs> パラメーター。  
  
 場合と同様、 <xref:System.Windows.Forms.TextBox> コントロールでいくつかの一般的なキーボード ショートカットは機能しません <xref:System.Windows.Forms.MaskedTextBox>します。 具体的には、ctrl キーを R で \(右揃えテキスト\)、ctrl キーを押し、\-l \(左揃えテキスト\)、ctrl キーを押し、\-l \(テキストを中央揃え\) には影響はありません。  
  
## Visual Basic 6.0 との互換性  
 <xref:System.Windows.Forms.MaskedTextBox> マスク エディット コントロールの機能のほとんどを保持するように設計された [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 6.0。 次の表は、マスク エディット コントロールに共通のプロパティの一覧し、それに対応するは、 <xref:System.Windows.Forms.MaskedTextBox>です。  
  
|マスク エディット コントロール \([!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 6.0\) プロパティ|同等の MaskedTextBox \([!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]\) プロパティ|  
|-------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|  
|`AllowPrompt` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|  
|`AutoTab` プロパティ|なし|  
|`ClipMode` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|  
|`ClipText` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> \(と <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> に設定されている <xref:System.Windows.Forms.MaskFormat.ExcludePromptAndLiterals>\)|  
|`Format` プロパティ|なし|  
|`FormattedText` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> \(と <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> に設定されている <xref:System.Windows.Forms.MaskFormat.IncludePromptAndLiterals>\)|  
|`Mask` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|  
|`PromptChar` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|  
|`PromptInclude` プロパティ|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|  
|`ValidationError` イベント|<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成または元に戻す機能をサポートしていません。 ただし、これらの機能に関連付けられているメンバーの中に保持されている互換性のため、 <xref:System.Windows.Forms.TextBoxBase> 基本クラスを実装を使用しないため、操作を実行します。  
  
   
  
## 例  
 次のコード例の初期化、 <xref:System.Windows.Forms.MaskedTextBox> 日付、および使用方法を受け入れるように、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> と <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> 無効な入力をユーザーに警告するイベントです。  
  
 [!code-csharp[MaskInputRejectedSample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
    <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの既定値を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値 <xref:System.Windows.Forms.MaskedTextBox.%23ctor> コンス トラクターのセット、 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティを文字列"\<\>"で表される、null のマスク。 Null のマスクでは、入力として文字の組み合わせを許可します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (System.ComponentModel.MaskedTextProvider maskedTextProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MaskedTextProvider maskedTextProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maskedTextProvider" Type="System.ComponentModel.MaskedTextProvider" />
      </Parameters>
      <Docs>
        <param name="maskedTextProvider">派生したカスタム マスク言語プロバイダー、 <see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの指定したカスタム マスク言語プロバイダーを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `maskedTextProvider` パラメーター定義で使用されるマスク言語 <xref:System.Windows.Forms.MaskedTextBox>です。 マスクを解析およびユーザー入力をマスクの現在の位置に準拠しているかどうかを決定するために行います。 新しいクラスを派生できます <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> カスタム マスク言語を定義して使用する、 <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> コンス トラクター、標準の交換を <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName>します。  
  
 既定の言語のマスクを使用して、独自の入力マスクを指定する場合は、このコンス トラクターを使用する必要はありません。 代わりに、使用するか、 <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> コンス トラクター、または既定のコンス トラクターは、設定を使用して、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="maskedTextProvider" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">A <see cref="T:System.String" /> 入力マスクを表します。 初期値、 <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> プロパティです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの指定した入力マスクを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> コンス トラクターは、標準を使用して <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> 、入力 `mask` へのユーザー入力を解析する、 <xref:System.Windows.Forms.MaskedTextBox>です。  
  
 新しいマスクを割り当てる場合、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティには、ファイル、このコンス トラクターによって設定された値は上書きされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mask" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行の構成に対して Tab キーがどのように処理されるかを決定する値を取得または設定します。 このプロパティでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> プロパティは、ベース <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このプロパティはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" /> プロパティの値が変更されたときに発生します。 このイベントは発生しません <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged> ベースからイベントを継承 <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このイベントはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> 、ユーザーが有効なデータとして入力することができます。</summary>
        <value>
          <see langword="true" /> プロンプト文字は、コントロールに入力できる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 いなくて <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> は `true`, 、プロンプト文字は使用するために、マスク内の現在の場所に対して有効である必要があります。 たとえば場合、 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> は"\*"、マスク内の現在の場所が、ユーザーの数字、アスタリスク \(\*\) は失敗を入力して原因入力を要求し、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> プロパティよりも優先 <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールには、ASCII 文字セット以外の文字が使用できます。</summary>
        <value>
          <see langword="true" /> ASCII が受け入れられるだけの場合 <see langword="false" /> 場合、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールは、任意の Unicode 文字を受け入れることができます。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `true`, 、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> 文字 a ~ z と A ~ Z にユーザー入力を制限します。 ASCII 制御文字は使用できません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      </Docs>
    </Member>
    <Member MemberName="BeepOnError">
      <MemberSignature Language="C#" Value="public bool BeepOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BeepOnError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックス コントロールが、拒否したユーザー キー ストロークごとにビープ音を出すかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールする必要がありますが無効です \[ビープ音が鳴る入力以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> する場合、イベントが引き続き発生する、 <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> にプロパティが設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが前の操作を元に戻すことができるかどうかを示す値を取得または設定します。 このプロパティでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.CanUndo%2A> プロパティは、ベース <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、ため <xref:System.Windows.Forms.MaskedTextBox> サポート元に戻す機能、このプロパティは常にしないもの値を持つ `false`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスのアンドゥ バッファーから直前に実行された操作に関する情報を削除します。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.ClearUndo%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、 <xref:System.Windows.Forms.MaskedTextBox> 元に戻す機能をサポートしていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.CreateHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのハンドルを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</summary>
        <value>コントロールの作成時に必要な情報を表す <see cref="T:System.Windows.Forms.CreateParams" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックスに関連するカルチャ情報を取得または設定します。</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> でサポートされているカルチャを表す、 <see cref="T:System.Windows.Forms.MaskedTextBox" />です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Windows.Forms.MaskedTextBox.Culture" /> 設定されている <see langword="null" />します。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="CutCopyMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat CutCopyMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat CutCopyMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リテラルおよびプロンプト文字がクリップボードにコピーされるかどうかを決定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.MaskFormat" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> プロパティを決定内で、テキストの選択、 <xref:System.Windows.Forms.MaskedTextBox> コントロールをクリップボードにコピーまたはを使用して取得されると解釈されますが、 <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> プロパティです。 具体的には、かどうかリテラル文字、プロンプト文字、またはその両方が含まれる選択したテキストにアクセスする場合を判断します。 プロンプト文字を除外すると、コピーされた文字列に含まれるスペースに変換されます。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティに関してどのような目的で使用 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティを解釈します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティを設定、 <see cref="T:System.Windows.Forms.MaskFormat" /> 値が無効です。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.IFormatProvider" /> 型の検証を実行するときに使用します。</summary>
        <value>
          <see cref="T:System.IFormatProvider" /> インターフェイスを実装するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> 型の検証が発生して、コントロールが null 以外に、通貨、日付、およびその他のカルチャに固有のマスク プレース ホルダーの使用される記号決定 <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public override char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">一番近くにある文字をシークする位置。</param>
        <summary>コントロール内の指定した位置の一番近くにある文字を取得します。</summary>
        <returns>指定した位置にある文字。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">検索する位置。</param>
        <summary>指定位置に最も近い文字のインデックスを取得します。</summary>
        <returns>指定した位置の 0 から始まる文字インデックス。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">このパラメーターは使用されません。</param>
        <summary>指定された行の先頭文字のインデックスを取得します。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <returns>このメソッドは、常に 0 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このメソッドはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の行の先頭文字のインデックスを取得します。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <returns>このメソッドは、常に 0 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このメソッドはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">このパラメーターは使用されません。</param>
        <summary>コントロールのテキスト内で、指定の文字位置からの行数を取得します。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <returns>このメソッドは、常に 0 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このメソッドはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">位置の取得対象とする文字のインデックス。</param>
        <summary>指定の文字インデックスにおけるコントロール内の位置を取得します。</summary>
        <returns>コントロールのクライアントの四角形領域内における、指定した文字の位置。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HidePromptOnLeave">
      <MemberSignature Language="C#" Value="public bool HidePromptOnLeave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePromptOnLeave" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックスがフォーカスを失ったときに、入力マスクのプロンプト文字を非表示にするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 場合 <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> と非表示には、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> にフォーカスがない。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="InsertKeyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InsertKeyMode InsertKeyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.InsertKeyMode InsertKeyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InsertKeyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックス コントロールのテキスト挿入モードを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.InsertKeyMode" /> を現在の挿入モードを示す値。 既定値は、<see cref="F:System.Windows.Forms.InsertKeyMode.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティの文字のカーソル動作を制御、 <xref:System.Windows.Forms.MaskedTextBox> コントロールです。 このプロパティの状態は、 <xref:System.Windows.Forms.InsertKeyMode> になる可能性が常に、列挙型は常に off またはユーザーのキーボードの設定を尊重する設定。 このプロパティには、キーボードの挿入モードよりも優先されます。 キーボードの設定を上書きする場合などが、 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> に設定されている `Insert`, 、 <xref:System.Windows.Forms.MaskedTextBox> は挿入モードで動作します。<xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティにアクセスの場合は true。 挿入モード、 <xref:System.Windows.Forms.MaskedTextBox>です。  
  
 変更する場合 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> の値が変更 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, 、<xref:System.Windows.Forms.MaskedTextBox> を発生させる、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントです。  
  
 マスクが設定されていない場合は、このプロパティを指定しても効果はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">無効な <see cref="T:System.Windows.Forms.InsertKeyMode" /> 値は、このプロパティの設定時に指定されました。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <see cref="T:System.Windows.Forms.Keys" /> 値のいずれか 1 つ。</param>
        <summary>指定されているキーが、入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteMode">
      <MemberSignature Language="C#" Value="public bool IsOverwriteMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverwriteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいユーザー入力が既存の入力を上書きするかどうかを指定する値を取得します。</summary>
        <value>
          <see langword="true" /> 場合 <see cref="T:System.Windows.Forms.MaskedTextBox" /> 新しいものを入力すると、既存の文字が上書きされます <see langword="false" /> 場合 <see cref="T:System.Windows.Forms.MaskedTextBox" /> は既存の文字を前方にシフトします。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> 両方の値を考慮します <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティと、ユーザーのキーボードの状態。 場合 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> に設定されている <xref:System.Windows.Forms.InsertKeyMode.Insert> または <xref:System.Windows.Forms.InsertKeyMode.Overwrite>, 、<xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> 戻ります `false` または `true`, 、それぞれします。 場合 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> に設定されている <xref:System.Windows.Forms.InsertKeyMode.Default>, 、INS キーの状態が返されます。  
  
 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> は `false`, 、<xref:System.Windows.Forms.MaskedTextBox> マスクの任意の場所の違反になる文字のエントリが無効として拒否されます。 詳細については、\[文字の挿入となる文字を経由することではない有効ですが、マスクの位置に移動する場合、文字の挿入は拒否されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler IsOverwriteModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler IsOverwriteModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入モードが変更された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> の値の後にイベントは、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティを変更します。  
  
 このイベントが正常にデータをバインドするために必要な <xref:System.Windows.Forms.MaskedTextBox> コントロールです。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MaskedTextBox> という `MaskedTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#484](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#484)]
 [!code-vb[System.Windows.Forms.EventExamples\#484](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#484)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行の構成のテキスト行を取得または設定します。 このプロパティでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>型の配列 <see cref="T:System.String" /> 1 行を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.Lines%2A> プロパティは、ベース <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このプロパティはサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskPropertyEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または実行時に使用する入力マスクを設定します。</summary>
        <value>A <see cref="T:System.String" /> 現在のマスクを表します。 既定値は、任意の入力を許可する空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> 既定のプロパティには、 <xref:System.Windows.Forms.MaskedTextBox> クラスです。  
  
 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> 文字列で構成するマスク要素の 1 つ以上の次の表に示すようにします。 によって使用されるマスク言語 <xref:System.Windows.Forms.MaskedTextBox> が定義されている、それに関連する <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>です。 標準のプロバイダーがマスク エディット コントロールで使用される 1 つに基づくマスク言語を指定 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 6.0 では、そのプラットフォームから移行するユーザーにとって非常に理解しておく必要があるとします。  
  
|マスク要素|説明|  
|-----------|--------|  
|0|必要なの数字です。 この要素は、1 桁の数字 0 ~ 9 の範囲を受け入れます。|  
|9|数字または空白、省略可能。|  
|\#|数字または空白、省略可能。 この位置がマスクの空白の場合で領域として表示されます、 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティです。 プラス記号 \(\+\)、マイナス記号 \(\-\) 記号を許可します。|  
|L|この文字では、不要です。 ASCII 文字 a ~ z と A ~ Z への入力を制限します。 このマスク要素は \[\- A\-ZA\-Z\] と同じ正規表現でします。|  
|?|省略可能な文字。 ASCII 文字 a ~ z と A ~ Z への入力を制限します。 このマスク要素は、\[\- A\-ZA\-Z\] と同じですか。 正規表現内。|  
|&|文字は必須です。 場合、 <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> プロパティが true の場合、この要素は、"L"要素のように動作します。|  
|C|省略可能な文字です。 任意のコントロールではない文字です。 場合、 <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> にプロパティが設定されている `true`, 、この要素は、同じように動作、"?"要素。|  
|A|英数字、必須します。 場合、 <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> にプロパティが設定されている `true`, 、文字のみを受け付けることが、ASCII 文字 a ~ z と A ~ Z。 このマスク要素は、"a"要素と同様に動作します。|  
|a|英数字 \(省略可能\)。 場合、 <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> にプロパティが設定されている `true`, 、文字のみを受け付けることが、ASCII 文字 a ~ z と A ~ Z。 このマスク要素は、"A"要素と同様に動作します。|  
|」を参照してください。|小数点のプレース ホルダーです。 コントロールのによって決定される、使用する実際の表示の文字は、書式プロバイダーに適切な小数点の記号を含めるは <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。|  
|、|何千ものプレース ホルダーです。 使用する実際の表示の文字は、数千ものを含めるはプレース ホルダー コントロールのによって決定される書式プロバイダーに適した <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。|  
|:|時刻の区切り記号。 コントロールのによって決定される、使用する実際の表示の文字は、書式プロバイダーに適した time 記号を含めるは <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。|  
|\/|日付の区切り記号。 コントロールのによって決定される、使用する実際の表示の文字が書式プロバイダーに適切な日付のシンボルを含めるは <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。|  
|$|通貨記号。 コントロールのによって決定される、表示されている実際の文字は、書式プロバイダーに適切な通貨記号になります <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。|  
|\<|下方向にシフトします。 小文字に変換後に続くすべての文字に変換します。|  
|\>|上にシフトします。 大文字に続くすべての文字に変換します。|  
|&#124;|以前の shift キーを無効にするか、または下方向にシフトします。|  
|\\|エスケープします。 リテラルに変えるマスク文字をエスケープします。 「\\\\」は、円記号のエスケープ シーケンスです。|  
|上記以外のすべての文字|リテラルです。 内でとしてマスク以外のすべての要素が表示されます <xref:System.Windows.Forms.MaskedTextBox>します。 リテラル常に、実行時に、マスクの静的な位置を占めるありことはできません、移動や、ユーザーによって削除されました。|  
  
 マスクを変更する場合と <xref:System.Windows.Forms.MaskedTextBox> 以前のマスクでフィルター処理されたユーザーの入力が既に含まれています <xref:System.Windows.Forms.MaskedTextBox> 新しいマスク定義には、その入力を移行しようとします。 失敗した場合は、既存の入力がクリアされます。 マスクとして長さ 0 の文字列を割り当てると、コントロールの既存のデータが保持されます。 長さ 0 のマスクを使用すると <xref:System.Windows.Forms.MaskedTextBox> 単一行のように動作 <xref:System.Windows.Forms.TextBox> コントロールです。  
  
 小数点 \(.\)、桁区切り \(,\)、時間 \(:\)、日付 \(\/\)、および通貨 \($\) 記号は、アプリケーションのカルチャで定義された記号で表示する既定です。 別のカルチャのシンボルを使用して、表示を強制することができます、 <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> プロパティです。  
  
 によって実行時にマスクに文字の挿入を制御、 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> プロパティです。 ユーザーは、左と右方向キーまたはマウス カーソルを使用して、マスク内を移動できるし、スペースを入力して、マスク内の任意の位置を省略できます。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.MaskedTextBox> 垂直方向に組み合わせ文字のサロゲートを除くすべての Unicode 文字をサポートします。  
  
 次の表は、マスクの例を示します。  
  
|マスク|動作|  
|---------|--------|  
|`00/00/0000`|国際対応の日付形式の日付 \(日、数値の月、年\)。 スラッシュ \(\/\) では、論理上の日付の区切り記号は、され、アプリケーションの現在のカルチャに適切な日付の区切り記号としてユーザーに表示されます。|  
|`00->L<LL-0000`|初期文字を大文字小文字の 2 つ続けて 3 桁の月の省略形が表示される米国形式の日付 \(日、月の省略名、および年\)。|  
|`(999)-000-0000`|アメリカ合衆国の電話番号、市外局番の省略可能です。 ユーザーが省略可能な文字を入力しない場合、入力するスペースか最初の 0 で表されるマスク内の位置に直接マウス ポインターを置きます。|  
|`$999,999.00`|0 ~ 999999 の範囲の通貨値。 通貨、区切り記号、および 10 進数の文字は置き換えられます実行時に、対応するカルチャに固有です。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された文字列、 <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> プロパティは有効なマスクではありません。 無効なマスクには、印刷できない文字を含むマスクが含まれます。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaskChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaskChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力マスクが変更された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> の値の後にイベントは、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティを変更します。 場合にも、このイベントが発生、 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> は直接変更していないメンバーがなど <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, 、および <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>です。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MaskedTextBox> という `MaskedTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#485](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#485)]
 [!code-vb[System.Windows.Forms.EventExamples\#485](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#485)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必須の入力がすべて入力マスクに入力されたかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 必要なすべての入力がマスクに入力されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> 必須の入力要素のみを確認します。 必須およびオプションの入力要素をすべてが入力されているかどうかを確認するのには、使用、 <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティ代わりにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="MaskedTextProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.MaskedTextProvider MaskedTextProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.MaskedTextProvider MaskedTextProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.MaskedTextProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックス コントロールのインスタンスに関連付けられたマスク プロバイダーの複製を取得します。</summary>
        <value>マスク言語プロバイダーの種類の <see cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティ マスク解析エンジンおよびによって使用されるマスク言語を定義、 <xref:System.Windows.Forms.MaskedTextBox> コントロールです。 既定のプロバイダーは、 <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> クラス。 を使用して、カスタム プロバイダーを指定できますが、、 <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> コンス トラクターです。  
  
 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> 直接設定することはできません。 ただし、一部のプロパティを設定 <xref:System.Windows.Forms.MaskedTextBox>— など <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, 、および <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>\-新しいの作成が内部的にあります <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべての必須およびオプションの入力が入力マスクに入力されたかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> すべての必須および省略可能な入力を入力されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> プロパティ内で、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> マスク内の残りの入力がないために、ユーザーの入力になっているかどうかを判断するイベント ハンドラーは拒否されました。 必須の入力要素のみが入力されているかどうかを確認するのには、使用、 <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> プロパティです。  
  
   
  
## 例  
 次のコード例、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベント、および使用して、 <xref:System.Windows.Forms.ToolTip> マスク内の位置が使用されているすべてのデータを入力しようとしましたが、ユーザー、アラートを生成します。  
  
 [!code-csharp[MaskInputRejectedSample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="MaskInputRejected">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskInputRejectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの入力または割り当てられた文字が、入力マスクの対応する書式要素と一致しない場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> 既定のイベントは、 <xref:System.Windows.Forms.MaskedTextBox> クラスです。  
  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベント文字が定型入力によって拒否されたときに発生します。 によって表される定型入力、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティが使用してコントロールに関連付けられたマスクされたテキスト プロバイダーで解釈される、 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> プロパティです。<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> 次のような状況で発生します。  
  
-   入力文字は、対応する書式要素には一致しません。 など、ユーザーは、1 桁の数字が必要な場合、英文字を入力します。 このイベントが発生した理由最も一般的な原因として考えられます。  
  
-   マスクの末尾の次の余分な文字を入力する、ユーザーがしようとした、マスクは既に入力されたまたは現在のキャレット位置が表示されている入力マスク文字列の末尾に移動されたためです。  
  
-   貼り付け操作が、関連する書式要素と一致しない文字を挿入するか場合や、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティは、 `false`, 、既存の文字を移動するときに、要素の書式設定が一致しない新しい位置に移されます。  
  
-   切り取り操作が既存の文字を左にシフトし、1 つまたは複数の文字では、新たに関連付けられている形式の要素が一致しません。  
  
-   割り当てが行われた、 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> 1 つまたは複数のマスク違反の原因となったプロパティと割り当てられている文字列。  
  
 文字列が原因となるコントロールに割り当てられたかどうか <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> が発生する、文字列の一部は表示されません <xref:System.Windows.Forms.MaskedTextBox>します。  
  
 対処するための既定 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> ビープ音の場合にサウンドを再生、 <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> にプロパティが設定されている `true`します。 たとえば、カスタム エラー処理を実装する、マスクがいっぱいの場合、次のユーザー入力コントロールに移動する、または、入力文字が有効でない場合は、カスタム エラー\] ダイアログ ボックスまたはツールヒントを表示する、このイベントは処理多くの場合。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MaskedTextBox> という `MaskedTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#486](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#486)]
 [!code-vb[System.Windows.Forms.EventExamples\#486](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#486)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがテキスト ボックス コントロールに入力または貼り付けできる最大文字数を取得または設定します。 このプロパティでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>このプロパティは常に 0 を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 参照してください、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> プロパティおよび <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> プロパティに、 <xref:System.Windows.Forms.MaskInputRejectedEventArgs> クラス内の文字列の最大の長さを決定する方法については、 <xref:System.Windows.Forms.MaskedTextBox>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskInputRejectedEventArgs.Position" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールが複数行テキスト ボックス コントロールかどうかを示す値を取得または設定します。 このプロパティが完全にサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>このプロパティは常に <see langword="false" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> プロパティは、ベース <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このプロパティが完全にサポートされていません; に設定することはできずに常に解決される `false`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>通常、発生時の値、 <see cref="P:System.Windows.Forms.MaskedTextBox.Multiline" /> プロパティが変更された。 ただし、このイベントは発生しません <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.MultilineChanged> ベースからイベントを継承 <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールでは、複数行の構成はサポートされていませんにこのイベントは実装されません <xref:System.Windows.Forms.MaskedTextBox>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="P:System.Windows.Forms.Control.BackColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsOverwriteModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsOverwriteModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMaskChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaskChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaskChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MaskedTextBox.OnMaskChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected override void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>通常を発生させる、 <see cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" /> イベントでなく、使用不可能になった <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.OnMultilineChanged%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このメソッドをオーバーライドして、操作を実行しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MaskedTextBox.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> メソッドにより、入力文字列に対して検証される、 <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティには場合、 <xref:System.Type> このプロパティが指定されています。 発生し、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントです。  
  
> [!NOTE]
>  テキスト ベースのコントロールとの一貫性を確実には、検証が行われる場合でも、 <xref:System.Windows.Forms.MaskedTextBox> は読み取り専用 \(その <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> にプロパティが設定されている `true`\)。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">入力文字列の解析中に重大な例外が発生しました。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー入力の代わりに表示される文字を取得または設定します。</summary>
        <value>
          <see cref="T:System.Char" /> パスワード文字として使用される値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 重要なユーザー入力は、実際に、ユーザーが入力した情報を隠すをとったを勧めします。 場合、 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティを null 以外の文字、 <xref:System.Windows.Forms.MaskedTextBox> のすべての入力コントロールには、この文字が表示されます。 このプロパティを設定 `null` この機能を無効になります。  
  
 COMCTL32.dll の使用で定義されているオペレーティング システムが指定したパスワードの文字を使用する場合、 <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティ代わりにします。 どちらの場合、 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> と <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティがアクティブ化、後者が優先されます。  
  
> [!IMPORTANT]
>  セキュリティの考慮事項として、 <xref:System.Windows.Forms.MaskedTextBox> コントロールには、パスワードで保護された文字列で、切り取りとコピー操作が無効になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された文字のときにこのプロパティの設定は有効なパスワードの文字によって決定される、 <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> のメソッド、 <see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスです。</exception>
        <exception cref="T:System.InvalidOperationException">指定したパスワードの文字は、現在のプロンプト文字と同じ <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />します。 2 つは、異なる必要があります。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <param name="keyData">処理するショートカット キーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <summary>コマンド キーを処理します。</summary>
        <returns>コマンド キーがコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">A <see cref="T:System.Windows.Forms.Message" />, を処理するウィンドウ メッセージを表す、参照によって渡されます。</param>
        <summary>このメソッドの基本実装をオーバーライドして、入力言語の変更を処理します。</summary>
        <returns>メッセージがコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> その基本コントロールの実装をオーバーライドして <xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> 正しくイベントを処理する文字、ユーザーが文字を入力するときに入力方式エディター \(IME\) などを使用して日本語、中国語、およびその他の複雑なラテン語以外のスクリプトを入力するためです。<xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> WM\_IME\_CHAR メッセージを受信し、これらの文字がコントロールに表示するを防ぐためにそれらを表示しないように後に発生したすべての WM\_CHAR メッセージを検出します。 このコントロールから派生し、このメッセージをオーバーライドすると場合、Ime を使用する新しいコントロールを希望する場合、この動作が複製する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('_')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定がない場合にユーザー入力を表すために使用する文字 <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>ユーザーに入力を要求するために使用される文字。 既定値はアンダースコア \(\_\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> 表示される <xref:System.Windows.Forms.MaskedTextBox> で、ユーザーがまだ入力いない任意のマスク位置にします。  
  
 使用して、 <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> プロパティをプロンプトが表示されているかどうかを指定するときに <xref:System.Windows.Forms.MaskedTextBox> にフォーカスがないです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された文字が場合にこのプロパティの設定によって決定される、有効なプロンプト文字、 <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> のメソッド、 <see cref="T:System.ComponentModel.MaskedTextProvider" /> クラスです。</exception>
        <exception cref="T:System.InvalidOperationException">指定されたプロンプト文字は、現在のパスワードの文字と同じ <see cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />します。 2 つは、異なる必要があります。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテキスト ボックスにテキストが読み取り専用かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> テキストを示すためには読み取り専用です。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectInputOnFirstFailure">
      <MemberSignature Language="C#" Value="public bool RejectInputOnFirstFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RejectInputOnFirstFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最初の無効な文字に到達した後、ユーザー入力の解析を停止するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 入力文字列を最初の解析エラーで終了する場合の処理それ以外の場合、 <see langword="false" /> 処理は、すべてのエラーを無視する場合。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーにいくつかの文字を入力することがあります、 <xref:System.Windows.Forms.MaskedTextBox> をコピーして、文字列を貼り付けることにより通常、1 つの入力操作にします。 文字列全体にのみ、入力マスクの貼り付けの位置に基づいて、有効な文字が含まれている場合は、すべての操作は成功します。 ただし、解析時にエラーが発生する動作の <xref:System.Windows.Forms.MaskedTextBox> の値に依存 <xref:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure%2A>, 、次のようにします。  
  
-   このプロパティは、する場合 `true`, 、無効な文字で停止し、入力文字列の処理です。 後続のすべての文字は無視されます。 単一の <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントが発生します。  
  
-   このプロパティは、する場合 `false`, し、無効な文字が拒否される、解析は、入力文字列内の次の文字を続行します。 A <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> 、入力文字列内のすべての無効な文字に対してイベントが発生します。  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> と <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> プロパティは、ユーザーの入力の解釈も影響します。  
  
 場合、 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> プロパティは、 `false`, 、カーソルの右側に、入力マスク内の文字は、許容される文字数によって転置され、します。 このシフトと、追加の解析エラーが発生する可能性があります。  
  
 貼り付け操作を設定してプログラムを使用してまねることができます、 <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロンプト文字と一致する入力文字を処理する方法を決定する値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 入力されたプロンプト文字をリセットするには、マスク内の現在の編集可能な位置が発生した場合それ以外の場合、 <see langword="false" /> プロンプト文字を通常の入力文字として処理することが示されます。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> 2 つの種類の文字を扱うことができます: スペースおよびプロンプト文字、特別にします。 各入力文字がテストして、マスクに対して通常は、承諾または拒否します。 仮定すると、 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> プロパティを設定するとへ`null`, 、設定、 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> プロパティを `true` プロンプト文字の特殊な処理が発生します。 マスクにプロンプト文字を入力すると、現在のマスク文字位置をクリアして次の編集可能な文字を進めるには、現在の位置が行われます。  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> も優先、 <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> プロパティ、次の表に示すようにします。  
  
|ResetOnPrompt 値|AllowPromptAsInput 値|結果の動作|  
|---------------------|--------------------------|-----------|  
|`true`|`true`|プロンプト文字を入力してをリセットするのには、現在のマスク位置になります。 既定値です。|  
|`true`|`false`|プロンプト文字を入力してをリセットするのには、現在のマスク位置になります。|  
|`false`|`true`|プロンプト文字は、標準の入力文字として処理されます。|  
|`false`|`false`|プロンプト文字が無効であるを発生させる、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントです。|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空白の入力文字の処理方法を決定する値を取得または設定します。</summary>
        <value>
          <see langword="true" /> リセットするマスク内の現在の編集可能な位置を空白の入力文字が発生した場合それ以外の場合、 <see langword="false" /> に通常の入力文字として処理されるためであることを示します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> 2 つの種類の文字を扱うことができます: スペースおよびプロンプト文字、特別にします。 各入力文字がテストして、マスクに対して通常は、承諾または拒否します。 設定、 <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> プロパティを `true` をクリアするのには、現在のマスク文字位置と次の編集可能な文字を進めるには、現在の位置になります。  
  
 文字入力の種類には、マスク エンジンについて、マスクの次の文字を前方に移動または現在位置にあるままになるし、一致する文字の待機でかどうかが決まります。 入力文字がスペースで、マスク内の現在の編集不可能な文字と一致しない場合、マスク エンジンは、マスク内の次の文字を前方スキップされます。 入力文字が、領域がない、マスク内の現在の編集不可能な文字と一致しない場合、マスク エンジンは現在のマスク位置のままし、に対して次の入力文字を照合するようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ScrollToCaret" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの内容を現在のキャレット位置までスクロールします。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.ScrollToCaret%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、あるため、 <xref:System.Windows.Forms.MaskedTextBox> コントロールが複数行の構成をサポートしていない、このメソッドをオーバーライドして、操作を実行しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、現在の選択、 <see cref="T:System.Windows.Forms.MaskedTextBox" /> コントロールです。</summary>
        <value>現在選択されているテキストとして、 <see cref="T:System.String" />です。 現在テキストが選択されていない場合、このプロパティは空の文字列に解決されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して取得の選択はコントロールの書式設定のプロパティに従ってなど書式設定 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> と <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>です。 貼り付け操作と同様の動作はこのプロパティを使用して設定の選択: 各文字は、マスクと照合され、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントは、無効な文字です。 場合 <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> は `true`, を設定するときに、許可されるリテラルおよびプロンプト文字 <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A>, 、マスクに違反している場合を除き、サイレント モードで削除される予定です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがリテラル値の再入力を許可されているかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> リテラルの; 再入力を許可するにはそれ以外の場合、 <see langword="false" /> 、ユーザーがリテラル文字を上書きしないようにします。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、入力マスクには、リテラルが含まれます。 文字を入力すると、 <xref:System.Windows.Forms.MaskedTextBox> 、実行時に、現在の文字位置は、リテラルの分類場合もありますされます。<xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> プロパティは、次の文字へのユーザー入力の次のように、処理する方法について説明します。  
  
-   このプロパティは、する場合 `true`, 、ユーザーが現在の位置でリテラルとして冗長的、同じ文字を入力してできますかまたはそれによって現在の位置をその位置にジャンプ次の編集可能な文字を入力できます。  
  
-   このプロパティは、する場合 `false`, 、次の編集可能な文字が入力できるのみです。 マスク内の次の位置は、リテラル文字を受け付けない場合 \(たとえば、ユーザー タイプ スラッシュ \(\/\) し、次の位置は、半角数字を使用\)、コントロールが発生、 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> イベントです。  
  
 たとえば、「90\/90\/0000」日付エントリ マスクでは、スラッシュ文字は、リテラルです。 ユーザーには、2 つの初期数字、「11」が入力したので、内の現在位置、マスクは、最初のスラッシュ \(\/\) リテラルであるとします。 場合 <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> は `true`, 、ユーザーには、次の有効な選択肢が含まれています。  
  
-   ユーザーは、スラッシュ \(\/\) を入力できます。 これは、結果、位置を次のような文字であるこの例では 4 番目の位置の要素をマスク 9 を移動します。  
  
-   ユーザーには、次の編集可能な文字であるこの例では、数字を入力できます。 数字が検証され、現在の位置は 0 マスク要素である 5 番目の位置に自動的に移動はできます。  
  
 場合 <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> は `false`, 、し、有効なデータ入力のみが許可されたを数字にするこの例では。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskedTextBoxTextEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーに現在表示されているテキストを設定します。</summary>
        <value>A <see cref="T:System.String" /> コントロールで現在表示されているテキストを格納します。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> 既定のバインディング プロパティ、 <xref:System.Windows.Forms.MaskedTextBox> クラスです。  
  
 このプロパティを使用して取得する文字列は、コントロールの書式設定のプロパティに従ってなど書式設定 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> と <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>です。  
  
 文字列にリテラル文字の有無を割り当てることができます <xref:System.Windows.Forms.MaskedTextBox.Text%2A> の値に応じて <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, 、<xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, 、および <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>です。  
  
 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> 既定のバインディング プロパティは、 <xref:System.Windows.Forms.MaskedTextBox>です。  
  
 <xref:System.Windows.Forms.MaskedTextBox> 発生させる、 <xref:System.Windows.Forms.Control.TextChanged> 書式設定されたテキスト値が変更されるたびにイベントです。 さまざまなプロパティは、変更するには、この値にならない可能性があります。 変更するなど、 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティを生成しませんが、 <xref:System.Windows.Forms.Control.TextChanged> イベントではなく、変更、 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> がのプロパティです。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティです。  
  
 [!code-vb[TestMaskedTextBox\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TestMaskedTextBox/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マスクされたテキスト ボックス コントロールでテキストを配置する方法を取得または設定します。</summary>
        <value>いずれか、 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 、コントロールに対する相対的なテキストを配置する方法を指定する列挙値。 既定値は、<see cref="F:System.Windows.Forms.HorizontalAlignment.Left" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> プロパティ内で表示されているテキストに合わせて、 <xref:System.Windows.Forms.MaskedTextBox> 、フォーム上の視覚要素のレイアウトと一致します。 たとえば、ある場合は、コントロールはすべて、フォームの右側にある、設定できます、 <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> プロパティを <xref:System.Windows.Forms.HorizontalAlignment.Right>, 、テキストは既定の左揃えの代わりに、コントロールの右側に配置するとします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティに割り当てられた値の種類ではありません <see cref="T:System.Windows.Forms.HorizontalAlignment" />します。</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの配置が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントが発生した後、 <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> プロパティを変更します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.MaskedTextBox> という `MaskedTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#487](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#487)]
 [!code-vb[System.Windows.Forms.EventExamples\#487](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#487)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されるテキストの長さを取得します。</summary>
        <value>Int32 型の文字数を表す、 <see cref="P:System.Windows.Forms.MaskedTextBox.Text" /> プロパティです。<see cref="P:System.Windows.Forms.MaskedTextBox.TextLength" /> などのプロパティを尊重 <see cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />, 、つまり、返される結果は、コントロールにフォーカスがあるかどうかに応じて異なる場合があります。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat TextMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat TextMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リテラルおよびプロンプト文字が、書式設定された文字列に含まれるかどうかを決定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.MaskFormat" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティは、マスクのリテラルおよびプロンプト文字を処理する方法を決定時に書式設定された文字列を生成します。 リテラル文字、プロンプト文字、またはその両方を含めるかどうか決定具体的には、 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティです。 プロンプト文字を除外すると、書式設定された文字列に含まれるスペースに変換されます。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> プロパティに関してどのような目的で使用 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティを解釈します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティを設定、 <see cref="T:System.Windows.Forms.MaskFormat" /> 値が無効です。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のマスクされたテキスト ボックスを表す文字列を返します。 このメソッドは <see cref="M:System.Windows.Forms.TextBoxBase.ToString" />です。</summary>
        <returns>A <see cref="T:System.String" /> 現在に関する情報を含む <see cref="T:System.Windows.Forms.MaskedTextBox" />します。 文字列には、型、入力文字列の簡素化されたビュー、および書式設定された入力文字列が含まれます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このバージョンの <xref:System.Windows.Forms.MaskedTextBox.ToString%2A> メソッドは、このメソッドの基本クラス実装を呼び出す <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName>, 、マスクによって、処理後に、入力文字列を追加します。 このメソッドは、次の例外を除き、書式設定された文字列の外観を変更するプロパティを受け入れます。  
  
-   返される文字列は、文字列の値に関係なく常に含まれています。、 <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティです。  
  
-   実際のユーザーに型指定された文字が返されるように、パスワードの文字は無視されます。 つまりの値、 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> と <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティは無視されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="TypeValidationCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TypeValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに <see cref="T:System.Windows.Forms.MaskedTextBox" /> を使用して現在の値の解析を完了した、 <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> コントロールがユーザーの入力によって定義された型を検証必要に応じてその <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName> プロパティです。 このプロパティがない `null`, 、次の一連のイベントが発生します。  
  
1.  検証シーケンスは、次のいずれかが発生を開始します。  
  
    -   <xref:System.Windows.Forms.MaskedTextBox> コントロールがフォーカスを失った。  
  
    -   <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティを取得します。  
  
    -   <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> メソッドが呼び出された場合。  
  
2.  これらのイベントのいずれかへの呼び出しで発生、 `Parse` で指定された型のメソッド、 <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> プロパティです。`Parse` ターゲット型に書式設定された入力文字列の変換を担当します。 正常な変換は、検証に成功したに相当します。  
  
3.  後に `Parse` が返される、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントが発生します。 このイベントのイベント ハンドラーは型またはマスクの検証処理を実行する最も広く導入されています。 受信、 <xref:System.Windows.Forms.TypeValidationEventArgs> 変換に関する情報を含むパラメーターなど、 <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> メンバーは、変換が成功したかどうかを示します。  
  
4.  イベント ハンドラーの後、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントが返される標準の検証イベント <xref:System.Windows.Forms.Control.Validating>, が発生します。 ハンドラーを実装すると、イベントのキャンセルなどの標準的な検証を実行できます。  
  
5.  標準的な検証イベントを制御手順 3. で、イベントがキャンセルされない場合 <xref:System.Windows.Forms.Control.Validated> が発生します。  
  
 場合、 <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> にプロパティが設定されている `true` で、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベント ハンドラー イベントが取り消されると、 <xref:System.Windows.Forms.MaskedTextBox> しない限り、コントロールにフォーカスが保持されますそれに続く <xref:System.Windows.Forms.Control.Validating> イベントのバージョンを設定する、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName> プロパティ `false`します。  
  
   
  
## 例  
 次のコード例は、有効なものとして、ユーザーの入力を解析しようと試みます <xref:System.DateTime> オブジェクトです。 失敗した場合、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベント ハンドラーでは、ユーザーにエラー メッセージが表示されます。 値が有効な場合 <xref:System.DateTime>, 、今日の日付より前に、指定された日付がありませんが、コードを確認します。 このコード例では、Windows フォーム プロジェクトが含まれている必要があります、 <xref:System.Windows.Forms.MaskedTextBox> という名前のコントロール `MaskedTextBox1` と <xref:System.Windows.Forms.ToolTip> という名前のコントロール `ToolTip1`します。  
  
 [!code-csharp[ValidatingTypeSample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="T:System.Windows.Forms.TypeValidationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.Undo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスで直前に実行された編集操作を元に戻します。 このメソッドでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.Undo%2A> ベースから継承されたメソッド <xref:System.Windows.Forms.TextBoxBase> クラスです。 ただし、 <xref:System.Windows.Forms.MaskedTextBox> 元に戻す機能をサポートしていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムが提供するパスワード文字を使用する必要があるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> システムのパスワードをプロンプト文字として使用する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> プロパティでユーザーが指定した入力を表示するかどうかを決定する、 <xref:System.Windows.Forms.MaskedTextBox> オペレーティング システムによって定義されているパスワードの文字の複数回出現するとします。<xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> よく似た機能、 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> プロパティは、プロンプトのプログラマが指定した文字を使用する代わりに <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> オペレーティング システムで定義されたプロンプトを使用しています。 このプロパティに優先 <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>します。  
  
> [!IMPORTANT]
>  セキュリティの考慮事項として、 <xref:System.Windows.Forms.MaskedTextBox> コントロールには、パスワードで保護された文字列で、切り取りとコピー操作が無効になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したパスワードの文字は、現在のプロンプト文字と同じ <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />します。 2 つは、異なる必要があります。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public object ValidateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー入力文字列を、検証する型のインスタンスに変換します。</summary>
        <returns>成功した場合、 <see cref="T:System.Object" /> で指定された型の <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> プロパティ以外の場合、 <see langword="null" /> 変換の失敗を示すにします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> に格納されている書式設定された文字列に変換しようとしているメソッド、 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> プロパティで指定された型のインスタンスを <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> プロパティです。 書式設定された文字列では、プロンプト文字が無視されますが、リテラルの処理の現在の値に従って、 <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> プロパティです。  
  
 <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> 発生させる、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> の成功に関係なく、変換が試行した後にイベントです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">入力文字列の解析中に重大な例外が発生しました。</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがデータ入力の検証に使用するデータ型を設定します。</summary>
        <value>A <see cref="T:System.Type" /> 検証で使用されるデータ型を表します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マスク自体ではなくわけでは、ユーザーの入力が指定された型の有効な値を表すことです。 次の c\# コードでは、マスクを示します。  
  
```  
maskedTextBox1.Mask = "99/99/9999";  
```  
  
 次 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] コードは、マスクを示します。  
  
 `MaskedTextBox1.Mask = "99/99/9999"`  
  
 このマスクには、ユーザーは、8 桁の数字の入力は、ユーザーが月、日、および年の値が正しい範囲内を確認できませんを要求できます。「2003 年 12 月 20 日」と「70\/90\/0000」は、マスクをに関する限り均等に有効です。  
  
 使用することができます <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> 正しい範囲内に、ユーザーが入力したデータがあるかどうかを確認する\-前に説明した場合は、インスタンスを割り当てることにより、 <xref:System.DateTime> 型です。 コントロール内の現在のテキストがあるユーザーがコントロールを離れるときに検証します。 監視することにより、データの検証失敗したかどうかを指定できます、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベントです。<xref:System.Windows.Forms.MaskedTextBox> 照合をのみ実行 <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> 場合 <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> は `true`です。  
  
 独自のカスタム データ型を使用するかどうか <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>, 、静的なを実装する必要があります `Parse` をパラメーターとして文字列を受け取るメソッドです。 このメソッドは、次のシグネチャの一方または両方を実装する必要があります。  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
   
  
## 例  
 次のコード例は、有効なものとして、ユーザーの入力を解析しようと試みます <xref:System.DateTime>します。 失敗した場合、 <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> イベント ハンドラーでは、ユーザーにエラー メッセージが表示されます。 値が有効な場合 <xref:System.DateTime>, 、コードは、指定された日付が今日の日付より前にないことを確認する追加のチェックを実行します。 このコード例では、Windows フォーム プロジェクトが含まれている必要があります、 <xref:System.Windows.Forms.MaskedTextBox> という名前のコントロール `MaskedTextBox1` と <xref:System.Windows.Forms.ToolTip> という名前のコントロール `ToolTip1`します。  
  
 [!code-csharp[ValidatingTypeSample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>Windows メッセージを処理します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行テキスト ボックス コントロールで必要に応じて自動的に次の行に折り返すかどうかを示す値を取得または設定します。 このプロパティでサポートされていない <see cref="T:System.Windows.Forms.MaskedTextBox" />します。</summary>
        <value>
          <see cref="P:System.Windows.Forms.MaskedTextBox.WordWrap" /> プロパティは常に返します <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.MaskedTextBox> 複数行の入力をサポートしていない、 <xref:System.Windows.Forms.MaskedTextBox.WordWrap%2A> プロパティは無視されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.MaskedTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>