<Type Name="CheckedListBox" FullName="System.Windows.Forms.CheckedListBox">
  <TypeSignature Language="C#" Value="public class CheckedListBox : System.Windows.Forms.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckedListBox extends System.Windows.Forms.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.LookupBindingProperties</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示、 <see cref="T:System.Windows.Forms.ListBox" /> で各項目の左側にチェック ボックスが表示されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコントロールは、ユーザーがコントロールの右側にある、キーボード、または、スクロール バーを使用して移動できるアイテムの一覧を表示します。 ユーザーは、いずれかでチェック マークを配置できますまたは他のアイテムとチェックされている項目に移動する、 <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection> と <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>です。  
  
 実行時に、リストをオブジェクトを追加するとオブジェクト参照の配列を割り当てる、 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> メソッドです。 リストには、各オブジェクトの既定の文字列値が表示されます。 個々 のアイテムを追加するには、リストに、 <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> メソッドです。  
  
 <xref:System.Windows.Forms.CheckedListBox> オブジェクトで 3 つの状態をサポートしている、 <xref:System.Windows.Forms.CheckState> 列挙: <xref:System.Windows.Forms.CheckState.Checked>, 、<xref:System.Windows.Forms.CheckState.Indeterminate>, 、および <xref:System.Windows.Forms.CheckState.Unchecked>です。 状態を設定する必要があります <xref:System.Windows.Forms.CheckState.Indeterminate> コード内のユーザー インターフェイスであるため、 <xref:System.Windows.Forms.CheckedListBox> これを行うメカニズムを提供しません。  
  
 場合 <xref:System.Windows.Forms.ListBox.UseTabStops%2A> は `true`, 、 <xref:System.Windows.Forms.CheckedListBox> が認識され、列を作成するアイテムのテキストにタブ文字を展開します。 これらのタブ ストップがプリセットされているし、変更できません。 カスタム タブ ストップを使用する設定 <xref:System.Windows.Forms.ListBox.UseTabStops%2A> に `false`, 、 <xref:System.Windows.Forms.ListBox.UseCustomTabOffsets%2A> に `true`, にカスタム値を追加し、 <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> コレクションです。  
  
> [!NOTE]
>  場合、 <xref:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering%2A> プロパティは、 `false`, 、 <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> プロパティを無視し、\[標準\] タブのオフセットに置き換えられます。  
  
 <xref:System.Windows.Forms.CheckedListBox> クラスは、次の 3 つのインデックス付きコレクションをサポートしています。  
  
|Collection|クラスをカプセル化します。|  
|----------------|-------------------|  
|含まれるすべてのアイテム、 <xref:System.Windows.Forms.CheckedListBox> コントロールです。|<xref:System.Windows.Forms.CheckedListBox.ObjectCollection>|  
|項目 \(、不定状態で項目を含む\)\] で、これは項目のサブセットに含まれている、 <xref:System.Windows.Forms.CheckedListBox> コントロールです。|<xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>|  
|コレクション内の項目にインデックスのサブセットである、インデックスがチェックされます。 これらのインデックスは、オフ、未確定のいずれかの状態で項目を指定します。|<xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>|  
  
 次の 3 つのテーブルは 3 つのインデックス付きコレクションの例を <xref:System.Windows.Forms.CheckedListBox> クラスでサポートされます。  
  
 最初の表は、コントロール \(コントロールに含まれているすべての項目\) の項目のインデックス付きコレクションの例を示します。  
  
|インデックス|アイテム|状態の確認|  
|------------|----------|-----------|  
|0|オブジェクト 1|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|1|オブジェクト 2|<xref:System.Windows.Forms.CheckState.Checked>|  
|2|オブジェクト 3|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|3|オブジェクト 4|<xref:System.Windows.Forms.CheckState.Indeterminate>|  
|4|オブジェクト 5|<xref:System.Windows.Forms.CheckState.Checked>|  
  
 2 番目の表は、チェックされた項目のインデックス付きコレクションの例を示します。  
  
|インデックス|アイテム|  
|------------|----------|  
|0|オブジェクト 2|  
|1|オブジェクト 4|  
|2|オブジェクト 5|  
  
 3 番目の表は、チェックされた項目のインデックスのインデックス付きコレクションの例を示します。  
  
|インデックス|項目のインデックス|  
|------------|---------------|  
|0|1|  
|1|3|  
|2|4|  
  
   
  
## 例  
 次の例では、メソッド、プロパティ、およびのコレクションを使用する方法を示しています、 <xref:System.Windows.Forms.CheckedListBox>です。 これは、プロジェクトにコピーした後に実行する準備が完全なサンプルです。 確認し、項目をオフに、項目を追加するテキスト ボックスを使用して、保存がクリックされた 1 回\] ボタン、チェックされた項目をオフにします。  
  
 [!code-cpp[Classic CheckedListBox Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckedListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckedListBox Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckedListBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckedListBox Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckedListBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckedListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.CheckedListBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 By default, <xref:System.Windows.Forms.CheckedListBox> uses <xref:System.Windows.Forms.Control.SetStyle%2A> and the **languageKeyword tag is not supported!!!!**  
 value of <xref:System.Windows.Forms.ControlStyles> to specify that the control is redrawn when resized.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これでチェックされているインデックスのコレクション <see cref="T:System.Windows.Forms.CheckedListBox" />します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> のコレクション、 <see cref="T:System.Windows.Forms.CheckedListBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チェックされているインデックスのコレクションには、インデックスのサブセット内のすべての項目のコレクションを <xref:System.Windows.Forms.CheckedListBox> コントロールです。 これらのインデックスは、オフ、未確定のいずれかの状態で項目を指定します。  
  
   
  
## 例  
 次の例でチェックされた項目の列挙、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> して、項目の状態は、何をチェックします。 この例では、使用方法を示します、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>, 、および <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>です。  
  
 最初のループを使用して、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> 取得するメソッド、 <xref:System.Windows.Forms.CheckState> 与えられた項目のインデックスのチェックされた各項目のです。 もう 1 つを使用してループも <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, が使用して、 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=fullName> 項目のインデックスを取得します。  
  
 [!code-cpp[CheckedListBox\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これでチェックされた項目のコレクション <see cref="T:System.Windows.Forms.CheckedListBox" />します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> のコレクション、 <see cref="T:System.Windows.Forms.CheckedListBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内のオブジェクトのサブセットである、 <xref:System.Windows.Forms.CheckedListBox.Items%2A> いるもののみを表すコレクション項目 <xref:System.Windows.Forms.CheckState?displayProperty=fullName> は `Checked` または `Indeterminate`です。 このコレクション内のインデックスが昇順に配置します。  
  
   
  
## 例  
 次の例でチェックされた項目の列挙、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> して、項目の状態は、何をチェックします。 この例では、使用方法を示します、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>, 、および <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>です。  
  
 最初のループを使用して、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> 取得するメソッド、 <xref:System.Windows.Forms.CheckState> 与えられた項目のインデックスのチェックされた各項目のです。 もう 1 つを使用してループも <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, が使用して、 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=fullName> 項目のインデックスを取得します。  
  
 この例を実行するには、次の手順を実行します。  
  
1.  新しい Windows フォーム アプリケーションを作成します。  
  
2.  追加、 <xref:System.Windows.Forms.CheckedListBox> と <xref:System.Windows.Forms.Button> をフォームにします。  
  
3.  ボタン名前を付け `WhatIsChecked`, 、ハンドラーを追加、 <xref:System.Windows.Forms.Control.Click> イベント、および次のハンドラーの本文からコードにコピーします。  
  
4.  いくつかの項目を追加、 <xref:System.Windows.Forms.CheckedListBox>です。  
  
5.  この例を実行し、いくつかのリスト ボックスにチェック ボックスを確認します。  
  
6.  ボタンをクリックします。  
  
     一連のどの項目がチェックを示すメッセージ ボックスが表示されます。  
  
 [!code-cpp[CheckedListBox\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckOnClick">
      <MemberSignature Language="C#" Value="public bool CheckOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckOnClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目が選択されたときに、チェック ボックスを切り替えるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> チェック マークがすぐに適用されている場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> 項目が選択されるたびに、チェック ボックスを切り替えるかどうかを示します。 既定の動作は、最初のクリックで選択を変更して、もう一度クリックすると、チェック マークを適用するユーザーにです。 場合によっては、ただし、される方チェックされた項目がクリックされるとすぐにします。  
  
   
  
## 例  
 次のコード例では、初期化を示しています、 <xref:System.Windows.Forms.CheckedListBox> コントロールを設定して、 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, 、<xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, 、および <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> プロパティです。 例では、設定、 <xref:System.Windows.Forms.CheckedListBox> コントロールとセットで、 <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> に、 <xref:System.Windows.Forms.Control.Name%2A?displayProperty=fullName> コントロールのプロパティです。  
  
 例を実行するには、格納しているフォームに次のコードを貼り付けます、 <xref:System.Windows.Forms.CheckedListBox> という `CheckedListBox1` を呼び出すと、 `InitializeCheckListBox` フォームのコンス トラクターまたは Load メソッドのメソッドです。  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.CheckedListBox" /> コントロールをクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.CheckedListBox.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred. If you need more specific mouse information \(such as the button, number of clicks, wheel rotation, or location\), use the <xref:System.Windows.Forms.Control.MouseDown> and <xref:System.Windows.Forms.Control.MouseUp> events, which pass a <xref:System.Windows.Forms.MouseEventArgs> to the event handler.  
  
 A double\-click is determined by the mouse settings of the user's operating system. The user can adjust the amount of time that can pass between clicks during a double\-click of a mouse button. The <xref:System.Windows.Forms.CheckedListBox.Click> event is raised every time the user double\-clicks a control. For example, if you have event\-handling methods for the <xref:System.Windows.Forms.CheckedListBox.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a form, the events are raised when the form is double\-clicked and both event\-handling methods are called. If the user double\-clicks a control that does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.CheckedListBox.Click> event might be raised twice.  
  
   
  
## 例  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckedListBox.Click> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckedListBox> named `CheckedListBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckedListBox.Click> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#157)]
 [!code-vb[System.Windows.Forms.EventExamples\#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.CheckedListBox" /> コントロールの新しいユーザー補助オブジェクトを作成します。</summary>
        <returns>コントロールの新しい <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If you do not explicitly call the <xref:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.  
  
> [!NOTE]
>  To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the **languageKeyword tag is not supported!!!!**  
>  assembly installed with the .NET Framework.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> method.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateItemCollection">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.ListBox/ObjectCollection CreateItemCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateItemCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>項目コレクションの新しいインスタンスを作成します。</summary>
        <returns>新しい項目コレクションを表す <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.CreateItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</summary>
        <value>A <see cref="T:System.Windows.Forms.CreateParams" /> 必要なパラメーターを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Control.CreateParams%2A> プロパティいないオーバーライドして派生コントロールのプロパティを調整するために使用します。 などのプロパティ、 <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, 、<xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>, 、および <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> など、コントロールに対応するプロパティを設定する必要があります <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName>, 、<xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> と <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>です。<xref:System.Windows.Forms.CreateParams> 、標準的な Windows のコントロール クラスをラップするか、スタイルを設定するには、Windows フォームの名前空間に用意されていない場合にのみ拡張する必要があります。 コントロールのパラメーターの作成の詳細については、次を参照してください。、 `CreateWindow` と `CreateWindowEx` 関数および `CREATESTRUCT` Windows プラットフォーム SDK リファレンスの構造体のドキュメント、MSDN ライブラリの「http:\/\/msdn.microsoft.com\/library に配置します。  
  
   
  
## 例  
 次のコード例を拡張して、 <xref:System.Windows.Forms.Control.CreateParams%2A> のプロパティ、 <xref:System.Windows.Forms.Button> クラスを派生します。<xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> プロパティを変更すると、それが原因で表示するボタン、 <xref:System.Drawing.Icon> ではなく、 <xref:System.Drawing.Image>です。 この例では、継承されたクラスがあることが必要です、 <xref:System.Windows.Forms.Button> クラスです。  
  
 [!code-cpp[CreateParams\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="P:System.Windows.Forms.Control.CreateParams" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.CreateParams" /> property to extend the base implementation. Otherwise, you must provide all the implementation.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのデータ ソースを取得または設定します。</summary>
        <value>データのソースを表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DataSourceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DisplayMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一覧を表示するリスト ボックスに格納されているオブジェクトのプロパティを表す文字列を取得または設定します。</summary>
        <value>リスト ボックスに格納されているオブジェクトのプロパティ名を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 By default the <xref:System.Windows.Forms.CheckedListBox> displays the default string for the items it contains. However, the <xref:System.Windows.Forms.CheckedListBox> can display diverse types of objects and you may want to change the displayed string by specifying the <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> property. If the specified property does not exist, or the value of the <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> property is an empty string \(""\), the results of the object's <xref:System.Windows.Forms.ListBox.ToString%2A> method are displayed instead.  
  
 If the new value of the <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> cannot be set, the previous value is maintained.  
  
   
  
## 例  
 The following code example demonstrates initializing a <xref:System.Windows.Forms.CheckedListBox> control by setting the <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, and <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> properties. The example populates the <xref:System.Windows.Forms.CheckedListBox> with controls and sets the <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> to the <xref:System.Windows.Forms.Control.Name%2A?displayProperty=fullName> property of the control.  
  
 To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.CheckedListBox> named `CheckedListBox1` and call the `InitializeCheckListBox` method from the form's constructor or Load method.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DisplayMemberChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckedListBox.DisplayMember" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DrawItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーナー描画 <see cref="T:System.Windows.Forms.CheckedListBox" /> のビジュアルな部分を変更すると発生します。 このクラスでは、このイベントは使用されません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is used by an owner\-drawn <xref:System.Windows.Forms.CheckedListBox>. The event is raised only when the <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> property is set to <xref:System.Windows.Forms.DrawMode.OwnerDrawFixed?displayProperty=fullName> or <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=fullName>. You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.CheckedListBox>. If you have a variable\-sized item \(that is, <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> is set to <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=fullName>\), the <xref:System.Windows.Forms.CheckedListBox.MeasureItem> event is raised before the item is drawn. You can create an event handler for the <xref:System.Windows.Forms.CheckedListBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the <xref:System.Windows.Forms.CheckedListBox.DrawItem> event.  
  
 This event is not relevant to this class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素を描画するためのモードを示す値を取得、 <see cref="T:System.Windows.Forms.CheckedListBox" />です。 このクラスでは、このプロパティは使用されません。</summary>
        <value>常に、 <see cref="T:System.Windows.Forms.DrawMode" /> の <see langword="Normal" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemChecked">
      <MemberSignature Language="C#" Value="public bool GetItemChecked (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetItemChecked(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">項目のインデックス。</param>
        <summary>指定した項目がチェックされているかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> 項目がチェックされている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> 返します `true` 場合の値 <xref:System.Windows.Forms.CheckState> は `Checked` または `Indeterminate` 項目。 内に項目が特定の状態を確認するのには、使用、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="index" /> は 0 より小さい値が指定されています。  
  
 または  
  
 <paramref name="index" /> リスト内の項目の数以上には指定します。</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="GetItemCheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState GetItemCheckState (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.CheckState GetItemCheckState(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">チェックされている値を取得する項目のインデックス。</param>
        <summary>現在の項目のチェックの状態を示す値を返します。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.CheckState" /> 値のいずれか。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> メソッドを取得する機能を提供する、 <xref:System.Windows.Forms.CheckState> インデックスのアイテムの値。 項目のチェックの状態を設定しないかどうかは `Indeterminate`, を使用して、 <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> メソッドです。  
  
   
  
## 例  
 次の例でチェックされた項目の列挙、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> して、項目の状態は、何をチェックします。 この例で、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> 項目のチェックの状態を設定します。 例では、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> と <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>です。  
  
 最初のループを使用して、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> 取得するメソッド、 <xref:System.Windows.Forms.CheckState> 与えられた項目のインデックスのチェックされた各項目のです。 もう 1 つを使用してループも <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, が使用して、 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=fullName> 項目のインデックスを取得します。  
  
 [!code-cpp[CheckedListBox\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> は 0 より小さい値が指定されています。  
  
 または  
  
 <paramref name="index" /> リスト内の項目の数以上には指定します。</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のチェック状態が変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 までチェックの状態は更新されません後、 <xref:System.Windows.Forms.CheckedListBox.ItemCheck> イベントが発生します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.CheckedListBox.ItemCheck> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.CheckedListBox> という `CheckedListBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.CheckedListBox.ItemCheck> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples\#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public override int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目領域の高さを取得します。</summary>
        <value>項目領域の高さ \(ピクセル単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この測定値は、フォントの高さと、アイテムの周囲の空白文字を提供する小さな余白に基づいています。  
  
 "G"と"y"などの文字のエクステンダーは、9.75 ポイントの Arial にフォントが変更された場合に表示されません。 これを修正するからクラスを派生 <xref:System.Windows.Forms.CheckedListBox> させ <xref:System.Windows.Forms.CheckedListBox.ItemHeight%2A> を返す `base.ItemHeight+2`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この項目のコレクションを取得 <see cref="T:System.Windows.Forms.CheckedListBox" />します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> コレクションの項目を表す、 <see cref="T:System.Windows.Forms.CheckedListBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.Items%2A> プロパティに格納されている項目のリストへの参照を取得することができます、 <xref:System.Windows.Forms.CheckedListBox> コントロールです。 この参照を持つ項目を追加、アイテムを削除でき、コレクション内の項目の数を取得できます。 項目のコレクションで実行できるタスクの詳細については、次を参照してください。、 <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> クラスのリファレンス トピックです。  
  
   
  
## 例  
 次の例でチェックされた項目の列挙、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> して、項目の状態は、何をチェックします。 例では、 <xref:System.Windows.Forms.CheckedListBox.Items%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> を使用して、項目のインデックスを取得する、 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=fullName> メソッドです。 またこの例では使用方法を示します、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>, 、および <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>です。  
  
 最初のループを使用して、 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> 取得するメソッド、 <xref:System.Windows.Forms.CheckState> 与えられた項目のインデックスのチェックされた各項目のです。 もう 1 つを使用してループも <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, が使用して、 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=fullName> 項目のインデックスを取得します。  
  
 [!code-cpp[CheckedListBox\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MeasureItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーナー描画するときに発生 <see cref="T:System.Windows.Forms.ListBox" /> を作成し、リスト項目のサイズを決定します。 このクラスでは、このイベントは使用されません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 描画する前に、項目のサイズを指定するには、このイベントのイベント ハンドラーを作成することができます、 <xref:System.Windows.Forms.CheckedListBox.DrawItem> イベントです。 イベントが発生した場合にのみ、 <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> にプロパティが設定されている <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>します。  
  
 最大の高さ、 <xref:System.Windows.Forms.ListBox> 項目は 255 ピクセルです。  
  
 このクラスでは、このイベントは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MouseClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがマウスで <see cref="T:System.Windows.Forms.CheckedListBox" /> コントロールをクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.CheckedListBox.MouseClick> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.CheckedListBox> という `CheckedListBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.CheckedListBox.MouseClick> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#158)]
 [!code-vb[System.Windows.Forms.EventExamples\#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnBackColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckedListBox.Click" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> メソッドを選択またはがクリックされたアイテムのチェック ボックスをオフにします。 場合、 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> にプロパティが設定されている `true`, 、チェック ボックスは、アイテムがクリックされたとき、最初の状態が選択されているかオフかの時点から切り替えられます。 それ以外の場合、項目が既に選択されている場合にのみ、チェック ボックスは切り替えられます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> 、詳細を含むオブジェクト</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckedListBox.DrawItem" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnDrawItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnFontChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnHandleCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">イベント データを格納している <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnItemCheck%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">発生した <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Space キーが押された場合、 <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> にプロパティが設定されていない <xref:System.Windows.Forms.SelectionMode.None?displayProperty=fullName>, 、 <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> メソッド スイッチが、項目のチェックの状態が現在選択されています。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected override void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.CheckedListBox.MeasureItem" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnMeasureItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内でのパディング、 <see cref="T:System.Windows.Forms.CheckedListBox" />です。 このクラスでは、このプロパティは使用されません。</summary>
        <value>コントロールの内部の間隔特性を表す <see cref="T:System.Windows.Forms.Padding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールの既定値が表示される <xref:System.Windows.Forms.Control.Padding%2A> Windows ユーザー インターフェイスのガイドラインの近くにある程度であります。 いくつかの調整は、特定のアプリケーションに必要な可能性があります。  
  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.RefreshItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてを解析して <see cref="T:System.Windows.Forms.CheckedListBox" /> アイテムをもう一度と項目の最新のテキスト文字列を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択モードを指定している値を取得または設定します。</summary>
        <value>いずれか、 <see langword="One" /> または <see langword="None" /> の値 <see cref="T:System.Windows.Forms.SelectionMode" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> プロパティは、リスト ボックス内の 1 つの項目を選択するか、項目を選択しないかどうかを決定します。<xref:System.Windows.Forms.CheckedListBox> オブジェクトを複数選択がサポートされていません。 モードを設定するには 1 つの項目または項目はありません。  
  
   
  
## 例  
 次のコード例では、初期化を示しています、 <xref:System.Windows.Forms.CheckedListBox> コントロールを設定して、 <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> を選択する一覧で 1 つの項目を許可するようにします。  
  
 例を実行するには、格納しているフォームに次のコードを貼り付けます、 <xref:System.Windows.Forms.CheckedListBox> という `CheckedListBox1` を呼び出すと、 `InitializeCheckListBox` フォームのコンス トラクターまたは Load メソッドのメソッドです。  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">れない値を代入しようとした、 <see cref="T:System.Windows.Forms.SelectionMode" /> の値 <see langword="One" /> または <see langword="None" />です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">代入しようとした、 <see langword="MultiExtended" /> の値 <see cref="T:System.Windows.Forms.SelectionMode" /> コントロールにします。</exception>
        <altmember cref="T:System.Windows.Forms.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetItemChecked">
      <MemberSignature Language="C#" Value="public void SetItemChecked (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemChecked(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemChecked(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">チェックの状態を設定する項目のインデックス。</param>
        <param name="value">
          <see langword="true" /> として項目を設定する次のようにチェックします。それ以外の場合、 <see langword="false" />です。</param>
        <summary>セット <see cref="T:System.Windows.Forms.CheckState" /> に指定したインデックス位置にある項目の <see langword="Checked" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値 `true` が渡されると、このメソッドを設定、 <xref:System.Windows.Forms.CheckState> 値を `Checked`します。 値 `false` 設定 <xref:System.Windows.Forms.CheckState> に `Unchecked`します。  
  
   
  
## 例  
 次の例は、の項目を列挙、 <xref:System.Windows.Forms.CheckedListBox> し、一覧の他のすべてのアイテムを確認します。 この例で、 <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> と <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> 項目のチェックの状態を設定する方法です。 チェックするその他のすべての項目の <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> を呼び出して、設定、 <xref:System.Windows.Forms.CheckState> に `Indeterminate`, 、中に <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> チェックの状態を設定するその他の項目に対して呼び出される `Checked`です。  
  
 例を使用して、 <xref:System.Windows.Forms.CheckedListBox.Items%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> を取得する、 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> 項目のです。  
  
 [!code-cpp[CheckedListBox\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたインデックスが 0 未満です。  
  
 または  
  
 インデックスは、リスト内の項目の数を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItemCheckState">
      <MemberSignature Language="C#" Value="public void SetItemCheckState (int index, System.Windows.Forms.CheckState value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemCheckState(int32 index, valuetype System.Windows.Forms.CheckState value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">状態を設定する項目のインデックス。</param>
        <param name="value">
          <see cref="T:System.Windows.Forms.CheckState" /> 値のいずれか。</param>
        <summary>指定したインデックスの位置にある項目のチェックの状態を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> メソッドは、<xref:System.Windows.Forms.CheckedListBox.ItemCheck> イベントを発生させます。  
  
 いる項目 <xref:System.Windows.Forms.CheckState> に設定されている `Indeterminate` \] チェック ボックスのチェック マークが表示されますが、チェックされた項目の不確定な状態を示すために、ボックスは淡色表示にします。  
  
   
  
## 例  
 次の例は、の項目を列挙、 <xref:System.Windows.Forms.CheckedListBox> し、一覧の他のすべてのアイテムを確認します。 この例で、 <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> と <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> 項目のチェックの状態を設定する方法です。 チェックするその他のすべての項目の <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> を呼び出して、設定、 <xref:System.Windows.Forms.CheckState> に `Indeterminate`, 、中に <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> チェックの状態を設定するその他の項目に対して呼び出される `Checked`です。  
  
 例を使用して、 <xref:System.Windows.Forms.CheckedListBox.Items%2A> を取得するプロパティ、 <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> を取得する、 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> 項目のです。  
  
 [!code-cpp[CheckedListBox\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> は 0 より小さい値が指定されています。  
  
 または  
  
 <paramref name="index" /> よりも大きい、または一覧内の項目の数と同じです。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="value" /> のいずれかではない、 <see cref="T:System.Windows.Forms.CheckState" /> 値。</exception>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ThreeDCheckBoxes">
      <MemberSignature Language="C#" Value="public bool ThreeDCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeDCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはチェック ボックスがあるかどうかを示す値を設定、 <see cref="T:System.Windows.Forms.ButtonState" /> の <see langword="Flat" /> または <see langword="Normal" />です。</summary>
        <value>
          <see langword="true" /> 場合は、チェック ボックスは、フラットな外観それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、初期化を示しています、 <xref:System.Windows.Forms.CheckedListBox> コントロールを設定して、 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, 、<xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, 、および <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> プロパティです。 例では、設定、 <xref:System.Windows.Forms.CheckedListBox> コントロールとセットで、 <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> に、 <xref:System.Windows.Forms.Control.Name%2A?displayProperty=fullName> コントロールのプロパティです。  
  
 例を実行するには、格納しているフォームに次のコードを貼り付けます、 <xref:System.Windows.Forms.CheckedListBox> という `CheckedListBox1` を呼び出すと、 `InitializeCheckListBox` フォームのコンス トラクターまたは Load メソッドのメソッドです。  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を使用するかどうかを決定する値、 <see cref="T:System.Drawing.Graphics" /> クラス \(GDI+\) または <see cref="T:System.Windows.Forms.TextRenderer" /> クラス \(GDI\) テキストの表示にします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Drawing.Graphics" /> クラスは、バージョン 1.0 および 1.1 と互換性のためのテキストのレンダリングを実行するために使用する必要があります。 .NET Framework のそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `UseCompatibleTextRendering` プロパティは、その表示テキストを使用して Windows フォーム コントロールの間での visual の互換性を維持するためのもの、 <xref:System.Windows.Forms.TextRenderer> クラスと [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] と [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] を使用してカスタム テキスト レンダリングを実行するアプリケーション、 <xref:System.Drawing.Graphics> クラスです。 ほとんどの場合から、アプリケーションがアップグレードされていない場合に [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] または [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], 、しておくことをお勧め `UseCompatibleTextRendering` の既定値に設定 `false`します。  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] ベース <xref:System.Windows.Forms.TextRenderer> クラスがで導入された、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] パフォーマンスを向上させるには、テキストの見栄えをよく、および国際対応フォントのサポートの改善を作成します。 以前のバージョンの [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], 、 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ベース <xref:System.Drawing.Graphics> クラスを使用してすべてのテキスト レンダリングを実行します。[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 文字間隔とでの折り返しが異なるから計算 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]します。 使用する Windows フォーム アプリケーションで、 <xref:System.Drawing.Graphics> テキストをレンダリングするクラスで、これが原因で使用される、コントロールのテキストを <xref:System.Windows.Forms.TextRenderer> を異なるアプリケーションで他のテキストで表示します。 この非互換性を解決するには、設定することができます、 `UseCompatibleTextRendering` プロパティを `true` の特定のコントロールです。 設定する `UseCompatibleTextRendering` に `true` アプリケーションでサポートされているすべてのコントロールを呼び出して、 <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=fullName> メソッドのパラメーターを持つ `true`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値の描画元のデータ ソースのプロパティを指定する文字列を取得または設定します。</summary>
        <value>値の描画元のデータ ソースのプロパティを指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内容の指定、 <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> プロパティ データをバインドする場合。  
  
 オフにすることができます、 <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> プロパティに空の文字列プロパティを設定して \(""\) または `null`です。  
  
 新しい設定 <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> プロパティを発生させる、 <xref:System.Windows.Forms.CheckedListBox.ValueMemberChanged> と <xref:System.Windows.Forms.ListControl.SelectedValueChanged> イベントです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたオブジェクトで指定したプロパティが見つかりません、 <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ValueMemberChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.CheckedListBox.ValueMember" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WmReflectCommand">
      <MemberSignature Language="C#" Value="protected override void WmReflectCommand (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WmReflectCommand(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WmReflectCommand(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <see cref="T:System.Windows.Forms.Message" /> に送信されるトップレベル ウィンドウ、 <see cref="T:System.Windows.Forms.CheckedListBox" /> コントロールです。</param>
        <summary>コマンド メッセージを処理、 <see cref="T:System.Windows.Forms.CheckedListBox" /> コントロールがトップレベル ウィンドウから受信します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>Windows メッセージを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライドを示しています、 <xref:System.Windows.Forms.Control.WndProc%2A> で識別されるオペレーティング システムのメッセージを処理するメソッドを <xref:System.Windows.Forms.Message> 構造体。 別のアプリケーションがアクティブになる時期を知るには、この例では、WM\_ACTIVATEAPP オペレーティング システムのメッセージが処理されます。 理解、使用可能な http:\/\/msdn.microsoft.com\/library で MSDN Library 内にあるプラットフォーム SDK ドキュメントのリファレンスを参照してください <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>, 、<xref:System.Windows.Forms.Message.LParam%2A?displayProperty=fullName>, 、および <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=fullName> 値。 実際の定数値は、MSDN ライブラリの「http:\/\/msdn.microsoft.com\/library にもあるプラットフォーム SDK \(Core SDK セクション\) のダウンロードに含まれる Windows.h ヘッダー ファイルに記載されています。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for operating with unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>