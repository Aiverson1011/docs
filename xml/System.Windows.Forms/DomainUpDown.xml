<Type Name="DomainUpDown" FullName="System.Windows.Forms.DomainUpDown">
  <TypeSignature Language="C#" Value="public class DomainUpDown : System.Windows.Forms.UpDownBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DomainUpDown extends System.Windows.Forms.UpDownBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("SelectedItem")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedItemChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列値を表示する Windows スピン ボックス \(アップダウン コントロール\) を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Forms.DomainUpDown> control displays a single string value that is selected from an <xref:System.Object> collection by clicking the up or down buttons of the control. The user can also enter text in the control, unless the <xref:System.Windows.Forms.UpDownBase.ReadOnly%2A> property is set to **languageKeyword tag is not supported!!!!**  
 \(the string typed in must match an item in the collection to be accepted\). When an item is selected, the object is converted to a string value so it can be displayed in the spin box.  
  
 To create a collection of objects to display in the <xref:System.Windows.Forms.DomainUpDown> control, you can add or remove the items individually by using the <xref:System.Collections.ArrayList.Add%2A> and <xref:System.Collections.ArrayList.Remove%2A> methods. This can be called in an event handler, such as the <xref:System.Windows.Forms.Control.Click> event of a button. The object collection can be sorted alphabetically by setting the <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> property to **languageKeyword tag is not supported!!!!**  
. When the <xref:System.Windows.Forms.DomainUpDown.Wrap%2A> property is set to **languageKeyword tag is not supported!!!!**  
, if you scroll past the last or first object in the collection, the list will start over with the first or last object respectively and appear to roll in a continuous list.  
  
 When the <xref:System.Windows.Forms.DomainUpDown.UpButton%2A> or <xref:System.Windows.Forms.DomainUpDown.DownButton%2A> methods are called, either in code or by the click of the up or down buttons, <xref:System.Windows.Forms.DomainUpDown.UpdateEditText%2A> is called to update the control with the new string. If <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> is set to **languageKeyword tag is not supported!!!!**  
, the string is matched to one of the values in the collection prior to updating the control's text display.  
  
 Starting with the [!INCLUDE[net_2015](~/includes/net-2015-md.md)], the <xref:System.Windows.Forms.DomainUpDown> control will be resized based on the system DPI setting when the app.config file contains the following entry:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## 例  
 The following code example creates and initializes a <xref:System.Windows.Forms.DomainUpDown> control. The example allows you to set some of its properties and create a collection of strings for display in the spin box. The code assumes that a <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox>, and <xref:System.Windows.Forms.Button> have been instantiated on a form. The example also assumes that you have a member variable at the class level declared as a 32\-bit signed integer named `myCounter`. You can enter a string in the text box and add it to the <xref:System.Windows.Forms.DomainUpDown.Items%2A> collection when the button is clicked. By clicking the check box, you can toggle the <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> property and observe the difference in the collection of items in the spin box.  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.Windows.Forms.NumericUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DomainUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックス \(アップダウン コントロール\) で表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールの新しいユーザー補助オブジェクトを作成します。</summary>
        <returns>コントロールの新しい <see cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 明示的に <xref:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance%2A> メソッドを呼び出さない場合は、<xref:System.Windows.Forms.Control.AccessibilityObject%2A> プロパティが参照されると呼び出されます。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.AccessibilityObject%2A> プロパティを取得または設定するには、.NET Framework と一緒にインストールされているユーザー補助アセンブリへの参照を追加する必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" /> method.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DownButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクト コレクションで次の項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 As you move through the collection of items in the <xref:System.Windows.Forms.DomainUpDown> control using the down button, you will eventually reach the last item in the collection. If you continue, and <xref:System.Windows.Forms.DomainUpDown.Wrap%2A> is set to **languageKeyword tag is not supported!!!!**  
, the list will start over with the first item in the collection and appear to be continuous. This behavior also occurs when you move through the collection using the up button.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DomainUpDown/DomainUpDownItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スピン ボックス \(アップダウン コントロール\) に割り当てられているオブジェクトのコレクション。</summary>
        <value>A <see cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" /> を含む、 <see cref="T:System.Object" /> コレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Object> コレクションを構築および使用可能、 <xref:System.Windows.Forms.DomainUpDown> 2 つの方法で制御します。 項目をコレクションに追加するにを使用して、 <xref:System.Collections.ArrayList.Add%2A> または <xref:System.Collections.ArrayList.Insert%2A> メソッドです。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックスに表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
        <altmember cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected void OnSelectedItemChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSelectedItemChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックス \(アップダウン コントロール\) で表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
        <altmember cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.UpDownBase.ReadOnly%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Forms.DomainUpDown> コントロールは、文字で始まるリストの項目を選択します。 コレクション内の 1 つ以上の項目が、同じ文字で始まる場合は、 <xref:System.Windows.Forms.DomainUpDown> コントロールは、現在選択されている位置から、型指定された文字で始まる次の項目を選択します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定間の間隔、 <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールのコンテンツと縁します。</summary>
        <value>常に <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定した場合でも、 <xref:System.Windows.Forms.DomainUpDown.Padding%2A> プロパティの値になります <xref:System.Windows.Forms.Padding.Empty>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DomainUpDown.PaddingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DomainUpDown.Padding" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された項目のインデックス値を取得または設定します。</summary>
        <value>選択された項目の 0 から始まるインデックス値。 既定値は \-1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A> プロパティは、スピン ボックス \(アップダウン コントロール\) で現在選択されているコレクションの項目のインデックス値を保持します。 場合にコレクション アイテムが再割り当ての新しいインデックス値を指定できる、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> からプロパティが変更された `false` に `true`します。 コレクションがアルファベット順に並べ替えられて再と、アイテムには、新しいインデックス値が割り当てられます。  
  
> [!NOTE]
>  ユーザーが、スピン ボックスに項目を入力した場合、または項目が選択されていない場合、 <xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A> 値は、既定値を\-1 になります。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックスに表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">割り当てられた値は、既定値は\-1 より小さくします。  
  
 または  
  
 割り当てられた値がより大きい、 <see cref="P:System.Windows.Forms.DomainUpDown.Items" /> カウントします。</exception>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内で選択された項目のインデックス値に基づいて、選択された項目を取得または設定します。</summary>
        <value>選択したアイテムに基づいて、 <see cref="P:System.Windows.Forms.DomainUpDown.SelectedIndex" /> 値。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値をコレクション内の項目のいずれかに検証は、このプロパティが設定されている場合、 <xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A> プロパティが該当するインデックス値に設定します。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックス \(アップダウン コントロール\) で表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged> イベントが発生する、 <xref:System.Windows.Forms.DomainUpDown.SelectedItem%2A> 下向きの矢印ボタンまたは \[新しい値を入力するか、コントロールの上をクリックすると、ユーザーが、コードでは、プロパティを変更できます。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.DomainUpDown> という `DomainUpDown1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#381](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#381)]
 [!code-vb[System.Windows.Forms.EventExamples\#381](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#381)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の項目が並べ替えられたかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> コレクション内の項目が並べ替えられている場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> に設定されている `true`, 、コレクションがアルファベット順に並べ替えられます。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックス \(アップダウン コントロール\) で表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールを表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Windows.Forms.DomainUpDown" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の文字列型の値を含む、 <xref:System.Collections.ArrayList.Count%2A> と <xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.UpButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションで 1 つ前の項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内の項目のコレクションを移動すると、 <xref:System.Windows.Forms.DomainUpDown> 印ボタンを使用して制御、最終的に達することになります、コレクション内の最初の項目。 続行した場合、および <xref:System.Windows.Forms.DomainUpDown.Wrap%2A> に設定されている `true`, 、一覧は、コレクションの最後の項目から作業を始めるし、連続値にするのには表示されます。 この動作は、下矢印ボタンを使用して、コレクション内を移動するときにも発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.UpdateEditText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択された項目を表示するには、スピン ボックス \(アップダウン コントロール\) でテキストを更新します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.UpDownBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のコレクションのリストで、ユーザーがリストの末尾の項目を通過しても参照を続けた場合に、最初または最後の項目が引き続き表示されるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> リストが表示される、ユーザーが先頭またはコレクションの末尾に達したとき再び場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Forms.DomainUpDown.Wrap%2A> にプロパティが設定されている `true`, 、コレクションの最後の項目に到達して続行すると、一覧は最初の項目から作業を始めるし、継続的なように見える場合です。 この動作は、同様に逆の順序では機能します。  
  
   
  
## 例  
 次のコード例は、作成し、初期化、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 この例を使用すると、一部のプロパティを設定し、スピン ボックス \(アップダウン コントロール\) で表示する文字列のコレクションを作成できます。 コードを使用している、 <xref:System.Windows.Forms.TextBox>, 、<xref:System.Windows.Forms.CheckBox>, 、および <xref:System.Windows.Forms.Button> フォームのインスタンス化されています。 この例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数であると想定も `myCounter`です。 テキスト ボックスに文字列を入力し、それを追加、 <xref:System.Windows.Forms.DomainUpDown.Items%2A> 、ボタンがクリックされたときのコレクション。 チェック ボックスをクリックすると、切り替えることができます、 <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> プロパティをスピン ボックスには、項目のコレクションの違いを確認します。  
  
 [!code-cpp[Classic DomainUpDown Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
      </Docs>
    </Member>
  </Members>
</Type>