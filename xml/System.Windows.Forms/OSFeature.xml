<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オペレーティング システムの特定の機能についてのクエリを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 `static` で提供されるこのクラスのインスタンス、 <xref:System.Windows.Forms.OSFeature.Feature%2A> オペレーティング システムの機能を照会するプロパティです。 このクラスのインスタンスを作成することはできません。  
  
 機能のバージョンを確認するのには、呼び出し、 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドです。 調べるには、機能や、特定のバージョンがあるかどうか、呼び出し、 <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> メソッドをこのクラスで提供される機能の識別子を検索する機能を指定します。  
  
   
  
## 例  
 次の例では使用 <xref:System.Windows.Forms.OSFeature> かどうかをオペレーティング システムを照会する、 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能がインストールされています。 この例では、機能が存在するかどうかをチェックの 2 つの方法を表示します。 最初のメソッドで `myVersion` がオンになっているかどうを `null`します。 バージョンの場合 `null`, 、機能がインストールされていません。 2 番目のメソッドで基本クラス メソッドを呼び出し <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 機能がインストールされているかどうかにします。 テキスト ボックスには、結果が表示されます。  
  
 次のコードで `textBox1` を作成し、フォーム上に配置します。  
  
 [!code-cpp[Classic OSFeature Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.OSFeature" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスをインスタンス化することはできません。 オペレーティング システムの機能を照会する、 `static` のインスタンス <xref:System.Windows.Forms.OSFeature> このクラスで提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see langword="static" /> のインスタンス、 <see cref="T:System.Windows.Forms.OSFeature" /> 機能についてのクエリを使用するクラス。 このプロパティは読み取り専用です。</summary>
        <value>
          <see cref="T:System.Windows.Forms.OSFeature" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これを使用して `static` オペレーティング システムの機能を照会するプロパティです。 このクラスのインスタンスを作成することはできません。  
  
 機能のバージョンを確認するのには、呼び出し、 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドです。 調べるには、機能や、特定のバージョンがあるかどうか、呼び出し、 <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> メソッドをこのクラスで提供される機能の識別子を検索する機能を指定します。  
  
   
  
## 例  
 次の例のクエリ <xref:System.Windows.Forms.OSFeature> の <xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能します。 バージョンをチェックしてであれば `null`, 、機能が存在するかどうかを確認します。 結果は、テキスト ボックスに表示されます。 次のコードで `textBox1` を作成し、フォーム上に配置します。  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">いずれかのバージョンが要求された機能 <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> または <see cref="F:System.Windows.Forms.OSFeature.Themes" />です。</param>
        <summary>現在システムで使用できる、指定した機能のバージョンを取得します。</summary>
        <returns>A <see cref="T:System.Version" /> 現在システムで使用できる、指定したオペレーティング システム機能のバージョンを表すまたは <see langword="null" /> 機能が見つからない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.OSFeature.Feature%2A> プロパティには、 `static` のインスタンス <xref:System.Windows.Forms.OSFeature> 機能のバージョン番号を照会するこのクラスで提供します。  
  
   
  
## 例  
 次の例のクエリ <xref:System.Windows.Forms.OSFeature> の <xref:System.Windows.Forms.OSFeature.LayeredWindows> 機能します。 バージョンをチェックしてであれば `null`, 、機能が存在するかどうかを確認します。 結果は、テキスト ボックスに表示されます。 次のコードで `textBox1` を作成し、フォーム上に配置します。  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <param name="enumVal">A <see cref="T:System.Windows.Forms.SystemParameter" /> を検索する機能を表します。</param>
        <summary>指定された機能またはメトリックは、オペレーティング システムをサポートするかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> システムの機能がある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、使用して、 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> オペレーティング システムが、特定の機能またはで識別されるメトリックをサポートしているかを決定する方法 `enumValue`します。 返される値に基づく <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, 、コードで条件付き操作を実行します。 たとえば、パラメーター値は、このメソッドを呼び出す <xref:System.Windows.Forms.SystemParameter.FlatMenu> を返します `true`, 、フラット スタイルのアプリケーションでオーナー描画メニューを作成する可能性があります。  
  
 一部のシステムの機能やメトリックにアクセスすると、それらが特定のオペレーティング システムのバージョンで利用できない場合に例外が発生することができます。 この場合は、まず使用して、対応する <xref:System.Windows.Forms.SystemParameter> 列挙値、かつと <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, 、メトリックがサポートされるかどうかを判断します。 たとえば、 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> と <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> 取得する前に、 <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> プロパティの値。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> メソッドを <xref:System.Windows.Forms.SystemParameter> 列挙します。 例では、オペレーティング システムがサポートしているかを決定する、 `CaretWidth` メトリック呼び出す前に、 <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> プロパティです。  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>階層の最上位の windows 機能を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 レイヤード ウィンドウは、オペレーティング システムで透明または半透明変更できます。 レイヤード ウィンドウのサポートは、Windows 2000 で初めて導入されました。 詳細については、「層 Windows:: A 新しい方法を使用透明度と透過性効果で Windows アプリケーション」http:\/\/msdn.microsoft.com、プラットフォーム SDK のドキュメントを参照してください。  
  
 レイヤード ウィンドウの機能がインストールされているかを確認するを使用して、 <xref:System.Windows.Forms.OSFeature.Feature%2A> プロパティを基本クラスのメソッドを呼び出す <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> と <xref:System.Windows.Forms.OSFeature.LayeredWindows> 検索する機能として。  
  
 呼び出して、機能がインストールされているかどうかにチェックする代わりに、 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを <xref:System.Windows.Forms.OSFeature.LayeredWindows> を検索する機能として。  
  
   
  
## 例  
 次の例では、現在のシステムがレイヤード ウィンドウをサポートしているかどうかを決定します。 基本クラスのメソッド <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> で呼び出された <xref:System.Windows.Forms.OSFeature.LayeredWindows> として検索する機能です。 結果は、テキスト ボックスに表示されます。 次のコードで `textBox1` インスタンス化され、フォーム上に配置します。  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムのテーマの機能を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーマは Microsoft plus 壁紙、カーソル、フォント、サウンド、および最初に導入されたアイコンを含むビジュアル インターフェイス設定の集まりです。 Windows 95 のです。 .NET Framework は直接サポートしていません操作に使用するテーマがで視覚スタイルに対する広範なサポートがある、 <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> 名前空間。 Windows テーマの詳細については、テーマと視覚スタイルと、Win32 SDK で Visual スタイルのリファレンス トピックを参照してください。  
  
 テーマの機能がインストールされているかを確認するには、基本クラスのメソッドを呼び出す <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> と <xref:System.Windows.Forms.OSFeature.Themes> として検索する機能です。  
  
 呼び出して、機能がインストールされているかどうかにチェックする代わりに、 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> メソッドを <xref:System.Windows.Forms.OSFeature.Themes> を検索する機能として。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>