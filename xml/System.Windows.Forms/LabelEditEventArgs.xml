<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> イベントおよび <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Forms.LabelEditEventArgs> インデックスとのキャプションを指定する <xref:System.Windows.Forms.ListViewItem> と、ユーザーが編集した後のキャプション。 このクラスも提供、 <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティです。 このプロパティを使用することができます、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> をユーザーが、ラベルを編集することを防ぐためにイベント ハンドラーです。 を使用することもできます、 <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> イベント ハンドラーをラベルを返す、変更を元に戻す、元の値にします。 これは、変更をコミットする前にユーザー入力を検証する場合に便利です。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> イベントはラベルの編集がコミットされを呼び出す前に、 <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=fullName> このイベントのハンドラー メソッドは、元の値を使用して項目を並べ替えられます。  
  
   
  
## 例  
 次のコード例には、処理を示しています、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> イベントを使用して、 <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> と <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティです。 例を実行するには、格納しているフォームに次のコードを貼り付けます、 <xref:System.Windows.Forms.ListView> という名前のコントロール `ListView1` し、少なくとも 3 つの項目を格納します。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">0 から始まるインデックス、 <see cref="T:System.Windows.Forms.ListViewItem" />, 、編集するラベルを表します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> に指定したインデックスを持つクラス、 <see cref="T:System.Windows.Forms.ListViewItem" /> を編集します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発生時に、このコンス トラクターを使用することができます、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> または <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> で特定のリスト項目を指定して実行時にイベント、 <xref:System.Windows.Forms.ListView> を編集します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">0 から始まるインデックス、 <see cref="T:System.Windows.Forms.ListViewItem" />, 、編集するラベルを表します。</param>
        <param name="label">ラベルに割り当てられた新しいテキスト、 <see cref="T:System.Windows.Forms.ListViewItem" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> に指定したインデックスを持つクラス、 <see cref="T:System.Windows.Forms.ListViewItem" /> 編集されていると、新しいテキストのラベルの <see cref="T:System.Windows.Forms.ListViewItem" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発生時に、このコンス トラクターを使用することができます、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> または <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> でリスト項目を指定して実行時にイベント、 <xref:System.Windows.Forms.ListView> を編集します。 コンス トラクターではことのラベルに関連付けられた新しいテキストを指定することもできます、 <xref:System.Windows.Forms.ListViewItem>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のラベルに変更が加えられたかどうかを示す値、 <see cref="T:System.Windows.Forms.ListViewItem" /> キャンセルする必要があります。</summary>
        <value>
          <see langword="true" /> 場合のラベルの編集操作、 <see cref="T:System.Windows.Forms.ListViewItem" /> 取り消された、それ以外にする必要があります <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用してのラベルに加えられた変更をキャンセルすることができます、 <xref:System.Windows.Forms.ListViewItem> し、その元のテキストに戻ります。 このプロパティを使用して、項目のキャプションをアプリケーションの要件を満たしていない値に変更されないようにします。  
  
   
  
## 例  
 次のコード例には、処理を示しています、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> イベントを使用して、 <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> と <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティです。 この例を実行するには、次のコードを貼り付けますフォームを含む ListView1 という名前の ListView コントロールと、少なくとも 3 つの項目が設定されます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>0 から始まるインデックスを取得、 <see cref="T:System.Windows.Forms.ListViewItem" /> を編集するラベルを表します。</summary>
        <value>0 から始まるインデックス、 <see cref="T:System.Windows.Forms.ListViewItem" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例には、処理を示しています、 <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=fullName> イベントを使用して、 <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> と <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> プロパティです。 この例を実行するには、次のコードを貼り付けますフォームを含む ListView1 という名前の ListView コントロールと、少なくとも 3 つの項目が設定されます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ListView3\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラベルに割り当てられた新しいテキストを取得、 <see cref="T:System.Windows.Forms.ListViewItem" />です。</summary>
        <value>関連付けられる新しいテキスト、 <see cref="T:System.Windows.Forms.ListViewItem" /> または <see langword="null" /> テキストが変更されていない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ListView> という `ListView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples\#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>