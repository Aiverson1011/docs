<Type Name="DomainUpDown+DomainUpDownAccessibleObject" FullName="System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject">
  <TypeSignature Language="C#" Value="public class DomainUpDown.DomainUpDownAccessibleObject : System.Windows.Forms.Control.ControlAccessibleObject" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DomainUpDown/DomainUpDownAccessibleObject extends System.Windows.Forms.Control/ControlAccessibleObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control+ControlAccessibleObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー補助クライアント アプリケーションに <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールの情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows Forms has accessibility support built in and provides information about your application that allows it to work with accessibility client applications. Examples of accessibility client applications are screen enlarger and reviewer utilities, voice input utilities, on\-screen keyboards, alternative input devices, and keyboard enhancement utilities. The <xref:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject> class inherits from the <xref:System.Windows.Forms.AccessibleObject> class to provide information about the <xref:System.Windows.Forms.DomainUpDown> control to accessibility client applications.  
  
 There are instances when you will want to provide custom information, such as a control's name or description, to accessibility client applications. There are two ways of providing this information. To provide limited accessibility information for existing controls, set the control's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications.  
  
 If you require more accessibility information to be included with your control, you can write your own class that is derived from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes. For example, if you are writing your own control that is not derived from the common controls, or you require such operations as hit testing within your control, you should create a <xref:System.Windows.Forms.Control.ControlAccessibleObject> for your control by calling the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DomainUpDownAccessibleObject (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor(System.Windows.Forms.Control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.Control" /> を所有している、 <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />です。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">アクセス可能な子の 0 から始まるインデックス。</param>
        <summary>指定したインデックスに対応する子ユーザー補助オブジェクトを取得します。</summary>
        <returns>指定したインデックスに対応する子ユーザー補助オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject> のさまざまな部分に対応する子ユーザー補助オブジェクトを含む、 <xref:System.Windows.Forms.DomainUpDown> コントロールです。 次の表に、インデックスと子ユーザー補助オブジェクトの値、 <xref:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild%2A> メソッドを返します。  
  
|値|説明|  
|-------|--------|  
|0|テキスト ボックスのユーザー補助オブジェクト|  
|1|上向きと下向きの矢印ボタンは、ユーザー補助オブジェクト。|  
|2|ユーザー補助のオブジェクトの Items プロパティを <xref:System.Windows.Forms.DomainUpDown> コントロールです。|  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public override int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー補助オブジェクトに属する子の数を取得します。</summary>
        <returns>常に 3 が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー補助オブジェクトのロールを取得します。</summary>
        <value>
          <see cref="F:System.Windows.Forms.AccessibleRole.ComboBox" /> 値。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>