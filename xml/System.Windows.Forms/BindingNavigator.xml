<Type Name="BindingNavigator" FullName="System.Windows.Forms.BindingNavigator">
  <TypeSignature Language="C#" Value="public class BindingNavigator : System.Windows.Forms.ToolStrip, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingNavigator extends System.Windows.Forms.ToolStrip implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingNavigator" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RefreshItems")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("BindingSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingNavigatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データにバインドされている、フォーム上のコントロールを移動および操作するためのユーザー インターフェイス \(UI\) を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.BindingNavigator> control represents a standardized way to navigate and manipulate data on a form. In most cases, a <xref:System.Windows.Forms.BindingNavigator> is paired with a <xref:System.Windows.Forms.BindingSource> control to move through data records on a form and interact with them. In these cases, the <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> property is set to the associated <xref:System.Windows.Forms.BindingSource?displayProperty=fullName> component that acts as a data source.  
  
 By default, the <xref:System.Windows.Forms.BindingNavigator> control's user interface \(UI\) is composed of a series of <xref:System.Windows.Forms.ToolStrip> buttons, text boxes, and static text elements for most common data\-related actions, such as adding data, deleting data, and navigating through data. Each of these controls can be retrieved or set through an associated member of the <xref:System.Windows.Forms.BindingNavigator> control. Likewise, there is also a one\-to\-one correspondence to members within the <xref:System.Windows.Forms.BindingSource> class that programmatically perform the same functionality, as shown in the following table.  
  
|UI Control|<xref:System.Windows.Forms.BindingNavigator> member|<xref:System.Windows.Forms.BindingSource> member|  
|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|  
|**Move First**|<xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>|  
|**Move Previous**|<xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>|<xref:System.Windows.Forms.BindingSource.MovePrevious%2A>|  
|**Current Position**|<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>|<xref:System.Windows.Forms.BindingSource.Current%2A>|  
|**Count**|<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>|<xref:System.Windows.Forms.BindingSource.Count%2A>|  
|**Move Next**|<xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveNext%2A>|  
|**Move Last**|<xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveLast%2A>|  
|**Add New**|<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>|<xref:System.Windows.Forms.BindingSource.AddNew%2A>|  
|**Delete**|<xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>|<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>|  
  
 Adding a <xref:System.Windows.Forms.BindingNavigator> control to a form and binding it to a data source, such as a <xref:System.Windows.Forms.BindingSource>, will automatically establish the relationships in this table.  
  
 You can use one of the following techniques to customize this toolbar:  
  
-   Create the <xref:System.Windows.Forms.BindingNavigator> with the <xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29> constructor, which accepts a Boolean **parameterReference tag is not supported!!!!**  
     parameter, and set this parameter to **languageKeyword tag is not supported!!!!**  
    . Then add the desired <xref:System.Windows.Forms.ToolStripItem> objects to the <xref:System.Windows.Forms.ToolStrip.Items%2A> collection.  
  
-   If a great deal of customization is desired, or the custom design will be reused, derive a class from <xref:System.Windows.Forms.BindingNavigator> and override the <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> method to define additional or alternate standard items.  
  
   
  
## 例  
 The following code example demonstrates how to use a <xref:System.Windows.Forms.BindingNavigator> control to move through a data set. The set is contained in a <xref:System.Data.DataView>, which is bound to a <xref:System.Windows.Forms.TextBox> control with a <xref:System.Windows.Forms.BindingSource> component.  
  
 [!code-csharp[System.Windows.Forms.DataNavigator\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.BindingNavigator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The default constructor sets the <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> property to **languageKeyword tag is not supported!!!!**  
. This constructor is equivalent to calling the <xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29> constructor with a parameter value of **languageKeyword tag is not supported!!!!**  
. You can add the standard items by making a separate call to <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (bool addStandardItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool addStandardItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addStandardItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addStandardItems">
          <see langword="true" /> 標準の移動 UI を表示するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.BindingNavigator" /> 標準的な移動ユーザー インターフェイス \(UI\) を表示するかどうかを示すクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターの設定、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティを `null`します。 If <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> is `false`, <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>, <xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>, <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> and <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> will also be `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.ComponentModel.IContainer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.ComponentModel.IContainer" /> 新しいを追加する <see cref="T:System.Windows.Forms.BindingNavigator" /> を制御します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.BindingNavigator" /> クラスし、この新しいインスタンスを指定したコンテナーに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターが新しいを作成する手順を組み合わせることで、便利な機能として提供される <xref:System.Windows.Forms.BindingNavigator> コントロールと親への追加 <xref:System.ComponentModel.IContainer>します。 既定のコンス トラクターのように設定、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティを `null` され、標準のユーザー インターフェイスは表示されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.Windows.Forms.BindingSource bindingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.BindingSource bindingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Windows.Forms.BindingSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindingSource" Type="System.Windows.Forms.BindingSource" />
      </Parameters>
      <Docs>
        <param name="bindingSource">
          <see cref="T:System.Windows.Forms.BindingSource" /> データ ソースとして使用します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.BindingNavigator" /> 、指定したクラス <see cref="T:System.Windows.Forms.BindingSource" /> データ ソースとして。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して、 `BindingSource` 初期化パラメーター、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティです。 またにナビゲーション ボタンの標準セットを追加し、など、対応するプロパティを設定 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> と <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem AddNewItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem AddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **新規追加** \] ボタンをクリックします。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **新規追加** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定すると、 <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A> プロパティを生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **新規追加** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.AddNew%2A> メソッドと、 **新規追加** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **新規追加** ボタン、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは `null` または <xref:System.Windows.Forms.BindingSource.AllowNew%2A> プロパティは `false`です。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddStandardItems">
      <MemberSignature Language="C#" Value="public virtual void AddStandardItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStandardItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ナビゲーション項目の標準セットを追加、 <see cref="T:System.Windows.Forms.BindingNavigator" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> メソッドは、ユーザー インターフェイスの標準セットを追加 <xref:System.Windows.Forms.ToolStripItem> オブジェクトを <xref:System.Windows.Forms.BindingNavigator> などの基本的なナビゲーション操作のストリップをツール **Move First**, 、**Move Last**, 、および **新規追加**します。  
  
 オーバーライド <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 派生クラスを追加または代替のツール ストリップの項目を定義します。 派生クラスを最適なデザイン時サポートを確実には、各アイテム内の有効な値があることを確認してください、 <xref:System.Windows.Forms.ToolStripItem.Name%2A> プロパティです。 デザイン時に、これは、対応するメンバー変数の一意の名前の生成に使用されます。 項目の <xref:System.Windows.Forms.ToolStripItem.Name%2A> プロパティにメンバー変数に指定された名前の一致するように更新されます。  
  
> [!NOTE]
>  このメソッドが明示的にから既存のアイテムを削除、 <xref:System.Windows.Forms.BindingNavigator>, 、新しい値を設定するには、 <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>, 、<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A> と <xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A> プロパティです。 また <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 項目の追加中にレイアウトは中断されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripItem" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Name" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新を無効になります、 <see cref="T:System.Windows.Forms.ToolStripItem" /> の制御、 <see cref="T:System.Windows.Forms.BindingNavigator" /> コンポーネントの初期化中にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> と <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> メソッドを使用する、 <xref:System.Windows.Forms.BindingNavigator> 複数のプロパティへの変更を最適化するためにコントロールできます。 この 2 つのメソッドを使用して、相互に依存するプロパティを初期化するか、バッチは、デザイン時に複数のプロパティを設定します。 呼び出す、 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 初期化の開始をコントロールに通知するためのメソッドを呼び出し、 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 初期化を通知するためのメソッドが完了します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="BindingSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingSource BindingSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingSource BindingSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.BindingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.BindingSource" /> のデータ ソースであるコンポーネント。</summary>
        <value>
          <see cref="T:System.Windows.Forms.BindingSource" /> コンポーネントに関連付けられた <see cref="T:System.Windows.Forms.BindingNavigator" />します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、データ ソースを <xref:System.Windows.Forms.BindingNavigator> が間を移動します。 具体的には、 <xref:System.Windows.Forms.BindingSource.List%2A> のプロパティ、 <xref:System.Windows.Forms.BindingSource> 実際のデータ リストを表します。  
  
 これは、既定のプロパティを <xref:System.Windows.Forms.BindingNavigator> クラスです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.BindingNavigator> データ セット内を移動するコントロール。 セットは <xref:System.Data.DataView> に含まれ、<xref:System.Windows.Forms.BindingSource> コンポーネントを持つ <xref:System.Windows.Forms.TextBox> コントロールにバインドされます。 このコード例に示されている例の一部である [How to: Move Through a DataSet with the Windows Forms BindingNavigator Control](http://msdn.microsoft.com/ja-jp/146d97be-3d97-400e-accb-860bbf47729d)です。  
  
 [!code-csharp[System.Windows.Forms.DataNavigator\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="CountItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem CountItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem CountItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> 、関連する項目の総数を表示する <see cref="T:System.Windows.Forms.BindingSource" />です。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 、関連する項目の総数を表示する <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> プロパティは `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 項目の数は、 <xref:System.Windows.Forms.BindingSource.Count%2A> のプロパティ、 <xref:System.Windows.Forms.BindingSource>です。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripLabel>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      </Docs>
    </Member>
    <Member MemberName="CountItemFormat">
      <MemberSignature Language="C#" Value="public string CountItemFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CountItemFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示される情報を書式設定に使用する文字列、 <see cref="P:System.Windows.Forms.BindingNavigator.CountItem" /> コントロールです。</summary>
        <value>形式 <see cref="T:System.String" /> 項目数の書式を設定するために使用します。 既定では文字列 "of {0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> コントロールは、 <xref:System.Windows.Forms.ToolStripLabel> 内の項目の合計数を表示する、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>です。<xref:System.Windows.Forms.BindingNavigator.CountItemFormat%2A> プロパティは、書式指定文字列の数の書式を設定するために使用します。  
  
 書式指定文字列の詳細については、次を参照してください。、 <xref:System.String.Format%28System.String%2CSystem.Object%29?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.String.Format" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem DeleteItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem DeleteItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> と関連付けられている、 **削除** 機能します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **削除** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定すると、このプロパティを生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **削除** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> メソッドと、 **削除** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **削除** \] ボタンをクリックして次の実行時の状況で: <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、 `null`, 、 <xref:System.Windows.Forms.BindingSource.Count%2A> プロパティは 0、または <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> プロパティは、 `false`です。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.BindingNavigator" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingNavigator> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新を有効、 <see cref="T:System.Windows.Forms.ToolStripItem" /> の制御、 <see cref="T:System.Windows.Forms.BindingNavigator" /> コンポーネントの初期化終了後にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> と <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> メソッドを使用する、 <xref:System.Windows.Forms.BindingNavigator> 複数のプロパティへの変更を最適化するためにコントロールできます。 この 2 つのメソッドを使用して、相互に依存するプロパティを初期化するか、バッチは、デザイン時に複数のプロパティを設定します。 呼び出す、 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 初期化の開始をコントロールに通知するためのメソッドを呼び出し、 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 初期化を通知するためのメソッドが完了します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirstItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveFirstItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveFirstItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> と関連付けられている、 **Move First** 機能します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **Move First** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **Move First** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.MoveFirst%2A> メソッドと、 **Move First** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **Move First** 次の実行時の状況でボタン: <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、 `null`, 、 <xref:System.Windows.Forms.BindingSource.Position%2A?displayProperty=fullName> プロパティが 0、または <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 関連 <xref:System.Windows.Forms.BindingSource> は `false`です。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveLastItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveLastItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveLastItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> と関連付けられている、 **Move Last** 機能します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **Move Last** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **Move Last** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.MoveLast%2A> メソッドと、 **Move Last** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **Move Last** 次の実行時の状況でボタン: <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、 `null` または <xref:System.Windows.Forms.BindingSource.Position%2A> プロパティがより大きいか等しい、 <xref:System.Windows.Forms.BindingSource.Count%2A> プロパティです。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveNextItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveNextItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveNextItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> と関連付けられている、 **Move Next** 機能します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **Move Next** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **Move Next** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.MoveNext%2A> メソッドと、 **Move Next** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **Move Next** 次の実行時の状況でボタン: <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、 `null` または <xref:System.Windows.Forms.BindingSource.Position%2A> プロパティがより大きいか等しい、 <xref:System.Windows.Forms.BindingSource.Count%2A> プロパティです。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MovePreviousItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MovePreviousItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MovePreviousItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> と関連付けられている、 **Move Previous** 機能します。</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> を表す、 **Move Previous** ボタンをクリックして、 <see cref="T:System.Windows.Forms.BindingSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定すると、 <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A> プロパティを生成、 <xref:System.Windows.Forms.Control.Click> のイベント ハンドラー、 **Move Previous** \] ボタンをクリックします。 このイベント ハンドラーを呼び出す、 <xref:System.Windows.Forms.BindingSource.MovePrevious%2A> メソッドと、 **Move Previous** 実行時にボタンをクリックします。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 <xref:System.Windows.Forms.BindingNavigator> コントロールが無効になります、 **Move Previous** 、次の実行時の状況ボタンをクリックします。、 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> プロパティは、 `null` または <xref:System.Windows.Forms.BindingSource.Position%2A> プロパティが 0 以下です。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripButton>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="OnRefreshItems">
      <MemberSignature Language="C#" Value="protected virtual void OnRefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 対応するを上げるに加え <xref:System.Windows.Forms.BindingNavigator.RefreshItems> 、イベント、 <xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A> メソッドは、関連する状態に対して、次の操作を実行 <xref:System.Windows.Forms.BindingSource>します。  
  
-   現在使用して内部のメンバーを設定 <xref:System.Windows.Forms.BindingSource> 状態です。  
  
-   有効または現在の適切なユーザー インターフェイス \(UI\) の項目を無効に <xref:System.Windows.Forms.BindingSource> 状態です。  
  
-   更新プログラム、 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> と <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="PositionItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem PositionItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem PositionItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ToolStripItem" /> 内の現在位置を表示する、 <see cref="T:System.Windows.Forms.BindingSource" />です。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripItem" /> を現在の位置が表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の実装で、 <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> プロパティの型は <xref:System.Windows.Forms.ToolStripTextBox>です。  
  
 このプロパティは、 `null` 既に設定されていない、その前にアクセスが、 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 明示的または暗黙的に呼び出されます。  
  
 現在の位置を取得することで計算、 <xref:System.Windows.Forms.BindingSource.Position%2A> のプロパティ、 <xref:System.Windows.Forms.BindingSource>, 、位置 1 から始まる数に変換する場合は 1 を追加するとします。  
  
 既定の実装では、このプロパティは型のコントロールを表します。 <xref:System.Windows.Forms.ToolStripTextBox>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripTextBox" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="public event EventHandler RefreshItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RefreshItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータの現在の状態を反映するために、移動ユーザー インターフェイス \(UI\) の状態を更新する必要が生じたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.BindingNavigator.RefreshItems?displayProperty=fullName> ことを通知するイベントのナビゲーション UI、 <xref:System.Windows.Forms.BindingNavigator> 、関連する現在の状態を反映するように更新する必要がある <xref:System.Windows.Forms.BindingSource>です。  
  
 これは、既定のイベントを <xref:System.Windows.Forms.BindingNavigator> クラスです。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.BindingNavigator.RefreshItems> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.BindingNavigator> という `BindingNavigator1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.BindingNavigator.RefreshItems> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#124)]
 [!code-vb[System.Windows.Forms.EventExamples\#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#124)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void RefreshItemsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItemsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.RefreshItemsCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データの現在の状態に合わせて標準項目の状態を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライドした場合 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 派生クラスでオーバーライドすることはも <xref:System.Windows.Forms.BindingNavigator.RefreshItemsCore%2A> に追加したカスタムの標準的な項目を更新する、 <xref:System.Windows.Forms.BindingNavigator> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フォーム検証を実行して、検証が成功したかどうかを返します。</summary>
        <returns>
          <see langword="true" /> 検証が成功しフォーカスを移動する場合、 <see cref="T:System.Windows.Forms.BindingNavigator" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アイテムのクリック アクションを実行する前にフォーカスが移動を確認するには、このメソッドを使用して、 <xref:System.Windows.Forms.BindingNavigator> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.BindingNavigator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>