<Type Name="ToolStripTextBox" FullName="System.Windows.Forms.ToolStripTextBox">
  <TypeSignature Language="C#" Value="public class ToolStripTextBox : System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripTextBox extends System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripTextBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripControlHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Forms.Design.ToolStripItemDesignerAvailability(System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.MenuStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ContextMenuStrip)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>内のテキスト ボックスを表す、 <see cref="T:System.Windows.Forms.ToolStrip" /> ではテキストを入力するユーザー。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolStripTextBox> <xref:System.Windows.Forms.TextBox> でホストするために最適化された、 <xref:System.Windows.Forms.ToolStrip>です。 ホストされるコントロールのプロパティおよびイベントのサブセットが公開される、 <xref:System.Windows.Forms.ToolStripTextBox> レベルでは、基になる <xref:System.Windows.Forms.TextBox> コントロールはから完全にアクセスできる、 <xref:System.Windows.Forms.ToolStripTextBox.TextBox%2A> プロパティです。  
  
 <xref:System.Windows.Forms.ToolStripTextBox> コントロールによりユーザーはアプリケーションにテキストを入力します。 このコントロールには、複数行の編集など、標準の Windows テキスト ボックス コントロールに含まれていない追加の機能があります。  
  
 通常、 <xref:System.Windows.Forms.ToolStripTextBox> コントロールを 1 行のテキストを表示や入力として受け入れに使用します。 使用することができます、 <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> 複数行の表示または入力するテキストを有効にします。 設定、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> と <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> プロパティ `true` 複数行テキストの大きい操作を許可するように <xref:System.Windows.Forms.ToolStripTextBox> コントロールです。  
  
 入力したテキストに量を制限することができます、 <xref:System.Windows.Forms.ToolStripTextBox> コントロールを設定して、 <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> プロパティを特定の文字数。 使用して、 <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> だけ大文字、小文字のみ、ユーザー入力を有効にするプロパティまたはに大文字と小文字の文字を組み合わせた、 <xref:System.Windows.Forms.ToolStripTextBox> コントロールです。  
  
 入力されているからテキストを制限する、 <xref:System.Windows.Forms.ToolStripTextBox> 、コントロールのイベント ハンドラーを作成することができます、 <xref:System.Windows.Forms.Control.KeyDown> コントロールで入力した各文字を検証するためにイベントです。 内のデータのすべてのエントリを制限することも、 <xref:System.Windows.Forms.ToolStripTextBox> コントロールを設定して、 <xref:System.Windows.Forms.ToolStripTextBox.ReadOnly%2A> プロパティを `true`します。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Windows.Forms.ToolStripTextBox> 自動入力候補オプションを含む、さまざまな一般的なプロパティ設定にします。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> の名前。</param>
        <summary>指定した名前を使用して、<see cref="T:System.Windows.Forms.ToolStripTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor(System.Windows.Forms.Control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c">派生元のコントロール、 <see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> クラスが基本コントロールから派生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数行で ENTER キーを押すかどうかを示す値を設定を取得または <see cref="T:System.Windows.Forms.TextBox" /> コントロールがコントロールで、新しい行のテキストを作成またはフォームの既定のボタンをアクティブにします。</summary>
        <value>
          <see langword="true" /> ENTER キーがコントロールの複数行のバージョンで、新しい行のテキストを作成する場合 <see langword="false" /> 場合は、ENTER キーがフォームの既定のボタンをアクティブにします。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値の場合 `false`, 、複数行に新しい行を作成するには、CTRL \+ ENTER を押す必要がある <xref:System.Windows.Forms.ToolStripTextBox> コントロールです。 フォームの既定のボタンがない場合は、し、ENTER キーは常に作成、新しい行のテキスト コントロールでは、このプロパティの値に関係なくします。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タブ オーダーに従って次のコントロールにフォーカスを移動させる代わりに、コントロールにタブ文字を入力させる複数行テキスト ボックス コントロールで Tab キーを押すかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ユーザーが TAB キーを使用して複数行テキスト ボックスにタブを入力できる場合 <see langword="false" /> 場合は、TAB キーを押すとフォーカスを移動します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> にプロパティが設定されている `true`, 、ユーザーがタブ オーダーの次のコントロールにフォーカスを移動するには、ctrl キーと TAB を押す必要があります。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.AcceptsTab" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#612](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#612)]
 [!code-vb[System.Windows.Forms.EventExamples\#612](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#612)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.AppendText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">現在の内容に追加するテキスト、 <see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</param>
        <summary>現在のテキストにテキストを追加、 <see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するときに使うカスタム文字列コレクション、 <see cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" /> にプロパティが設定されている <see langword="CustomSource" />します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> で使用する <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, 、<xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, 、および <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> を作成するプロパティ、 <xref:System.Windows.Forms.ToolStripTextBox> 保持しているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって自動的に入力文字列は完成です。 これは <xref:System.Windows.Forms.ToolStripTextBox> コントロールで Url、アドレス、ファイル名またはコマンド頻繁に入力されます。  
  
 使用、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> プロパティは省略可能で、設定する必要がありますが、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティを `CustomSource` を使用するために <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>します。  
  
 使用する必要があります、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティをまとめています。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> のオート コンプリートの動作を制御するオプションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.AutoCompleteMode" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.AutoCompleteMode.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, 、<xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, 、および <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> を作成するプロパティ、 <xref:System.Windows.Forms.ToolStripTextBox> 保持しているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって自動的に入力文字列は完成です。 これは <xref:System.Windows.Forms.ToolStripTextBox> コントロールで Url、アドレス、ファイル名またはコマンド頻繁に入力されます。  
  
 使用、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> プロパティは省略可能で、設定する必要がありますが、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティを `CustomSource` を使用するために <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>します。  
  
 使用する必要があります、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティをまとめています。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オート コンプリートで使用する完全な文字列のソースを指定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.AutoCompleteSource" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.AutoCompleteSource.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, 、<xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, 、および <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> を作成するプロパティ、 <xref:System.Windows.Forms.ToolStripTextBox> 保持しているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって自動的に入力文字列は完成です。 これは <xref:System.Windows.Forms.ToolStripTextBox> コントロールで Url、アドレス、ファイル名またはコマンド頻繁に入力されます。  
  
 使用、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> プロパティは省略可能で、設定する必要がありますが、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティを `CustomSource` を使用するために <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>します。  
  
 使用する必要があります、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> と <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティをまとめています。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このプロパティは使用されません。</summary>
        <value>コントロールに表示される背景イメージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このプロパティは使用されません。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageLayout" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の罫線の種類、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.BorderStyle" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> プロパティを既定の 3 次元コントロールだけでなく、境界線とフラット スタイルのコントロールを作成します。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.BorderStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#613](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#613)]
 [!code-vb[System.Windows.Forms.EventExamples\#613](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#613)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがで前回の操作を元に戻すことができるかどうかを示す値を取得、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールです。</summary>
        <value>
          <see langword="true" /> ユーザーがテキスト ボックス コントロールで実行される前の操作を元に戻す場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る場合 `true`, 、呼び出すことができます、 <xref:System.Windows.Forms.ToolStripTextBox.Undo%2A> メソッドの最後の操作を元に戻す、 <xref:System.Windows.Forms.ToolStripTextBox>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールは、入力された文字の大文字と小文字を変更します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.CharacterCasing" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.CharacterCasing.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 、アプリケーションで必要な文字の大文字と小文字を変更するプロパティです。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのテキストを消去、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.ClearUndo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アンドゥ バッファーから最新の操作に関する情報を削除、 <see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、アプリケーションの状態に基づいて、元に戻す操作が繰り返されるようにすることができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の選択内容をコピー、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> をクリップボードにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 代わりに、このメソッドを使用できる、 <xref:System.Windows.Forms.Clipboard> でテキストのコピー先のクラス、 <xref:System.Windows.Forms.ToolStripTextBox> し、クリップボードに配置します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Cut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の選択項目を移動、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> をクリップボードにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドからテキストを切り取るのみが、 <xref:System.Windows.Forms.ToolStripTextBox> 場合は、コントロールでテキストを選択します。 代わりに、このメソッドを使用できる、 <xref:System.Windows.Forms.Clipboard> でテキストのコピー先のクラス、 <xref:System.Windows.Forms.ToolStripTextBox> し、クリップボードに移動します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>間隔を取得します \(ピクセル単位\) 間、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> と隣接する項目。</summary>
        <value>A <see cref="T:System.Windows.Forms.Padding" /> 間隔を表す値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> の既定のサイズを取得します。</summary>
        <value>既定値 <see cref="T:System.Drawing.Size" /> の <see cref="T:System.Windows.Forms.ToolStripTextBox" /> \(ピクセル単位\)。 既定のサイズは 100 x 25 ピクセルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  優れたパフォーマンスを維持するために設定しないでください、 <xref:System.Drawing.Size> の <xref:System.Windows.Forms.ToolStripTextBox> のコンス トラクターにします。 最良の方法をオーバーライドすること、 <xref:System.Windows.Forms.ToolStripTextBox.DefaultSize%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="P:System.Windows.Forms.ToolStripTextBox.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> object with the desired dimensions rather than overriding all the implementation.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.DeselectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定の値、 <see cref="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" /> 文字がコントロールで選択されていないようにプロパティが 0 です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">一番近くにある文字をシークする位置。</param>
        <summary>コントロール内の指定した位置の一番近くにある文字を取得します。</summary>
        <returns>指定した位置にある文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場所が指定されている場合、 `pt` パラメーターが文字列で指定した位置に最も近いの最初の文字は、コントロールのクライアント領域外 `pt` が返されます。 このメソッドを使用すると、どの文字がコントロール内の特定のポイントの近くにあるかを決定します。 この値は、その場所にあるテキストに対して操作を実行し、使用できます。  
  
> [!NOTE]
>  場合に指定した場所、 `pt` パラメーターが文字列で指定した位置に最も近いの最後の文字は、コントロールのクライアント領域の右側にある上にある `pt` が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">検索する位置。</param>
        <summary>指定位置に最も近い文字のインデックスを取得します。</summary>
        <returns>指定した位置の 0 から始まる文字インデックス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで指定された位置に最も近い文字のインデックスを返します、 `pt` パラメーター。 文字のインデックスは、スペースを含む、コントロール内のテキストの 0 から始まるインデックスです。 このメソッドを使用すると、ここで、テキストで、ユーザーが、このメソッドに、マウスの座標に渡すことによって、マウスを決定します。 マウス ポインターがコントロールのテキストに含まれる単語の上に置いたときにタスクを実行する場合に役立つことができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">最初の文字のインデックスを取得する行。</param>
        <summary>指定された行の先頭文字のインデックスを取得します。</summary>
        <returns>指定した行における 0 から始まる文字インデックス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `lineNum` パラメーターが負の場合、 <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> 0 を返します。 場合、 `lineNum` パラメーターは、コントロールでは、行の数を超えています。 <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> コントロール内の最後の行の最初の文字インデックスを返します。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> 物理的な行の最初の文字インデックスを返します。 物理的な行は、表示されている直線、割り当て済みの行です。 表示されている行の数は、ワード ラップが生じたため、割り当てられた行の数を上回ることがあります。 2 つの長い行を割り当てる場合など、 <xref:System.Windows.Forms.RichTextBox> を制御し、設定 <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> と <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> に `true`, 、2 時間に割り当てられている行と、次の 4 つの物理 \(または行が表示されます\)。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexOfCurrentLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の行の先頭文字のインデックスを取得します。</summary>
        <returns>現在の行における 0 から始まる文字インデックス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">検索する文字インデックスの位置。</param>
        <summary>コントロールのテキスト内で、指定の文字位置からの行数を取得します。</summary>
        <returns>文字インデックスを含む行の 0 から始まる行番号。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで指定した文字のインデックスに基づく行番号を確認することができます、 `index` メソッドのパラメーターです。 コントロール内のテキストの最初の行では、値 0 を返します。<xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> メソッドは、インデックス付きの文字がコントロール内にある物理的な行番号を返します。 などの場合は、論理の最初の行のテキストの一部、コントロールは次の行に折り返されます、 <xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> メソッドは、指定した文字位置にある文字は、2 つ目の物理的な回線ラッピングする場合に 1 を返します。 場合 <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> に設定されている `false`, は次に、行の部分がラップなし、および指定された文字のインデックスの場合は 0 を返します。 このメソッドを使用して、特定の文字のインデックスが内にあるどの行を判断できます。 呼び出しの後など、 <xref:System.Windows.Forms.RichTextBox.Find%2A> 、テキストを検索する方法、検索結果がある文字のインデックスを取得することができます。 によって返される文字のインデックスを持つ、このメソッドを呼び出すことができます、 <xref:System.Windows.Forms.RichTextBox.Find%2A> 、word の行を決定する方法が見つかりました。  
  
> [!NOTE]
>  文字のインデックスが指定されている場合、 `index` パラメーターは、コントロール内に含まれる利用可能な行数外ですが、最後の行番号が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">位置の取得対象とする文字のインデックス。</param>
        <summary>指定の文字インデックスにおけるコントロール内の位置を取得します。</summary>
        <returns>指定した文字の位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、コントロールの特定の文字のインデックスが存在を確認できます。 コントロール内の単語のショートカット メニュー項目やヘルプ情報を表示するには、そのような作業は、このメソッドを使用できます。 たとえば、ユーザーがコントロールに含まれる単語右クリックしたときに、ユーザーにオプションのメニューを表示する場合は、してこのメソッドを正しく表示する word の位置を決定する <xref:System.Windows.Forms.ContextMenuStrip> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetPreferredSize(System.Drawing.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">コントロールのカスタム サイズ領域。</param>
        <summary>コントロールが収まる四角形の領域のサイズを取得します。</summary>
        <returns>四角形の幅と高さを表す、順序を付与した <see cref="T:System.Drawing.Size" /> 型のペア。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.GetPreferredSize(System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックス コントロールがフォーカスを失ったときに、そのコントロールで選択されているテキストが強調表示されたままかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> テキスト ボックス コントロールがフォーカスを失ったときに、選択したテキストが強調表示されない場合 <see langword="false" />, 、テキスト ボックス コントロールがフォーカスを失ったときに、選択したテキストが強調表示されたままです。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、別のフォームまたはダイアログ ボックスにフォーカスが、スペル チェック\] ダイアログ ボックスなど、テキスト ボックス コントロールで強調表示されているテキストを保持することができます。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.HideSelection%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.HideSelection" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#614](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#614)]
 [!code-vb[System.Windows.Forms.EventExamples\#614](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#614)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のテキストの記述、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールです。</summary>
        <value>テキスト ボックス コントロールのテキストを格納する文字列の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 配列内の各要素は、テキスト ボックス コントロール内のテキストの行になります。 場合、 <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> にテキスト ボックス コントロールのプロパティが設定されている `true` テキストの改行文字が表示されると、改行文字の後のテキストが、配列内の新しい要素に追加され、別々 の行に表示されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがテキスト ボックス コントロールに入力または貼り付けできる最大文字数を取得または設定します。</summary>
        <value>コントロールに入力できる文字数。 既定値は 32767 文字です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 郵便番号や電話番号などの値のコントロールに入力したテキストの長さを制限する、またはデータのデータベースに入力するときに入力したテキストの長さを制限するのには、このプロパティを使用することができます。 データベースに対応するフィールドの最大長をコントロールに入力したテキストを制限することができます。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはことを示す値を設定、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> コントロールが作成または最後にその内容が設定されたコントロールがユーザーによって変更されました。</summary>
        <value>
          <see langword="true" /> コントロールの内容が変更された場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用するには、ユーザーがの内容を変更したかどうかを判断する、 <xref:System.Windows.Forms.ToolStripTextBox> コントロールです。 加えられた変更を示すコードでこのプロパティを設定することもできる、 <xref:System.Windows.Forms.ToolStripTextBox> アプリケーションによって制御します。 変更が行われたかどうかを判断する検証とデータ保存の方法でこのプロパティを使用することができます、 <xref:System.Windows.Forms.ToolStripTextBox> 変更された内容を検証または保存を管理します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.ModifiedChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.Modified" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#615](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#615)]
 [!code-vb[System.Windows.Forms.EventExamples\#615](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#615)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このプロパティは使用されません。</summary>
        <value>有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.MultilineChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このイベントは使用されません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このイベントは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.ModifiedChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.MultilineChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">イベントをサブスクライブするコントロール。</param>
        <summary>ホストされるコントロールからイベントをサブスクライブします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">イベントをアンサブスクライブするコントロール。</param>
        <summary>ホストされるコントロールからのイベントをアンサブスクライブします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Paste" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスの現在の選択項目をクリップボードの内容と置き換えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ToolStripTextBox.Paste%2A> メソッドは、のみ、テキストがクリップボードに格納されている場合、コントロールにテキストが貼り付けるされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかのテキスト、 <see cref="T:System.Windows.Forms.ToolStripTextBox" /> は読み取り専用です。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> が読み取り専用である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると `true`, 、実行時に、ユーザーがコントロールの内容を変更することはできませんが、コード内の内容を変更することができます。 持つコントロールを無効にせずにこの機能を使用することができます、 <xref:System.Windows.Forms.Control.Enabled%2A> をコピーする内容を有効にするプロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.ReadOnly" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#616](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#616)]
 [!code-vb[System.Windows.Forms.EventExamples\#616](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#616)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.ScrollToCaret" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの内容を現在のキャレット位置までスクロールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、キャレットがコントロールの可視領域内に入るまで、コントロールの内容をスクロールすることができます。 キャレットは、コントロールの可視領域の下にある場合、 <xref:System.Windows.Forms.ToolStripTextBox.ScrollToCaret%2A> キャレットがコントロールの下部に表示されるまでにメソッドが、コントロールの内容をスクロールします。 コントロールの可視領域の上にキャレットを配置すると場合、このメソッドは、キャレットがコントロールの上部に表示されるまで、コントロールの内容をスクロールします。 複数行テキスト ボックスにこのメソッドを使用すると、テキストのエントリ ポイントが、コントロールの可視領域内であることを確認します。  
  
> [!NOTE]
>  キャレットがコントロールの可視領域に既に配置されている場合か、コントロールにフォーカスがない場合は、このメソッドを指定しても影響はありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Select(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">テキスト ボックス内で現在選択されているテキストの最初の文字の位置。</param>
        <param name="length">選択する文字数。</param>
        <summary>テキスト ボックスでテキストの範囲を選択します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールのテキストの最初の文字を開始位置を設定する場合は、設定、 `start` パラメーターを 0 にします。 タイミングなどのテキストの部分文字列を選択するこのメソッドを使用するコントロールのテキストの検索と情報を交換します。  
  
> [!NOTE]
>  設定して、テキスト ボックス内、カレットを移動することができますプログラムを使用して、 `start` パラメーターに移動し、設定をテキスト ボックス内の位置を `length` パラメーターにゼロ \(0\) の値。 テキスト ボックスは、キャレットを移動するために、フォーカスが必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.SelectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスのすべてのテキストを選択します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、コントロール内のすべてのテキストを選択することができます。 このメソッドを使用する、 <xref:System.Windows.Forms.TextBoxBase.Cut%2A> メソッドで、テキストをコントロールでは、コントロールの内容全体を切り取って、クリップボードに貼り付けることを選択する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールで現在選択されているテキストを示す値を取得または設定します。</summary>
        <value>テキスト ボックスで現在選択されているテキストを表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在選択されているテキストを変更するには、このプロパティにテキストを割り当てることができます、<xref:System.Windows.Forms.ToolStripTextBox>です。 現在選択されているテキストがない場合、<xref:System.Windows.Forms.ToolStripTextBox>, 、長さ 0 の文字列を返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択されている文字の数、<see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</summary>
        <value>選択されている文字の数、<see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、任意の文字が選択したテキストの操作を実行する前に現在選択されたテキスト ボックス コントロールのかどうかを判断することができます。 時の値、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティがコントロールの値のテキスト内の文字数よりも大きい値に設定されている、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティの値を減算コントロール内のテキストの長さ全体に設定されて、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> プロパティ \(の任意の値が指定されている場合、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> プロパティ\)。  
  
> [!NOTE]
>  設定して、テキスト ボックス内、カレットを移動することができますプログラムを使用して、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> キャレットを移動し、設定するテキスト ボックス内の位置に、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティ値を 0 \(ゼロ\)。 テキスト ボックスは、キャレットを移動するために、フォーカスが必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択したテキストの開始点、<see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</summary>
        <value>選択したテキストの開始位置、<see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールのテキストが選択されていない場合、このプロパティは、新しいテキストのカーソル位置を示します。 コントロール内のテキストの長さを超えた位置にこのプロパティを設定すると、選択範囲の開始位置は最後の文字の後に配置されます。 テキスト ボックス コントロールでテキストを選択すると、このプロパティの変更が低下する可能性の値、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティです。 によって示される位置にあるコントロール内の残りのテキストの場合、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> プロパティは、の値より小さい、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティ、値の <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティが自動的に小さきます。 値、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> が増加するが、プロパティ、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティです。  
  
> [!NOTE]
>  設定して、テキスト ボックス内、カレットを移動することができますプログラムを使用して、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> キャレットを移動し、設定するテキスト ボックス内の位置に、 <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> プロパティ値を 0 \(ゼロ\)。 テキスト ボックスは、キャレットを移動するために、フォーカスが必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定義されたショートカットを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>ショートカットを有効にするには <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> プロパティを有効にする、または次のショートカット キーの組み合わせを無効にします。  
  
|ショートカット キー|ショートカット キー|  
|----------------|----------------|  
|Ctrl \+ Z|Ctrl \+ E|  
|Ctrl \+ C|Ctrl \+ I|  
|Ctrl \+ X|Ctrl \+ Y|  
|Ctrl \+ V|Ctrl \+ BackSpace|  
|Ctrl \+ A|Ctrl \+ Del|  
|Ctrl \+ L|SHIFT キーを押しながら DEL キーを押す|  
|Ctrl \+ R|SHIFT キーを押しながら INSERT|  
  
 その他のショートカット キーを指定するには、このプロパティをオーバーライドすることができます。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextBox TextBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TextBox TextBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ホストされている取得 <see cref="T:System.Windows.Forms.TextBox" /> コントロールです。</summary>
        <value>ホストされている <see cref="T:System.Windows.Forms.TextBox" />します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxTextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextBoxTextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextBoxTextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内のテキストの配置、 <see cref="T:System.Windows.Forms.TextBox" /> コントロールです。</summary>
        <value>いずれか、 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> コントロールでテキストを配置する方法を指定する列挙値。 既定値は、<see cref="F:System.Windows.Forms.HorizontalAlignment.Left" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のテキストを配置するこのプロパティを使用する、 <xref:System.Windows.Forms.TextBox> 、フォーム上のテキストのレイアウトと一致します。 たとえば、ある場合は、コントロールはすべて、フォームの右側にある、設定できます、 <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> プロパティを <xref:System.Windows.Forms.HorizontalAlignment.Right>, 、テキストは既定の左揃えの代わりに、コントロールの右側に配置するとします。  
  
   
  
## 例  
 次のコード例は、さまざまな設定の構文を示します <xref:System.Windows.Forms.ToolStripTextBox> など、一般的なプロパティの設定、 <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> プロパティです。  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxTextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextBoxTextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextBoxTextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> イベントです。 このレポートは、イベントが発生してデバッグに役立つ説明を使用します。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.ToolStripTextBox> という `ToolStripTextBox1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#617](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#617)]
 [!code-vb[System.Windows.Forms.EventExamples\#617](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#617)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのテキストの長さを取得します。</summary>
        <value>テキストに含まれる文字の数、 <see cref="T:System.Windows.Forms.ToolStripTextBox" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Windows.Forms.ToolStripTextBox.TextLength%2A> プロパティの合計文字数の知識が必要なコントロールのテキスト内の特定の文字列の検索などのタスクの文字列内の文字数を決定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Undo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト ボックスで直前に実行された編集操作を元に戻します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは最後のクリップボードを元に戻すか、テキストを変更する場合は、テキスト ボックス コントロールで実行される操作、 <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> プロパティを返します。 `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このプロパティは使用されません。</summary>
        <value>有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>