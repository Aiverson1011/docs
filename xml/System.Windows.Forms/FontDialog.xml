<Type Name="FontDialog" FullName="System.Windows.Forms.FontDialog">
  <TypeSignature Language="C#" Value="public class FontDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FontDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Apply")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Font")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ローカル コンピューターにインストールされているフォントのうち、いずれかを選択するようユーザーに要求します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 継承されたメンバー <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> この特定のコモン ダイアログ ボックスの作成を呼び出す必要があります。<xref:System.Windows.Forms.CommonDialog.HookProc%2A> 特定のダイアログ ボックスのフックの機能を実装するオーバーライドできます。  
  
 インスタンスを作成する場合 <xref:System.Windows.Forms.FontDialog>, 、読み取り\/書き込みプロパティの一部を初期値に設定します。 これらの値の一覧は、次を参照してください。、 <xref:System.Windows.Forms.FontDialog.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> を表示する、 <xref:System.Windows.Forms.FontDialog>です。 このコードが必要ですが、 <xref:System.Windows.Forms.Form> で既に作成されて、 <xref:System.Windows.Forms.TextBox> にボタンが配置されるとします。 必要ですが、 `fontDialog1` が用意されています。<xref:System.Drawing.Font> 、サイズの情報が、色の情報ではなくが含まれています。  
  
 [!code-cpp[Classic FontDialog Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Drawing.Font" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.FontDialog" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスを作成する場合 <xref:System.Windows.Forms.FontDialog>, 、次の読み取り\/書き込みプロパティを初期化します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Windows.Forms.FontDialog.AllowSimulations%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVectorFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVerticalFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowScriptChange%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.Color%2A>|`Color.Black`|  
|<xref:System.Windows.Forms.FontDialog.FixedPitchOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.MaxSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.MinSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.ScriptsOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowApply%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowColor%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.ShowHelp%2A>|`false`|  
  
 プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="AllowScriptChange">
      <MemberSignature Language="C#" Value="public bool AllowScriptChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowScriptChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが文字で指定されたセットを変更するかどうかを示す値を設定、 **スクリプト** 現在表示されている以外の文字を表示するコンボ ボックスに設定します。</summary>
        <value>
          <see langword="true" /> 文字セットで指定されているかどうか、ユーザーが変更できる、 **スクリプト** コンボ ボックス。 そうしないと、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **スクリプト** で検出されたコンボ ボックス、 **フォント** \] ダイアログ ボックスには、選択したフォントに関連付けられている文字セットが含まれています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowSimulations">
      <MemberSignature Language="C#" Value="public bool AllowSimulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSimulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスで、グラフィック デバイス インターフェイス \(GDI: Graphics Device Interface\) におけるフォント表示をシミュレーションできるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> フォント表示をシミュレーションできる場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVectorFonts">
      <MemberSignature Language="C#" Value="public bool AllowVectorFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVectorFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスでベクター フォントを選択できるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ベクター フォントを許可する場合です。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVerticalFonts">
      <MemberSignature Language="C#" Value="public bool AllowVerticalFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVerticalFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスに縦書きと横書きのフォントを両方とも表示するのか、横書きフォントだけを表示するのかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 垂直方向および水平の両方のフォントを許可する場合です。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public event EventHandler Apply;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Apply" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FontDialog.Apply" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがクリックしたときに発生、 **適用** フォント\] ダイアログ ボックスにボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たびに、 **適用** ボタンがクリックして別 <xref:System.Windows.Forms.FontDialog.Apply> イベントが発生します。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.ShowEffects%2A> と <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> メンバーと処理、 <xref:System.Windows.Forms.FontDialog.Apply> イベントです。 格納しているフォームに貼り付けを次のコードでこの例を実行する、 <xref:System.Windows.Forms.FontDialog> という名前 `FontDialog1` と <xref:System.Windows.Forms.Button> という `Button1`します。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択したフォントの色を取得または設定します。</summary>
        <value>選択したフォントの色。 既定値は <see cref="P:System.Drawing.Color.Black" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example uses <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to display a <xref:System.Windows.Forms.FontDialog>. This code requires that a <xref:System.Windows.Forms.Form> has already been created with a <xref:System.Windows.Forms.TextBox> and button placed on it. It also requires that the `fontDialog1` has been created. The <xref:System.Drawing.Font> contains the size information but not the color information.  
  
 [!code-cpp[Classic FontDialog Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
      </Docs>
    </Member>
    <Member MemberName="EventApply">
      <MemberSignature Language="C#" Value="protected static readonly object EventApply;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly object EventApply" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.FontDialog.EventApply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>所有している、 <see cref="E:System.Windows.Forms.FontDialog.Apply" /> イベントです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedPitchOnly">
      <MemberSignature Language="C#" Value="public bool FixedPitchOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedPitchOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスで選択できるフォントを固定ピッチ フォントだけにするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> のみを固定ピッチ フォントを選択できます。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択したフォントを取得または設定します。</summary>
        <value>選択したフォント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> を表示する、 <xref:System.Windows.Forms.FontDialog>です。 このコードが必要ですが、 <xref:System.Windows.Forms.Form> で既に作成されて、 <xref:System.Windows.Forms.TextBox> にボタンが配置されるとします。 必要ですが、 `fontDialog1` が用意されています。<xref:System.Drawing.Font> 、サイズの情報が、色の情報ではなくが含まれています。  
  
 [!code-cpp[Classic FontDialog Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
      </Docs>
    </Member>
    <Member MemberName="FontMustExist">
      <MemberSignature Language="C#" Value="public bool FontMustExist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FontMustExist" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存在しないフォントやスタイルをユーザーが選択しようとした場合、ダイアログ ボックスにエラー メッセージが表示されるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> フォントまたは存在しません。 スタイルを選択するときに、ユーザー\] ダイアログ ボックスをエラー状態を指定する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.ShowEffects%2A> と <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> メンバーと処理、 <xref:System.Windows.Forms.FontDialog.Apply> イベントです。 格納しているフォームに貼り付けを次のコードでこの例を実行する、 <xref:System.Windows.Forms.FontDialog> という名前 `FontDialog1` と <xref:System.Windows.Forms.Button> という `Button1`します。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">ダイアログ ボックス ウィンドウへのハンドル。</param>
        <param name="msg">受信されるメッセージです。</param>
        <param name="wparam">メッセージに関する追加情報。</param>
        <param name="lparam">メッセージに関する追加情報。</param>
        <summary>コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、コモン ダイアログ ボックスのフック プロシージャを指定します。</summary>
        <returns>既定のダイアログ ボックス プロシージャでメッセージを処理する場合は値 0。既定のダイアログ ボックス プロシージャではメッセージを無視する場合は 0 以外の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 用のフック プロシージャは、関数がアプリケーションに到達する前に、イベントをインターセプトするメカニズムです。 オーバーライドする場合、<xref:System.Windows.Forms.CommonDialog.HookProc%2A?displayProperty=fullName>のメソッド、<xref:System.Windows.Forms.CommonDialog>クラス、オペレーティング システムが、ウィンドウにオペレーティング システムのメッセージを投稿する関数のオーバーライドを呼び出します。  
  
   
  
## 例  
 次のコード例をオーバーライドする方法を示しています、<xref:System.Windows.Forms.FontDialog.HookProc%2A>メソッドです。 例では、継承するクラスから成る、<xref:System.Windows.Forms.FontDialog>クラスです。 クラスの<xref:System.Windows.Forms.FontDialog.HookProc%2A>override、例では、評価、メソッドの`msg`パラメーターの特定の Windows メッセージの定数値です。 場合、`msg`例では、パラメーターには、指定した定数と等しいに渡された Windows メッセージを識別するトレース出力を書き込みます、<xref:System.Windows.Forms.FontDialog.HookProc%2A>メソッドです。 この例では、する必要があります、クラス、<xref:System.Windows.Forms.FontDialog.HookProc%2A>メソッドは継承を宣言、<xref:System.Windows.Forms.FontDialog>クラスです。  
  
 [!code-cpp[HookProc Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> method.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.CommonDialog" />
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public int MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択できるポイント サイズの最大値を取得または設定します。</summary>
        <value>ユーザーが選択できるポイント サイズの最大値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最大および最小のサイズの設定を有効にするために <xref:System.Windows.Forms.FontDialog.MaxSize%2A> より大きくなければなりません <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、どちらも 0 より大きくする必要があります。  
  
 このプロパティを 0 より小さい値に設定しようとすると、値 0 が使用されているが発生します。 設定した場合 <xref:System.Windows.Forms.FontDialog.MaxSize%2A> 値より小さい <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MinSize%2A> に設定されている <xref:System.Windows.Forms.FontDialog.MaxSize%2A>します。 設定の効果 <xref:System.Windows.Forms.FontDialog.MinSize%2A> と <xref:System.Windows.Forms.FontDialog.MaxSize%2A> 同じ値には、1 つのフォント サイズにサイズの選択を制限します。  
  
 ポイントのサイズが 0 の場合、フォント サイズの制限はありません。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.ShowEffects%2A> と <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> メンバーと処理、 <xref:System.Windows.Forms.FontDialog.Apply> イベントです。 格納しているフォームに貼り付けを次のコードでこの例を実行する、 <xref:System.Windows.Forms.FontDialog> という名前 `FontDialog1` と <xref:System.Windows.Forms.Button> という `Button1`します。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MinSize" />
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public int MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択できるポイント サイズの最小値を取得または設定します。</summary>
        <value>ユーザーが選択できるポイント サイズの最小値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最大および最小のサイズの設定を有効にするために <xref:System.Windows.Forms.FontDialog.MaxSize%2A> より大きくなければなりません <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、どちらも 0 より大きくする必要があります。  
  
 このプロパティを 0 より小さい値に設定しようとすると、値 0 が使用されているが発生します。 設定した場合 <xref:System.Windows.Forms.FontDialog.MinSize%2A> よりも大きい値に <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A> の値に設定されている <xref:System.Windows.Forms.FontDialog.MinSize%2A>します。 設定の効果 <xref:System.Windows.Forms.FontDialog.MinSize%2A> と <xref:System.Windows.Forms.FontDialog.MaxSize%2A> 同じ値には、1 つのフォント サイズにサイズの選択を制限します。  
  
 ポイントのサイズが 0 の場合、フォント サイズの制限はありません。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.ShowEffects%2A> と <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> メンバーと処理、 <xref:System.Windows.Forms.FontDialog.Apply> イベントです。 格納しているフォームに貼り付けを次のコードでこの例を実行する、 <xref:System.Windows.Forms.FontDialog> という名前 `FontDialog1` と <xref:System.Windows.Forms.Button> という `Button1`します。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MaxSize" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected virtual void OnApply (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApply(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.FontDialog.Apply" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 概要については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> method.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.FontDialog.Apply" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>初期化する値を取得、 <see cref="T:System.Windows.Forms.FontDialog" />です。</summary>
        <value>初期化する内部値のビットごとの組み合わせ、 <see cref="T:System.Windows.Forms.FontDialog" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.FontDialog.Options%2A> プロパティは、Win32 を使用して色のダイアログ ボックスを初期化するために使用されるフラグに対応しています。 プロパティを使用して、 <xref:System.Windows.Forms.FontDialog> クラスを取得し、オプションを設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ダイアログ ボックスのオプションをすべて既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オプションがリセット、取り消し線、下線、色の効果の場合は有効です。 フォント一覧ににはは、システムでサポートされているスクリーン フォントのみが含まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.RunDialog(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">コモン ダイアログ ボックスのオーナー ウィンドウのウィンドウ ハンドル。</param>
        <summary>ファイル ダイアログ ボックスを指定します。</summary>
        <returns>ダイアログ ボックスが正常に動作した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.FontDialog.RunDialog%2A> メソッドが呼び出されるは、\[フォント\] ダイアログ ボックスのユーザーが呼び出すときに、 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptsOnly">
      <MemberSignature Language="C#" Value="public bool ScriptsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスで、非 OEM 文字セット、Symbol 文字セット、および ANSI 文字セットのすべてに対するフォントを選択できるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> すべて非 OEM 文字セット、記号文字のセットと ANSI 文字セットのフォントを選択する場合。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
      </Docs>
    </Member>
    <Member MemberName="ShowApply">
      <MemberSignature Language="C#" Value="public bool ShowApply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowApply" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowApply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定\] ダイアログ ボックスが含まれるかどうかを示す値、 **適用** \] ボタンをクリックします。</summary>
        <value>
          <see langword="true" /> ダイアログ ボックスが含まれている場合、 **適用** \] ボタンをクリックします。 それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、選択項目を適用する方法を示しています、 <xref:System.Windows.Forms.FontDialog> 内のテキストに、 <xref:System.Windows.Forms.RichTextBox>です。 イベントのハンドラー\] ダイアログ ボックスを表示する例では、初期化、 <xref:System.Windows.Forms.FontDialog.ShowApply%2A> プロパティを `true` し、表示、 <xref:System.Windows.Forms.FontDialog>です。<xref:System.Windows.Forms.FontDialog.Apply> イベント ハンドラー、 <xref:System.Windows.Forms.FontDialog.Font%2A> にプロパティが割り当てられている、 <xref:System.Windows.Forms.Control.Font%2A?displayProperty=fullName> プロパティです。  
  
 [!code-cpp[FontDialog.ShowApply\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/FontDialog.ShowApply/CPP/form1.cpp#1)]
 [!code-csharp[FontDialog.ShowApply\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/FontDialog.ShowApply/CS/form1.cs#1)]
 [!code-vb[FontDialog.ShowApply\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/FontDialog.ShowApply/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowColor">
      <MemberSignature Language="C#" Value="public bool ShowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスに色の選択肢を表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ダイアログ ボックスに色の選択肢が表示される場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> を表示する、 <xref:System.Windows.Forms.FontDialog>です。 このコードが必要ですが、 <xref:System.Windows.Forms.Form> で既に作成されて、 <xref:System.Windows.Forms.TextBox> にボタンが配置されるとします。 必要ですが、 `fontDialog1` が用意されています。<xref:System.Drawing.Font> 、サイズの情報が、色の情報ではなくが含まれています。  
  
 [!code-cpp[Classic FontDialog Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowEffects">
      <MemberSignature Language="C#" Value="public bool ShowEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスに、取り消し線、下線、テキストの色などのオプションをユーザーが指定するためのコントロールを表示するかどうかを示す値を設定または取得します。</summary>
        <value>
          <see langword="true" /> ダイアログ ボックスには、取り消し線、下線、およびテキストの色のオプションを設定するコントロールが含まれている場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Windows.Forms.FontDialog.MinSize%2A>, 、<xref:System.Windows.Forms.FontDialog.MaxSize%2A>, 、<xref:System.Windows.Forms.FontDialog.ShowEffects%2A> と <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> メンバーと処理、 <xref:System.Windows.Forms.FontDialog.Apply> イベントです。 格納しているフォームに貼り付けを次のコードでこの例を実行する、 <xref:System.Windows.Forms.FontDialog> という名前 `FontDialog1` と <xref:System.Windows.Forms.Button> という `Button1`します。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイアログ ボックスに \[?\] ボタンを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ダイアログ ボックスは、ヘルプ\] ボタンを表示する場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ダイアログ ボックスで選択されている現在のフォントの名前を含む文字列を取得します。</summary>
        <returns>現在選択されているフォントの名前を含む文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>