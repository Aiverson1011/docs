<Type Name="DragEventHandler" FullName="System.Windows.Forms.DragEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DragEventHandler(object sender, DragEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DragEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    <summary>処理するメソッドを表す、 <see cref="E:System.Windows.Forms.Control.DragDrop" />, 、<see cref="E:System.Windows.Forms.Control.DragEnter" />, 、または <see cref="E:System.Windows.Forms.Control.DragOver" /> のイベント、 <see cref="T:System.Windows.Forms.Control" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DragEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 デリゲートとイベントを処理の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次の例では、2 つのドラッグ アンド ドロップ操作 <xref:System.Windows.Forms.ListBox> コントロールです。 呼び出しの例、 <xref:System.Windows.Forms.Control.DoDragDrop%2A> メソッド、ドラッグ操作の開始時にします。 マウスが移動した場合に、ドラッグ操作が開始以上 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> 中にマウスの位置から、 <xref:System.Windows.Forms.Control.MouseDown> イベントです。<xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> メソッドを使用中にドラッグする項目のインデックスを確認して、 `MouseDown` イベントです。  
  
 例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。 この例では 2 つカーソル ファイル `3dwarro.cur` と `3dwno.cur`, 、カスタム ドラッグのアプリケーションのディレクトリに存在および非ドロップ カーソルの場合、それぞれします。 場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> がオンになっています。 カスタムのカーソルが設定されている、 <xref:System.Windows.Forms.Control.GiveFeedback> イベント ハンドラーです。  
  
 キーボードの状態を評価、 <xref:System.Windows.Forms.Control.DragOver> 右側のイベント ハンドラー `ListBox`, ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL \+ ALT キーの状態に基づいています。 内の場所、 `ListBox` 時にも決定されますが、ドロップが発生する可能性、 `DragOver` イベントです。 削除するデータがない場合、 `String`, 、 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> に設定されている <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=fullName>します。 削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>します。  
  
 右側にドロップするデータ `ListBox` で決定、 <xref:System.Windows.Forms.Control.DragDrop> イベント ハンドラーと `String` の適切な場所にある値を追加、 `ListBox`です。 ドラッグ操作が、フォームの境界の外側に移動しでドラッグ アンド ドロップ操作を取り消したかどうか、 <xref:System.Windows.Forms.Control.QueryContinueDrag> イベント ハンドラーです。  
  
 このコードの抜粋では、使用方法を示します、 <xref:System.Windows.Forms.DragEventHandler> を持つデリゲート、 <xref:System.Windows.Forms.Control.DragOver> イベントです。 参照してください、 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 完全なコード例のメソッドです。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
    <altmember cref="T:System.Windows.Forms.DragEventArgs" />
  </Docs>
</Type>