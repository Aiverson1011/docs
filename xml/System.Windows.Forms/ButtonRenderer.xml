<Type Name="ButtonRenderer" FullName="System.Windows.Forms.ButtonRenderer">
  <TypeSignature Language="C#" Value="public sealed class ButtonRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ButtonRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonRenderer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Visual スタイルの有無は、ボタン コントロールの表示に使用されるメソッドを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ButtonRenderer> クラスのセットを提供 `static` ボタン コントロールを描画するために使用するメソッドです。 コントロールのユーザー インターフェイスを描画すること、コントロールを表示します。 ボタンを描画するのいずれかの操作を使用して、 <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> メソッドです。 これらのメソッドは、さまざまな図面テキストやボタンのイメージなどのオプションを提供します。  
  
 オペレーティング システムで visual スタイルが有効になっているし、visual スタイルが現在のアプリケーションに適用される <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> の現在の visual スタイルのボタンを描画します。 それ以外の場合、 <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> の従来の Windows スタイルのボタンを描画します。 これは、オペレーティング システムの現在の visual スタイル設定を自動的に照合する必要がありますが、カスタム コントロールを描画する場合に便利です。  
  
 このクラスの機能をラップする、 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer?displayProperty=fullName> によって公開されている要素の 1 つに設定されている、 <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton?displayProperty=fullName> クラスです。 詳細については、「[Rendering Controls with Visual Styles](http://msdn.microsoft.com/ja-jp/a5b178ba-610e-46c4-a6c0-509c0886a744)」を参照してください。  
  
   
  
## 例  
 次のコード例を使用するカスタム コントロールを作成する方法を示しています、 <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> ボタンを描画するメソッドです。 ボタンをクリックし、コントロールが元のボタンの境界内の小さなボタンを描画し、コントロールでは、ときに、 <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> メソッドを元のボタンの残りの部分をペイントします。  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer\#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer\#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ButtonRenderer\#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
    <altmember cref="P:System.Windows.Forms.Application.RenderWithVisualStyles" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
  </Docs>
  <Members>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定された状態と境界を使用して、ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態と境界で、フォーカスを示すオプションを示す四角形のボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="image">ボタン上に描画する <see cref="T:System.Drawing.Image" />。</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> の大きさを表す <c>image</c>します。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態とイメージを指定し、オプションでフォーカスを示す四角形の境界を使用して、ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="buttonText">ボタン上に描画する <see cref="T:System.String" />。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> に適用する <c>buttonText</c>です。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態と、指定したテキストと、フォーカスを示すオプションの四角形の境界を使用して、ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ButtonRenderer.DrawButton%28System.Drawing.Graphics%2CSystem.Drawing.Rectangle%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Boolean%2CSystem.Windows.Forms.VisualStyles.PushButtonState%29> メソッドにカスタム コントロールの <xref:System.Windows.Forms.Control.OnPaint%2A> マウス ポインターの場所によって決まります状態でボタンを描画するメソッドです。 このコード例が示されている例の一部は、 <xref:System.Windows.Forms.ButtonRenderer> クラスです。  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ButtonRenderer\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="buttonText">ボタン上に描画する <see cref="T:System.String" />。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> に適用する <c>buttonText</c>です。</param>
        <param name="flags">ビットごとの組み合わせ、 <see cref="T:System.Windows.Forms.TextFormatFlags" /> に適用する値 <c>buttonText</c>です。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態と、指定したテキストとテキストの書式設定、およびオプションでフォーカスを示す四角形の境界を使用して、ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="buttonText">ボタン上に描画する <see cref="T:System.String" />。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> に適用する <c>buttonText</c>です。</param>
        <param name="image">ボタン上に描画する <see cref="T:System.Drawing.Image" />。</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> の大きさを表す <c>image</c>します。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態と、指定したテキストとイメージ、およびオプションでフォーカスを示す四角形の境界を使用して、ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> ボタンを描画するために使用します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> ボタンの境界を指定します。</param>
        <param name="buttonText">ボタン上に描画する <see cref="T:System.String" />。</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> に適用する <c>buttonText</c>です。</param>
        <param name="flags">ビットごとの組み合わせ、 <see cref="T:System.Windows.Forms.TextFormatFlags" /> に適用する値 <c>buttonText</c>です。</param>
        <param name="image">ボタン上に描画する <see cref="T:System.Drawing.Image" />。</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> の大きさを表す <c>image</c>します。</param>
        <param name="focused">
          <see langword="true" /> ボタンにフォーカス四角形を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>指定した状態と境界のボタン コントロールを描画します。指定したテキスト、テキストの書式設定、およびイメージです。省略可能なフォーカス四角形を持つ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オペレーティング システムで visual スタイルが有効にすると、visual スタイルが現在のアプリケーションに適用されて、このメソッドは現在の visual スタイルでボタンを描画します。 それ以外の場合、従来の Windows スタイルのボタンを描画します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public static void DrawParentBackground (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawParentBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawParentBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> の親の背景を描画するために使用 <c>childControl</c>します。</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> 親コントロールの背景を描画するためのです。 この四角形は、子コントロールの境界内に配置する必要があります。</param>
        <param name="childControl">コントロールの親の背景が描画されます。</param>
        <summary>指定領域にコントロールの親の背景を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、 <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> メソッドをカスタム コントロールの領域をペイントします。 このコード例が示されている例の一部は、 <xref:System.Windows.Forms.ButtonRenderer> クラスです。  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ButtonRenderer\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public static bool IsBackgroundPartiallyTransparent (System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackgroundPartiallyTransparent(valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent(System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="state">いずれか、 <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> ボタンの表示状態を指定する値。</param>
        <summary>ボタンの背景が半透明またはアルファ ブレンドを持つかどうかを示します。</summary>
        <returns>
          <see langword="true" /> ボタンの背景に半透明またはアルファ ブレンドがある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMatchingApplicationState">
      <MemberSignature Language="C#" Value="public static bool RenderMatchingApplicationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderMatchingApplicationState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはレンダラーが描画スタイルを決定する、アプリケーションの状態を使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> アプリケーションの状態を使用して描画スタイルを決定する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> プロパティは、 `true`, 、 <xref:System.Windows.Forms.ButtonRenderer> から設定を使用して、 <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A?displayProperty=fullName> 描画スタイルを決定するプロパティです。 場合 <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> は `false`, 、レンダラーは、visual スタイルを使用して常にレンダリングされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ボタン コントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>