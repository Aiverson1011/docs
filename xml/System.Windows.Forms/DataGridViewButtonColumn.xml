<Type Name="DataGridViewButtonColumn" FullName="System.Windows.Forms.DataGridViewButtonColumn">
  <TypeSignature Language="C#" Value="public class DataGridViewButtonColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewButtonColumn extends System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewButtonColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewButtonColumn), "DataGridViewButtonColumn.bmp")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コレクションをホスト <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataGridViewButtonColumn> クラスは、特殊な種類の <xref:System.Windows.Forms.DataGridViewColumn> クラスの論理的なホストに使用するセルのシンプルなユーザー入力に応答します。 A <xref:System.Windows.Forms.DataGridViewButtonColumn> が関連付けられている <xref:System.Windows.Forms.DataGridViewButtonCell> ですべて <xref:System.Windows.Forms.DataGridViewRow> と交差することです。 各セルは、次のようなユーザー インターフェイス \(UI\) を提供する <xref:System.Windows.Forms.Button> コントロールです。  
  
 すべてのセルに対して同じボタン テキストを表示する次のように設定します。、 <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> プロパティを `true` 設定と、 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> プロパティを目的のボタンのテキスト。  
  
 この列の型の既定の並べ替えモードは <xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>です。  
  
 ユーザー ボタンのクリックに応答するには、処理、 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName> または <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=fullName> イベントです。 イベント ハンドラーを使用できます、 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=fullName> ボタン列でクリックが発生したかどうかを決定するプロパティです。 使用することができます、 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=fullName> ボタン セルと列のヘッダーではなく、クリックが発生したかどうかを決定するプロパティです。  
  
> [!NOTE]
>  使用してボタンの列にあるボタンを描画する visual スタイルが有効にすると、 <xref:System.Windows.Forms.ButtonRenderer>, 、およびセルのなどのプロパティで指定されたスタイル <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> 影響を与えるありません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.DataGridViewButtonColumn> 特定の行に対してアクションを実行します。 この例では、 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=fullName> イベント ハンドラーは、クリックをボタンのセルにし、行に関連付けられているビジネス オブジェクトを取得するかどうかをまず調べます。 この例で使用できる例の一部である [How to: Access Objects in a Windows Forms DataGridViewComboBoxCell Drop\-Down List](http://msdn.microsoft.com/ja-jp/bcbe794a-d1fa-47f8-b5a3-5f085b32097d)です。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding\#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding\#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you derive from <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" /> and add new properties to the derived class, be sure to override the <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> method to copy the new properties during cloning operations. You should also call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> method so that the properties of the base class are copied to the new cell.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
    <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellClick" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" /> クラスが既定の状態にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、次のプロパティを設定して、列を初期化します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A>|新しい <xref:System.Windows.Forms.DataGridViewButtonCell>。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> のプロパティ、 <xref:System.Windows.Forms.DataGridViewCellStyle> によって返されるオブジェクト、 <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> プロパティです。|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter?displayProperty=fullName>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいセルの作成に使用するテンプレートを取得または設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataGridViewCell" /> 後に、列内のすべてのセルがモデル化します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンス トラクター、 <xref:System.Windows.Forms.DataGridViewButtonColumn> クラスは、新しく作成するには、このプロパティを初期化 <xref:System.Windows.Forms.DataGridViewButtonCell>します。  
  
> [!CAUTION]
>  セル テンプレートのプロパティを変更しても、列の既存のセルのユーザー インターフェイス \(UI\) がすぐに影響はありません。 これらの変更は、列が再生成した後にのみ明らかな \(列を並べ替えることで、たとえば、またはを呼び出すことによって、 <xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=fullName> メソッド\)。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.DataGridViewButtonColumn> 、従業員がした売上を表示します。 セルのテンプレートを使用して、すべてのボタンに同じ色を適用します。 この例で使用できる例の一部である、 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">このプロパティを設定するキャストできませんでしたするときに指定した値、 <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonColumn.#ctor" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>対象の列の同一コピーを作成します。</summary>
        <returns>
          <see cref="T:System.Object" /> を表す、複製された <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ボタンのセルの列を複製するのにには、このメソッドを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> in a derived class, call the base class's <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> method so that the properties of the base class are copied to the new cell, and be sure to also copy the values of any properties that were added to the derived class.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の既定のセル スタイルを取得または設定します。</summary>
        <value>既定スタイルとして適用される <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The default <xref:System.Windows.Forms.DataGridViewCellStyle> returned by this property has an initial <xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> property value of <xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter>. This value overrides the value specified in the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property of the <xref:System.Windows.Forms.DataGridView> control, but may be overridden by other cell style properties. For more information, see [Cell Styles in the Windows Forms DataGridView Control](http://msdn.microsoft.com/ja-jp/dbb75ed6-8804-4232-8382-f9920c2e380c).  
  
> [!NOTE]
>  When visual styles are enabled, the buttons in a button column are painted using a <xref:System.Windows.Forms.ButtonRenderer> and cell styles specified through properties such as <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> have no effect.  
  
   
  
## 例  
 The following code example demonstrates the use of this property.  
  
 [!code-csharp[System.Windows.Forms.GridViewContentAlignment\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/CS/changecolumnalignment.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewContentAlignment\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/VB/changecolumnalignment.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または列のボタンのセルのフラット スタイルの外観を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.FlatStyle" /> 列のボタンの外観を示す値。 既定値は、<see cref="F:System.Windows.Forms.FlatStyle.Standard" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A> プロパティは、列内のセルの外観を指定します。 詳細については、次を参照してください。、 <xref:System.Windows.Forms.FlatStyle> 列挙します。  
  
 取得するか、このプロパティの設定を取得または設定、 <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> によって返されるオブジェクトのプロパティ、 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> プロパティです。 またセットでこのプロパティを設定、 <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> 列と更新のすべてのセルのプロパティ列を表示します。 指定された個々 のセルの値をオーバーライドするには、列の値を設定した後、セルの値を設定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.DataGridViewButtonColumn> 、従業員がした売上を表示します。 この例で使用できる例の一部である、 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタン セルに表示される既定のテキストを設定します。</summary>
        <value>A <see cref="T:System.String" /> テキストを格納しています。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各 <xref:System.Windows.Forms.DataGridViewButtonCell> として持つ列に含まれる、 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> のプロパティの値 `true` を表示、 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> セルのボタンのプロパティ値です。  
  
 関連付けられている場合 <xref:System.Windows.Forms.DataGridView> コントロール、このプロパティを変更するは、列の表示を更新します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.DataGridViewButtonColumn> 、従業員がした売上を表示します。<xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> プロパティを使用して、列ヘッダーを設定します。 この例で使用できる例の一部である、 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn\_AllColumns\_Bound\_Employees\#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの値を設定するときに、 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティは <see langword="null" />です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列を説明する文字列を取得します。</summary>
        <returns>列を説明する <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.ToString" />
      </Docs>
    </Member>
    <Member MemberName="UseColumnTextForButtonValue">
      <MemberSignature Language="C#" Value="public bool UseColumnTextForButtonValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseColumnTextForButtonValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> プロパティ値がこの列のセルのボタンのテキストとして表示されます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> プロパティの値が列にあるボタンに表示される <see langword="false" /> 場合、 <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" /> 各セルのプロパティ値がそのボタンに表示されます。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A?displayProperty=fullName> ボタンのセルがボタンのテキストとして表示されます。<xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> プロパティを使用すると、各セルのボタンのテキストを設定するか、または使用する、 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> ボタン セルのすべてのプロパティの値。  
  
 取得するか、このプロパティの設定を取得または設定、 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> によって返されるオブジェクトのプロパティ、 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> プロパティです。 またセットでこのプロパティを設定、 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 列と更新のすべてのセルのプロパティ列を表示します。 指定された個々 のセルの値をオーバーライドするには、列の値を設定した後、セルの値を設定します。  
  
   
  
## 例  
 次のコード例では、このプロパティの使用方法を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc\#010](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#010)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc\#010](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#010)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> プロパティの値が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" />
      </Docs>
    </Member>
  </Members>
</Type>