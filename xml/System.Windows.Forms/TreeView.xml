<Type Name="TreeView" FullName="System.Windows.Forms.TreeView">
  <TypeSignature Language="C#" Value="public class TreeView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeView" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("AfterSelect")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Nodes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>によって表される各ラベル付きの項目の階層コレクションを表示、 <see cref="T:System.Windows.Forms.TreeNode" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.Nodes%2A> コレクションに含まれるすべての <xref:System.Windows.Forms.TreeNode> オブジェクトに割り当てられている、 <xref:System.Windows.Forms.TreeView> コントロールです。 このコレクション内のツリー ノードは、ツリーのルート ノードと呼ばれます。 ルートのツリー ノードに、後で追加されているツリー ノードが子ノードと呼ばれます。 各 <xref:System.Windows.Forms.TreeNode> 他のコレクションを含めることができます <xref:System.Windows.Forms.TreeNode> オブジェクト、した方がコレクションを反復処理する場合は、ツリー構造内の場所を特定が困難にします。 解析することによって、 <xref:System.Windows.Forms.TreeNode.FullPath%2A?displayProperty=fullName> を使用して文字列、 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 文字列の場所を決定する値、 <xref:System.Windows.Forms.TreeNode> ラベルの開始し、終了します。  
  
 ツリー ノードの横にあるイメージを表示するには、割り当てることによって、 <xref:System.Windows.Forms.ImageList> に、 <xref:System.Windows.Forms.TreeView.ImageList%2A> プロパティとのインデックス値を参照する、 <xref:System.Drawing.Image> で、 <xref:System.Windows.Forms.ImageList> に割り当てる <xref:System.Drawing.Image>します。 次のプロパティを使用して、イメージを割り当てます。  
  
-   設定、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> プロパティのインデックス値を <xref:System.Drawing.Image> ツリー ノードが選択されていないときに表示します。  
  
-   設定、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティのインデックス値を <xref:System.Drawing.Image> ツリー ノードが選択されているときに表示します。  
  
 によって参照される画像、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> と <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティの値に割り当てられているすべてのツリー ノードによって表示される既定イメージは、 <xref:System.Windows.Forms.TreeView.Nodes%2A> コレクションです。 各ツリー ノードは、既定のイメージを設定して上書きできます、 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A?displayProperty=fullName> と <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A?displayProperty=fullName> プロパティです。  
  
 表示される状態のイメージ、 <xref:System.Windows.Forms.TreeView> は既定では 16 x 16 ピクセルです。 設定、 <xref:System.Windows.Forms.ImageList.ImageSize%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、画像の表示方法に影響はありません。 ただし、app.config ファイルには、次のエントリが含まれている場合、状態のイメージは、システム DPI 設定に従ってサイズ変更します。  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 子ツリー ノードの次のレベルを表示するツリー ノードを拡張できます。 ユーザーが展開、 <xref:System.Windows.Forms.TreeNode> をいずれかが横に表示される場合に、プラス記号 \(\+\) ボタンをクリックすると、 <xref:System.Windows.Forms.TreeNode>, 、することも、 <xref:System.Windows.Forms.TreeNode> を呼び出して、 <xref:System.Windows.Forms.TreeNode.Expand%2A?displayProperty=fullName> メソッドです。 すべてのツリー ノードの子レベルを展開する、 <xref:System.Windows.Forms.TreeNode.Nodes%2A> コレクションを呼び出して、 <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> メソッドです。 子を折りたたむことができます <xref:System.Windows.Forms.TreeNode> レベルを呼び出して、 <xref:System.Windows.Forms.TreeNode.Collapse%2A?displayProperty=fullName> メソッド、またはユーザー ボタンを押してできます、マイナス記号 \(\-\)、いずれかが横に表示される場合、 <xref:System.Windows.Forms.TreeNode>です。 呼び出すことも、 <xref:System.Windows.Forms.TreeNode.Toggle%2A?displayProperty=fullName> 拡張と縮小の状態の間で交互に使用するメソッドです。  
  
 ツリー ノードは、チェック ボックスを必要に応じて表示できます。 チェック ボックスを表示する設定、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に `true`します。<xref:System.Windows.Forms.TreeNode.Checked%2A> にプロパティが設定されている `true` ツリー ノードのチェックされた状態になっています。  
  
> [!NOTE]
>  設定、 <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName> 内からプロパティ、 <xref:System.Windows.Forms.TreeView.BeforeCheck> または <xref:System.Windows.Forms.TreeView.AfterCheck> イベントが何度も発生するイベントが発生し、予期しない動作が発生することができます。 たとえばに設定し、 <xref:System.Windows.Forms.TreeNode.Checked%2A> 再帰的に、ユーザーが展開し、それぞれを個別に確認する必要があるないように、子ノードを更新したら、イベント ハンドラーのプロパティです。 イベントが複数回発生したことを防ぐ場合のみ再帰的なコードを実行するイベント ハンドラーにロジックを追加します。、 <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> のプロパティ、 <xref:System.Windows.Forms.TreeViewEventArgs> に設定されていない <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=fullName>します。 これを行う方法の例は、例」のセクションを参照してください、 <xref:System.Windows.Forms.TreeView.AfterCheck> または <xref:System.Windows.Forms.TreeView.BeforeCheck> イベントです。  
  
 外観を変更することができます、 <xref:System.Windows.Forms.TreeView> 一部の表示とスタイル プロパティを設定して制御します。 設定 <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> に `true` 各横にあるプラス記号またはマイナス記号のボタンが表示されます <xref:System.Windows.Forms.TreeNode> を展開または折りたたまれ、それぞれことができます。 設定、 <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティを `true` により、 <xref:System.Windows.Forms.TreeView> ルートのすべてのツリー ノードを結合する線を表示します。 設定して、ルート ノードに子ツリー ノードを接続する線を表示する、 <xref:System.Windows.Forms.TreeView.ShowLines%2A> プロパティを `true`します。 設定、 <xref:System.Windows.Forms.TreeView.HotTracking%2A> プロパティを `true` にマウス ポインターとしてツリー ノードのラベルの外観を変更します。 ホット トラッキング、ツリー ノードのラベルは、ハイパーリンクの外観に実行します。 外観をカスタマイズできる完全にも、 <xref:System.Windows.Forms.TreeView> コントロールです。 これを行うには、次のように設定します。、 <xref:System.Windows.Forms.TreeView.DrawMode%2A> プロパティ以外の値を <xref:System.Windows.Forms.TreeViewDrawMode.Normal?displayProperty=fullName> を処理し、 <xref:System.Windows.Forms.TreeView.DrawNode> イベントです。  
  
> [!NOTE]
>  設定するときに、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>, 、<xref:System.Windows.Forms.TreeView.Scrollable%2A>, 、<xref:System.Windows.Forms.TreeView.ImageIndex%2A>, 、および <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> 、実行時にプロパティ、 <xref:System.Windows.Forms.TreeView> ハンドルが再作成されます \(を参照してください <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName>\) コントロールの外観を更新します。 これにより、すべてのツリー ノードが折りたたまれ、選択したを除き <xref:System.Windows.Forms.TreeNode>します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Windows.Forms.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewMisc\#10](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewMisc/cs/form1.cs#10)]
 [!code-vb[TreeViewMisc\#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewMisc/vb/form1.vb#10)]  
  
 内の顧客情報を表示する、次のより複雑なコード例、 <xref:System.Windows.Forms.TreeView> コントロールです。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客は 15 の注文と共に表示されます。 描画、 <xref:System.Windows.Forms.TreeView> を使用して抑制、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> と <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッド、および待機時間は <xref:System.Windows.Forms.Cursor> が表示されます中に、 <xref:System.Windows.Forms.TreeView> を作成し、描画、 <xref:System.Windows.Forms.TreeNode> オブジェクトです。 この例は、 `Customer` オブジェクトのコレクションが保持できる `Order` オブジェクトです。 という名前のカーソル ファイルがあることも必要です `MyWait.cur` のインスタンスを作成したアプリケーションのディレクトリで、 <xref:System.Windows.Forms.TreeView> の control 権限、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、折りたたみの状態を変更、 <xref:System.Windows.Forms.TreeView> チェックされたすべてのノードが表示されるようにします。 最初に、すべてのノードを展開すると、されのハンドラーが追加、 <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベントです。 次に、すべてのノードが折りたたまれています。<xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント ハンドラーは、特定のノードがオンになっている子ノードを持つかどうかを決定します。 ノードが子を選択した場合は、そのノードの折りたたみが取り消されました。 ノードの横にマイナス記号をクリックすると、通常のノードを許可するための <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント ハンドラーが削除されます。  
  
 処理することでこの動作を実装することも、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベント、そのトピックの例に示すようにします。  
  
 [!code-cpp[TreeViewShowCheckedNodes2\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes2\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes2\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="AfterCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCheck" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのチェック ボックスがオンにされた後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName> 内からプロパティを <xref:System.Windows.Forms.TreeView.BeforeCheck> または <xref:System.Windows.Forms.TreeView.AfterCheck> イベント ハンドラーが複数回発生するイベントが発生し、予期しない動作が発生することができます。 イベントが複数回発生したことを防ぐ場合のみ再帰的なコードを実行するイベント ハンドラーにロジックを追加します。、 <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> のプロパティ、 <xref:System.Windows.Forms.TreeViewEventArgs> に設定されていない <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=fullName>します。  
  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例のすべての子ツリー ノードの更新、 <xref:System.Windows.Forms.TreeNode> 、ユーザーがチェック状態を変更するとします。 このコードが必要、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.TreeView> を持つ <xref:System.Windows.Forms.TreeNode> 内のオブジェクトの <xref:System.Windows.Forms.TreeNodeCollection>です。<xref:System.Windows.Forms.TreeNodeCollection> 子ノードを持つツリー ノードを持つ必要があります。  
  
 [!code-cpp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCollapse" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが折りたたまれた後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例のすべての子ツリー ノードの更新、 <xref:System.Windows.Forms.TreeNode> 、ユーザーがチェック状態を変更するとします。 このコードが必要、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.TreeView> を持つ <xref:System.Windows.Forms.TreeNode> 内のオブジェクトの <xref:System.Windows.Forms.TreeNodeCollection>です。<xref:System.Windows.Forms.TreeNodeCollection> 子ノードを持つツリー ノードを持つ必要があります。  
  
 [!code-cpp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterExpand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが展開された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## 例  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TreeView.AfterExpand> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.TreeView> named `TreeView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.TreeView.AfterExpand> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#631](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#631)]
 [!code-vb[System.Windows.Forms.EventExamples\#631](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#631)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのラベル テキストが編集された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例を使用してルート ツリー ノードを編集するユーザーを使用する、 <xref:System.Windows.Forms.ContextMenu>です。 ユーザーがマウスを右クリックしたときに、 <xref:System.Windows.Forms.TreeNode> その位置が決定され、という名前の変数に格納されている `mySelectedNode`します。 Root 以外のツリー ノードが選択されている場合は、ノードのラベルを編集することができます、編集可能な状態に格納されます。 ユーザーがツリー ノードのラベルの編集が停止したら、新しいラベル テキストが評価され、保存します。 この例では、いくつかの文字と見なされましていないラベルのテキストでは有効。 ラベル文字列が無効な文字の 1 つ、または空の文字列です、エラーのユーザーに通知して、前のテキストにラベルが返されます。  
  
 [!code-cpp[classic treenode.beginedit example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterSelect" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが選択された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ノードが選択されているときに発生しません。 選択範囲が消去されたかどうかを検出するためにテストすることができます、 <xref:System.Windows.Forms.TreeNode.IsSelected%2A?displayProperty=fullName> プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeViewAction> 列挙します。 この例を実行するには、含むフォームで次のコードを貼り付け、 <xref:System.Windows.Forms.TreeView> という名前のコントロール `TreeView1`します。 この例では、する必要があります `TreeView1` はアイテムが格納されます、 <xref:System.Windows.Forms.TreeView.AfterSelect> イベントは、このサンプルで定義されているイベント ハンドラーに関連付けられています。  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsSelected" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの背景色を取得または設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>背景画像の設定を取得または、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeView" /> コントロールの背景画像を表す <see cref="T:System.Drawing.Image" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.TreeView.BackgroundImage" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景画像のレイアウト、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageLayout" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.ImageLayout.Tile" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスはこのプロパティ\/メソッド\/イベント無効です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.TreeView.BackgroundImageLayout" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCheck" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのチェック ボックスがオンにされる前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  設定、 <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName> 内からプロパティ、 <xref:System.Windows.Forms.TreeView.BeforeCheck> または <xref:System.Windows.Forms.TreeView.AfterCheck> イベントが何度も発生するイベントが発生し、予期しない動作が発生することができます。 たとえば、設定する、 <xref:System.Windows.Forms.TreeNode.Checked%2A> 、ユーザーが展開し、それぞれ 1 つを個別にチェックする必要があるないように、再帰的に子ノードの更新ができたら、イベント ハンドラーのプロパティです。 イベントが複数回発生したことを防ぐ場合のみ再帰的なコードを実行するイベント ハンドラーにロジックを追加します。、 <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> のプロパティ、 <xref:System.Windows.Forms.TreeViewEventArgs> に設定されていない <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=fullName>します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例のすべての子ツリー ノードの更新、 <xref:System.Windows.Forms.TreeNode> 、ユーザーがチェック状態を変更するとします。 このコードが必要、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.TreeView> を持つ <xref:System.Windows.Forms.TreeNode> 内のオブジェクトの <xref:System.Windows.Forms.TreeNodeCollection>です。<xref:System.Windows.Forms.TreeNodeCollection> 子ノードを持つツリー ノードを持つ必要があります。  
  
 [!code-cpp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck\_BeforeCheck\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCollapse" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが折りたたまれる前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、折りたたみの状態を変更、 <xref:System.Windows.Forms.TreeView> チェックされたすべてのノードが表示されるようにします。 最初に、すべてのノードを展開すると、されのハンドラーが追加、 <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベントです。 次に、すべてのノードが折りたたまれています。<xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント ハンドラーは、特定のノードがオンになっている子ノードを持つかどうかを決定します。 ノードが子を選択した場合は、そのノードの折りたたみが取り消されました。 ノードの横にマイナス記号をクリックすると、通常のノードを許可するための <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント ハンドラーが削除されます。  
  
 処理することでこの動作を実装することも、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベント、そのトピックの例に示すようにします。  
  
 完全な例については、 <xref:System.Windows.Forms.TreeView.%23ctor%2A> コンス トラクターのリファレンス トピックです。  
  
 [!code-cpp[TreeViewShowCheckedNodes2\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes2\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes2\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeExpand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが展開される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、折りたたみの状態を変更、 <xref:System.Windows.Forms.TreeView> チェックされたすべてのノードが表示されるようにします。 最初に、すべてのノードが折りたたまれているし、ハンドラーが追加、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベントです。 次に、すべてのノードを展開します。<xref:System.Windows.Forms.TreeView.BeforeExpand> イベント ハンドラーは、特定のノードがオンになっている子ノードを持つかどうかを決定します。 ノードがチェックされている子を持たない場合は、そのノードの展開が取り消されました。 ノードの横にあるプラス記号をクリックすると、標準的なノードを展開できるように、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベント ハンドラーが削除されます。  
  
 処理することでこの動作を実装することも、 <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント、そのトピックの例に示すようにします。  
  
 完全な例については、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> リファレンス トピックです。  
  
 [!code-cpp[TreeViewShowCheckedNodes1\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのラベル テキストが編集される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeView.BeforeLabelEdit><xref:System.Windows.Forms.TreeView.AfterSelect> と <xref:System.Windows.Forms.TreeView.TopNode%2A> メンバーです。 この例を実行するには、含むフォームで次のコードを貼り付け、 `TreeView` という名前は、コントロールを `TreeView1`します。 呼び出す、 `InitializeTreeView` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeSelect" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが選択される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.TreeView.BeforeSelect> イベントです。 このレポートによって、イベントが発生してデバッグに役立つについて学びます。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.TreeView> という `TreeView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.TreeView.BeforeSelect> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#635](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#635)]
 [!code-vb[System.Windows.Forms.EventExamples\#635](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#635)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.BeginUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー ビューの再描画を無効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目を一度に 1 つずつ追加中にパフォーマンスを維持するために、 <xref:System.Windows.Forms.TreeView>, を呼び出す、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> メソッドです。<xref:System.Windows.Forms.TreeView.BeginUpdate%2A> まで描画メソッドにより、コントロール、 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッドが呼び出されます。  
  
 ツリー ビュー コントロールに項目を追加することをお勧めが使用するには、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> ツリー ビューにツリー ノードの項目の配列を追加します。 ただし、一度に 1 つの項目を追加する場合は、使用、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> しないようにする方法、 <xref:System.Windows.Forms.TreeView> コントロール追加の操作中に描画からします。 描画を再開するコントロールを許可するように呼び出す、 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッドすべてのツリー ノードがツリー ビューに追加されたとき。  
  
   
  
## 例  
 次のコード例に顧客情報を表示、 <xref:System.Windows.Forms.TreeView> コントロールです。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客は 15 の注文と共に表示されます。 描画、 <xref:System.Windows.Forms.TreeView> を使用して抑制、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> と <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッド、および待機時間は <xref:System.Windows.Forms.Cursor> が表示されます中に、 <xref:System.Windows.Forms.TreeView> を作成し、描画、 <xref:System.Windows.Forms.TreeNode> オブジェクトです。 この例は、 `Customer` オブジェクトのコレクションが保持できる `Order` オブジェクトです。 という名前のカーソル ファイルがあることも必要です `MyWait.cur` のインスタンスを作成したアプリケーションのディレクトリで、 <xref:System.Windows.Forms.TreeView> の control 権限、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロールの境界線スタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.BorderStyle" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Forms.TreeView.BorderStyle%2A> にプロパティが設定されている <xref:System.Windows.Forms.BorderStyle.Fixed3D>, 、 <xref:System.Windows.Forms.TreeView> 浮き彫り、3 次元の外観を持ちます。 フラットで細い罫線を表示する、 <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.BorderStyle> プロパティを <xref:System.Windows.Forms.BorderStyle.FixedSingle>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.BorderStyle> 列挙体および <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, 、<xref:System.Windows.Forms.TreeView.ShowLines%2A>, 、<xref:System.Windows.Forms.TreeView.Scrollable%2A>, 、<xref:System.Windows.Forms.TreeView.HideSelection%2A> と <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティです。 この例を実行するには、フォームと呼び出しで次のコードを貼り付け、 `InitializeTreeView` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">割り当てられた値は、のいずれかではありません、 <see cref="T:System.Windows.Forms.BorderStyle" /> 値。</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロール内のツリー ノードの横にチェック ボックスを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ビュー コントロール内の各ツリー ノードの横にあるチェック ボックスが表示されている場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ツリー ノードのラベルとツリー ノードの両方の左側にチェック ボックスが表示される <xref:System.Drawing.Image>, 、存在する場合。 チェック ボックスは、一度に 1 つ以上のツリー ノードを選択するユーザーを許可します。  
  
 ときに、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に設定されている `true`, 、および <xref:System.Windows.Forms.TreeView.StateImageList%2A> プロパティが設定の各 <xref:System.Windows.Forms.TreeNode> に格納されている、 <xref:System.Windows.Forms.TreeView> から番目と 2 番目のイメージを表示する、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> をそれぞれオフまたはオンの状態を示します。 ただし、表示されるイメージは次のような状況が発生した場合は、異なる場合があります: 場合、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> ノードの 0 または 1 以外の値に設定されてと <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> 、親 <xref:System.Windows.Forms.TreeView> に設定されている `false`, 、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> を\-1 に設定されていないことを示すには自動的にリセットされません。 この場合は、指定したインデックス位置にある状態の画像が表示されます。 場合 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> に設定されている `true` の最初と 2 番目の画像、もう一度、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> それぞれオンまたはオフの状態を示すために表示されます。  
  
> [!NOTE]
>  設定する場合、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> 、実行時にプロパティ、 <xref:System.Windows.Forms.TreeView> ハンドルが再作成されます \(を参照してください <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName>\) をコントロールの外観を更新します。 これにより、すべてのツリー ノードが折りたたまれ、選択したを除き <xref:System.Windows.Forms.TreeNode>します。  
  
   
  
## 例  
 次のコード例では、折りたたみの状態を変更、 <xref:System.Windows.Forms.TreeView> チェックされたすべてのノードが表示されるようにします。 最初に、すべてのノードが折りたたまれているし、ハンドラーが追加、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベントです。 次に、すべてのノードを展開します。<xref:System.Windows.Forms.TreeView.BeforeExpand> イベント ハンドラーは、特定のノードがオンになっている子ノードを持つかどうかを決定します。 ノードがチェックされている子を持たない場合は、そのノードの展開が取り消されました。 ノードの横にあるプラス記号をクリックすると、標準的なノードを展開できるように、 <xref:System.Windows.Forms.TreeView.BeforeExpand> イベント ハンドラーが削除されます。  
  
 処理することでこの動作を実装することも、 <xref:System.Windows.Forms.TreeView.BeforeCollapse> イベント、そのトピックの例に示すようにします。  
  
 [!code-cpp[TreeViewShowCheckedNodes1\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes1\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes1\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CollapseAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのツリー ノードを折りたたみます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.TreeView.CollapseAll%2A> method collapses all the <xref:System.Windows.Forms.TreeNode> objects, which includes all the child tree nodes, that are in the <xref:System.Windows.Forms.TreeView> control.  
  
> [!NOTE]
>  The state of a <xref:System.Windows.Forms.TreeNode> persists. For example, suppose that you call the <xref:System.Windows.Forms.TreeNode.Expand%2A> method for a root tree node. If the child tree nodes were not previously collapsed, they will appear in their previously\-expanded state. Calling the <xref:System.Windows.Forms.TreeView.CollapseAll%2A> method ensures that all the tree nodes appear in the collapsed state.  
  
   
  
## 例  
 The following code example demonstrates how to change the collapse state of a <xref:System.Windows.Forms.TreeView> so that all the checked nodes are visible. First, all the nodes are collapsed, and a handler is added for the <xref:System.Windows.Forms.TreeView.BeforeExpand> event. Next, all the nodes are expanded. The <xref:System.Windows.Forms.TreeView.BeforeExpand> event handler determines whether a given node has child nodes that are checked. If a node does not have checked children, the expansion is canceled for that node. In order to allow standard node expansion when the plus sign next to a node is clicked, the <xref:System.Windows.Forms.TreeView.BeforeExpand> event handler is then removed.  
  
 This behavior can also be implemented by handling the <xref:System.Windows.Forms.TreeView.BeforeCollapse> event, as illustrated in the example for that topic.  
  
 For the complete example, see the <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> reference topic.  
  
 [!code-cpp[TreeViewShowCheckedNodes1\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CreateHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのハンドルを作成します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</summary>
        <value>作成パラメーター。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">for access to unmanaged code when getting the property value. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定のサイズを取得します。</summary>
        <value>コントロールの既定の <see cref="T:System.Drawing.Size" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.TreeView" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.TreeView> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 次バッファーを使用してコントロールの画面を再描画するかどうかを示す値を取得または設定します。<see cref="P:System.Windows.Forms.TreeView.DoubleBuffered" /> プロパティには影響しません、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> コントロールで 2 次バッファーを使用している場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Windows.Forms.TreeView.DoubleBuffered%2A> プロパティには影響しません、 <xref:System.Windows.Forms.TreeView> 制御します。 ちらつきを軽減する場合と、 <xref:System.Windows.Forms.TreeView> が描画されるを使用して、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> と <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewDrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeViewDrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewDrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの描画に使用するモードを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> 値のいずれか。 既定値は、<see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ノード、 <xref:System.Windows.Forms.TreeView> は通常、オペレーティング システムによって作成されます。<xref:System.Windows.Forms.TreeView.DrawMode%2A> プロパティを使用して、ノードの外観をカスタマイズできます。 これを行うには、次のように設定します。 <xref:System.Windows.Forms.TreeView.DrawMode%2A> に <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=fullName> または <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=fullName> ハンドラーを提供し、 <xref:System.Windows.Forms.TreeView.DrawNode> イベントです。 これには、オーナー描画が呼び出されます。  
  
   
  
## 例  
 次のコード例では、カスタマイズ、 <xref:System.Windows.Forms.TreeView> オーナー描画を使用してコントロールします。<xref:System.Windows.Forms.TreeView> の例では、コントロールには、標準的なノードのラベルの横の省略可能なノード タグが表示されます。 使用してノードのタグが指定されている、 <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> プロパティです。<xref:System.Windows.Forms.TreeView> コントロールも、カスタムの強調表示色を含むカスタムの色を使用します。  
  
 ほとんどをカスタマイズすることができます、 <xref:System.Windows.Forms.TreeView> 設定による色のカラーのプロパティが、選択範囲の強調表示色は、プロパティとして使用できません。 さらに、既定の選択の強調表示の四角形は、ノードのラベルの周りにだけ拡張します。 オーナー描画は、ノード タグを描画し、ノードのタグを含めるのに十分な大きさ強調表示のカスタマイズされた四角形を描画するために使用する必要があります。  
  
 完全な例については、 <xref:System.Windows.Forms.TreeView.DrawNode> リファレンス トピックです。  
  
 [!code-cpp[TreeViewOwnerDraw\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#2)]
 [!code-csharp[TreeViewOwnerDraw\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#2)]
 [!code-vb[TreeViewOwnerDraw\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティの値が有効な <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> 値。</exception>
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
      </Docs>
    </Member>
    <Member MemberName="DrawNode">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawTreeNodeEventHandler DrawNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawTreeNodeEventHandler DrawNode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.DrawNode" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawTreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.TreeView" /> が描画されると、 <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> プロパティに設定されて、 <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> 以外の値 <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベント内のノードの外観のカスタマイズを使用して、 <xref:System.Windows.Forms.TreeView> オーナー描画を使用してコントロールします。  
  
 このイベントが発生した場合にのみ、 <xref:System.Windows.Forms.TreeView.DrawMode%2A> プロパティに設定されて <xref:System.Windows.Forms.TreeViewDrawMode> の値 <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> または <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>です。 次の表に示す方法、 <xref:System.Windows.Forms.TreeNode> ときにカスタマイズできる、 <xref:System.Windows.Forms.TreeView.DrawMode%2A> プロパティがこれらの値に設定します。  
  
|DrawMode プロパティ値|TreeNode のカスタマイズ|  
|---------------------|----------------------|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>|<xref:System.Windows.Forms.TreeNode> ラベル領域をカスタマイズすることができます。 他のすべての <xref:System.Windows.Forms.TreeNode> 要素が自動的に描画されます。|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>|全体の外観 <xref:System.Windows.Forms.TreeNode> をカスタマイズできます。 アイコン、チェック ボックス、プラスとマイナス記号、およびこれらが必要な場合に、ノードを結ぶ直線を手動で描画する必要があります。|  
  
 領域を <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> で指定されたフォントを使用して、描画された場合、値が使用、 <xref:System.Windows.Forms.TreeView> コントロールの <xref:System.Windows.Forms.Control.Font%2A> プロパティは、それを選択するノードがクリックして可能領域です。 これは、ヒット テスト領域と呼ばれます。 このリージョンの外部を描画する場合は、表示領域がクリックされたときに、ノードを選択する独自のコードを記述する必要があります。  
  
 対応してヒット テスト領域、 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=fullName> プロパティを使用する場合 <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>します。 使用する場合 <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>, 、ただし、 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=fullName> プロパティの幅全体を含む、 <xref:System.Windows.Forms.TreeView>です。 この場合は、ヒット テスト領域を取得することによってアクセスできます、 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A?displayProperty=fullName> 値とへのアクセス、 <xref:System.Windows.Forms.TreeNode.Bounds%2A?displayProperty=fullName> プロパティです。 これらの境界内のノードのヒット テスト領域を描画することができますし、またはヒット テスト コードを指定することができます。 その設定を書き留め、 <xref:System.Windows.Forms.TreeNode.NodeFont%2A?displayProperty=fullName> プロパティには、指定したフォントを使用して、全体の計算されるヒット テスト領域のサイズは変わりません。 <xref:System.Windows.Forms.TreeView>します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、カスタマイズ、 <xref:System.Windows.Forms.TreeView> オーナー描画を使用してコントロールします。<xref:System.Windows.Forms.TreeView> の例では、コントロールには、標準的なノードのラベルの横の省略可能なノード タグが表示されます。 使用してノードのタグが指定されている、 <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> プロパティです。<xref:System.Windows.Forms.TreeView> コントロールも、カスタムの強調表示色を含むカスタムの色を使用します。  
  
 ほとんどをカスタマイズすることができます、 <xref:System.Windows.Forms.TreeView> 設定による色のカラーのプロパティが、選択範囲の強調表示色は、プロパティとして使用できません。 さらに、既定の選択の強調表示の四角形は、ノードのラベルの周りにだけ拡張します。 オーナー描画は、ノード タグを描画し、ノードのタグを含めるのに十分な大きさ強調表示のカスタマイズされた四角形を描画するために使用する必要があります。  
  
 例では、ハンドラーを <xref:System.Windows.Forms.TreeView.DrawNode> ノード タグとカスタムの選択を手動で強調表示イベントを描画します。 選択されていないノードには、カスタマイズは不要です。 これらの場合、 <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A?displayProperty=fullName> にプロパティが設定されている `true` オペレーティング システムによってが描画されるようにします。  
  
 さらに、ハンドラーを <xref:System.Windows.Forms.Control.MouseDown> イベントは、ヒット テストを提供します。 既定では、そのラベル周囲の領域をクリックするノードを選択できます。<xref:System.Windows.Forms.Control.MouseDown> イベント ハンドラーが存在する場合、このリージョン内で、またはノード タグ周囲の領域内で任意の場所クリックしてできるノードを選択します。  
  
 [!code-cpp[TreeViewOwnerDraw\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.EndUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー ビューの再描画を有効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 To maintain performance while items are added one at a time to the <xref:System.Windows.Forms.TreeView>, call the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> method. The <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> method prevents the control from painting until the <xref:System.Windows.Forms.TreeView.EndUpdate%2A> method is called.  
  
 The preferred way to add items to a tree view control is to use the <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> method to add an array of tree node items to a tree view. However, if you want to add items one at a time, use the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> method to prevent the <xref:System.Windows.Forms.TreeView> control from painting during the add operations. To allow control the control to resume painting, call the <xref:System.Windows.Forms.TreeView.EndUpdate%2A> method when all the tree nodes have been added to the tree view.  
  
   
  
## 例  
 The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have a cursor file that is named `MyWait.cur` in the application directory and that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ExpandAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのツリー ノードを展開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Forms.TreeView.ExpandAll%2A> method expands all the <xref:System.Windows.Forms.TreeNode> objects, which includes all the child tree nodes, that are in the <xref:System.Windows.Forms.TreeView> control.  
  
> [!NOTE]
>  The state of a <xref:System.Windows.Forms.TreeNode> persists. For example, suppose that you call the <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> method, and then the individual root tree nodes are collapsed. The child tree nodes have not been collapsed, and will appear in their previously\-expanded state when the root tree nodes are expanded again. Calling the <xref:System.Windows.Forms.TreeView.CollapseAll%2A> method ensures that all the tree nodes appear in the collapsed state.  
  
   
  
## 例  
 The following code example expands all the tree nodes in a <xref:System.Windows.Forms.TreeView> control when a <xref:System.Windows.Forms.CheckBox> is checked, and collapses the <xref:System.Windows.Forms.TreeNode.FirstNode%2A> when the <xref:System.Windows.Forms.CheckBox> is cleared. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.CheckBox>, and a <xref:System.Windows.Forms.TreeView> control with a <xref:System.Windows.Forms.TreeNodeCollection> that has several <xref:System.Windows.Forms.TreeNode> objects \(preferably with three or more levels\).  
  
 [!code-cpp[TreeNode\_ForeColor\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode\_ForeColor\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode\_ForeColor\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの前景色を取得または設定します。</summary>
        <value>コントロールの前景の <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> プロパティの値です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されている項目を強調表示するときに、ツリー ビュー コントロールの幅全体を強調表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 選択範囲の表示、ツリー ビュー コントロールの幅にまたがる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> は `true`, 、選択の強調表示のツリー ビューの幅全体にわたる、ツリー ノードのラベルだけの幅の代わりに表示します。<xref:System.Windows.Forms.TreeView.FullRowSelect%2A> プロパティは <xref:System.Windows.Forms.TreeView.ShowLines%2A> に設定されている `true`します。  
  
   
  
## 例  
 次のコード例をカスタマイズされた <xref:System.Windows.Forms.TreeView>します。 継承することで、 <xref:System.Windows.Forms.TreeView> クラス、このカスタムのバージョンには、一般的なすべての機能 <xref:System.Windows.Forms.TreeView>です。 コンス トラクターは、さまざまなプロパティ値を変更する固有の外観を提供します。<xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> にプロパティが設定されている `false`, 、カスタマイズされたコントロールもオーバーライド、 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッド ノードを展開およびそれらがクリックされたときを折りたたむことができます。  
  
 この方法でカスタマイズされたコントロールは、個別のプロジェクトで指定するコントロールのプロパティを必要とせず、一貫したインターフェイスを提供しやすく、組織全体で使用できます。  
  
 [!code-cpp[TreeViewCustomization\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemRenderStyles">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles (System.Windows.Forms.TreeNode node, int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles(class System.Windows.Forms.TreeNode node, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OwnerDrawPropertyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Windows.Forms.TreeNode" /> を返す、 <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" />です。</param>
        <param name="state">表示の状態、 <see cref="T:System.Windows.Forms.TreeNode" />です。</param>
        <summary>返します。、 <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> 、指定された <see cref="T:System.Windows.Forms.TreeNode" />します。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> 、指定された <see cref="T:System.Windows.Forms.TreeNode" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> 評価およびからノードを取得します。</param>
        <summary>指定した位置にあるツリー ノードを取得します。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.TreeNode" /> ツリー ビュー \(クライアント\) 座標で指定したポイントにまたは <see langword="null" /> その場所でノードがない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 渡すことができます、 <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=fullName> と <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=fullName> の調整、 <xref:System.Windows.Forms.Control.MouseDown> イベントとして、 <xref:System.Drawing.Point.X%2A> と <xref:System.Drawing.Point.Y%2A> の新しい値 <xref:System.Drawing.Point>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="P:System.Drawing.Point.X" /> を評価し、取得するノードの位置。</param>
        <param name="y">
          <see cref="P:System.Drawing.Point.Y" /> を評価し、取得するノードの位置。</param>
        <summary>指定した座標位置にあるツリー ノードを取得します。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.TreeNode" /> ツリー ビュー \(クライアント\) 座標で、指定した位置または <see langword="null" /> その場所でノードがない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 渡すことができます、 <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=fullName> と <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=fullName> の調整、 <xref:System.Windows.Forms.Control.MouseDown> イベントとして、 `x` と `y` パラメーター。  
  
   
  
## 例  
 次のコード例を使用してルート ツリー ノードを編集するユーザーを使用する、 <xref:System.Windows.Forms.ContextMenu>です。 ユーザーがマウスを右クリックしたときに、 <xref:System.Windows.Forms.TreeNode> その位置が決定され、という名前の変数に格納されている `mySelectedNode`します。 Root 以外のツリー ノードが選択されている場合は、ノードのラベルを編集することができます、編集可能な状態に格納されます。 ユーザーがツリー ノードのラベルの編集が停止したら、新しいラベル テキストが評価され、保存します。 この例では、いくつかの文字と見なされましていないラベルのテキストでは有効。 ラベル文字列が無効な文字の 1 つ、または空の文字列です、エラーのユーザーに通知して、前のテキストにラベルが返されます。  
  
 [!code-cpp[classic treenode.beginedit example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">
          <see langword="true" /> カウントする、 <see cref="T:System.Windows.Forms.TreeNode" /> サブツリー; 項目それ以外の場合、 <see langword="false" />です。</param>
        <summary>ツリー ノードの数を取得します。ツリー ビュー コントロールに割り当てられているすべてのサブツリー内のツリー ノードを数に含めることもできます。</summary>
        <returns>ツリー ノードの数。ツリー ビュー コントロールに割り当てられているすべてのサブツリー内のツリー ノードを含めることもできます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `includeSubTrees` は `true`, 、全体のツリー構造内のすべてのツリー ノードの数になります。  
  
   
  
## 例  
 次のコード例、 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に含まれる子ツリー ノードの数を表示し、 <xref:System.Windows.Forms.TreeNodeCollection> の <xref:System.Windows.Forms.TreeView.SelectedNode%2A>です。 ツリー ビュー コントロール内のすべてのツリー ノードに子ツリー ノードの割合が表示されます。 この例では、あることが必要です、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.Button>, 、および <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNodeCollection> を含むいくつか <xref:System.Windows.Forms.TreeNode> オブジェクト \(次の 3 つ以上のレベル\) を含むことをお勧めします。  
  
 [!code-cpp[TreeNode\_ForeColor\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode\_ForeColor\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode\_ForeColor\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビューがフォーカスを失った場合でも、選択されているツリー ノードが強調表示されたままかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 選択されているツリー ノードが強調表示されていない場合と、ツリー ビューがフォーカスを失った。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると `false`, 、内のノードを選択、 <xref:System.Windows.Forms.TreeView> コントロールの現在の選択項目は異なる色で強調表示されたまま色の場合、 <xref:System.Windows.Forms.TreeView> コントロールがフォーカスを失った。 このプロパティを使用して、ユーザーがフォーム上の別の管理\] をクリックし、別のウィンドウに移動したりするときに表示されているユーザーが選択されている項目を保持することができます。  
  
> [!NOTE]
>  アプリケーションのユーザー補助に懸念がある場合は、設定することをお勧めします <xref:System.Windows.Forms.TreeView.HideSelection%2A> プロパティを `false`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeView.HideSelection%2A> プロパティです。 この例を実行するには、フォームと呼び出しで次のコードを貼り付け、 `InitializeSelectedTreeView` フォームのコンス トラクター メソッドまたは <xref:System.Windows.Forms.Form.Load> イベント ハンドラーです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <see cref="T:System.Drawing.Point" /> ノード情報を取得する位置。</param>
        <summary>指定したポイントにあるノード情報を表示します。</summary>
        <returns>ノード情報。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポイントがあるかどうかを判断するには、このメソッドを使用して、 <xref:System.Windows.Forms.TreeNode> ノード内で、ポイントがある場所など、ラベルやイメージの領域とします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">ノード情報を取得する位置を表す x 座標。</param>
        <param name="y">ノード情報を取得する位置を表す y 座標。</param>
        <summary>指定した x 座標と y 座標のノード情報を提示します。</summary>
        <returns>ノード情報。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 X 座標と y 座標のセットがあるかどうかを判断するには、このメソッドを使用して、 <xref:System.Windows.Forms.TreeNode> ノード内で、ポイントがある場所など、ラベルやイメージの領域とします。  
  
   
  
## 例  
 次のコード例のコードを使用する方法の例、 <xref:System.Windows.Forms.TreeNode.Level%2A>, 、<xref:System.Windows.Forms.TreeViewHitTestInfo.Node%2A>, 、および <xref:System.Windows.Forms.TreeView.HitTest%2A> メンバーです。 この例を実行するを含む Windows フォームを作成、 <xref:System.Windows.Forms.TreeView> という `treeView1` ノードのいくつかのレベルで設定します。 次のコードをフォームに貼り付け、 <xref:System.Windows.Forms.Control.MouseDown> のイベント `treeView1` で、 `treeView1_MouseDown` この例ではメソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのラベル上にマウス ポインターが配置されたときに、そのラベルの外観がハイパーリンクになるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ノードのラベルの外観がハイパーリンクにした場合、マウス ポインターが通過です。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Forms.TreeView.HotTracking%2A> プロパティには影響を及ぼしません。  
  
> [!NOTE]
>  ときに、 <xref:System.Windows.Forms.TreeView.HotTracking%2A> にプロパティが設定されている `true`, 、各ツリーの上にあるノードのラベルがマウス ポインターの経過に伴い、ハイパーリンクの外観です。<xref:System.Drawing.FontStyle.Underline> フォント スタイルを適用、 <xref:System.Drawing.Font> と <xref:System.Windows.Forms.Control.ForeColor%2A> がリンクとして表示されるラベルを青に設定します。 外観は、ユーザーのオペレーティング システムのインターネットの設定によって制御されません。  
  
   
  
## 例  
 次のコード例をカスタマイズされた <xref:System.Windows.Forms.TreeView>します。 継承することで、 <xref:System.Windows.Forms.TreeView> クラス、このカスタムのバージョンには、一般的なすべての機能 <xref:System.Windows.Forms.TreeView>です。 コンス トラクターは、さまざまなプロパティ値を変更する固有の外観を提供します。<xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> にプロパティが設定されている `false`, 、カスタマイズされたコントロールもオーバーライド、 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッド ノードを展開して、クリックしたときに折りたたまれているようにします。  
  
 この方法でカスタマイズされたコントロールは、個別のプロジェクトで指定するコントロールのプロパティを必要とせず、一貫したインターフェイスを提供しやすく、組織全体で使用できます。  
  
 [!code-cpp[TreeViewCustomization\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードで表示される既定のイメージのイメージ リスト内でのインデックス値を取得または設定します。</summary>
        <value>位置を表す 0 から始まるインデックス、 <see cref="T:System.Drawing.Image" /> で、 <see cref="T:System.Windows.Forms.ImageList" />です。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> はのインデックス、 <xref:System.Drawing.Image> に格納されている、 <xref:System.Windows.Forms.ImageList> に割り当てられている、 <xref:System.Windows.Forms.TreeView.ImageList%2A> プロパティです。  
  
 <xref:System.Windows.Forms.TreeView.ImageKey%2A> と <xref:System.Windows.Forms.TreeView.ImageIndex%2A> プロパティは相互に排他的な。 設定されている場合、もう一方は無視されます。 設定した場合 <xref:System.Windows.Forms.TreeView.ImageKey%2A>, 、<xref:System.Windows.Forms.TreeView.ImageIndex%2A> が\-1 に自動的に設定します。 また、設定した場合 <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, 、<xref:System.Windows.Forms.TreeView.ImageKey%2A> 、空の文字列に自動的に設定されている \(""\) です。  
  
> [!NOTE]
>  設定する場合、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> 、実行時にプロパティ、 <xref:System.Windows.Forms.TreeView> ハンドルが再作成されます \(を参照してください <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName>\) をコントロールの外観を更新します。 これにより、すべてのツリー ノードが折りたたまれ、選択したを除き <xref:System.Windows.Forms.TreeNode>します。  
  
   
  
## 例  
 次のコード例を作成し、割り当てます、 <xref:System.Windows.Forms.ImageList> に、 <xref:System.Windows.Forms.TreeView> コントロールと塗り、 <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNode> オブジェクトです。 ツリー ノードからイメージを割り当てられた、 <xref:System.Windows.Forms.ImageList> 選択または選択解除状態のときに表示されます。 この例である必要があります、 <xref:System.Windows.Forms.Form> を含む、 <xref:System.Windows.Forms.TreeView>, 、および <xref:System.Collections.ArrayList> を含む `Customer` オブジェクトが含まれる `Order` オブジェクトです。 仮定も、 `Customer` と `Order` オブジェクトが定義されています。  
  
 [!code-cpp[TreeNode\_TreeNode\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode\_TreeNode\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode\_TreeNode\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスは、0 より小さい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内の各ノードの既定のイメージのキー、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールが選択されていない状態にします。</summary>
        <value>各ノードに対して表示される既定のイメージのキー <see cref="T:System.Windows.Forms.TreeView" /> ときに、ノードが選択されていない状態を制御します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.ImageKey%2A> プロパティは区別されません。  
  
 場合、 <xref:System.Windows.Forms.TreeNode> で指定されたイメージを設定します。 イメージを持たない、 <xref:System.Windows.Forms.TreeView.ImageKey%2A> プロパティは、ノードが選択されていないときに表示されます。 ノードが選択されている場合、最初の項目、 <xref:System.Windows.Forms.ImageList> が表示されます。  
  
 <xref:System.Windows.Forms.TreeView.ImageKey%2A> と <xref:System.Windows.Forms.TreeView.ImageIndex%2A> プロパティが相互に排他的で、つまり、設定されている場合、もう一方は無視されます。 設定した場合、 <xref:System.Windows.Forms.TreeView.ImageKey%2A> プロパティには、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> プロパティが\-1 に自動的に設定します。 また、設定した場合、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> プロパティには、 <xref:System.Windows.Forms.TreeView.ImageKey%2A> 、空の文字列に自動的に設定されている \(""\) です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.ImageList" /> を含む、 <see cref="T:System.Drawing.Image" /> ツリー ノードで使用されるオブジェクト。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> を含む、 <see cref="T:System.Drawing.Image" /> ツリー ノードで使用されるオブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.ImageList> プロパティの値が何も以外の場合に `null`, 、すべてのツリー ノードが最初に表示 <xref:System.Drawing.Image> に格納されている、 <xref:System.Windows.Forms.ImageList>です。 一覧から画像を設定して選択し、選択されていないノードの表示を指定できる、 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> と <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティです。 各 <xref:System.Windows.Forms.TreeNode> オブジェクトでは、どのイメージが設定して表示を指定できます、 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> と <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> プロパティです。 これらの個々 の設定は、対応する設定を上書きする <xref:System.Windows.Forms.TreeView> プロパティです。  
  
> [!NOTE]
>  表示されるイメージを妨げる問題がある、.NET Framework version 1.1 で <xref:System.Windows.Forms.TreeView> ノード アプリケーションを呼び出す <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName>します。 この問題を回避する <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName> で、 `Main` メソッドを呼び出した後すぐに <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>します。 この問題が解決、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]です。  
  
   
  
## 例  
 次のコード例を作成し、割り当てます、 <xref:System.Windows.Forms.ImageList> に、 <xref:System.Windows.Forms.TreeView> コントロールと塗り、 <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNode> オブジェクトです。 ツリー ノードからイメージを割り当てられた、 <xref:System.Windows.Forms.ImageList> 選択または選択解除状態のときに表示されます。 この例である必要があります、 <xref:System.Windows.Forms.Form> を含む、 <xref:System.Windows.Forms.TreeView>, 、および <xref:System.Collections.ArrayList> を含む `Customer` オブジェクトが含まれる `Order` オブジェクトです。  
  
 [!code-cpp[TreeNode\_TreeNode\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode\_TreeNode\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode\_TreeNode\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子ツリー ノードの各レベルに設定するインデント幅を取得または設定します。</summary>
        <value>子ツリー ノードの各レベルに設定するインデント幅 \(ピクセル単位\)。 既定値は 19 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを\-1 の値に設定しても、値が既定値から変更されていない場合、例外をスローしませんしません。 これは、コントロール ハンドルが作成される前に、コントロールが内部の既定値として値\-1 を使用するためです。 この内部の既定値は、19 の独自の既定値を返すラップされたコントロールをします。  
  
   
  
## 例  
 次のコード例をカスタマイズされた <xref:System.Windows.Forms.TreeView>します。 継承することで、 <xref:System.Windows.Forms.TreeView> クラス、このカスタムのバージョンには、一般的なすべての機能 <xref:System.Windows.Forms.TreeView>です。 コンス トラクターは、さまざまなプロパティ値を変更する固有の外観を提供します。<xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> プロパティが false に設定は、カスタマイズされたコントロールにも優先、 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッド ノードを展開して、クリックしたときに折りたたまれているようにします。  
  
 この方法でカスタマイズされたコントロールは、個別のプロジェクトで指定するコントロールのプロパティを必要とせず、一貫したインターフェイスを提供しやすく、組織全体で使用できます。  
  
 [!code-cpp[TreeViewCustomization\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">割り当てられた値は、\(「解説」を参照してください\) 0 未満です。  
  
 または  
  
 割り当てられた値が 32,000 を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">キーの値の 1 つ。</param>
        <summary>指定されているキーが、通常の入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
        <returns>指定されているキーが通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがツリー ノードを編集する場合、 <xref:System.Windows.Forms.TreeView> コントロールは入力のキーとして ENTER、esc キー、HOME、END などのキーを処理します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.ItemDrag" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがノードのドラッグを開始すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、内でドラッグ アンド ドロップ操作を有効にする、 <xref:System.Windows.Forms.TreeView> コントロールです。 この例では、任意のノードをドラッグしたノードの子孫ではない別のノードにドラッグできます。 すべての子孫ノードが含まれており、ドラッグしたノードは、宛先ノードの子になります。 マウスの左ボタンを使用する場合は、ドラッグしたノードが、移行先ノードに移動されます。 マウスの右ボタンを使用すると、目的のノードにドラッグしたノードがコピーされます。  
  
 [!code-cpp[TreeViewDragDrop\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewDragDrop/CPP/treeviewdragdrop.cpp#1)]
 [!code-csharp[TreeViewDragDrop\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewDragDrop/CS/treeviewdragdrop.cs#1)]
 [!code-vb[TreeViewDragDrop\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewDragDrop/VB/treeviewdragdrop.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロール内の各ツリー ノードの高さを取得または設定します。</summary>
        <value>ツリー ビュー内の各ツリー ノードの高さ \(ピクセル単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目の高さがツリー ビュー コントロールの高さよりも大きい値に設定されている場合は、呼び出し、 <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A?displayProperty=fullName> メソッドがある予期しない結果。  
  
   
  
## 例  
 次のコード例は、サイズを変更 <xref:System.Windows.Forms.TreeNode.NodeFont%2A> を指定したサイズを調整し、 <xref:System.Windows.Forms.TreeView.ItemHeight%2A> ツリー ノードの親の <xref:System.Windows.Forms.TreeView> コントロールです。 この例では、あることが必要です、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.TreeView> のコレクションを持つコントロール <xref:System.Windows.Forms.TreeNode> オブジェクト、および <xref:System.Windows.Forms.ComboBox> フォント サイズを格納しています。  
  
 [!code-cpp[TreeNode\_Bounds\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode\_Bounds\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode\_Bounds\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">割り当てられた値は、1 より小さくします。  
  
 または  
  
 割り当てられた値がより大きい、 <see cref="F:System.Int16.MaxValue" /> 値。</exception>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのラベル テキストを編集できるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ノードのラベル テキストを編集する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeNode.BeginEdit%2A> 方法は操作する場合にのみ、 <xref:System.Windows.Forms.TreeView.LabelEdit%2A> プロパティは `true`です。 場合 <xref:System.Windows.Forms.TreeView.LabelEdit%2A> は `false` ラベルを編集しようとするときに、例外がスローされ、ツリー ノードは配置できません。 編集可能な状態にします。  
  
   
  
## 例  
 次のコード例を使用してルート ツリー ノードを編集するユーザーを使用する、 <xref:System.Windows.Forms.ContextMenu>です。 ユーザーがマウスを右クリックしたときに、 <xref:System.Windows.Forms.TreeNode> その位置が決定され、という名前の変数に格納されている `mySelectedNode`します。 Root 以外のツリー ノードが選択されている場合は、ノードのラベルを編集することができます、編集可能な状態に格納されます。 ユーザーがツリー ノードのラベルの編集が停止したら、新しいラベル テキストが評価され、保存します。 この例では、いくつかの文字と見なされましていないラベルのテキストでは有効。 ラベル文字列が無効な文字の 1 つ、または空の文字列です、エラーのユーザーに通知して、前のテキストにラベルが返されます。  
  
 [!code-cpp[classic treenode.beginedit example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のノードを接続する線の色、<see cref="T:System.Windows.Forms.TreeView" />コントロール。</summary>
        <value>
          <see cref="T:System.Drawing.Color" />ツリー ノードを接続する行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例は、設定を示します、<xref:System.Windows.Forms.TreeNode>線の色。 この例を実行するには、Windows フォームにコードを貼り付けます。 呼び出す`InitializeLineTreeView`フォームのコンス トラクターからまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがマウスで <see cref="T:System.Windows.Forms.TreeNode" /> をクリックした時点で発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ユーザーがマウスを使用して、プラス記号を含むツリー ノードの一部をクリックしたときに発生 \(**\+**\) またはマイナス記号 \(**\-**\) ノードが折りたたまれた状態または展開するかどうかを示します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、処理、 <xref:System.Windows.Forms.TreeView.NodeMouseClick> イベントです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがダブルクリックしたときに発生、 <see cref="T:System.Windows.Forms.TreeNode" /> 、マウスを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ユーザーがプラス記号 \(\+\) を含む、マウスまたはマイナス記号 \(\-\) をノードが折りたたまれた状態または展開するかどうかを示すツリー ノードの任意の部分をダブルクリックしたときに発生します。  
  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、処理、 <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> イベントと使用方法、 <xref:System.Windows.Forms.TreeNodeMouseClickEventArgs>です。 この例を実行するを含む Windows フォームにコードを貼り付けます、 <xref:System.Windows.Forms.TreeView> という `treeView1`します。 設定 `treeView1` 内にあるファイルの名前を持つ、 `c:\` 、サンプルが実行されているシステムのディレクトリと関連付けられて、 <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> のイベント `treeView1` で、 `treeView1_NodeMouseDoubleClick` この例ではメソッドです。  この例では、ユーザーが、例を実行するコンピューターで管理者特権を持っている必要があります。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseHover" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターを置くときに発生する <see cref="T:System.Windows.Forms.TreeNode" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウスが上にある場合、 <xref:System.Windows.Forms.TreeNode>, 、 <xref:System.Windows.Forms.TreeView.NodeMouseHover> イベントが発生する前に、 <xref:System.Windows.Forms.Control.MouseHover> イベントです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.TreeView.NodeMouseHover> イベントです。 このレポートによって、イベントが発生してデバッグに役立つについて学びます。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.TreeView> という `TreeView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.TreeView.NodeMouseHover> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#634](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#634)]
 [!code-vb[System.Windows.Forms.EventExamples\#634](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#634)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロールに割り当てられているツリー ノードのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNodeCollection" /> を表すツリー ビュー コントロールに割り当てられているツリー ノード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.Nodes%2A> プロパティのコレクションを保持する <xref:System.Windows.Forms.TreeNode> がそれぞれのオブジェクト、 <xref:System.Windows.Forms.TreeNode.Nodes%2A> を持つプロパティ独自 <xref:System.Windows.Forms.TreeNodeCollection>します。 ツリー ノードの入れ子が難しく、ツリー構造を移動するが、 <xref:System.Windows.Forms.TreeNode.FullPath%2A> プロパティより簡単にツリー構造内の場所を判断します。  
  
   
  
## 例  
 次のコード例に顧客情報を表示、 <xref:System.Windows.Forms.TreeView> コントロールです。 ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。 この例では、1,000 人の顧客は 15 の注文と共に表示されます。 描画、 <xref:System.Windows.Forms.TreeView> を使用して抑制、 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> と <xref:System.Windows.Forms.TreeView.EndUpdate%2A> メソッド、および待機時間は <xref:System.Windows.Forms.Cursor> が表示されます中に、 <xref:System.Windows.Forms.TreeView> を作成し、描画、 <xref:System.Windows.Forms.TreeNode> オブジェクトです。 この例は、 `Customer` オブジェクトのコレクションが保持できる `Order` オブジェクトです。 インスタンスを作成することも必要です、 <xref:System.Windows.Forms.TreeView> の control 権限、 <xref:System.Windows.Forms.Form>です。  
  
 [!code-cpp[TreeView\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCheck (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterCheck(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.AfterCheck" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnAfterCheck%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCollapse">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCollapse (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAfterCollapse(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnAfterCollapse%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterExpand (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterExpand(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.AfterExpand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnAfterExpand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnAfterLabelEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSelect (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSelect(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCheck (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeCheck(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnBeforeCheck%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCollapse">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCollapse (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnBeforeCollapse(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnBeforeCollapse%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeExpand (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeExpand(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnBeforeExpand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnBeforeLabelEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSelect (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSelect(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnBeforeSelect%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawNode">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawNode (System.Windows.Forms.DrawTreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawNode(class System.Windows.Forms.DrawTreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnDrawNode%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>上書き <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnHandleCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>上書き <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnHandleDestroyed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.ItemDragEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.ItemDrag" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnItemDrag%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.TreeView.ItemDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> にプロパティが設定されている `true` と <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> にプロパティが設定されている `false`, 、 <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> メソッド スイッチを選択して、space キーを押したときに、チェック ボックスをオフの間です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> にプロパティが設定されている `false`, 、 <xref:System.Windows.Forms.TreeView> コントロールがの値で始まる最初の項目を選択して、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティの `e`です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnKeyPress%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary>上書き <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnKeyUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.MouseHover" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> メソッドは、マウスに存在するかどうかをヒット テストを実行、 <xref:System.Windows.Forms.TreeNode>, である場合に発生させると、 <xref:System.Windows.Forms.TreeView.NodeMouseHover> イベントです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.MouseLeave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnMouseLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnNodeMouseClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseDoubleClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseDoubleClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseHover (System.Windows.Forms.TreeNodeMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseHover(class System.Windows.Forms.TreeNodeMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseHoverEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnNodeMouseHover%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[イベントの処理と発生](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定間の間隔、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールのコンテンツと縁します。</summary>
        <value>A <see cref="T:System.Windows.Forms.Padding" /> コントロールの端とその内容の間隔を示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.PaddingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.TreeView.Padding" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.Paint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.TreeView" /> を描画します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードのパスで使用する区切り文字列を取得または設定します。</summary>
        <value>区切り記号の文字列をツリー ノード <see cref="P:System.Windows.Forms.TreeNode.FullPath" /> プロパティで使用します。 既定値は、円記号 \(\\\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ツリー ノードのパスで区切られたツリー ノードのラベルのセットから成る、 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 区切り記号文字列。 ラベルの範囲はルート ツリー ノードからなるツリー ノードです。  
  
   
  
## 例  
 次のコード例、 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に含まれる子ツリー ノードの数を表示し、 <xref:System.Windows.Forms.TreeNodeCollection> の <xref:System.Windows.Forms.TreeView.SelectedNode%2A>です。 ツリー ビュー コントロール内のすべてのツリー ノードに子ツリー ノードの割合が表示されます。 この例では、あることが必要です、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.Button>, 、および <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNodeCollection> を含むいくつか <xref:System.Windows.Forms.TreeNode> オブジェクト \(次の 3 つ以上のレベル\) を含むことをお勧めします。  
  
 [!code-cpp[TreeNode\_ForeColor\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode\_ForeColor\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode\_ForeColor\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FullPath" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Forms.TreeView" /> 右から左へレイアウトする必要があります。</summary>
        <value>
          <see langword="true" /> 右から左からコントロールをレイアウトする場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> プロパティは、国際対応のアプリケーションで使用する言語は、右から左を読み書きします。 設定した場合 <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> と <xref:System.Windows.Forms.Control.RightToLeft%2A> に `true` コントロールの内容とテキストは右から左へからレイアウトされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは、発生するときに報告、 <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> イベントです。 このレポートによって、イベントが発生してデバッグに役立つについて学びます。 複数のイベントまたは頻繁に発生するイベントを報告するためには、交換を検討 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> と <xref:System.Console.WriteLine%2A?displayProperty=fullName> またはメッセージを複数行に追加する <xref:System.Windows.Forms.TextBox>です。  
  
 このコード例を実行する型のインスタンスを含むプロジェクトに貼り付けること <xref:System.Windows.Forms.TreeView> という `TreeView1`します。 イベント ハンドラーが関連付けられていることを確認して、 <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> イベントです。  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#639](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#639)]
 [!code-vb[System.Windows.Forms.EventExamples\#639](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#639)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>必要に応じてツリー ビュー コントロールにスクロール バーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ビュー コントロールが、必要なときに、スクロール バーを表示する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが設定されている場合 `true`, のスクロール バーが表示されます、 <xref:System.Windows.Forms.TreeView> 時 <xref:System.Windows.Forms.TreeNode> コントロールのクライアント領域外に配置します。  
  
> [!NOTE]
>  設定する場合、 <xref:System.Windows.Forms.TreeView.Scrollable%2A> 、実行時にプロパティ、 <xref:System.Windows.Forms.TreeView> ハンドルが再作成されます \(を参照してください <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName>\) をコントロールの外観を更新します。 これにより、すべてのツリー ノードが折りたたまれ、選択したを除き <xref:System.Windows.Forms.TreeNode>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.BorderStyle> 列挙体および <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, 、<xref:System.Windows.Forms.TreeView.ShowLines%2A>, 、<xref:System.Windows.Forms.TreeView.Scrollable%2A>, 、<xref:System.Windows.Forms.TreeView.HideSelection%2A> と <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティです。 この例を実行するには、フォームと呼び出しで次のコードを貼り付け、 `InitializeTreeView` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ノードが選択されているときに表示されるイメージのイメージ リスト内でのインデックス値を取得または設定します。</summary>
        <value>位置を表す 0 から始まるインデックス値、 <see cref="T:System.Drawing.Image" /> で、 <see cref="T:System.Windows.Forms.ImageList" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> はのインデックス、 <xref:System.Drawing.Image> に格納されている、 <xref:System.Windows.Forms.ImageList> に割り当てられている、 <xref:System.Windows.Forms.TreeView.ImageList%2A> プロパティです。  
  
> [!NOTE]
>  設定する場合、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> 、実行時にプロパティ、 <xref:System.Windows.Forms.TreeView> ハンドルが再作成されます \(を参照してください <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName>\) をコントロールの外観を更新します。 これにより、すべてのツリー ノードが折りたたまれ、選択したを除き <xref:System.Windows.Forms.TreeNode>します。  
  
   
  
## 例  
 次のコード例を作成し、割り当てます、 <xref:System.Windows.Forms.ImageList> に、 <xref:System.Windows.Forms.TreeView> コントロールと塗り、 <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNode> オブジェクトです。 ツリー ノードからイメージを割り当てられた、 <xref:System.Windows.Forms.ImageList> 選択または選択解除状態のときに表示されます。 この例である必要があります、 <xref:System.Windows.Forms.Form> を含む、 <xref:System.Windows.Forms.TreeView>, 、および <xref:System.Collections.ArrayList> を含む `Customer` オブジェクトが含まれる `Order` オブジェクトです。 仮定も、 `Customer` と `Order` オブジェクトが定義されています。  
  
 [!code-cpp[TreeNode\_TreeNode\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode\_TreeNode\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode\_TreeNode\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">割り当てられているインデックス値が 0 未満です。</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のときに表示される既定イメージのキー、 <see cref="T:System.Windows.Forms.TreeNode" /> 、選択した状態にします。</summary>
        <value>ときに表示される既定イメージのキー、 <see cref="T:System.Windows.Forms.TreeNode" /> 、選択した状態にします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.TreeNode> で指定されたイメージを設定します。 選択したイメージを持たない、 <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> プロパティは、ノードが選択されていないときに表示されます。  
  
 <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> と <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティは相互に排他的な。 設定されている場合、もう一方は無視されます。 設定した場合、 <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> プロパティには、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティが\-1 に自動的に設定します。 また、設定した場合、 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> プロパティには、 <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> 、空の文字列に自動的に設定されている \(""\) です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode SelectedNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロールで現在選択されているツリー ノードを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> ツリー ビュー コントロールで現在選択されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ない場合 <xref:System.Windows.Forms.TreeNode> 現在選択されている、 <xref:System.Windows.Forms.TreeView.SelectedNode%2A> プロパティは `null`です。  
  
 このプロパティを設定すると、指定したノードに表示され、指定したノードが表示されるようにノードが展開されたすべての親スクロールされます。  
  
 親ノードまたは選択したノードの先祖ノードが折りたたまれているいずれかのプログラムを使用して、またはユーザーの操作によって、選択したノードが折りたたまれたノードになります。  
  
   
  
## 例  
 次のコード例、 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に含まれる子ツリー ノードの数を表示し、 <xref:System.Windows.Forms.TreeNodeCollection> の <xref:System.Windows.Forms.TreeView.SelectedNode%2A>です。 ツリー ビュー コントロール内のすべてのツリー ノードに子ツリー ノードの割合が表示されます。 この例では、あることが必要です、 <xref:System.Windows.Forms.Form> で、 <xref:System.Windows.Forms.Button>, 、および <xref:System.Windows.Forms.TreeView> コントロールを <xref:System.Windows.Forms.TreeNodeCollection> を含むいくつか <xref:System.Windows.Forms.TreeNode> オブジェクト \(次の 3 つ以上のレベル\) を含むことをお勧めします。  
  
 [!code-cpp[TreeNode\_ForeColor\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode\_ForeColor\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode\_ForeColor\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロール内のツリー ノード間を結ぶ線を描画するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ビュー コントロール内のツリー ノード間を結ぶ線を描画する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Windows.Forms.TreeView.ShowLines%2A> に設定されている `true`, 、 <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> プロパティは無視されます。  
  
   
  
## 例  
 次のコード例をカスタマイズされた <xref:System.Windows.Forms.TreeView>します。 継承することで、 <xref:System.Windows.Forms.TreeView> クラス、このカスタムのバージョンには、一般的なすべての機能 <xref:System.Windows.Forms.TreeView>です。 コンス トラクターは、さまざまなプロパティ値を変更する固有の外観を提供します。<xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> プロパティが false に設定は、カスタマイズされたコントロールにも優先、 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッド ノードを展開して、クリックしたときに折りたたまれているようにします。  
  
 この方法でカスタマイズされたコントロールは、個別のプロジェクトで指定するコントロールのプロパティを必要とせず、一貫したインターフェイスを提供しやすく、組織全体で使用できます。  
  
 [!code-cpp[TreeViewCustomization\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowNodeToolTips">
      <MemberSignature Language="C#" Value="public bool ShowNodeToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNodeToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツールヒントを表示するには、マウス ポインターを示す値を設定、 <see cref="T:System.Windows.Forms.TreeNode" />です。</summary>
        <value>
          <see langword="true" /> マウス ポインターを置くとヒントが表示されるかどうか、 <see cref="T:System.Windows.Forms.TreeNode" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ツールヒントを表示するためには、設定する必要があります、 <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> の <xref:System.Windows.Forms.TreeNode>です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> と <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> プロパティです。 この例を実行するには、Windows フォームと呼び出しを次のコードを貼り付けます `InitializeTreeViewWithToolTips` フォームのコンス トラクターからまたは <xref:System.Windows.Forms.Form.Load> イベント ハンドラーです。  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ToolTipText" />
      </Docs>
    </Member>
    <Member MemberName="ShowPlusMinus">
      <MemberSignature Language="C#" Value="public bool ShowPlusMinus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPlusMinus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子ツリー ノードを含むツリー ノードの横に、プラス記号 \(\+\) ボタンとマイナス記号 \(\-\) ボタンを表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 子ツリー ノードが含まれているツリー ノードの横にあるプラス記号またはマイナス記号のボタンが表示される場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ルート ツリー ノード場合にのみ、横にあるプラス記号またはマイナス記号のボタンが表示される、 <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティの値が `true`です。 プラス記号またはマイナス記号のボタンが表示されていない場合、ツリー ノードが子ツリー ノードが含まれていますおり、展開できることを示す視覚的な通知は存在しません。 ユーザーは、子ツリーのノードが、展開または折りたたむことが含まれるかどうか確認するツリー ノードをダブルクリックする必要があります。  
  
   
  
## 例  
 次のコード例をカスタマイズされた <xref:System.Windows.Forms.TreeView>します。 継承することで、 <xref:System.Windows.Forms.TreeView> クラス、このカスタムのバージョンには、一般的なすべての機能 <xref:System.Windows.Forms.TreeView>です。 コンス トラクターは、さまざまなプロパティ値を変更する固有の外観を提供します。<xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> プロパティが false に設定は、カスタマイズされたコントロールにも優先、 <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> メソッド ノードを展開して、クリックしたときに折りたたまれているようにします。  
  
 この方法でカスタマイズされたコントロールは、個別のプロジェクトで指定するコントロールのプロパティを必要とせず、一貫したインターフェイスを提供しやすく、組織全体で使用できます。  
  
 [!code-cpp[TreeViewCustomization\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowRootLines" />
      </Docs>
    </Member>
    <Member MemberName="ShowRootLines">
      <MemberSignature Language="C#" Value="public bool ShowRootLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRootLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビューのルートにあるツリー ノード間を結ぶ線を描画するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ビューのルートにあるツリー ノード間を結ぶ線を描画する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティは、 `false`, 、ツリーのルート ノードの横にあるプラス記号またはマイナス記号のボタンは表示されませんし、 <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> プロパティには効果はありません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.BorderStyle> 列挙体および <xref:System.Windows.Forms.TreeView.BorderStyle%2A>, 、<xref:System.Windows.Forms.TreeView.ShowLines%2A>, 、<xref:System.Windows.Forms.TreeView.Scrollable%2A>, 、<xref:System.Windows.Forms.TreeView.HideSelection%2A> と <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> プロパティです。 この例を実行するには、フォームと呼び出しで次のコードを貼り付け、 `InitializeTreeView` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Sort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内の項目を並べ替えて <see cref="T:System.Windows.Forms.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ノードのテキストでアルファベット順は、既定の並べ替え、またはカスタムの並べ替えで指定されたされて再適用、 <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> プロパティです。 既存のノードのテキストが変更された場合、またはノードが、ユーザーが移動した項目を再度並べ替えるには、このメソッドを使用することができます。  
  
> [!NOTE]
>  既定の並べ替えアイコンを使用して、 <xref:System.Globalization.CompareInfo.Compare%2A> 方法に基づいて、 <xref:System.Windows.Forms.Application.CurrentCulture%2A> アプリケーションで指定します。 つまり、この <xref:System.Windows.Forms.TreeNode> に追加された順序に等しい値を持つオブジェクトを保存する、 <xref:System.Windows.Forms.TreeView> コントロールです。 この動作は、カスタムの並べ替えが適用されている場合は、異なる場合があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー内のツリー ノードを並べ替えるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ツリー ビュー内のツリー ノードを並べ替える場合はそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.Sorted%2A> に設定されている `true`, 、 <xref:System.Windows.Forms.TreeNode> オブジェクトがアルファベット順で並べ替えられて、 <xref:System.Windows.Forms.TreeNode.Text%2A> プロパティの値。 常に使用する必要があります <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> と <xref:System.Windows.Forms.TreeView.EndUpdate%2A> 、並べ替えに大量のアイテムを追加すると、パフォーマンスを維持する <xref:System.Windows.Forms.TreeView>です。 既存のノードのテキストが変更されたときに呼び出す必要があります <xref:System.Windows.Forms.TreeView.Sort%2A> 項目を利用します。  
  
> [!NOTE]
>  既定の並べ替えアイコンを使用して、 <xref:System.Globalization.CompareInfo.Compare%2A> 方法に基づいて、 <xref:System.Windows.Forms.Application.CurrentCulture%2A> アプリケーションで指定します。 つまり、この <xref:System.Windows.Forms.TreeNode> に追加された順序に等しい値を持つオブジェクトを保存する、 <xref:System.Windows.Forms.TreeView> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の状態を示すために使用されるイメージのリスト、 <see cref="T:System.Windows.Forms.TreeView" /> とそのノードです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" /> の状態を示すため、 <see cref="T:System.Windows.Forms.TreeView" /> とそのノードです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 状態を示すために、 <xref:System.Windows.Forms.TreeNode>, 、設定、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> プロパティも設定し、 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> または <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> それぞれのプロパティ <xref:System.Windows.Forms.TreeNode>します。  
  
 表示される状態のイメージ、 <xref:System.Windows.Forms.TreeView> は既定では 16 x 16 ピクセルです。 設定、 <xref:System.Windows.Forms.ImageList.ImageSize%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 、画像の表示方法に影響はありません。 ただし、app.config ファイルには、次のエントリが含まれている場合、状態のイメージは、システム DPI 設定に従ってサイズ変更します。  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ときに、 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> のプロパティ、 <xref:System.Windows.Forms.TreeView> に設定されている `true` と <xref:System.Windows.Forms.TreeView.StateImageList%2A> プロパティが設定の各 <xref:System.Windows.Forms.TreeNode> に格納されている、 <xref:System.Windows.Forms.TreeView> から番目と 2 番目のイメージを表示する、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> をそれぞれオフまたはオンの状態を示します。 設定する必要があります、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> プロパティにノードを追加する前に、 <xref:System.Windows.Forms.TreeView> をデザイン時の状態の画像がないノードに表示されている状態のイメージを防ぐために設定します。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Windows.Forms.TreeView.StateImageList%2A> プロパティです。 この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます `InitializeCheckTreeView` フォームのコンス トラクターからまたは <xref:System.Windows.Forms.Form.Load> イベント ハンドラーです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のテキスト、 <see cref="T:System.Windows.Forms.TreeView" />です。</summary>
        <value>常に <see langword="Null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、このプロパティは使用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.TreeView.Text" /> プロパティが変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode TopNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode TopNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TopNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロール内で完全に表示されている最初のツリー ノードを取得または設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.TreeNode" /> を表すツリー ビュー コントロール内の最初の完全に表示されているツリー ノード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最初に、 <xref:System.Windows.Forms.TreeView.TopNode%2A> の上部にある、最初のルート ツリー ノードを返す、 <xref:System.Windows.Forms.TreeView>です。 ただし、ユーザーには、内容がスクロールされたといった、別のツリー ノードあります上部にあります。  
  
> [!NOTE]
>  なしに、このプロパティを設定する場合のみ有効、 <xref:System.Windows.Forms.TreeView.Scrollable%2A> プロパティの値が `false`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeView.BeforeLabelEdit><xref:System.Windows.Forms.TreeView.AfterSelect> と <xref:System.Windows.Forms.TreeView.TopNode%2A> メンバーです。 この例を実行するには、含むフォームで次のコードを貼り付け、 `TreeView` という名前は、コントロールを `TreeView1`します。 呼び出す、 `InitializeTreeView` フォームのコンス トラクター メソッドまたは `Load` メソッドです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Component" /> の名前 \(存在する場合\) を格納する <see cref="T:System.String" /> を返します。 このメソッドはオーバーライドできません。</summary>
        <returns>
          <see cref="T:System.ComponentModel.Component" /> の名前 \(存在する場合\) を格納する <see cref="T:System.String" />。<see cref="T:System.ComponentModel.Component" /> に名前が付いていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeViewNodeSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer TreeViewNodeSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer TreeViewNodeSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の実装 <see cref="T:System.Collections.IComparer" /> カスタムを実行する、一種の <see cref="T:System.Windows.Forms.TreeView" /> ノードです。</summary>
        <value>
          <see cref="T:System.Collections.IComparer" /> カスタムの並べ替えを実行します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタムの並べ替えが適用されるときに、 <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> が設定されます。  
  
 場合、 <xref:System.Windows.Forms.TreeNode> ラベルが変更された呼び出すことができます場合、 <xref:System.Windows.Forms.TreeView.Sort%2A> で指定されたカスタムの並べ替えと項目の並べ替えに使用するメソッド、 <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> プロパティです。  
  
> [!NOTE]
>  既定の並べ替えアイコンを使用して、 <xref:System.Globalization.CompareInfo.Compare%2A> 方法に基づいて、 <xref:System.Windows.Forms.Application.CurrentCulture%2A> アプリケーションで指定します。 つまり、この <xref:System.Windows.Forms.TreeNode> に追加された順序に等しい値を持つオブジェクトを保存する、 <xref:System.Windows.Forms.TreeView> コントロールです。 この動作は、カスタムの並べ替えが適用されている場合は、異なる場合があります。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> 小さいものから順にノードを並べ替えるためのプロパティです。 この例を実行するには、Windows フォームと呼び出しを次のコードを貼り付けます `InitializeTreeView1` フォームのコンス トラクターからまたは <xref:System.Windows.Forms.Form.Load> イベント ハンドラーです。  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="VisibleCount">
      <MemberSignature Language="C#" Value="public int VisibleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.VisibleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツリー ビュー コントロール内に完全に表示できるツリー ノードの数を取得します。</summary>
        <value>数 <see cref="T:System.Windows.Forms.TreeNode" /> で完全に表示できるアイテム、 <see cref="T:System.Windows.Forms.TreeView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.TreeView.VisibleCount%2A> 値は、ツリー ビュー内のツリー ノードの数より大きくすることができます。 値は、クライアント ウィンドウの高さをツリー ノードのアイテムの高さで割って計算されます。 結果の合計数は、 <xref:System.Windows.Forms.TreeNode> オブジェクトを <xref:System.Windows.Forms.TreeView> 内の現在の寸法を表示できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>上書き <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">for access to unmanaged code when getting the property value. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNodeAt">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した位置にあるツリー ノードを取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したポイントにあるノード情報を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>