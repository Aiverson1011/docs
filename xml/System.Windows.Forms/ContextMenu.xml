<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ショートカット メニューを表します。<see cref="T:System.Windows.Forms.ContextMenuStrip" /> は置換し、する機能を追加、 <see cref="T:System.Windows.Forms.ContextMenu" /> 以前のバージョンの制御 <see cref="T:System.Windows.Forms.ContextMenu" /> を選択した場合に下位互換性と将来の使用の両方を保持します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.ContextMenu> クラスは、ユーザー コントロールまたはフォームの領域の上にマウスの右ボタンをクリックしたときに表示されるショートカット メニューを表します。 ショートカット メニューは通常から別のメニュー項目を組み合わせて使用、 <xref:System.Windows.Forms.MainMenu> フォーム アプリケーションのコンテキストを与えられたユーザーに便利なのです。 割り当てられているショートカット メニューを使用するなど、 <xref:System.Windows.Forms.TextBox> コントロール、またはクリップボード機能のコピーと貼り付けテキスト内のテキストを検索するテキストのフォントを変更するためのメニュー項目を提供するコントロール。 表示することも新しい <xref:System.Windows.Forms.MenuItem> ショートカット メニューではないオブジェクトの内にある、 <xref:System.Windows.Forms.MainMenu> 適さない状況固有のコマンドを提供する、 <xref:System.Windows.Forms.MainMenu> を表示します。  
  
 通常、コントロールまたはフォーム自体の上にマウスの右ボタンをクリックすると、ショートカット メニューが表示されます。 表示されているコントロールと <xref:System.Windows.Forms.Form> が、 <xref:System.Windows.Forms.Control.ContextMenu%2A> バインドするプロパティ、 <xref:System.Windows.Forms.ContextMenu> クラスのショートカット メニューを表示するコントロールにします。 複数のコントロールを使用して、 <xref:System.Windows.Forms.ContextMenu>です。 使用することができます、 <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> プロパティのどちらのコントロールが最後コントロールに固有のタスクを実行するために、またはコントロールに対して表示されるショートカット メニューを変更するために、ショートカット メニューが表示されます。  
  
 ショートカット メニューは、チェック マークの設定、アイテムを無効にし、メニューは、ユーザーに表示される前に\] メニューの \[その他のタスクを実行するために表示されているときを確認することがあります。 処理できる、 <xref:System.Windows.Forms.ContextMenu.Popup> ショートカット メニューが表示されている場合を決定するイベントです。  
  
> [!NOTE]
>  再利用するために <xref:System.Windows.Forms.MenuItem> に表示されるオブジェクト、 <xref:System.Windows.Forms.MainMenu> で使用するため、 <xref:System.Windows.Forms.ContextMenu>, 、メニューを使用して、コピーを作成する必要があります、 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> のメソッド、 <xref:System.Windows.Forms.MenuItem> クラスです。 1 つに、メニュー項目とそのサブメニュー項目をマージすることも <xref:System.Windows.Forms.MenuItem> オブジェクトを使用して、 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> のメソッド、 <xref:System.Windows.Forms.MenuItem> クラスです。  
  
   
  
## 例  
 次のコード例のイベント ハンドラーの作成、 <xref:System.Windows.Forms.ContextMenu.Popup> のイベント、 <xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーのコードでは、2 つのコントロールのどれかを判断、 <xref:System.Windows.Forms.PictureBox> という名前 `pictureBox1` と <xref:System.Windows.Forms.TextBox> という名前 `textBox1` コントロールのショートカット メニューを表示します。 原因となったコントロールによって、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な <xref:System.Windows.Forms.MenuItem> オブジェクトを <xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、 <xref:System.Windows.Forms.ContextMenu> という名前のクラス `contextMenu1`, フォーム内に定義されている。 またこの例ではあることが必要です、 <xref:System.Windows.Forms.TextBox> と <xref:System.Windows.Forms.PictureBox> フォームに追加、 <xref:System.Windows.Forms.Control.ContextMenu%2A> にこれらのコントロールのプロパティが設定されている `contextMenu1`します。  
  
 [!code-cpp[Classic ContextMenu Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.MainMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.ContextMenu" /> ないメニュー項目を指定しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メニュー項目を追加するこのバージョンのコンス トラクターを使用して、 <xref:System.Windows.Forms.ContextMenu> を使用して、 <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> のメソッド、 <xref:System.Windows.Forms.Menu.MenuItemCollection> クラスです。 アクセスできる、 <xref:System.Windows.Forms.Menu.MenuItemCollection> を通じて、 <xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">配列 <see cref="T:System.Windows.Forms.MenuItem" /> ショートカット メニューに追加するメニュー項目を表すオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.ContextMenu" /> 指定された一連のクラス <see cref="T:System.Windows.Forms.MenuItem" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成するコンス トラクターのこのバージョンを使用する、 <xref:System.Windows.Forms.ContextMenu> を含む、そのメニュー項目が作成時に指定します。 他のメニュー項目を追加するこのバージョンのコンス トラクターを使用して、 <xref:System.Windows.Forms.ContextMenu> を使用して、 <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> のメソッド、 <xref:System.Windows.Forms.Menu.MenuItemCollection> クラスです。 アクセスできる、 <xref:System.Windows.Forms.Menu.MenuItemCollection> を通じて、 <xref:System.Windows.Forms.Menu.MenuItems%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、ショートカット メニューを構築するを使用して、 <xref:System.Windows.Forms.ContextMenu.Show%2A> メソッドです。 例を実行するには、Button1 という名前のボタンを含むフォームで、次のコードを貼り付けます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューが折りたたまれたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## 例  
 The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ContextMenu.Collapse> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  
  
 To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ContextMenu> named `ContextMenu1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ContextMenu.Collapse> event.  
  
 [!code-csharp[System.Windows.Forms.EventExamples\#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples\#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ContextMenu.Collapse" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.ContextMenu.Popup" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューが表示される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントを使用するには、初期化するために、 <xref:System.Windows.Forms.MenuItem> から表示されるオブジェクトします。 使用する場合など、 <xref:System.Windows.Forms.ContextMenu> 3 の <xref:System.Windows.Forms.TextBox> コントロールとは、特定のメニュー項目を無効にする、 <xref:System.Windows.Forms.ContextMenu> に応じて <xref:System.Windows.Forms.TextBox> がショートカット メニューを表示するには、このイベントのイベント ハンドラーを作成することができます。 使って、 <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> を決定するプロパティ <xref:System.Windows.Forms.TextBox> を表示するには、 <xref:System.Windows.Forms.ContextMenu> 、適切なを無効にして <xref:System.Windows.Forms.MenuItem> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [クラスへのイベント](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例のイベント ハンドラーの作成、 <xref:System.Windows.Forms.ContextMenu.Popup> のイベント、 <xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーのコードでは、2 つのコントロールのどれかを判断、 <xref:System.Windows.Forms.PictureBox> という名前 `pictureBox1` と <xref:System.Windows.Forms.TextBox> という名前 `textBox1` コントロールのショートカット メニューを表示します。 原因となったコントロールによって、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な <xref:System.Windows.Forms.MenuItem> オブジェクトを <xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、 <xref:System.Windows.Forms.ContextMenu> という名前のクラス `contextMenu1`, フォーム内に定義されている。 またこの例ではあることが必要です、 <xref:System.Windows.Forms.TextBox> と <xref:System.Windows.Forms.PictureBox> フォームに追加、 <xref:System.Windows.Forms.Control.ContextMenu%2A> にこれらのコントロールのプロパティが設定されている `contextMenu1`します。  
  
 [!code-cpp[Classic ContextMenu Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <param name="control">コマンド キーの適用先のコントロール。</param>
        <summary>コマンド キーを処理します。</summary>
        <returns>文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、メッセージのプリプロセス コマンド キーを処理中に呼び出されます。 コマンド キーは、通常の入力キーに常に優先されるキーです。 コマンド キーには、アクセラレータ、およびメニューのショートカットなどがあります。 メソッドが返す必要があります `true` コマンド キーを処理したことを示すために、または `false` キーがコマンド キーでないことを示します。 このメソッドは、コントロールは、Windows フォーム アプリケーションまたは ActiveX コントロールとしてホストされている場合にのみ呼び出されます。  
  
 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> メソッドはまず、コントロールがあるかどうかを判断、 <xref:System.Windows.Forms.ContextMenu>, 、でき、その場合、 <xref:System.Windows.Forms.ContextMenu> コマンド キーを処理します。 キーが、親に渡されるコマンドのキーは、メニューのショートカットではありません、コントロールに親がある場合は、 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> メソッドです。 最終的な結果は、そのコマンドがキーは「バブル イベント」コントロールの階層構造です。 だけでなく、ユーザーが押されたキー、キーのデータもそれを示しますに修飾子キーが押された場合に、キーと同時にします。 修飾子キーには、shift キーを押し、CTRL、ALT キーが含まれます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for the immediate caller to call unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method should be returned. Controls will seldom, if ever, need to override this method.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがテキストを右から左に表示するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.RightToLeft" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、右から左に記述されている言語をサポートするメニューを使用します。 このプロパティに設定すると `RightToLeft.Yes`, 、メニュー項目のテキストが右から左から右メソッドに既定ではなく左に表示されます。  
  
> [!NOTE]
>  右から左への配置を有効にすると、Windows フォーム コントロールにどのように影響する方法の詳細については、次を参照してください。、 <xref:System.Windows.Forms.Control.RightToLeft%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに割り当てられている値がの有効なメンバーではない、 <see cref="T:System.Windows.Forms.RightToLeft" /> 列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Windows.Forms.Control" /> このショートカット メニューが関連付けられているコントロールを指定します。</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> 、メニューを表示する位置座標を指定します。 これらの座標がで指定したコントロールのクライアント座標に対して相対的に指定されている、 <c>control</c> パラメーター。</param>
        <summary>指定した位置にショートカット メニューを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、 <xref:System.Windows.Forms.ContextMenu> 、ユーザーがコントロールまたはフォームの領域にマウスの右ボタンをクリックしたときに表示されるを <xref:System.Windows.Forms.ContextMenu> にバインドします。 このメソッドを使用して、手動で特定の場所にショートカット メニューを表示して、特定のコントロールにバインドすることができます。 このメソッドは、メニューが閉じられるまでは返されません。  
  
   
  
## 例  
 次のコード例では、ショートカット メニューを構築するを使用して、 <xref:System.Windows.Forms.ContextMenu.Show%2A> メソッドです。 例を実行するには、Button1 という名前のボタンを含むフォームで、次のコードを貼り付けます。 すべてのイベントがイベント処理メソッドに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">コントロールのハンドルが存在しないか、コントロールは表示されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="control">A <see cref="T:System.Windows.Forms.Control" /> このショートカット メニューが関連付けられているコントロールを指定します。</param>
        <param name="pos">A <see cref="T:System.Drawing.Point" /> 、メニューを表示する位置座標を指定します。 これらの座標がで指定したコントロールのクライアント座標に対して相対的に指定されている、 <c>control</c> パラメーター。</param>
        <param name="alignment">A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 基準となるコントロールの配置を指定する、 <c>pos</c> パラメーター。</param>
        <summary>位置および配置を指定してショートカット メニューを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ショートカット メニューを表示しているコントロールを取得します。</summary>
        <value>A <see cref="T:System.Windows.Forms.Control" /> ショートカット メニューを表示するコントロールを表します。 コントロールがショートカット メニューを表示しない場合、プロパティを返します <see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用するコントロールが現在表示するかを決定する、ショートカット メニューで定義されている、 <xref:System.Windows.Forms.ContextMenu>です。 ショートカット メニューが表示されていない場合は、どのコントロールが最後に、ショートカット メニューを表示するこのプロパティを使用できます。 このプロパティを使用することができます、 <xref:System.Windows.Forms.ContextMenu.Popup> コントロールが適切なメニュー項目を表示することを確認するイベントです。 ショートカット メニューに表示されるメニュー コマンドに関連付けられているタスクを実行するメソッドに、コントロールへの参照を渡すこのプロパティを使用することもできます。 以降、 <xref:System.Windows.Forms.Form> クラスから継承 <xref:System.Windows.Forms.Control>, 場合、に、このプロパティを使用することもできます、 <xref:System.Windows.Forms.ContextMenu> フォームが関連付けられています。  
  
   
  
## 例  
 次のコード例のイベント ハンドラーの作成、 <xref:System.Windows.Forms.ContextMenu.Popup> のイベント、 <xref:System.Windows.Forms.ContextMenu>です。 イベント ハンドラーのコードでは、2 つのコントロールのどれかを判断、 <xref:System.Windows.Forms.PictureBox> という名前 `pictureBox1` と <xref:System.Windows.Forms.TextBox> という名前 `textBox1` コントロールのショートカット メニューを表示します。 原因となったコントロールによって、 <xref:System.Windows.Forms.ContextMenu> 、ショートカット メニューを表示するコントロールを追加、適切な <xref:System.Windows.Forms.MenuItem> オブジェクトを <xref:System.Windows.Forms.ContextMenu>です。 この例では、インスタンスがあることが必要です、 <xref:System.Windows.Forms.ContextMenu> という名前のクラス `contextMenu1`, フォーム内に定義されている。 またこの例ではあることが必要です、 <xref:System.Windows.Forms.TextBox> と <xref:System.Windows.Forms.PictureBox> フォームに追加、 <xref:System.Windows.Forms.Control.ContextMenu%2A> にこれらのコントロールのプロパティが設定されている `contextMenu1`します。  
  
 [!code-cpp[Classic ContextMenu Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ContextMenu" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した位置にショートカット メニューを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>