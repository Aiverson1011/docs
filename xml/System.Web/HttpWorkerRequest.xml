<Type Name="HttpWorkerRequest" FullName="System.Web.HttpWorkerRequest">
  <TypeSignature Language="C#" Value="public abstract class HttpWorkerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HttpWorkerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpWorkerRequest" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>この抽象クラスは、基本ワーカー メソッドと要求を処理する ASP.NET マネージ コードで使用する列挙体を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ほとんどの場合、コードがないと対処 <xref:System.Web.HttpWorkerRequest> 直接を通じて要求および応答データが公開されているため、 <xref:System.Web.HttpRequest> と <xref:System.Web.HttpResponse> クラスです。 一部の内部 ASP.NET クラスは、このクラスを拡張します。 呼び出すには、このクラスを拡張する必要がありますが、コードは、独自のホスティング環境を実装している場合、 <xref:System.Web.HttpRuntime.ProcessRequest%2A> メソッドです。 また、コードを作成するには、そのインスタンスを渡すために、指定されたアプリケーション内で子要求を実行するために派生クラス <xref:System.Web.HttpRuntime.ProcessRequest%2A>します。 この場合、派生クラスは、現在への参照を保持する必要があります <xref:System.Web.HttpWorkerRequest> し、そのためのメソッドのほとんどに委任します。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWorkerRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.HttpWorkerRequest" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpWorkerRequest.%23ctor%2A> コンス トラクターは、既定のコンス トラクター、 <xref:System.Web.HttpWorkerRequest> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">対応する非同期操作が完了したときに呼び出すメソッド。</param>
        <param name="state">この特定の非同期フラッシュ操作を他の要求を区別するユーザー指定のオブジェクト。</param>
        <summary>現在バッファリングされているすべての応答をクライアントへ送信します。</summary>
        <returns>ワーカーの要求は、非同期のフラッシュ操作が開始されるまで、ステータス、ヘッダー、および応答の本文をバッファーします。 場合は、基になる <see cref="T:System.Web.HttpWorkerRequest" /> オブジェクトには、非同期のフラッシュがサポートしていると非同期モジュールのイベントや非同期ハンドラーからこのメソッドは、送信操作が非同期に実行します。 それ以外の場合、実装では、同期のフラッシュ操作を実行します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">データを読み込むバッファー。</param>
        <param name="offset">データの書き込みを開始する位置を示すバッファー内のバイト オフセット。</param>
        <param name="count">読み取る最大バイト数。</param>
        <param name="callback">対応する非同期操作が完了したときに呼び出すメソッド。</param>
        <param name="state">この特定の非同期を区別するユーザー指定のオブジェクトは、他の要求から読み取る。</param>
        <summary>要求エンティティ本体の非同期読み取り操作を開始します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public virtual void CloseConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.CloseConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントとの接続を終了します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public virtual void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">保留中の非同期要求への参照。</param>
        <summary>保留中の非同期フラッシュ操作が完了まで待機します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfRequest">
      <MemberSignature Language="C#" Value="public abstract void EndOfRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOfRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndOfRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ランタイムに通知するために使用、 <see cref="T:System.Web.HttpWorkerRequest" /> その要求に対する処理は現在の要求が完了します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">保留中の非同期要求への参照。</param>
        <summary>保留中の非同期の読み取り操作が完了するまで待機します。</summary>
        <returns>ストリームから読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushResponse">
      <MemberSignature Language="C#" Value="public abstract void FlushResponse (bool finalFlush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlushResponse(bool finalFlush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalFlush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalFlush">
          <see langword="true" /> この場合は、前回の応答データがフラッシュされます。それ以外の場合、 <see langword="false" />です。</param>
        <summary>すべての保留中の応答データをクライアントに送信します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPath">
      <MemberSignature Language="C#" Value="public virtual string GetAppPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在実行中のサーバー アプリケーションへの仮想パスを返します。</summary>
        <returns>現在のアプリケーションの仮想パス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetAppPathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPathTranslated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在実行中のサーバー アプリケーションへの物理パスを返します。</summary>
        <returns>現在のアプリケーションの物理パス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPoolID">
      <MemberSignature Language="C#" Value="public virtual string GetAppPoolID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPoolID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPoolID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、現在の URL をアプリケーション プール ID を返します。</summary>
        <returns>常に null を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytesRead">
      <MemberSignature Language="C#" Value="public virtual long GetBytesRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytesRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetBytesRead" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントから読み取ったバイト数を取得します。</summary>
        <returns>A <see langword="Long" /> 読み取られたバイト数を格納します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、クライアントが発行される要求から \(X.509 標準で指定された\) 証明書フィールドを取得します。</summary>
        <returns>証明書全体のコンテンツのストリームを含むバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 証明書を送信しない場合、 <xref:System.Web.HttpRequest.ClientCertificate%2A> コレクションは空を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateBinaryIssuer">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificateBinaryIssuer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificateBinaryIssuer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バイナリ形式で証明書の発行者を取得します。</summary>
        <returns>バイナリ形式で表される証明書の発行者を含むバイト配列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateEncoding">
      <MemberSignature Language="C#" Value="public virtual int GetClientCertificateEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetClientCertificateEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateEncoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、 <see cref="T:System.Text.Encoding" /> クライアント証明書がエンコードされたオブジェクトします。</summary>
        <returns>証明書のエンコーディングは、整数として表されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificatePublicKey">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificatePublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificatePublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificatePublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、 <see langword="PublicKey" /> クライアント証明書に関連付けられているオブジェクト。</summary>
        <returns>
          <see langword="PublicKey" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidFrom">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidFrom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidFrom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidFrom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、証明書が有効となる日付を取得します。 日付は、国際対応の設定によって異なります。</summary>
        <returns>A <see cref="T:System.DateTime" /> 証明書が有効になるときを表すオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidUntil">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidUntil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidUntil() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidUntil" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>証明書の有効期限を取得します。</summary>
        <returns>A <see cref="T:System.DateTime" /> 証明書の有効期限が切れる日付を表すオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionID">
      <MemberSignature Language="C#" Value="public virtual long GetConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetConnectionID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、現在の接続の ID を返します。</summary>
        <returns>常に 0 を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePath">
      <MemberSignature Language="C#" Value="public virtual string GetFilePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、仮想パスを要求された URI を返します。</summary>
        <returns>要求された URI へのパス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetFilePathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePathTranslated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求された URI への物理ファイル パスを返します \(を仮想パスからの物理パスに変換しますたとえば、"\/proj1\/page.aspx""c:\\dir\\page.aspx"を\)。</summary>
        <returns>要求された URI に変換された物理ファイル パス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVerbName">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVerbName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVerbName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVerbName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求ヘッダーの指定したメンバーを返します。</summary>
        <returns>HTTP 動詞は、要求ヘッダーで返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVersion">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求 \(たとえば、"http\/1.1"\) の HTTP バージョンへのアクセスを提供します。</summary>
        <returns>要求ヘッダーで返される HTTP バージョン。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetKnownRequestHeader (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKnownRequestHeader(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">ヘッダーのインデックス。 たとえば、 <see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" /> フィールドです。</param>
        <summary>指定したインデックスに対応する標準の HTTP 要求ヘッダーを返します。</summary>
        <returns>HTTP 要求ヘッダー。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownRequestHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownRequestHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">ヘッダーの名前。</param>
        <summary>指定した HTTP 要求ヘッダーのインデックス番号を返します。</summary>
        <returns>指定された HTTP 要求ヘッダーのインデックス番号、 <paramref name="header" /> パラメーター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownRequestHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownRequestHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">ヘッダーのインデックス番号。</param>
        <summary>指定した HTTP 要求ヘッダーの名前を返します。</summary>
        <returns>指定された HTTP 要求ヘッダーの名前、 <paramref name="index" /> パラメーター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownResponseHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownResponseHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">HTTP ヘッダーの名前。</param>
        <summary>指定した HTTP 応答ヘッダーのインデックス番号を返します。</summary>
        <returns>指定した HTTP 応答ヘッダーのインデックス番号、 <paramref name="header" /> パラメーター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownResponseHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownResponseHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">ヘッダーのインデックス番号。</param>
        <summary>指定した HTTP 応答ヘッダーの名前を返します。</summary>
        <returns>指定した HTTP 応答ヘッダーの名前、 <paramref name="index" /> パラメーター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalAddress">
      <MemberSignature Language="C#" Value="public abstract string GetLocalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLocalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求ヘッダーの指定したメンバーへのアクセスを提供します。</summary>
        <returns>サーバーの IP アドレスは、要求ヘッダーで返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalPort">
      <MemberSignature Language="C#" Value="public abstract int GetLocalPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLocalPort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求ヘッダーの指定したメンバーへのアクセスを提供します。</summary>
        <returns>サーバーのポート番号は、要求ヘッダーで返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathInfo">
      <MemberSignature Language="C#" Value="public virtual string GetPathInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPathInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>URL 拡張子付きリソースの追加パス情報を返します。 つまり、パス\/virdir\/page.html\/tail の <see langword="GetPathInfo" /> 値は\/tail です。</summary>
        <returns>リソースの追加パス情報。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreloadedEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreloadedEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既に読み取られた HTTP 要求の本文の部分を返します。</summary>
        <returns>読み取られた HTTP 要求本文の部分。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBody(unsigned int8[] buffer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">読み取るデータ。</param>
        <param name="offset">バイトの読み取りを開始位置を示すオフセットします。</param>
        <summary>指定したバッファーのデータとバイト オフセットを使用して現在読み取られた HTTP 要求本文の部分を取得します。</summary>
        <returns>読み取られた HTTP 要求本文の部分。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在読み取られた HTTP 要求本文の部分の長さを取得します。</summary>
        <returns>現在読み取りの HTTP 要求本文の長さを表す整数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtocol">
      <MemberSignature Language="C#" Value="public virtual string GetProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、HTTP プロトコル \(HTTP または HTTPS\) を返します。</summary>
        <returns>HTTPS 場合、 <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> メソッドは <see langword="true" />, 、それ以外の場合の HTTP。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryString">
      <MemberSignature Language="C#" Value="public abstract string GetQueryString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetQueryString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求 URL で指定されたクエリ文字列を返します。</summary>
        <returns>要求クエリ文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringRawBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetQueryStringRawBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetQueryStringRawBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、バイト配列として応答クエリ文字列を返します。</summary>
        <returns>応答を格納するバイトの配列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawUrl">
      <MemberSignature Language="C#" Value="public abstract string GetRawUrl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRawUrl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRawUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クエリ文字列が追加された、要求ヘッダーに含まれる URL パスを返します。</summary>
        <returns>要求ヘッダーの生の URL パス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteAddress">
      <MemberSignature Language="C#" Value="public abstract string GetRemoteAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求ヘッダーの指定したメンバーへのアクセスを提供します。</summary>
        <returns>クライアントの IP アドレスです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteName">
      <MemberSignature Language="C#" Value="public virtual string GetRemoteName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、クライアント コンピューターの名前を返します。</summary>
        <returns>クライアント コンピューターの名前。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemotePort">
      <MemberSignature Language="C#" Value="public abstract int GetRemotePort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemotePort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemotePort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求ヘッダーの指定したメンバーへのアクセスを提供します。</summary>
        <returns>クライアントの HTTP ポート番号です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestReason">
      <MemberSignature Language="C#" Value="public virtual int GetRequestReason ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRequestReason() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、要求の理由を返します。</summary>
        <returns>理由コードです。 既定値は、<see langword="ReasonResponseCacheMiss" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerName">
      <MemberSignature Language="C#" Value="public virtual string GetServerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、ローカル サーバーの名前を返します。</summary>
        <returns>ローカル サーバーの名前。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVariable">
      <MemberSignature Language="C#" Value="public virtual string GetServerVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerVariable(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要求されたサーバー変数の名前。</param>
        <summary>要求に関連付けられたサーバー変数のディクショナリから単一のサーバー変数を返します。</summary>
        <returns>要求されたサーバー変数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusDescription">
      <MemberSignature Language="C#" Value="public static string GetStatusDescription (int code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStatusDescription(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">HTTP ステータス コード。</param>
        <summary>指定した HTTP ステータス コードの名前を表す文字列を返します。</summary>
        <returns>ステータスの説明。 たとえば、 <see cref="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" /> "Not Found"\(404\) を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTotalEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetTotalEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTotalEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetTotalEntityBodyLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>HTTP 要求本文全体の長さを取得します。</summary>
        <returns>HTTP 要求本文全体の長さを表す整数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetUnknownRequestHeader (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUnknownRequestHeader(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">ヘッダーの名前です。</param>
        <summary>非標準の HTTP 要求ヘッダーの値を返します。</summary>
        <returns>ヘッダーの値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeaders">
      <MemberSignature Language="C#" Value="public virtual string[][] GetUnknownRequestHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[][] GetUnknownRequestHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての非標準 HTTP ヘッダーの名前\/値ペアを取得します。</summary>
        <returns>ヘッダーの名前と値のペアの配列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriPath">
      <MemberSignature Language="C#" Value="public abstract string GetUriPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUriPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUriPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求の URI への仮想パスを返します。</summary>
        <returns>要求された URI へのパス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlContextID">
      <MemberSignature Language="C#" Value="public virtual long GetUrlContextID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetUrlContextID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUrlContextID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、現在の接続のコンテキスト ID を返します。</summary>
        <returns>常に 0 を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetUserToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetUserToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUserToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、クライアントの偽装トークンを返します。</summary>
        <returns>クライアントの偽装トークンを表す値。 既定値は 0 です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPathToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetVirtualPathToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetVirtualPathToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetVirtualPathToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求の仮想パスの偽装トークンを取得します。</summary>
        <returns>要求の仮想パスのトークンのアンマネージ メモリ ポインター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HasEntityBody" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求に本文データが含まれているかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> 要求に本文のデータが含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAccept">
      <MemberSignature Language="C#" Value="public const int HeaderAccept = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAccept = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAccept" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Accept" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptCharset">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptCharset = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptCharset = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptCharset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Accept-Charset" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptEncoding = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptEncoding = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Accept-Encoding" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptLanguage = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptLanguage = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Accept-Language" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptRanges">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptRanges = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptRanges = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptRanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Accept-Ranges" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAge">
      <MemberSignature Language="C#" Value="public const int HeaderAge = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAge = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAge" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Age" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAllow">
      <MemberSignature Language="C#" Value="public const int HeaderAllow = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAllow = (10)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAllow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Allow" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderAuthorization = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAuthorization = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAuthorization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>インデックス番号を指定します、 <see langword="Authorization" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、標準 HTTP ヘッダー、各種ので使用するためにインデックス番号を割り当てます、<xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A>と<xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCacheControl">
      <MemberSignature Language="C#" Value="public const int HeaderCacheControl = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCacheControl = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCacheControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>HTTP を表すインデックス <see langword="Cache-Control" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderConnection">
      <MemberSignature Language="C#" Value="public const int HeaderConnection = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderConnection = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Connection" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderContentEncoding = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentEncoding = (13)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Encoding" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderContentLanguage = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLanguage = (14)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Language" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLength">
      <MemberSignature Language="C#" Value="public const int HeaderContentLength = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLength = (11)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Length" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLocation">
      <MemberSignature Language="C#" Value="public const int HeaderContentLocation = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLocation = (15)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Location" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentMd5">
      <MemberSignature Language="C#" Value="public const int HeaderContentMd5 = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentMd5 = (16)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentMd5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-MD5" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentRange">
      <MemberSignature Language="C#" Value="public const int HeaderContentRange = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentRange = (17)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Range" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentType">
      <MemberSignature Language="C#" Value="public const int HeaderContentType = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentType = (12)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Content-Type" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCookie">
      <MemberSignature Language="C#" Value="public const int HeaderCookie = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCookie = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCookie" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Cookie" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderDate">
      <MemberSignature Language="C#" Value="public const int HeaderDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderDate = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Date" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEtag">
      <MemberSignature Language="C#" Value="public const int HeaderEtag = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderEtag = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderEtag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="ETag" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpect">
      <MemberSignature Language="C#" Value="public const int HeaderExpect = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpect = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Except" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpires">
      <MemberSignature Language="C#" Value="public const int HeaderExpires = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpires = (18)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpires" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Expires" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderFrom">
      <MemberSignature Language="C#" Value="public const int HeaderFrom = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderFrom = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderFrom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="From" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderHost">
      <MemberSignature Language="C#" Value="public const int HeaderHost = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderHost = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderHost" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Host" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfMatch = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfMatch = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>インデックス番号を指定します、 <see langword="If-Match" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、標準 HTTP ヘッダー、各種ので使用するためにインデックス番号を割り当てます、<xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A>と<xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfModifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfModifiedSince = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfModifiedSince = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfModifiedSince" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="If-Modified-Since" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfNoneMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfNoneMatch = 31;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfNoneMatch = (31)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfNoneMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="If-None-Match" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfRange">
      <MemberSignature Language="C#" Value="public const int HeaderIfRange = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfRange = (32)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="If-Range" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfUnmodifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfUnmodifiedSince = 33;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfUnmodifiedSince = (33)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>33</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="If-Unmodified-Since" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderKeepAlive">
      <MemberSignature Language="C#" Value="public const int HeaderKeepAlive = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderKeepAlive = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderKeepAlive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Keep-Alive" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLastModified">
      <MemberSignature Language="C#" Value="public const int HeaderLastModified = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLastModified = (19)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLastModified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Last-Modified" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLocation">
      <MemberSignature Language="C#" Value="public const int HeaderLocation = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLocation = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Location" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderMaxForwards">
      <MemberSignature Language="C#" Value="public const int HeaderMaxForwards = 34;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderMaxForwards = (34)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderMaxForwards" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Max-Forwards" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderPragma">
      <MemberSignature Language="C#" Value="public const int HeaderPragma = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderPragma = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderPragma" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Pragma" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthenticate = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthenticate = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthenticate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Proxy-Authenticate" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthorization = 35;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthorization = (35)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthorization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Proxy-Authorization" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRange">
      <MemberSignature Language="C#" Value="public const int HeaderRange = 37;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRange = (37)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Range" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderReferer">
      <MemberSignature Language="C#" Value="public const int HeaderReferer = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderReferer = (36)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderReferer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Referer" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRetryAfter">
      <MemberSignature Language="C#" Value="public const int HeaderRetryAfter = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRetryAfter = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRetryAfter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Retry-After" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderServer">
      <MemberSignature Language="C#" Value="public const int HeaderServer = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderServer = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderServer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Server" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSetCookie">
      <MemberSignature Language="C#" Value="public const int HeaderSetCookie = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderSetCookie = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderSetCookie" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Set-Cookie" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersSent">
      <MemberSignature Language="C#" Value="public virtual bool HeadersSent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HeadersSent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HeadersSent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の要求に対する、HTTP 応答ヘッダーをクライアントに送信されているかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> HTTP 応答ヘッダーをクライアントに送信されている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTe">
      <MemberSignature Language="C#" Value="public const int HeaderTe = 38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTe = (38)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="TE" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTrailer">
      <MemberSignature Language="C#" Value="public const int HeaderTrailer = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTrailer = (5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTrailer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Trailer" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTransferEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderTransferEncoding = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTransferEncoding = (6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTransferEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Transfer-Encoding" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUpgrade">
      <MemberSignature Language="C#" Value="public const int HeaderUpgrade = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUpgrade = (7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUpgrade" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Upgrade" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUserAgent">
      <MemberSignature Language="C#" Value="public const int HeaderUserAgent = 39;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUserAgent = (39)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUserAgent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>インデックス番号を指定します、 <see langword="User-Agent" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、標準 HTTP ヘッダー、各種ので使用するためにインデックス番号を割り当てます、<xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A>と<xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVary">
      <MemberSignature Language="C#" Value="public const int HeaderVary = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVary = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>インデックス番号を指定します、 <see langword="Vary" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、標準 HTTP ヘッダー、各種ので使用するためにインデックス番号を割り当てます、<xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A>と<xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVia">
      <MemberSignature Language="C#" Value="public const int HeaderVia = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVia = (8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVia" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Via" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWarning">
      <MemberSignature Language="C#" Value="public const int HeaderWarning = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWarning = (9)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Warning" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWwwAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderWwwAuthenticate = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWwwAuthenticate = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWwwAuthenticate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="WWW-Authenticate" /> HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsClientConnected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsClientConnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsClientConnected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアント接続がまだアクティブかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> クライアント接続がアクティブな場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntireEntityBodyIsPreloaded">
      <MemberSignature Language="C#" Value="public virtual bool IsEntireEntityBodyIsPreloaded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEntireEntityBodyIsPreloaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての要求データかどうかを示す値があるし、クライアントからのそれ以降の読み取りは必要ありませんを返します。</summary>
        <returns>
          <see langword="true" /> すべての要求データがあるか。それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsSecure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>接続で SSL を使用するかどうかを示す値を返します。</summary>
        <returns>接続に SSL を使用する場合は<see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineConfigPath">
      <MemberSignature Language="C#" Value="public virtual string MachineConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineConfigPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Machine.config ファイルの完全な物理パスを取得します。</summary>
        <value>Machine.config ファイルの物理パス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallDirectory">
      <MemberSignature Language="C#" Value="public virtual string MachineInstallDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineInstallDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineInstallDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET のバイナリがインストールされているディレクトリへの物理パスを取得します。</summary>
        <value>ASP.NET のバイナリ ファイルへの物理ディレクトリです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.MapPath(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>指定した仮想パスに対応する物理パスを返します。</summary>
        <returns>指定された仮想パスに対応する物理パス、 <paramref name="virtualPath" /> パラメーター。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オーバーロードされます。 \(プリロードされません\) の場合、クライアントから要求データを読み取ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装は、ストリームの末尾に達していない場合でも、要求されたバイト数を返すことです。  
  
 このオーバー ロードを使用すると、2 GB より大きいメッセージ本体の応答を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">データを読み取るバイト配列。</param>
        <param name="size">読み取る最大バイト数。</param>
        <summary>\(プリロードされません\) の場合、クライアントから要求データを読み取ります。</summary>
        <returns>読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装は、ストリームの末尾に達していない場合でも、要求されたバイト数を返すことです。  
  
 このオーバー ロードを使用すると、2 GB より大きいメッセージ本体の応答を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">データを読み取るバイト配列。</param>
        <param name="offset">バイトの読み取りを開始位置を示すオフセットします。</param>
        <param name="size">読み取る最大バイト数。</param>
        <summary>読み取りは、指定したバッファーから読み取る、バイト オフセット、および最大バイト数を使用して \(プリロードされません\) の場合、クライアントからのデータを要求します。</summary>
        <returns>読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装は、ストリームの末尾に達していない場合でも、要求されたバイト数を返すことです。  
  
 このオーバー ロードを使用すると、2 GB より大きいメッセージ本体の応答を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonCachePolicy">
      <MemberSignature Language="C#" Value="public const int ReasonCachePolicy = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCachePolicy = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCachePolicy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonCacheSecurity">
      <MemberSignature Language="C#" Value="public const int ReasonCacheSecurity = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCacheSecurity = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCacheSecurity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonClientDisconnect">
      <MemberSignature Language="C#" Value="public const int ReasonClientDisconnect = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonClientDisconnect = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonClientDisconnect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonDefault">
      <MemberSignature Language="C#" Value="public const int ReasonDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。 既定値は <see cref="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" /> です。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonFileHandleCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonFileHandleCacheMiss = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonFileHandleCacheMiss = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonResponseCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonResponseCacheMiss = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonResponseCacheMiss = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>要求の理由を指定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int RequestHeaderMaximum = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 RequestHeaderMaximum = (40)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.RequestHeaderMaximum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Maximum" /> HTTP 要求ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public virtual Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求の対応する Windows のイベント追跡トレース ID を取得します。</summary>
        <value>現在の ASP.NET 要求のトレース ID です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET 要求は、対応する IIS の要求と同じトレース ID で実行されます。 これには、HTTP で始まる、有効期間中の要求の追跡が容易にします。SYS カーネル モード HTTP リスナー、および ASP.NET システムに IIS サービスを使用します。 IIS で提供される Id は、プラットフォームとサービス パック レベルによって異なります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.CorrelationManager" />
        <altmember cref="T:System.Web.HttpRuntime" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int ResponseHeaderMaximum = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ResponseHeaderMaximum = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ResponseHeaderMaximum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>インデックス番号を指定、 <see langword="Maximum" /> HTTP 応答ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、各標準 HTTP ヘッダーの種類で使用するためにインデックス番号を割り当てます、 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> と <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootWebConfigPath">
      <MemberSignature Language="C#" Value="public virtual string RootWebConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootWebConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RootWebConfigPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ルートの Web.config ファイルの完全な物理パスを取得します。</summary>
        <value>ルートの Web.config ファイルの物理パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装する場合、独自のホスティング環境では、環境のルートの構成ファイルの場所を取得するには、このプロパティをオーバーライドする可能性があります。 この例は、 <xref:System.Web.Hosting.SimpleWorkerRequest> の単純な実装を提供するクラス、 <xref:System.Web.HttpWorkerRequest>です。<xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=fullName> プロパティの <xref:System.Web.Hosting.SimpleWorkerRequest> クラスのオーバーライド、 <xref:System.Web.HttpWorkerRequest.RootWebConfigPath%2A> の <xref:System.Web.HttpWorkerRequest> クラスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" />
      </Docs>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (int contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int32 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentLength">バイト単位の応答の長さ。</param>
        <summary>追加、 <see langword="Content-Length" /> 2 GB 以下であるメッセージ本体の応答する HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドにより、コンテンツの長さが明示的に設定されていないときに、 <xref:System.Web.HttpWorkerRequest> 追加するインスタンス、 `Content-Length` 応答する HTTP ヘッダー。  
  
 このオーバー ロードを使用して、設定、 `Content-Length` ヘッダー、応答メッセージ本文の長さが 2 GB 以下である場合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="contentLength">バイト単位の応答の長さ。</param>
        <summary>追加、 <see langword="Content-Length" /> は 2 GB より大きいメッセージの本文に応答する HTTP ヘッダー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドにより、コンテンツの長さが明示的に設定されていないときに、 <xref:System.Web.HttpWorkerRequest> 追加するインスタンス、 `Content-Length` 応答する HTTP ヘッダー。 既定の実装を受け取るオーバー ロードを呼び出して、 `contentLength` 型のパラメーター <xref:System.Int32>します。  
  
 このオーバー ロードを使用すると、2 GB より大きいメッセージ本体の応答を指定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendKnownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendKnownResponseHeader (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKnownResponseHeader(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">ヘッダーのインデックス。 たとえば、<see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" /> のようにします。</param>
        <param name="value">ヘッダーの値です。</param>
        <summary>標準的な HTTP ヘッダーを応答に追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(native int handle, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="handle">送信するファイルのハンドル。</param>
        <param name="offset">ファイル内の開始位置。</param>
        <param name="length">送信するバイト数。</param>
        <summary>指定されたファイルの内容を応答に追加し、ファイルおよび送信するバイト数内の開始位置を指定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">送信するファイルの名前。</param>
        <param name="offset">ファイル内の開始位置。</param>
        <param name="length">送信するバイト数。</param>
        <summary>指定されたファイルの内容を応答に追加し、ファイルおよび送信するバイト数内の開始位置を指定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromMemory (byte[] data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(unsigned int8[] data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">送信するバイト配列。</param>
        <param name="length">最初のバイトで始まるを送信するバイト数。</param>
        <summary>指定したバイト数をバイト配列からの応答に追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public virtual void SendResponseFromMemory (IntPtr data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(native int data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">メモリ ブロックへのアンマネージ ポインター。</param>
        <param name="length">送信するバイト数。</param>
        <summary>メモリ ブロックからの応答を指定したバイト数を追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendStatus">
      <MemberSignature Language="C#" Value="public abstract void SendStatus (int statusCode, string statusDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStatus(int32 statusCode, string statusDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="statusDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statusCode">ステータス コードを送信するには</param>
        <param name="statusDescription">送信にステータスの説明。</param>
        <summary>などの応答の HTTP ステータス コードとステータス説明を指定 <c>SendStatus(200, "Ok")</c>します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUnknownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendUnknownResponseHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUnknownResponseHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">送信するヘッダーの名前。</param>
        <param name="value">ヘッダーの値です。</param>
        <summary>非標準 HTTP ヘッダーを応答に追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndOfSendNotification">
      <MemberSignature Language="C#" Value="public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEndOfSendNotification(class System.Web.HttpWorkerRequest/EndOfSendNotification callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpWorkerRequest+EndOfSendNotification" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">通知のコールバック時に呼び出されるすべてのデータが \(帯域外\) を送信します。</param>
        <param name="extraData">コールバックに追加のパラメーターです。</param>
        <summary>すべての応答データを送信するときに、省略可能な通知を登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはするバッファーの再利用を実装するときに役立ちます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のフラッシュ操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 非同期のフラッシュ操作がサポートされている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncRead">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncRead" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期の読み取り操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 非同期の読み取り操作がサポートされている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendCalculatedContentLength">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>追加、 <see langword="Content-Length" /> 応答する HTTP ヘッダー。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SendResponseFromFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>応答には、ファイルの内容を追加します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetPreloadedEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オーバーロードされます。 現在読み取られた HTTP 要求本文の部分を返します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SendResponseFromMemory">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>応答には、メモリ ブロックの内容を追加します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>