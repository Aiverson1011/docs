<Type Name="HttpResponseWrapper" FullName="System.Web.HttpResponseWrapper">
  <TypeSignature Language="C#" Value="public class HttpResponseWrapper : System.Web.HttpResponseBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpResponseWrapper extends System.Web.HttpResponseBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponseWrapper" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpResponseBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET 操作からの HTTP 応答情報を提供する、HTTP 組み込みのオブジェクトをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpResponseWrapper> クラスから派生する、 <xref:System.Web.HttpResponseBase> クラスのラッパーとして機能していない、 <xref:System.Web.HttpResponse> クラスです。 このクラスの機能を公開する、 <xref:System.Web.HttpResponse> クラスもを公開する際、 <xref:System.Web.HttpResponseBase> 型です。<xref:System.Web.HttpResponseBase> クラスを使用すると、元の実装を置き換える、 <xref:System.Web.HttpResponse> 単体 ASP.NET パイプラインの外部テストを実行する場合などのカスタム実装を使用してアプリケーション内のクラスです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpResponseWrapper (System.Web.HttpResponse httpResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpResponse httpResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.#ctor(System.Web.HttpResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpResponse" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="httpResponse">このラッパー クラスのアクセス提供先のオブジェクト。</param>
        <summary>
          <see cref="T:System.Web.HttpResponseWrapper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="httpResponse" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public override void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies">アプリケーション依存関係のリストに追加するファイル、キャッシュ キー、または <see cref="T:System.Web.Caching.CacheDependency" /> オブジェクト。</param>
        <summary>派生クラスでオーバーライドされるときに、キャッシュ依存関係を応答に関連付け、応答がキャッシュされた場合、および指定された依存関係が変更された場合に応答を無効化できるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public override void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys">キャッシュされた応答が依存しているアイテムのキーを格納するコレクション。</param>
        <summary>キャッシュ内の指定されたアイテムに依存するキャッシュされた応答を有効にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public override void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddCacheItemDependencies(System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cacheKeys">キャッシュされた応答が依存しているアイテムのキーを格納する配列。</param>
        <summary>キャッシュ内の指定されたアイテムに依存するキャッシュされたアイテムを有効にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public override void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddCacheItemDependency(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey">キャッシュされた応答が依存するアイテムのキー。</param>
        <summary>キャッシュ内の指定されたアイテムに依存するキャッシュされた応答を有効にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public override void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames">追加するファイルの名前。</param>
        <summary>現在の応答が依存しているファイル名のコレクションに、ファイル名を追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public override void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddFileDependencies(System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">追加するファイル名の配列。</param>
        <summary>ファイル名の配列を、現在の応答が依存しているファイル名のコレクションに追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public override void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddFileDependency(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">追加するファイルの名前。</param>
        <summary>現在の応答が依存しているファイル名のコレクションに、ファイル名を 1 つ追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public override void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddHeader(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <c>value</c> を追加する対象となる HTTP ヘッダーの名前。</param>
        <param name="value">ヘッダーに追加する文字列。</param>
        <summary>HTTP ヘッダーを現在の応答に追加します。 このメソッドは、ASP の旧バージョンとの互換性を維持するために用意されたものです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public override System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AddOnSendingHeaders(System.Action{System.Web.HttpContextBase})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">コールバック メソッド。</param>
        <summary>この要求に対応する応答ヘッダーを送信する直前に、ASP.NET ランタイムが呼び出すコールバックを登録します。</summary>
        <returns>OnSendingHeaders 疑似イベントへのサブスクリプションを表す <see cref="T:System.Web.ISubscriptionToken" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public override void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AppendCookie(System.Web.HttpCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">応答に追加するクッキー。</param>
        <summary>HTTP クッキーを HTTP 応答クッキー コレクションに追加します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">HTTP ヘッダーの送信後に Cookie が追加されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public override void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AppendHeader(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">現在の応答に追加する HTTP ヘッダーの名前。</param>
        <param name="value">ヘッダーの値です。</param>
        <summary>HTTP ヘッダーを現在の応答に追加します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">HTTP ヘッダーが送信された後に、ヘッダーが追加されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public override void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.AppendToLog(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param">ログ ファイルに追加するテキスト。</param>
        <summary>カスタム ログ情報をインターネット インフォメーション サービス \(IIS: Internet Information Services\) ログ ファイルに追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public override string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.ApplyAppPathModifier(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">リソースの仮想パス。</param>
        <summary>セッションが <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態を使用している場合に、セッション ID を仮想パスに追加し、その ID を組み合わせたパスを返します。</summary>
        <returns>セッション ID が挿入された仮想パス。<see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態が使用されていない場合、元の <paramref name="virtualpath" /> 値を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">コールバック オブジェクト。</param>
        <param name="state">応答状態。</param>
        <summary>現在バッファリングされているすべての応答をクライアントへ送信します。</summary>
        <returns>非同期の結果オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、基になる <xref:System.Web.HttpWorkerRequest> オブジェクトが非同期フラッシュ操作をサポートしていると非同期モジュール イベントとは、非同期ハンドラーからこのメソッドを呼び出すのフラッシュ操作が非同期に実行します。 それ以外の場合のフラッシュ操作は同期的に実行します。 IIS 6.0 以降、非同期フラッシュがサポートされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">応答は既に完了しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public override void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.BinaryWrite(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">現在の応答に書き込むバイナリ文字。</param>
        <summary>HTTP 出力ストリームにバイナリ文字の文字列を書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public override bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</summary>
        <value>出力がバッファリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.HttpResponseWrapper.Buffer%2A> property of the <xref:System.Web.HttpResponseWrapper> class has been deprecated in favor of the <xref:System.Web.HttpResponseWrapper.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public override bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.BufferOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</summary>
        <value>出力がバッファリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public override System.Web.HttpCachePolicyBase Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicyBase Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicyBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の Web ページのキャッシュ ポリシー \(expiration time 句、privacy settings 句、および vary 句\) を取得します。</summary>
        <value>現在の応答のキャッシュ ポリシー。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public override string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.CacheControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.HttpCacheability" /> 列挙値の 1 つに一致する <see langword="Cache-Control" /> HTTP ヘッダーを取得または設定します。</summary>
        <value>現在の応答のキャッシュ ポリシー。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public override string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の応答の HTTP 文字セットを取得または設定します。</summary>
        <value>現在の応答の HTTP 文字セット。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのヘッダーとコンテンツ出力を現在の応答から消去します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public override void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.ClearContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのコンテンツ出力を現在の応答から消去します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public override void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.ClearHeaders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのヘッダーを現在の応答から消去します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public override System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.ClientDisconnectedToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントの接続が切断されるとトリップされる <see cref="T:System.Threading.CancellationToken" /> オブジェクトを取得します。</summary>
        <value>クライアントの接続が切断されるとトリップされるキャンセル トークン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントへのソケット接続を閉じます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の応答のコンテンツ エンコーディングを取得または設定します。</summary>
        <value>現在の応答のコンテンツ エンコーディングに関する情報。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Web.HttpResponse.ContentEncoding" /> を <see langword="null" /> に設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の応答の HTTP MIME タイプを取得または設定します。</summary>
        <value>現在の応答の HTTP MIME タイプ。 既定値は "<see langword="text/html" />" です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.HttpResponse.ContentType" /> プロパティが <see langword="null" /> に設定されている。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public override System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答のクッキー コレクションを取得します。</summary>
        <value>応答のクッキー コレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public override void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.DisableKernelCache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の応答に対するカーネル キャッシュを無効にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public override void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.DisableUserCache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この応答に対する IIS ユーザー モードのキャッシュを無効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For information about this member, see <xref:System.Web.HttpResponse.DisableUserCache%2A?displayProperty=fullName>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public override void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.End" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在バッファリングされているすべての出力をクライアントへ送信し、要求されたプロセスの実行を停止して、<see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.ThreadAbortException">
          <see cref="M:System.Web.HttpResponse.End" /> の呼び出しは、現在の要求を終了しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public override void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.EndFlush(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">非同期の結果オブジェクト。</param>
        <summary>非同期のフラッシュ操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">非同期のフラッシュがサポートされていません、 <paramref name="asyncResult" /> パラメーターは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">非同期のフラッシュがサポートされていません、 <paramref name="asyncResult" /> にパラメーターをキャストできません、 <see langword="FlushAsyncResult" /> オブジェクトです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public override int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントまたはプロキシでキャッシュされたページの有効期限が切れるまでの時間を分単位で取得または設定します。 有効期限が切れる前にユーザーが同じページに戻った場合、キャッシュされたバージョンが表示されます。<see cref="P:System.Web.HttpResponseWrapper.Expires" /> は、ASP の旧バージョンとの互換性のために提供されています。</summary>
        <value>ページの有効期限が切れるまでの分単位の時間。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public override DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.ExpiresAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ内にキャッシュされた情報の有効期限が切れる絶対日時を取得または設定します。<see cref="P:System.Web.HttpResponseWrapper.ExpiresAbsolute" /> は、ASP の旧バージョンとの互換性のために提供されています。</summary>
        <value>ページの有効期限が切れる日付と時刻。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>伝送する前に HTTP エンティティ本体を変更するために使用されるフィルター オブジェクトを取得または設定します。</summary>
        <value>出力フィルターとして機能するオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Flush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在バッファリングされているすべての出力をクライアントへ送信します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">応答が完了した後に、メソッドが呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.FlushAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在バッファリングされているすべての出力をクライアントへ非同期的に送信します。</summary>
        <returns>非同期操作を表す <see cref="T:System.Threading.Tasks.Task" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.HeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の応答のヘッダーのエンコーディングを取得または設定します。</summary>
        <value>現在のヘッダーのエンコーディングに関する情報。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">エンコーディング値は <see langword="null" /> です。</exception>
        <exception cref="T:System.Web.HttpException">エンコーディング値は <see cref="P:System.Text.Encoding.Unicode" /> です。  
  
 または  
  
 ヘッダーは既に送信されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答ヘッダーのコレクションを取得します。</summary>
        <value>応答ヘッダー。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">操作には、IIS 7.0 の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</exception>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public override bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.HeadersWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答ヘッダーが既に作成されたかどうかを示す値を取得します。</summary>
        <value>応答ヘッダーが書き込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public override bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.IsClientConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントがサーバーに接続されているかどうかを示す値を取得します。</summary>
        <value>クライアントが現在接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public override bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.IsRequestBeingRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントが新しい場所へリダイレクトされるかどうかを示す値を取得します。</summary>
        <value>Location 応答ヘッダーの値が現在の場所と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public override System.IO.TextWriter Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発信 HTTP 応答ストリームへのテキストの出力を有効にするオブジェクトを取得します。</summary>
        <value>クライアントへのカスタム出力を有効にするオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発信 HTTP コンテンツ本体にバイナリ出力を提供します。</summary>
        <value>発信 HTTP コンテンツ本体の生の内容を表すオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public override void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Pics(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="PICS-Label" /> ヘッダーに追加する文字列。</param>
        <summary>HTTP <see langword="PICS-Label" /> ヘッダーを現在の応答に追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public override void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.PushPromise(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">プッシュ要求の URL です。 サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</param>
        <summary>この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。 詳細についてを参照して Http2 サーバー プッシュに関する [HTTP\/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources)します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 PushPromise は非確定的と、アプリケーションが依存するロジックがあるべきではありません。 唯一の目的は、場合によってはパフォーマンス上の利点です。 プッシュ要求を完全に無視する原因となる多くの状況 \(プロトコルと実装\) があります。 想定は、ファイア アンド フォーゲットに基づいています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public override void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">プッシュ要求の URL です。 サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</param>
        <param name="method">プッシュ要求で使用される http 要求メソッド。</param>
        <param name="headers">プッシュ要求で使用される http 要求ヘッダー。</param>
        <summary>この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。 詳細についてを参照して Http2 サーバー プッシュに関する [HTTP\/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources)します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 PushPromise は非確定的と、アプリケーションが依存するロジックがあるべきではありません。 唯一の目的は、場合によってはパフォーマンス上の利点です。 プッシュ要求を完全に無視する原因となる多くの状況 \(プロトコルと実装\) があります。 想定は、ファイア アンド フォーゲットに基づいています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public override void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Redirect(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">対象となる位置。</param>
        <summary>要求を指定した URL にリダイレクトします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public override void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Redirect(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">対象となる位置。</param>
        <param name="endResponse">現在のプロセスを終了する場合は <see langword="true" />。</param>
        <summary>要求を指定した URL へリダイレクトし、現在のプロセスの実行を終了するかどうかを指定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> に改行文字が含まれています。</exception>
        <exception cref="T:System.Web.HttpException">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</exception>
        <exception cref="T:System.ApplicationException">要求がコールバックの結果となっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public override string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.RedirectLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP <see langword="Location" /> ヘッダーの値を取得または設定します。</summary>
        <value>HTTP <see langword="Location" /> ヘッダーの絶対 URL。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public override void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectPermanent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">要求のリダイレクト先の URL。</param>
        <summary>要求された URL から指定された URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%28System.String%29> メソッド オーバー ロードが応答で 301 HTTP ステータス コードし、もに要求をリダイレクトする URL が含まれています。 301 HTTP ステータス コードは、HTTP 応答で標準的なコードです。 これは、ある永続的なリダイレクトが存在し、コードで、リダイレクト先を示します。  
  
 呼び出す、 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%28System.String%29> メソッドは、応答の残りの部分を終了します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 改行文字が含まれています \(<c>\n</c>\)。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public override void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectPermanent(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">要求のリダイレクト先の URL。</param>
        <param name="endResponse">応答を終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
        <summary>要求された URL から指定された URL への永続的なリダイレクトを実行し、応答を完了するためのオプションを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%28System.String%2CSystem.Boolean%29> メソッド オーバー ロードが応答で 301 HTTP ステータス コードし、もに要求をリダイレクトする URL が含まれています。 このメソッドのオーバー ロードは、応答を終了するか、リダイレクトが行われた後に完了するかを指定するオプションを提供します。 301 HTTP ステータス コードは、HTTP 応答で標準的なコードです。 これは、ある永続的なリダイレクトが存在し、コードで、リダイレクト先を示します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> 改行文字が含まれています \(<c>\n</c>\)。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public override void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoute(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>指定されたルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドに渡されるオブジェクトは変換 `routeValues` に、 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> オブジェクトを使用して、 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> コンス トラクターです。<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> 、URL を確認するメソッドが呼び出されます。  
  
 ASP.NET では、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public override void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoute(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <summary>指定されたルート名を使用して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドは変換は、渡されたルート名 `routeName` を使用して URL を <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> メソッドです。  
  
 ASP.NET では、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート名に対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public override void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>指定されたルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> URL を決定する方法です。  
  
 ASP.NET では、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public override void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoute(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>ルート名とルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドに渡されるオブジェクトは変換 `routeValues` に、 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> オブジェクトを使用して、 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> コンス トラクターです。<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> 、URL を確認するメソッドが呼び出されます。  
  
 ASP.NET では、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public override void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>ルート名とルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> 、URL を確認するメソッドが呼び出されます。  
  
 ASP.NET では、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public override void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoutePermanent(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>指定したルート パラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドに渡されるオブジェクトは変換 `routeValues` に、 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> オブジェクトを使用して、 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> コンス トラクターです。<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> 、URL を確認するメソッドが呼び出されます。  
  
 ASP.NET では、HTTP ステータス コード 301 を返すことによって、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public override void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoutePermanent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <summary>指定したルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドは変換は、渡されたルート名 `routeName` を使用して URL を <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> メソッドです。  
  
 ASP.NET では、HTTP ステータス コード 301 を返すことによって、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート名に対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public override void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>指定したルート パラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> URL を決定する方法です。  
  
 ASP.NET では、HTTP ステータス コード 301 を返すことによって、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public override void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>新しい URL に対応するルート名とルート パラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.RedirectPermanent%2A> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドに渡されるオブジェクトは変換 `routeValues` に、 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> オブジェクトを使用して、 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> コンス トラクターです。<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> 、URL を確認するメソッドが呼び出されます。  
  
 ASP.NET では、HTTP ステータス コード 301 を返すことによって、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public override void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">ルートの名前。</param>
        <param name="routeValues">ルートのパラメーター値。</param>
        <summary>指定したルート名とルート パラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コーディングの利便性を提供します。 呼び出すことと同じである、 <xref:System.Web.HttpResponseWrapper.Redirect%28System.String%2CSystem.Boolean%29> 2 番目のパラメーターを設定したメソッド `false`します。  
  
 このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> URL を決定する方法です。  
  
 ASP.NET では、HTTP ステータス コード 301 を返すことによって、リダイレクトを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したルート パラメーターに対応するルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">リダイレクトは、HTTP ヘッダーが送信された後にしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public override void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RemoveOutputCacheItem(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">キャッシュから削除されるアイテムへの仮想絶対パス。</param>
        <summary>指定したパスに関連付けられた、キャッシュされているすべてのアイテムをキャッシュから削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public override void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">キャッシュから削除されるアイテムへの絶対仮想パス。</param>
        <param name="providerName">指定されたパスに関連付けられている出力キャッシュの成果物を削除するのに使用されるプロバイダー。</param>
        <summary>指定された出力キャッシュ プロバイダーを使用して、指定されたパスに関連付けられている出力キャッシュの成果物をすべて削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web サイトの構成ファイルで指定されているカスタムの出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、このメソッドを呼び出します。 既定の出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、呼び出し、 <xref:System.Web.HttpResponseWrapper.RemoveOutputCacheItem%28System.String%29> メソッドのオーバー ロードします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> 無効なパスです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public override void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.SetCookie(System.Web.HttpCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">更新するコレクションに存在するクッキー。</param>
        <summary>クッキー コレクションの既存のクッキーを更新します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">HTTP ヘッダーの送信後に Cookie が設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public override string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントに返される <see langword="Status" /> 値を設定します。</summary>
        <value>HTTP 出力のステータス。 既定値は "200 \(OK\)" です。 有効なステータス コードについては、次を参照してください。 [HTTP Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157) MSDN Web サイトです。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see langword="Status" /> が無効なステータス コードに設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public override int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントへ返される出力の HTTP ステータス コードを取得または設定します。</summary>
        <value>クライアントに返される HTTP 出力のステータス コード。 既定値は 200 です。 有効なステータス コードについては、次を参照してください。 [HTTP Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157) MSDN Web サイトです。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.HttpResponse.StatusCode" /> は、HTTP ヘッダーが送信された後で設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public override string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントへ返される出力の HTTP ステータス メッセージを取得または設定します。</summary>
        <value>クライアントに返される HTTP 出力のステータス メッセージ。 既定値は "OK" です。 有効なステータス コードについては、次を参照してください。 [HTTP Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157) MSDN Web サイトです。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see langword="StatusDescription" /> は、HTTP ヘッダーが送信された後で設定されました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">ステータス値が 512 文字を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public override int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.SubStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答のステータス コードを修飾する値を取得または設定します。</summary>
        <value>IIS 7.0 のサブステータス コード。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">操作には、IIS 7.0 の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</exception>
        <exception cref="T:System.Web.HttpException">状態コードは、すべての HTTP ヘッダーが送信された後に設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public override bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続が非同期のフラッシュ操作をサポートするかどうかを示す値を取得します。</summary>
        <value>接続が非同期フラッシュ操作をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を返す、 <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public override bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.SuppressContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP コンテンツをクライアントに送信するかどうかを示す値を取得または設定します。</summary>
        <value>出力が表示されない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public override bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.SuppressDefaultCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の HTTP 応答に対して既定の Cache Control: private ヘッダーを抑制するかどうかを示す値を取得または設定します。</summary>
        <value>現在の HTTP 応答に対して既定の Cache Control: private ヘッダーを抑制する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public override bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.SuppressFormsAuthenticationRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログイン ページへのフォーム認証のリダイレクトを抑制する必要があるかどうかを示す値を取得または設定します。</summary>
        <value>フォーム認証のリダイレクトを抑制する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーについては、次を参照してください。 <xref:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public override void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.TransmitFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">HTTP 出力ストリームに書き込むファイルの名前。</param>
        <summary>指定されたファイルを、メモリにバッファリングせずに、HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> が <see langword="null" /> です</exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public override void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">HTTP 出力ストリームに書き込むファイルの名前。</param>
        <param name="offset">書き込みを開始するファイル内の位置。</param>
        <param name="length">
          <c>offset</c> から始まる書き込みバイト数。</param>
        <summary>ファイルの指定された部分を、メモリにバッファリングせずに、HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="offset" /> パラメーターが 0 未満。  
  
 または  
  
 <paramref name="length" /> パラメーターが \-1 未満。  
  
 または  
  
 <paramref name="length" /> パラメーターが、ファイルのサイズから <paramref name="offset" /> を引いた値よりも大きい。</exception>
        <exception cref="T:System.PlatformNotSupportedException">アウト プロセス ワーカー要求はサポートされていません。  
  
 または  
  
 応答が <see cref="T:System.Web.HttpWriter" /> オブジェクトを使用していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public override bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseWrapper.TrySkipIisCustomErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IIS 7.0 カスタム エラーが無効かどうかを指定する値を取得または設定します。</summary>
        <value>IIS 7.0 カスタム エラーが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Write(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">HTTP 出力ストリームに書き込む文字。</param>
        <summary>文字を HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Write(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">HTTP 出力ストリームに書き込むオブジェクト。</param>
        <summary>指定されたオブジェクトを HTTP 応答ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Write(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">HTTP 出力ストリームに書き込む文字列。</param>
        <summary>指定された文字列を HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">書き込む文字配列。</param>
        <param name="index">書き込みを開始する文字配列内の位置。</param>
        <param name="count">書き込む文字数。書き込みは、<c>index</c> から開始されます。</param>
        <summary>指定された文字配列を HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public override void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.WriteFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">HTTP 出力ストリームに書き込むファイルの名前。</param>
        <summary>指定されたファイルの内容を、ファイル ブロックとして HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public override void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.WriteFile(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">現在の応答に書き込むファイルの名前。</param>
        <param name="readIntoMemory">ファイルをメモリ ブロックに書き込む場合は <see langword="true" />。</param>
        <summary>指定されたファイルの内容を HTTP 応答出力ストリームに書き込み、そのコンテンツがメモリ ブロックとして書き込まれるかどうかを指定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public override void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle">HTTP 出力ストリームに書き込むファイルのファイル ハンドル。</param>
        <param name="offset">書き込みを開始するファイル内の位置。</param>
        <param name="size">
          <c>offset</c> から始まる書き込みバイト数。</param>
        <summary>指定されたファイルを HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileHandle" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="offset" /> が 0 未満です。  
  
 または  
  
 <paramref name="size" /> は、ファイルのサイズから <paramref name="offset" /> を引いた値よりも大きいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public override void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">HTTP 出力ストリームに書き込むファイルの名前。</param>
        <param name="offset">書き込みを開始するファイル内の位置。</param>
        <param name="size">
          <c>offset</c> から始まる書き込みバイト数。</param>
        <summary>指定されたファイルを HTTP 応答出力ストリームに書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="offset" /> が 0 未満です。  
  
 または  
  
 <paramref name="size" /> は、ファイルのサイズから <paramref name="offset" /> を引いた値よりも大きいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public override void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseWrapper.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">置換するメソッド、ユーザー コントロール、またはオブジェクト。</param>
        <summary>置換ブロックを応答に挿入します。これにより、キャッシュされた出力応答のための領域の動的な生成が可能になります。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Web.UI.Control" /> 型の <paramref name="callback" /> パラメーターのターゲット。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたファイルを HTTP 応答出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>既定の出力キャッシュ プロバイダーを使用して、出力キャッシュからキャッシュされたアイテムを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>要求を異なる URL にリダイレクトします。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたファイルを、メモリにバッファリングせずに、HTTP 応答出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>情報を HTTP 応答出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>要求された URL から指定された URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>promise オブジェクトを昇格させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したルート パラメーター値またはルート名、あるいは両方を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたファイルまたは複数のファイルに依存するキャッシュされた応答を有効にします。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ルートのパラメーター値、ルート名、またはその両方を指定して、新しい URL に要求をリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>