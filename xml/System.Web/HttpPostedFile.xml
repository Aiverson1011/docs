<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>クライアントによってアップロードされた個々 のファイルへのアクセスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpFileCollection> クラスは、ファイルのコレクションとしてクライアントからアップロードされたすべてのファイルへのアクセスを提供します。<xref:System.Web.HttpPostedFile> クラスには、プロパティと個々 のファイルに関する情報を取得および読み取りし、ファイルを保存するメソッドが用意されています。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> を選択し、クライアントからファイルをアップロード コントロールを使用できます。  
  
 MIME マルチパート\/フォーム データの形式でファイルがアップロードされます。 既定では、すべての要求フォームのフィールドを含む、256 KB より大きいファイルをアップロード、ディスクにバッファーではなくサーバーのメモリに保持されています。  
  
 アクセスして使用可能な要求の最大サイズを指定することができます、 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> プロパティを設定したり、 `maxRequestLength` の属性、 [httpRuntime 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/e9b81350-8aaf-47cc-9843-5f7d0c59f369) Machine.config または Web.config ファイル内の要素。 既定値は、4 MB です。  
  
 アクセスして、ファイルのアップロードが含まれた要求のサーバー メモリにバッファーされるデータの量を指定することができます、 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> プロパティを設定したり、 `requestLengthDiskThreshold` の属性、 [httpRuntime 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/e9b81350-8aaf-47cc-9843-5f7d0c59f369) Machine.config または Web.config ファイル内の要素。  
  
 調整することによって、 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> と <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> プロパティ、サーバーのパフォーマンスを微調整できます。 また、設定を検討する必要があります、 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 大規模なファイルをサーバーにポストするユーザーによるサービス拒否攻撃の拒否を防ぐ。  
  
 要求が終了すると、アップロードされたファイルをバッファーに割り当てられているサーバーのリソースが破棄されます。 ファイルの永続的なコピーを保存するには、 <xref:System.Web.HttpPostedFile.SaveAs%2A> メソッドです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バイト単位でアップロードされたファイルのサイズを取得します。</summary>
        <value>ファイルの長さ \(バイト\)。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントによって送信されたファイルの MIME コンテンツ タイプを取得します。</summary>
        <value>アップロードされたファイルの MIME コンテンツ タイプ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、アップロードされたファイルのコレクション内のすべてのファイルをループ処理し、ファイルの MIME の種類がアクションを実行する方法を示しています。 `US-ASCII`します。  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント上のファイルの完全修飾名を取得します。</summary>
        <value>ディレクトリ パスを含む、クライアントのファイルの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、文字列変数にアップロードされたファイル \(ファイル コレクションの最初のファイル\) の名前を付ける方法を示します。  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アップロードされるファイルの内容の読み取りに備えて、このファイルを指す <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</summary>
        <value>A <see cref="T:System.IO.Stream" /> ファイルをポイントします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、バイト配列に、クライアントのファイル コレクションの最初のファイルの内容を読み取るし、文字列をバイト配列をコピーする方法を示します。  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">保存したファイルの名前。</param>
        <summary>アップロードされたファイルの内容を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アップロードしたファイルが含まれている要求で許容される最大サイズは、既定では 4 MB です。 Machine.config または Web.config ファイルで要求の最大サイズを指定することができます、 `maxRequestLength` の属性、 [httpRuntime 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/e9b81350-8aaf-47cc-9843-5f7d0c59f369) 要素。 使用して特定のページの要求の最大サイズを指定できる、 [location 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) Web.config ファイル内の要素。  
  
   
  
## 例  
 次のコード例では、Web サーバーのローカル ディスクの C:\\TempFiles フォルダーにクライアントによってアップロードされたすべてのファイルを保存する方法を示します。  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> のプロパティ、 <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> にオブジェクトが設定されている <see langword="true" />, が <paramref name="filename" /> 絶対パスではありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>