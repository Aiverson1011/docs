<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作成し、個々 の HTTP クッキーを操作するタイプ セーフな方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpCookie> クラスを取得し、個々 の cookie のプロパティを設定します。<xref:System.Web.HttpCookieCollection> クラスは、格納、取得、および複数の cookie を管理するメソッドを提供します。  
  
 ASP.NET には、2 つの組み込みクッキー コレクションが含まれています。 によってアクセスされるコレクション、 <xref:System.Web.HttpRequest.Cookies%2A> のコレクション、 <xref:System.Web.HttpRequest> オブジェクトには内のサーバーにクライアントによって送信される cookie が含まれています、 `Cookie` ヘッダー。 によってアクセスされるコレクション、 <xref:System.Web.HttpResponse.Cookies%2A> のコレクション、 <xref:System.Web.HttpResponse> オブジェクトが、サーバー上に作成され、クライアントに送信された新しい cookie を含んでいる、 `Set-Cookie` HTTP 応答ヘッダー。  
  
   
  
## 例  
 次のコード例は、という名前の cookie をチェックする方法を示します `DateCookieExample` で、 <xref:System.Web.HttpRequest> オブジェクトです。 Cookie が見つからない場合は作成されに追加された、 <xref:System.Web.HttpResponse> オブジェクトです。 Cookie は、10 分で期限切れに設定されます。  
  
 [!code-csharp[System.Web.HttpCookie\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-vb[System.Web.HttpCookie\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新しいクッキーの名前です。</param>
        <summary>作成し、新しいクッキーの名前します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、作成し、新しいクッキーの名前します。  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新しいクッキーの名前です。</param>
        <param name="value">新しいクッキーの値です。</param>
        <summary>作成、名前、および新しいクッキーに値を割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の作成、名前、および新しいクッキーの値を設定します。  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはのクッキーを関連付けるには、ドメインを設定します。</summary>
        <value>クッキーを関連付けるドメインの名前。 既定値は、現在のドメインです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 `Domain` 属性はそのドメインからリソースを要求するクライアントに cookie の転送を制限します。  
  
   
  
## 例  
 次のコード例では、クッキーのドメインを設定します。  
  
 [!code-csharp[Classic HttpCookie.Domain Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie の有効期限日時を設定します。</summary>
        <value>クッキーの有効期限が切れる \(クライアント\) で日の時刻。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、現在の時刻から 10 分後に、cookie の有効期限を設定します。  
  
 [!code-csharp[Classic HttpCookie.Expires Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cookie にサブキーがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> cookie はそれ以外の場合、サブキーを持つ場合 <see langword="false" />します。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、複数の値のクッキー コレクションの各メンバーを調べます。 Cookie の場合 <xref:System.Web.HttpCookie.HasKeys%2A> プロパティは、 `true`, 、複数の値がある、この例では、1 つの文字列の配列と別の文字列配列に対応する値に値の名前をコピーのことを示しています。 クッキーの複数の値を作成する方法の例は、次を参照してください。 <xref:System.Web.HttpCookie.Values%2A>します。  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie がクライアント側スクリプトからアクセスできるかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> cookie がある場合、 <see langword="HttpOnly" /> 属性し、クライアント側スクリプトを使用してアクセス以外にすることはできません <see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 6 Service Pack 1 以降には、cookie プロパティがサポートしている Microsoft Internet Explorer バージョン <xref:System.Web.HttpCookie.HttpOnly%2A>, 、盗まれた cookie と、クロスサイト スクリプティングの脅威を軽減するのに役立ちます。 盗まれたクッキーは、ASP.NET セッション ID またはフォーム認証チケットなどのサイトにユーザーを識別する機密情報を含めることができますされ、ユーザーのように偽装または機密情報を取得するために攻撃者によって再生することができます。 ときに、 `HttpOnly` 準拠のブラウザーで cookie が受信されはクライアント側\-スクリプトにアクセスできません。  
  
> [!CAUTION]
>  設定、 <xref:System.Web.HttpCookie.HttpOnly%2A> プロパティを `true` は防ぐアクセス権を持つ攻撃者ネットワーク チャネルを cookie に直接アクセスします。 これを防ぐために Secure Sockets Layer \(SSL\) を使用してください。 ワークステーションのセキュリティも重要です、悪意のあるユーザーが正当なユーザーの id を持つ Web サイトへのアクセスを取得するときに、開いているブラウザー ウィンドウまたは永続的な cookie を含んでいるコンピューターを使用可能性があります。  
  
 起こりうる攻撃し、このプロパティに役立てる方法に移行し、詳細については、次を参照してください。 [Mitigating Cross\-site Scripting With HTTP\-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580)します。  
  
   
  
## 例  
 次のコード例では、書き込み、 `HttpOnly` cookie され、そのままでは、ECMAScript を使用してクライアントからアクセスできるを表示します。  
  
 [!code-csharp[HttpOnlyCookie\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-vb[HttpOnlyCookie\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Cookie の値のキー \(インデックス\)。</param>
        <summary>ショートカットを取得、 <see cref="P:System.Web.HttpCookie.Values" /> プロパティです。 このプロパティは、Active Server Pages \(ASP\) の以前のバージョンとの互換性を提供します。</summary>
        <value>Cookie の値。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie の名前を設定します。</summary>
        <value>既定値は null 参照 \(<see langword="Nothing" /> Visual Basic で\) コンス トラクターが別途指定されない限りです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、クッキーのコレクションを受け取るでクライアントから、 `Cookie` ヘッダーと特定の名前を持つ cookie を検索するコレクションをループします。  
  
 [!code-csharp[Classic HttpCookie.Name Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在の cookie を使用して送信する仮想パスを設定します。</summary>
        <value>Cookie を使用して送信する仮想パス。 既定値は <see langword="/" />, 、サーバーのルートであります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpCookie.Path%2A> プロパティを拡張、 <xref:System.Web.HttpCookie.Domain%2A> cookie が適用される特定の URL を完全に記述するプロパティです。 たとえば、URL の http:\/ www.microsoft.com\/asp でドメイン www.microsoft.com であり、パス\/asp します。  
  
   
  
## 例  
 次のコード例、 <xref:System.Web.HttpCookie.Path%2A> 新しいクッキーのプロパティです。  
  
 [!code-csharp[Classic HttpCookie.Path Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または HTTPS だけでは、Secure Sockets Layer \(SSL\)\-\-を使用してクッキーを送信するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> cookie を SSL 接続 \(HTTPS\) 経由で送信するにはそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション全体で SSL を使用して cookie の送信を設定するをアプリケーションの構成ファイル、アプリケーションのルート ディレクトリに配置され、web.config ファイルで有効にします。 詳細については、次を参照してください。 [httpCookies 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/74790718-bfa3-4935-bc9a-59c88797e08f)します。 値の設定を使用してプログラムを使用して、 <xref:System.Web.HttpCookie.Secure%2A> プロパティは、Web.config ファイルで設定値を上書きします。  
  
 機密情報を扱う際に、SSL で暗号化された HTTPS プロトコルを使用することを強くお勧めします。 SSL は、データが改ざんされない \(データの整合性\) ことを防止、ユーザーの id \(機密性\) を保護し、データが予想されるクライアント \(認証\) から取得することを保証します。 暗号化の利点の詳細については、次を参照してください。 [Cryptography Overview](http://msdn.microsoft.com/ja-jp/f96284bc-7b73-44b5-ac59-fac613ad09f8)します。 インターネット インフォメーション サービス \(IIS\) Web サーバーで SSL を構成する方法の詳細については、次を参照してください。 [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553)します。  
  
   
  
## 例  
 次のコード例は、SSL を使用して送信する cookie が設定されている場合、アクションを実行します。  
  
 [!code-csharp[Classic HttpCookie.Secure Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cookie が出力キャッシュに参加できるかどうかを決定します。</summary>
        <value>
          <see langword="true" /> 組み込むのため、出力キャッシュが抑制されませんを指定する <see cref="T:System.Web.HttpResponse" /> 1 つまたは複数の送信 cookie を格納している場合は、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、指定された <xref:System.Web.HttpResponse> を含む 1 つまたは複数の送信の cookie を含む <xref:System.Web.HttpCookie.Shareable%2A> に設定されている `false` \(既定値\) の場合は、出力キャッシュは、応答に抑制されます。 これには、応答にキャッシュされており、複数のクライアントに送信される可能性のある機密情報が含まれている cookie ができないようにします。  使用するなど、応答のキャッシュを通常、構成のキャッシュに保存する cookie を含む応答を許可するように、 `OutputCache` ディレクティブまたは MVC \[OutputCache\] 属性があり、設定して、すべての cookie を送信 <xref:System.Web.HttpCookie.Shareable%2A> に設定 `true`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または個々 のクッキー値を設定します。</summary>
        <value>Cookie の値です。 既定値は null 参照 \(Visual Basic では <see langword="Nothing" />\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、"abc123"を既存のクッキーの値を設定します。  
  
 [!code-csharp[Classic HttpCookie.Value Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 つの cookie オブジェクト内に含まれるキー\/値ペアのコレクションを取得します。</summary>
        <value>Cookie の値のコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、新しいクッキーを作成し、いくつかの値を追加します。 複数の値を 1 つの cookie から抽出する方法の例は、次を参照してください。 <xref:System.Web.HttpCookie.HasKeys%2A>します。  
  
 [!code-csharp[Classic HttpCookie.Values Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.HttpCookie" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>