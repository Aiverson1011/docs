<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>仮想パスの一般的な操作のためのユーティリティ メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.VirtualPathUtility> クラスは仮想パスに関連する一般的な操作のためのユーティリティ メソッドを提供します。 ASP.NET サーバー コントロールとサーバー コードでは、Web アプリケーション ルート演算子を使用する仮想パス ティルダ \(~\) 一般的な用途は相対パスと絶対パスの代わりにします。 詳細については、「[ASP.NET Web Site Paths](http://msdn.microsoft.com/ja-jp/2447f50c-b849-483c-8093-85ed53e7a5bd)」を参照してください。  
  
 使用して、 <xref:System.Web.VirtualPathUtility> クラスのようにカスタム Web サービス ハンドラーの開発の場合、絶対仮想パス、アプリケーションに対する相対パスに変換する必要がある場合。  
  
 絶対仮想パスは、リテラルのスラッシュ記号 \(\/\) で始まります。 ティルダ \(~\) 単またはティルダと二重の円記号で始まる場合、アプリケーションのルート ディレクトリに対する相対パス相対仮想パスです \(~ \\\\\) またはチルダとスラッシュ記号 \(~\/\)。 パスは、アプリケーションに依存せず、相対仮想パスを作成します。  
  
 アプリケーションの仮想ディレクトリを取得できます、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> と <xref:System.Web.HttpRequest.ApplicationPath%2A> プロパティです。  
  
> [!NOTE]
>  <xref:System.Web.VirtualPathUtility> クラスは、セキュリティまたは標準化のためのものではありません。 Web アプリケーションのセキュリティの詳細については、次を参照してください。 [Overview of Web Application Security Threats](http://msdn.microsoft.com/ja-jp/88d61678-f84e-4622-ae80-53128821855a)します。 URL の処理の一般的な機能を参照してください。 <xref:System.Uri>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility> クラスとそのメソッドの一部です。 まず、 <xref:System.Web.HttpRequest.FilePath%2A> プロパティには、Web ページへの仮想パスが生成されます。<xref:System.Web.VirtualPathUtility.GetFileName%2A>, 、<xref:System.Web.VirtualPathUtility.GetExtension%2A>, 、および <xref:System.Web.VirtualPathUtility.GetDirectory%2A> メソッドは、仮想パスに関する情報を返します。 次に、 <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> プロパティが異なる場合があります、現在の要求の仮想パスを生成、 <xref:System.Web.HttpRequest.FilePath%2A> プロパティには場合、 <xref:System.Web.HttpResponse.Redirect%2A> メソッドが呼び出されました。<xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, 、<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, 、および <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドは、仮想パスに関する情報を返します。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-vb[System.Web.VirtualPathUtility\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">スラッシュを追加する仮想パス。</param>
        <summary>既に存在しない場合は、仮想パスの末尾にリテラルのスラッシュ記号 \(\/\) を追加します。</summary>
        <returns>変更された仮想パス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 仮想パスの末尾にリテラルのスラッシュ記号 \(\/\) が存在する場合は、仮想パスは変更されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">基本パス。</param>
        <param name="relativePath">相対パス。</param>
        <summary>基本のパスと相対パスを結合します。</summary>
        <returns>合計 <paramref name="basePath" /> と <paramref name="relativePath" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.VirtualPathUtility.Combine%2A> メソッドの値を返す、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> プロパティが相対パスが正確にティルダ \(~\) である場合。  
  
 <xref:System.Web.VirtualPathUtility.Combine%2A> メソッドの使用方法、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> プロパティ ベース パスではなく値の相対パスは、チルダはスラッシュ記号で始まる場合 \(~\/\)。 それ以外の場合、 <xref:System.Web.VirtualPathUtility.Combine%2A> メソッドは、基本パスを使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="relativePath" /> 物理パスです。  
  
 または  
  
 <paramref name="relativePath" /> 1 つまたは複数のコロンが含まれます。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativePath" /> が <see langword="null" /> または空の文字列です。  
  
 または  
  
 <paramref name="basePath" /> が <see langword="null" /> または空の文字列です。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスのディレクトリの部分を返します。</summary>
        <returns>仮想パスで参照されているディレクトリです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `virtualPath` ルートがありません。 つまり、ルート演算子 \(ティルダ \[~\]\) と等しくない、チルダやスラッシュ記号など、チルダ \(~\) で始まっていない \(~\/\) またはチルダと二重の円記号 \(~\/\/\)、スラッシュ記号 \(\/\) で開始されず、 <xref:System.ArgumentException> 例外がスローされます。  
  
 場合に渡される仮想パス、 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> メソッドは `"/images/image1.gif"`, 、返されるディレクトリは `"/images"`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.GetFileName%2A>, 、<xref:System.Web.VirtualPathUtility.GetExtension%2A>, 、および <xref:System.Web.VirtualPathUtility.GetDirectory%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> ルートがありません。  
  
 または  
  
 <paramref name="virtualPath" /> が <see langword="null" /> または空の文字列です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスで参照されているファイルの拡張子を取得します。</summary>
        <returns>ファイル名拡張子文字列リテラル、ピリオド \(.\) を含む <see langword="null" />, 、または空の文字列 \(""\) です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合に渡される仮想パス、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> メソッドは `"/images/image1.gif"`, 、返される拡張は `".gif"`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.GetFileName%2A>, 、<xref:System.Web.VirtualPathUtility.GetExtension%2A>, 、および <xref:System.Web.VirtualPathUtility.GetDirectory%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> 定義されているが有効でない 1 つまたは複数の文字が含まれる <see cref="F:System.IO.Path.InvalidPathChars" />です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスで参照されているファイルの名前を取得します。</summary>
        <returns>ファイル名の最後のディレクトリ文字の後にリテラル <paramref name="virtualPath" />、それ以外の場合、最後のディレクトリの名前の最後の文字 <paramref name="virtualPath" /> ディレクトリまたはボリューム区切り文字します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合に渡される仮想パス、 <xref:System.Web.VirtualPathUtility.GetFileName%2A> メソッドは `"/images/image1.gif"`, 、返されたファイル名は `"image1.gif"`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.GetFileName%2A>, 、<xref:System.Web.VirtualPathUtility.GetExtension%2A>, 、および <xref:System.Web.VirtualPathUtility.GetDirectory%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> 定義されているが有効でない 1 つまたは複数の文字が含まれる <see cref="F:System.IO.Path.InvalidPathChars" />です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">確認への仮想パス。</param>
        <summary>指定した仮想パスが絶対いるかどうかを示すブール値を返しますつまり、リテラルのスラッシュ記号 \(\/\) で開始します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="virtualPath" /> 絶対パスは、 <see langword="null" /> または空の文字列 \(""\) です。それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 仮想パスは、リテラルのスラッシュ記号 \(\/\) で始まる場合は、絶対です。 たとえば、 <xref:System.Web.HttpRequest.Path%2A> プロパティが絶対仮想パスを返します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, 、<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, 、および <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">確認への仮想パス。</param>
        <summary>指定した仮想パスがアプリケーションを基準とするかどうかを示すブール値を返します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="virtualPath" /> をアプリケーションに相対するそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 仮想パスは、ルート演算子 \(ティルダ \[~\]\)、または、ルート演算子で始まることができます。 場合 `virtualPath` は `null`, 、 <xref:System.ArgumentNullException> 例外が発生します。 場合 `virtualPath` 空の文字列 \(""\)、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> メソッドが返す `false`します。  
  
> [!NOTE]
>  `"~` `filename` `"` 有効な仮想パスではありませんし、返します `false` の <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, 、<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, 、および <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">相対仮想パスを返す開始仮想パス。</param>
        <param name="toPath">相対仮想パスを返すの終了となる仮想パス。</param>
        <summary>別のルート演算子 \(ティルダ \[~\]\) を含む 1 つの仮想パスからの相対仮想パスを返します。</summary>
        <returns>相対仮想パス <paramref name="fromPath" /> に <paramref name="toPath" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `fromPath` と `toPath` パラメーターはルートがありません。 ルート演算子 \(ティルダ \[~\]\) が等しくない場合は、チルダやスラッシュ記号などはティルダ \(~\) 起動しない、つまり、\(~\/\) またはチルダと二重の円記号 \(~\/\/\)、またはスラッシュ \(\/\) で始まらない、 <xref:System.ArgumentException> 例外がスローされます。  
  
 クエリ文字列パラメーターと、URI で使用されている HTML アンカーは、相対パスを決定するのには使用されません。  
  
 場合 `fromPath` は `"/directory1/file1.aspx"` と `toPath` は `"/directory2/file2.aspx"`, 、 <xref:System.Web.VirtualPathUtility.MakeRelative%2A> メソッドが返す `"../directory2/file2.aspx"`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fromPath" /> ルートがありません。  
  
 または  
  
 <paramref name="toPath" /> ルートがありません。</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">末尾のスラッシュを削除する仮想パスからマークを付けます。</param>
        <summary>仮想パスから末尾のスラッシュ記号 \(\/\) を削除します。</summary>
        <returns>仮想パスが末尾にスラッシュ記号、仮想パスない場合は、ルート ディレクトリ \(「\/」\) です。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> メソッドは、仮想パスの末尾からスラッシュ記号 \(\/\) を削除します。 仮想パスがルート ディレクトリで既に場合 \(`"/"`\)、アクションは実行されません。 仮想パスは場合 `null` または空の文字列 \(""\)、 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> メソッドが返す `null`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーションの相対パスに変換する仮想パス。</param>
        <summary>仮想パスをアプリケーションの絶対パスに変換します。</summary>
        <returns>指定した仮想パスの絶対パス表現です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションの絶対パスは、ルート演算子 \(ティルダ \[~\]\) ではなく、アプリケーション パスが使用されている 1 つです。  
  
 場合 `virtualPath` は。  
  
-   絶対、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドが変更されていない仮想パスを返します。  
  
-   アプリケーションの相対パス、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドの先頭に現在のアプリケーションの仮想ディレクトリのパスを追加する、 `virtualPath`です。 たとえば、現在のアプリケーションの仮想ディレクトリ パスはからアクセスできる、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> プロパティです。  
  
-   ルートとしていない、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドを発生させる、 <xref:System.ArgumentOutOfRangeException> 例外です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="virtualPath" /> ルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">先頭の二重ピリオド \(.\) 最上位ディレクトリ終了に使用されます。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーションの相対パスに変換する仮想パス。</param>
        <param name="applicationPath">変換に使用するアプリケーションのパス <c>virtualPath</c> の相対パスにします。</param>
        <summary>仮想パスを指定したアプリケーション パスを使用してアプリケーションの絶対パスに変換します。</summary>
        <returns>絶対仮想パス形式を <paramref name="virtualPath" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> のオーバー ロード、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドは、現在のアプリケーション パスではなく、指定されたアプリケーションのパスを使用します。  
  
 場合 `virtualPath` は。  
  
-   絶対、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドを変更せずに仮想パスを返します。  
  
-   アプリケーションの相対パス、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドは、追加 `applicationPath` 仮想パスの先頭にします。  
  
-   ルートとしていない、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> メソッドを発生させる、 <xref:System.ArgumentOutOfRangeException> 例外です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="applicationPath" /> ルートがありません。</exception>
        <exception cref="T:System.Web.HttpException">先頭の二重ピリオド \(.\) 最上位ディレクトリを終了するアプリケーションのパスで使用されます。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーションの相対パスに変換する仮想パス。</param>
        <summary>仮想パスでは、アプリケーションの仮想パスを使用してアプリケーションの相対パスに変換、 <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" /> プロパティです。</summary>
        <returns>アプリケーションへの相対パス形式を <paramref name="virtualPath" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションの仮想パスの場合 `"myapp"` および仮想パス `"/myApp/sub/default.asp"` に渡される、 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドの結果として得られるアプリケーション相対パスは `"~/sub/default.aspx"`です。  
  
 場合 `virtualPath` もの、現在のアプリケーション パスで始まらない、 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドが変更されていない仮想パスを返します。  
  
 場合 `virtualPath` ルート演算子 \(ティルダ \[~\]\) が返されるアプリケーションのパスと同じです。 たとえば、現在のアプリケーションの仮想ディレクトリ パスはからアクセスできる、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, 、<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, 、および <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドです。  
  
 [!code-csharp[System.Web.VirtualPathUtility\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーションの相対パスに変換する仮想パス。</param>
        <param name="applicationPath">変換に使用するアプリケーションのパス <c>virtualPath</c> の相対パスにします。</param>
        <summary>仮想パスを指定したアプリケーション パスを使用してアプリケーションの相対パスに変換します。</summary>
        <returns>アプリケーションへの相対パス形式を <paramref name="virtualPath" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> のオーバー ロード、 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッド使用 `applicationPath` 、現在のアプリケーション パスではなく。 場合 `virtualPath` 値で始まらない `applicationPath`, 、 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> メソッドが変更されていない仮想パスを返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>アプリケーションの相対パスにある仮想パスに変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>仮想パスをアプリケーションの絶対パスに変換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>