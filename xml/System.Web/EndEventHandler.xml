<Type Name="EndEventHandler" FullName="System.Web.EndEventHandler">
  <TypeSignature Language="C#" Value="public delegate void EndEventHandler(IAsyncResult ar);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EndEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.EndEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="ar" Type="System.IAsyncResult" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="ar">
      <see cref="T:System.IAsyncResult" /> の結果は、 <see cref="T:System.Web.BeginEventHandler" /> 操作します。</param>
    <summary>アプリケーション イベントなどの非同期のイベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コールバックによって非同期操作の完了が通知された場合、このデリゲートがイベント ソースによって呼び出されます、 <xref:System.Web.BeginEventHandler> を委任します。  
  
 <xref:System.Web.EndEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.EndEventHandler> 非同期ページのハンドラーを登録するデリゲート。  
  
 [!code-csharp[PageAddOnPreRenderCompleteAsync\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-vb[PageAddOnPreRenderCompleteAsync\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpApplication" />
  </Docs>
</Type>