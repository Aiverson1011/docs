<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>関連するフォントのファミリを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A font family is a set of typefaces that share the same family name, such as "Times New Roman", but that differ in features. These feature differences include <xref:System.Windows.Media.Typeface.Style%2A>, such as italic, and <xref:System.Windows.Media.Typeface.Weight%2A>, such as bold.  
  
 ea84e747-92d4-4cc9-ba9b-66292cb73b59  
Example of typefaces that are members of the "Times New Roman" font family  
  
 Most [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBlock>, provide a <xref:System.Windows.Controls.Control.FontFamily%2A> property that can be used to specify a font for the text content of a control. You define the font by setting that property with a <xref:System.Windows.Media.FontFamily> value. The following examples show how to reference a font, in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and in code.  
  
 [!code-csharp[FontSnippets\#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets\#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xml[FontSnippets\#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 In the preceding example, the font that is referenced, "Comic Sans MS", is referred to by its **newTerm tag is not supported!!!!**  
. Also, in this example the font is assumed to be in the system font collection.  
  
## Specifying Fonts in Alternate Directories  
 A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application can specify a directory, other than the directory that contains the systems font collection, for resolving font references. The friendly name of the font can specify an absolute [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value to resolve the font reference, as shown in the following [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code examples.  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets\#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xml[FontSnippets\#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 The friendly name of the font can also specify a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value, which requires a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to resolve the font reference. The <xref:System.Windows.Media.FontFamily.BaseUri%2A> property of the <xref:System.Windows.Media.FontFamily> object corresponds to the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value. The following code example shows how to create a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets\#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 You can use a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value when you reference a font that is packaged as part of the application. For example, the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value can be a "pack:\/\/application" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], which lets you reference fonts that are packaged as application resources. The following code example shows a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets\#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 When a <xref:System.Windows.Media.FontFamily> is specified as an attribute in markup, the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value is always implied—its value is the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] page. The implied base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value is used with the relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value in the friendly name string to obtain the location of the font. In the following [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] example, notice that the relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value uses the ".\/" notation, which means "in the current folder" of the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.  
  
 [!code-xml[FontSnippets\#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application can package fonts as either a content item, a resource item, or a library resource item. For more information, see [Packaging Fonts with Applications](http://msdn.microsoft.com/ja-jp/db15ee48-4d24-49f5-8b9d-a64460865286).  
  
## Font Fallback  
 Font fallback refers to the automatic substitution of a font other than the font that is selected by the client application. There are two primary reasons why font fallback is invoked:  
  
-   The font that is specified by the client application does not exist on the system.  
  
-   The font that is specified by the client application does not contain the glyphs that are required to render text.  
  
 In[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], the font fallback mechanism uses the default fallback font family, "Global User Interface", as the substitute font. This font is defined as a composite font, whose file name is "GlobalUserInterface.CompositeFont". For more information about composite fonts, see the Composite Fonts section in this topic.  
  
 The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] font fallback mechanism replaces previous [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] font substitution technologies.  
  
## Defining a Font Fallback Sequence in Code  
 You can define a font fallback sequence in your code, which lets you define an alternate font. When you create a <xref:System.Windows.Media.FontFamily> object, provide multiple font family names, separated by commas, for the <xref:System.String> parameter, such as "Comic Sans MS, Verdana". In this case, if the glyphs from the "Comic Sans MS" typeface are not available, glyphs from the "Verdana" typeface are used. If neither "Comic Sans MS" nor "Verdana" have the required glyphs, the fallback font family of the typeface is used, which is "Global User Interface" by default.  
  
 The following examples show how to define a font fallback sequence, in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and in code.  
  
 [!code-csharp[FontSnippets\#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets\#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xml[FontSnippets\#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 Any one of the fonts in the fallback sequence can specify font locations. In the following examples, "Pericles Light" is referenced as an application resource, and "Verdana" is referenced as a system font collection member.  
  
 [!code-csharp[FontSnippets\#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets\#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xml[FontSnippets\#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## Composite Fonts  
 The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] platform provides a composite font feature to allow the construction of full range multilingual fonts, and to avoid displaying missing glyphs. Composite fonts replace the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] font linking, font fallback, font binding, font association, and end\-user\-defined characters \(EUDC\) mechanisms.  
  
 A composite font family is available to applications through the <xref:System.Windows.Media.FontFamily> and <xref:System.Windows.Media.Typeface> constructors just like any other font family. Each composite font family is named, and, as with other fonts, can provide localized variants of its name in multiple languages.  
  
 The following markup example shows how a composite font family can be defined as a disk file. This file can be stored in the default [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] font directory as with any other installed font, or can be referenced in any location by including its [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] when referencing the family by name.  
  
 The following example shows the font family markup in a ".CompositeFont" file.  
  
 [!code-xml[CompositeFontMarkup\#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 The following four composite fonts appear in the default [!INCLUDE[TLA2#tla_win](~/includes/tla2sharptla-win-md.md)] font directory as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] installation.  
  
|Font|Notes|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|Renders text by using a monospace font, for example, "Courier New" for Latin characters.|  
|GlobalSanSerif.CompositeFont|Renders text by using a sans serif font, for example, "Arial" for Latin characters.|  
|GlobalSerif.CompositeFont|Renders text by using a serif font, for example, "Times New Roman" for Latin characters.|  
|GlobalUserInterface.CompositeFont|Renders text by using a default font, for example, "Times New Roman" for Latin characters.|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## XAML Attribute Usage  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## XAML Values  
 *fontFamilyName*  
 A string specifying a font family name.  For example, `"Arial"` or `"Century Gothic"`.  
  
 *fontFamilyNamesList*  
 A string specifying multiple font family names, each separated by a comma \(any whitespace following a comma is ignored\).  The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  For example, `"Arial, Century Gothic"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.  
  
 *fontFamilyFolderReference*  
 A string specifying a folder containing the font, along with a font family name.  The folder and font family name are delimited by a \# character.  The folder reference may be absolute, or relative.  For example, `"Custom Fonts\#My Custom Font"`.  
  
 *fontFamilyUriReference*  
 A string specifying a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.  The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a \# character.  For example, `"http://MyFontServer/Fonts/#My Custom Font"`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>匿名の新しいインスタンスを初期化 <see cref="T:System.Windows.Media.FontFamily" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複合フォントをプログラムで作成する場合は、この既定のコンス トラクターを使用します。 つまり、コンス トラクターのフォント ファミリ名を指定する必要はありませんのコレクションを設定する必要があります、 <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> と <xref:System.Windows.Media.FontFamily.FamilyNames%2A> 構築されたインスタンスを使用する前にコレクションです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">ファミリの名前や、新しい構成名 <see cref="T:System.Windows.Media.FontFamily" />します。 複数のファミリ名は、コンマで区切る必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Media.FontFamily" /> クラスから指定されたフォント ファミリ名。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されている各ファミリ名、 `familyName` パラメーターの前に、いずれかのディレクトリへの参照を場所または [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]です。 場所の参照は、シャープによって、ファミリ名から分離されて \(`#`\) 文字です。 指定されている複数のファミリ名、 `familyName` パラメーターは、コンマで区切る必要があります。  
  
 各ファミリでは、同じファミリ名を共有するフォント ファイルのセットを直接表す実際のフォントを指定できますか、複合フォント ファイルで定義されているファミリ名への参照ができます。  
  
 複数のファミリが識別されると、2 回目以降のフォント ファミリは、最初のフォント ファミリでサポートされていないコード ポイントを処理する代替ファミリとして機能します。 最初のフォント ファミリでサポートされていないすべてのコード ポイントでは後続の各ファミリは順番にチェックされます。  
  
   
  
## 例  
 [!code-csharp[FontSnippets\#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets\#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="familyName" /> として <see langword="null" /> を使用することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">基本型を指定 URI 解決に使用される <c>familyName</c>します。</param>
        <param name="familyName">ファミリの名前や、新しい構成名 <see cref="T:System.Windows.Media.FontFamily" />します。 複数のファミリ名は、コンマで区切る必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Media.FontFamily" /> から指定されたフォント ファミリ名と、省略可能な基底クラス Uniform Resource Identifier (URI) 値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `familyName` 値が相対パスを指定できます [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 値をベース [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] フォントの参照を解決するのには。`baseUri` 値を指定できます `null`します。  
  
   
  
## 例  
 次のコードは、ベースを構成しているフォント参照 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 値と相対 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 値。  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets\#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはベースラインと文字セルの上端の間の距離を設定します。</summary>
        <value>A <see cref="T:System.Double" /> ベースラインと文字セルの上端の間の距離を示す、フォントの em サイズの割合として表されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>底を取得します Uniform Resource Identifier (URI) フォント ファミリ名を解決するために使用されます。</summary>
        <value>
          <see cref="T:System.Uri" /> 型の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値は `null` フォント ファミリ名は、基に依存しないかどうかは [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] フォントの参照を解決するためです。 構築するために使用されるフォント ファミリ名を取得する、 <xref:System.Windows.Media.FontFamily> オブジェクトを使用して、 <xref:System.Windows.Media.FontFamily.Source%2A> プロパティです。  
  
   
  
## 例  
 次の例では、結果を取得する、 <xref:System.Windows.Media.FontFamily.BaseUri%2A> プロパティから、 <xref:System.Windows.Media.FontFamily> オブジェクトです。  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets\#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Media.FontFamily" /> と比較するオブジェクト。</param>
        <summary>現在のフォント ファミリ オブジェクトと指定したフォント ファミリ オブジェクトが同じであるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="o" /> 値を現在は <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 それ以外の場合、 <see langword="false" />です。 場合 <paramref name="o" /> は、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト、 <see langword="false" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Media.FontFamilyMap" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> オブジェクトを含む <see cref="T:System.Windows.Media.FontFamilyMap" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Media.FontFamily> フォント ファミリ名を使用して作成されるオブジェクト、 <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> プロパティが空、読み取り専用コレクションを返します。  
  
 <xref:System.Windows.Media.FontFamilyMap> オブジェクトは、特定のカルチャの Unicode 文字の指定したセットを表示するために使用するには、どのフォントを定義します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列のコレクションを取得し、 <see cref="T:System.Globalization.CultureInfo" /> のフォント ファミリ名を表す値、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> フォント ファミリ名を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 [!code-csharp[FontSnippets\#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets\#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォントのコレクションを取得、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> の書体のコレクションを表す、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## XAML 値  
 *OneOrMoreFontFamilyTypefaces*  
 1 つまたは複数のフォント、 <xref:System.Windows.Media.FontFamily> オブジェクトです。  
  
   
  
## 例  
 [!code-csharp[FontSnippets\#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets\#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FontFamily" /> のハッシュ関数として機能します。 ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適しています。</summary>
        <returns>現在のオブジェクトのハッシュ コードを表す <see cref="T:System.Int32" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションを返す <see cref="T:System.Windows.Media.Typeface" /> システム フォントの既定の場所に含まれる型の面を表すオブジェクト。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Typeface" /> オブジェクトの <see cref="T:System.Collections.Generic.ICollection`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 [!code-csharp[FontSnippets\#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets\#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の線の間隔、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。 線の間隔は、このフォントの em サイズを基準と内のテキストの推奨されるベースラインの距離です。</summary>
        <value>A <see cref="T:System.Double" /> の行間隔を表す、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構築に使用されるフォント ファミリの名前を取得、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</summary>
        <value>フォント ファミリ名、 <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基数を取得する [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] の値、 <xref:System.Windows.Media.FontFamily> オブジェクトを使用して、 <xref:System.Windows.Media.FontFamily.BaseUri%2A>です。  
  
 場合、 <xref:System.Windows.Media.FontFamily> フォント ファミリ名を指定せずにオブジェクトが作成された、戻り値は <xref:System.String.Empty>です。  
  
   
  
## 例  
 次の例では、結果を取得する、 <xref:System.Windows.Media.FontFamily.BaseUri%2A> と <xref:System.Windows.Media.FontFamily.Source%2A> プロパティの値から、 <xref:System.Windows.Media.FontFamily> オブジェクトです。  
  
 [!code-csharp[FontSnippets\#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets\#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>値を返す、 <see cref="P:System.Windows.Media.FontFamily.Source" /> プロパティです。</summary>
        <returns>ソースの場所、 <see cref="T:System.Windows.Media.FontFamily" /> ディレクトリを含むオブジェクトまたは Uniform Resource Identifier (URI) ロケーションの参照。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Media.FontFamily> フォント ファミリ名を指定せずにオブジェクトが作成された、戻り値は <xref:System.String.Empty>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>