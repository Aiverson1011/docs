<Type Name="DrawingVisual" FullName="System.Windows.Media.DrawingVisual">
  <TypeSignature Language="C#" Value="public class DrawingVisual : System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingVisual extends System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingVisual" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ContainerVisual</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.DrawingVisual" /> は、画面にベクター グラフィックスをレンダリングするために使用できるビジュアル オブジェクトです。 コンテンツはシステムによって永続化されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Media.DrawingVisual> is a lightweight drawing class that is used to render shapes, images, or text. This class is considered lightweight because it does not provide layout, input, focus, or event handling, which improves its performance. For this reason, drawings are ideal for backgrounds and clip art.  
  
 In order to use <xref:System.Windows.Media.DrawingVisual> objects, you need to create a host container for the objects. The host container object must be derived from the <xref:System.Windows.FrameworkElement> class, which provides the layout and event handling support that the <xref:System.Windows.Media.DrawingVisual> class does not support. The host container object does not display any visual properties, since its main purpose is to contain child objects. For more information, see [Using DrawingVisual Objects](http://msdn.microsoft.com/ja-jp/0b4e711d-e640-40cb-81c3-8f5c59909b7d).  
  
 For a complete example showing how to create <xref:System.Windows.Media.DrawingVisual> objects with a host container, see the [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994) .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.DrawingVisual" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you create a <xref:System.Windows.Media.DrawingVisual> object, it has no drawing content. You can add text, graphic, or image content by retrieving the drawing context of the object and drawing into it. A drawing context is returned by calling the <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> method of a <xref:System.Windows.Media.DrawingVisual> object.  
  
   
  
## 例  
 In the following example, a <xref:System.Windows.Media.DrawingVisual> object is created, and a rectangle is drawn into its drawing context. Notice that you must call the <xref:System.Windows.Media.DrawingContext.Close%2A> method of the <xref:System.Windows.Media.DrawingContext> to persist drawing content.  
  
 [!code-csharp[DrawingVisualSample\#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample\#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawing">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingGroup Drawing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingGroup Drawing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingVisual.Drawing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>図面のコンテンツを取得、 <see cref="T:System.Windows.Media.DrawingVisual" /> オブジェクトです。</summary>
        <value>型の値を取得 <see cref="T:System.Windows.Media.DrawingGroup" /> のコレクションを表す <see cref="T:System.Windows.Media.Drawing" /> 内のオブジェクト、 <see cref="T:System.Windows.Media.DrawingVisual" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビジュアル オブジェクトは、ベクター グラフィックスの命令リストとして、レンダリング データを格納します。 命令リスト内の各項目では、グラフィックスのデータをシリアル化された形式での低レベルのセットを表します。 詳細についてはどのようにビジュアル オブジェクトに対するグラフィックス データの格納を参照してください [WPF グラフィックス レンダリングの概要](http://msdn.microsoft.com/ja-jp/6dec9657-4d8c-4e46-8c54-40fb80008265)します。  
  
 返されたに変更を加えた <xref:System.Windows.Media.DrawingGroup> 値の永続化でない、 <xref:System.Windows.Media.DrawingVisual>です。  
  
   
  
## 例  
 次の例で、 <xref:System.Windows.Media.DrawingGroup> それぞれの値 <xref:System.Windows.Media.DrawingVisual> のホストに visual を列挙します。  
  
 [!code-csharp[VisualSnippets\#DrawingVisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/DrawingVisual.xaml.cs#drawingvisualsnippet1)]
 [!code-vb[VisualSnippets\#DrawingVisualSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/drawingvisual.xaml.vb#drawingvisualsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">型の値 <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> を指定する、 <see cref="T:System.Windows.Media.Geometry" /> ヒット テストの対象にします。</param>
        <summary>ジオメトリ値がビジュアル オブジェクトの境界内にあるかどうかを決定します。</summary>
        <returns>
          <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">型の値 <see cref="T:System.Windows.Media.PointHitTestParameters" /> を指定する、 <see cref="T:System.Windows.Point" /> ヒット テストの対象にします。</param>
        <summary>点の座標値がの境界内であるかどうかを判断、 <see cref="T:System.Windows.Media.DrawingVisual" /> オブジェクトです。</summary>
        <returns>型の値 <see cref="T:System.Windows.Media.HitTestResult" />, を表す、 <see cref="T:System.Windows.Media.Visual" /> 、ヒット テストからが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Media.HitTestResult.VisualHit%2A> 戻り値のプロパティがヒットしたビジュアル オブジェクトを表します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOpen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingContext RenderOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingContext RenderOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.RenderOpen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開き、 <see cref="T:System.Windows.Media.DrawingVisual" /> レンダリング用オブジェクトです。 返された <see cref="T:System.Windows.Media.DrawingContext" /> にレンダリングする値を使用できる、 <see cref="T:System.Windows.Media.DrawingVisual" />です。</summary>
        <returns>
          <see cref="T:System.Windows.Media.DrawingContext" /> 型の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出すと、 <xref:System.Windows.Media.DrawingContext.Close%2A> のメソッド、 <xref:System.Windows.Media.DrawingContext>, 、現在のコンテンツの置換に定義されている前の描画コンテンツを描画、 <xref:System.Windows.Media.DrawingVisual>です。 つまり、既存の描画コンテンツを新しい描画コンテンツを追加する方法はありません。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Media.DrawingVisual> オブジェクトを作成すると、およびその <xref:System.Windows.Media.DrawingContext> が返されます。  
  
 [!code-csharp[DrawingVisualSample\#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample\#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 描画のコンテキストに描画する順序は重要: 各後続の描画は、その他の上に描画します。 次の例では、四角形は描画最初は、次のテキストです。  
  
 [!code-csharp[VisualSnippets\#RenderOrderSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#renderordersnippet1)]
 [!code-vb[VisualSnippets\#RenderOrderSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#renderordersnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> ビジュアル オブジェクトの境界にヒットしたかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>