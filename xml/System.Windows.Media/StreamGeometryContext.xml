<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>描画コマンドを使用してジオメトリを記述します。 データ バインディング、アニメーション、変更をサポートしない軽量のジオメトリを作成する場合に、このクラスを <see cref="T:System.Windows.Media.StreamGeometry" /> クラスと共に使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">円弧の終了を配置する点です。</param>
        <param name="size">角度を描画する周囲の長さが使用される楕円の半径 \(半分の幅と高さの半分\)。 楕円が非常にすべての方向に丸められた場合は、円弧は丸められます、ほぼフラットである場合は円弧になります。 たとえば、非常に大規模な幅と高さを表します非常に大きな楕円形の角度にわずかな曲率なるでしょう。</param>
        <param name="rotationAngle">曲線を指定する楕円の回転角度。 このパラメーターでは、円弧の曲率を回転することができます。</param>
        <param name="isLargeArc">
          <see langword="true" /> 180 度よりも大きい円弧を描画するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="sweepDirection">円弧を描画するかどうかを示す値、 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> または <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 方向です。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>指定したポイントには、円弧を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例を使用して、円弧を描画する方法を示しています、 <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">図形が開始される <see cref="T:System.Windows.Point" />。</param>
        <param name="isFilled">この図形に含まれる領域を、ヒット テスト、レンダリング、およびクリッピングに使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <param name="isClosed">図形を閉じる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 たとえば、2 本の接続線が描画され、<c>isClosed</c> が <see langword="false" /> に設定されている場合、描画は単なる 2 本の線になりますが、<c>isClosed</c> が <see langword="true" /> に設定されている場合は、2 本の線が閉じて三角形が作成されます。</param>
        <summary>新しい図形の始点を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 By calling this method multiple times, you can create multiple figures \(self\-contained geometric shapes\) within this <xref:System.Windows.Media.StreamGeometryContext>.  
  
 A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non\-stroked or unfilled segments.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">曲線の形状を指定するために使用する最初の制御点です。</param>
        <param name="point2">曲線の形状を指定するために使用する 2 番目の制御点です。</param>
        <param name="point3">曲線の終了を配置する点です。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>指定したポイントには、ベジエ曲線を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 3 次ベジエ曲線は、開始位置、終了点、および 2 つの制御点によって定義されます。 最初の制御点は、セグメントの上半分の曲率を決定し、2 つ目の管理ポイントは、セグメントの 2 つ目の半分の曲率を決定します。  
  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例を使用して、ベジエ曲線を描画する方法を示しています、 <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコンテキストを終了し、表示できるように、その内容をフラッシュします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 閉じられた後は、コンテキストを変更できません。 コンテキストは、そのコンテンツをレンダリングする前に閉じる必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">このコンテキストは既に終了または破棄されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">行の末尾を配置する点です。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>指定した直線を描画 <see cref="T:System.Windows.Point" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例を使用して三角形を描画する方法を示しています、 <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">管理ポイントと 1 つまたは複数のベジエ曲線の終点を指定する点の一覧。 このリスト内のポイントの数は 3 つの倍数である必要があります。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>1 つまたは複数の描画には、ベジエ曲線が接続されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 1 つ目のポイント `points` 最初の制御点を示す次の 2 つ目のコントロール ポイントを指定する、3 番目のポイント終了位置を指定する、次の点は、次の曲線の最初の制御点を指定します。  
  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例を使用して、接続されている複数のベジエ曲線を描画する方法を示しています、 <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">1 つまたは複数の対象ポイントを指定する点のコレクションには、直線が接続されています。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>1 つまたは複数の描画には、直線が接続されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例を使用して三角形を描画する方法を示しています、 <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">管理ポイントと 1 つまたは複数の 2 次ベジエ曲線の終点を指定する点のコレクションです。 一覧の 1 つ目のポイントを曲線のコントロール ポイントを指定します、次の点を送信先ポイントを指定します、次の点は、次のカーブのコントロール ポイントを指定します。 この一覧には、偶数個のポイントを含める必要があります。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>1 つまたは複数の描画には、2 次ベジエ曲線が接続されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例では、複数接続されている 2 次ベジエ曲線を使用して描画する方法、 <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">コントロール ポイントは、曲線の形状を指定するために使用します。</param>
        <param name="point2">曲線の終了を配置する点です。</param>
        <param name="isStroked">
          <see langword="true" /> 線セグメントを作成するときに、 <see cref="T:System.Windows.Media.Pen" /> がセグメントのレンダリングに使用されます。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="isSmoothJoin">
          <see langword="true" /> このセグメントと前のセグメント間の結合線に適用したときに、角と見なす、 <see cref="T:System.Windows.Media.Pen" />。 そうしないと、 <see langword="false" />です。</param>
        <summary>2 次ベジエ曲線を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのコントロール ポイントを使用して、3 次ベジエ曲線とは異なり、2 次ベジエ曲線は 1 つのコントロール ポイントを使用します。  
  
 このメソッドは、開始位置として、前のセグメントの終了位置を使用します。 指定されたポイントを使用して、図の最初のセグメントをする場合、 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> メソッドの開始ポイントとして。  
  
 A <xref:System.Windows.Media.StreamGeometry> が含まれている場合、シリアル化することはできません、 <xref:System.Windows.Media.Transform> またはいずれかの描画以外またはセグメントを解除します。  
  
   
  
## 例  
 次の例では、二次ベジエ曲線を使用して、描画する方法、 <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> メソッドです。  
  
 [!code-csharp[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets\_procedural\_snip\#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図を開始することなく、セグメントを追加しようとしました。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>