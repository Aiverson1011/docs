<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>フォーム認証を使用してクライアント アプリケーション サービスに対して認証されたユーザー id を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアント アプリケーション サービス機能では、このクラスを使用して、認証されたユーザーを表します。 クライアント アプリケーション サービスとフォーム認証を使用するアプリケーションを構成するときに呼び出すことによって、ユーザーを認証できる、 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> メソッドです。  認証の後に、現在への参照を取得できます <xref:System.Web.ClientServices.ClientFormsIdentity> を通じてインスタンス、 <xref:System.Security.Principal.IPrincipal.Identity%2A> のプロパティ、 <xref:System.Security.Principal.IPrincipal> を使用して取得、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> プロパティです。  詳細については、「[Client Application Services](http://msdn.microsoft.com/ja-jp/1487d8df-089e-4f21-abfb-a791a652b58e)」を参照してください。  
  
 通常、アクセス、 <xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトとして、 <xref:System.Security.Principal.IIdentity> このクラスに直接依存関係を避けるために参照します。 チェックしてユーザーを認証するかどうかを指定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> id のプロパティです。 ただし、windows では、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーを認証するかどうかを判断する必要がありますもいることを確認、 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> プロパティの値は"ClientForms"です。  
  
 明示的なを使用する必要があります <xref:System.Web.ClientServices.ClientFormsIdentity> 呼び出しへの参照、 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> によって定義されていないメソッド、 <xref:System.Security.Principal.IIdentity> インターフェイスです。  
  
   
  
## 例  
 次のコード例では、このクラスを使用して、アプリケーションがオフライン状態になったときに、ユーザーを自動的に再検証する方法を示します。 この例では、 <xref:System.Windows.Forms.CheckBox.CheckedChanged> イベント ハンドラーは、チェック ボックスの値に一致するように、オフラインの状態を更新します。 イベント ハンドラーが呼び出すことによってユーザーの再検証しようとした場合は、ユーザーがオンライン状態にアプリケーションを設定、 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドです。 ただし、認証サーバーが利用できない場合、イベント ハンドラーは、アプリケーションをオフラインの状態を返します。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。 このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。 再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。 この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。 詳細については、Web 設定へのアクセス」セクションを参照してください。 [Walkthrough: Using Client Application Services](http://msdn.microsoft.com/ja-jp/bb7c8950-4517-4dae-b705-b74a14059b26)します。  
  
 [!code-csharp[ClientApplicationServices\#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices\#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">認証されたユーザーの名前。</param>
        <param name="password">認証されたユーザーのパスワードです。</param>
        <param name="provider">メンバーシップ プロバイダーは、ユーザーを認証するために使用します。</param>
        <param name="authenticationType">使用される認証の種類。</param>
        <param name="isAuthenticated">
          <see langword="true" /> ユーザーが認証されている場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="authenticationCookies">Cookie は、認証サービスから取得されます。</param>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証サービスから取得したクッキーのコレクションを取得します。</summary>
        <value>Cookie は、認証サービスから取得されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、アプリケーション コードで使用するためのものではありません。 このプロパティを介して取得した cookie を変更しても意味と、役に立つ情報がないです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーを認証するために使用する認証の種類を取得します。</summary>
        <value>ユーザーの認証に使用される認証の種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、アクセス、 <xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトとして、 <xref:System.Security.Principal.IIdentity> このクラスに直接依存関係を避けるために参照します。 チェックしてユーザーを認証するかどうかを指定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> id のプロパティです。 ただし、windows では、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーを認証するかどうかを判断する必要がありますもいることを確認、 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> プロパティの値は"ClientForms"です。 詳細については、次を参照してください。、 <xref:System.Web.ClientServices.ClientFormsIdentity> クラスの概要です。  
  
   
  
## 例  
 次のコード例は、によってこのプロパティを使用する方法を示します、 <xref:System.Security.Principal.IIdentity> クライアント アプリケーション サービスのユーザーが現在認証されているかどうかを決定する参照。 この例では、アプリケーションの既定の構成、ユーザーは、もう一度認証 cookie 期限が切れたときにログインする必要はありませんが、想定しています。 それ以外の場合、 <xref:System.Net.WebException> ユーザー ログインの有効期限が切れている可能性があります。 詳細については、「[How to: Configure Client Application Services](http://msdn.microsoft.com/ja-jp/34a8688a-a32c-40d3-94be-c8e610c6a4e8)」を参照してください。  
  
 [!code-csharp[ClientApplicationServices\#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices\#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> when you are finished using the <xref:System.Web.ClientServices.ClientFormsIdentity>. The <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> method leaves the <xref:System.Web.ClientServices.ClientFormsIdentity> in an unusable state. After calling <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, you must release all references to the <xref:System.Web.ClientServices.ClientFormsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Web.ClientServices.ClientFormsIdentity> was occupying. For more information, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
> [!NOTE]
>  Always call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Web.ClientServices.ClientFormsIdentity>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Web.ClientServices.ClientFormsIdentity> object's **languageKeyword tag is not supported!!!!**  
>  method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is true, this method releases all resources held by any managed objects that this <xref:System.Web.ClientServices.ClientFormsIdentity> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが認証されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザーが認証されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、アクセス、 <xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトとして、 <xref:System.Security.Principal.IIdentity> このクラスに直接依存関係を避けるために参照します。 チェックしてユーザーを認証するかどうかを指定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> id のプロパティです。 ただし、windows では、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。 クライアント アプリケーション サービスのユーザーを認証するかどうかを判断する必要がありますもいることを確認、 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> プロパティの値は"ClientForms"です。 詳細については、次を参照してください。、 <xref:System.Web.ClientServices.ClientFormsIdentity> クラスの概要です。  
  
   
  
## 例  
 次のコード例は、によってこのプロパティを使用する方法を示します、 <xref:System.Security.Principal.IIdentity> クライアント アプリケーション サービスのユーザーが現在認証されているかどうかを決定する参照。 この例では、アプリケーションの既定の構成、ユーザーは、もう一度認証 cookie 期限が切れたときにログインする必要はありませんが、想定しています。 それ以外の場合、 <xref:System.Net.WebException> ユーザー ログインの有効期限が切れている可能性があります。 詳細については、「[How to: Configure Client Application Services](http://msdn.microsoft.com/ja-jp/34a8688a-a32c-40d3-94be-c8e610c6a4e8)」を参照してください。  
  
 [!code-csharp[ClientApplicationServices\#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices\#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの名前を取得します。</summary>
        <value>ユーザーの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの認証に使用するメンバーシップ プロバイダーを取得します。</summary>
        <value>メンバーシップ プロバイダー ユーザーを認証するために使用します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>サイレント モードでキャッシュされた資格情報を使用して、ユーザーを認証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 フォーム認証を使用して、現在のユーザーを検証するときに、 <xref:System.Web.ClientServices.ClientFormsIdentity> クラスは、アプリケーションが実行されている限り、ユーザーの資格情報を格納します。 ただし、認証 cookie の期限が切れるまで、ユーザーは認証のみです。 Cookie が経過すると、リモート ロールまたは Web 設定サービスにアクセスするには、ユーザーを再検証する必要があります。 使用することができます、 **サービスの詳細設定** 」の説明に従って、ユーザーを自動的に再検証を行うアプリケーションを構成する\] ダイアログ ボックス [How to: Configure Client Application Services](http://msdn.microsoft.com/ja-jp/34a8688a-a32c-40d3-94be-c8e610c6a4e8)します。 ただし、クッキーの有効期限を優先するアプリケーションを構成する場合できるプログラムを使用して再検証するユーザーを呼び出して、 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドです。 このメソッドもオフライン モードからオンライン モードに切り替えるとき、アプリケーションがシャット ダウンされたため間、オフラインです。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。 このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。 再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。 この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。 詳細については、Web 設定へのアクセス」セクションを参照してください。 [Walkthrough: Using Client Application Services](http://msdn.microsoft.com/ja-jp/bb7c8950-4517-4dae-b705-b74a14059b26)します。  
  
   
  
## 例  
 次のコード例では、このメソッドを使用して、アプリケーションがオフライン状態になったときに、ユーザーを自動的に再検証する方法を示します。 この例では、 <xref:System.Windows.Forms.CheckBox.CheckedChanged> イベント ハンドラーは、チェック ボックスの値に一致するように、オフラインの状態を更新します。 アプリケーションをオンライン状態を設定すると、イベント ハンドラーはユーザーの再検証しようとします。 ただし、認証サーバーが利用できない場合、イベント ハンドラーは、アプリケーションをオフラインの状態を返します。  
  
 [!code-csharp[ClientApplicationServices\#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices\#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> で使用したリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>