<Type Name="SessionSecurityTokenCreatedEventArgs" FullName="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs">
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenCreatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenCreatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データを提供、 <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /> イベントと、 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> イベントです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では。  
  
-   セッションの認証モジュール \(SAM\) で、 <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> 内からイベントを発生、 <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A?displayProperty=fullName> セッション トークンの後のメソッド \(<xref:System.IdentityModel.Tokens.SessionSecurityToken>\) が用意されています。 これは、たとえば場合に、イベント ハンドラーを <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> イベントは、トークンを変更します。 使用することができます、 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> をパイプラインに渡されるして、エンティティ \(ユーザー\) の要求の認証に使用する前に、セッションのトークンを変更します。  
  
-   Ws\-federation 認証モジュール \(WSFAM\) で、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> と SAM は、スレッドのプリンシパルを設定し、セッションの cookie を作成してために呼び出される直前にある STS から受信した Ws\-federation サインイン応答メッセージからセッションのトークンが作成した直後、要求処理パイプラインからイベントが発生します。  
  
 使用することができます、 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A> プロパティを変更またはトークンを交換します。 設定することができます、 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A> を指定するかどうか、セッションの cookie する書き込まれます \(か書き直されたもの\)。  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
    <altmember cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenCreatedEventArgs (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">作成されたセッションのセキュリティ トークン。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" /> クラスを指定したセッション セキュリティ トークンを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A> プロパティで指定されたトークンに設定されて、 `sessionToken` パラメーター。<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A> プロパティは `false` に初期化されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken SessionToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SessionSecurityToken SessionToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または作成されたセッションのセキュリティ トークンを設定します。</summary>
        <value>作成されたセッション トークンです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSessionCookie">
      <MemberSignature Language="C#" Value="public bool WriteSessionCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteSessionCookie" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または応答で cookie を書き込むかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 応答で cookie を記述するにはそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" />, 、cookie は、応答に書き込まれません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>