<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>読み取り、書き込み、および HTTP クライアントでセッション cookie を削除するための抽象基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Services.SessionAuthenticationModule> \(SAM\) のインスタンスを使用して、 <xref:System.IdentityModel.Services.CookieHandler> 読み取り、書き込み、および cookie または含まれている cookie を削除するクラス、 <xref:System.IdentityModel.Tokens.SessionSecurityToken> HTTP クライアントにします。 Cookie \(または cookie、セッション トークンは、いくつかの cookie を分割する場合\) を含む、セッション トークンは、セッションの cookie と呼ばれます。  
  
 Windows Identity Foundation \(WIF\) によって実装されるチャンクされたクッキー ハンドラーと呼ばれるクッキー ハンドラーに付属の <xref:System.IdentityModel.Services.ChunkedCookieHandler> クラスです。 チャンクされたクッキー ハンドラーでは、指定したチャンクのサイズに応じて 1 つまたは複数の cookie で、セッションのトークンが分割されます。 これは、多くのブラウザーによって課される個々 のクッキーのサイズ制限を満たすため。  
  
 派生できます <xref:System.IdentityModel.Services.CookieHandler> を独自のクッキー ハンドラーを作成します。 これを行う場合はオーバーライドする必要があります、 <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, 、<xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, 、および <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> の削除、読み取り、およびセッションの cookie の書き込みの実際の作業を実行するメソッドです。 これらのメソッドは、通常から cookie を読み取り、 <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName> を通じて収集し、書き込み、または削除の cookie、 <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> コレクションです。<xref:System.Web.HttpContext> オブジェクトを要求にアクセスすることができ、応答は、これらの各メソッドのパラメーターとして提供されます。 だけでなく、必要なメソッド、によって公開されているその他の仮想メソッドのプロパティをオーバーライドすることができます必要に応じて、 <xref:System.IdentityModel.Services.CookieHandler> ハンドラーの動作をカスタマイズするクラス。  
  
 によっていくつかのプロパティが公開されている、 <xref:System.IdentityModel.Services.CookieHandler> 既定の動作と、セッションの cookie のプロパティを指定するクラス。<xref:System.IdentityModel.Services.CookieHandler.Name%2A>, 、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティが有効なドメインと、クライアントに格納するパスの cookie の基本名を指定します。<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティは、cookie がクライアント側スクリプトにアクセスできるかどうかを指定します。<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> プロパティは、セキュリティで保護された \(HTTPS\) 接続経由でのみ、クッキーが送信されるかどうかを指定します。 場合、設定、 <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティを使用しているが、ブラウザーを閉じた後も有効なままのセッションで永続的なセッションの期限を設定します。 これらのプロパティのすべて、基になるに通常設定されている同等のプロパティである <xref:System.Web.HttpCookie> 、ハンドラーの"core"メソッドによって、オブジェクト \(またはオブジェクト\)。 詳細については、各プロパティのドキュメントを参照してください。  
  
 SAM で使用されるクッキー ハンドラーを使用した構成で指定できます、 [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 要素。 イベントのデリゲートで変更できるこの要素によって設定クッキー ハンドラー、 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> イベントかそれを設定またはを介して直接アクセス、 <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=fullName> プロパティです。  
  
   
  
## 例  
 次の例の構成の種類のカスタム クッキー ハンドラーを使用して、SAM `MyNamespace.MyCustomCookieHandler`します。  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初期化するために派生クラスのコンス トラクターから呼び出される、 <see cref="T:System.IdentityModel.Services.CookieHandler" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名、ドメインおよびパスがで指定された、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, 、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。 要求が指定されました。 <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <summary>指定した名前および既定のドメインとパスを持つ現在の要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ドメインとパスが指定された、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。 要求が指定されました。 <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名、ドメインおよびパスがで指定された、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, 、<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 、および <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>指定した名前および既定のドメインとパスを持つ指定された要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ドメインとパスが指定された、 <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と <xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパスです。</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求の</param>
        <summary>指定した名前、パス、およびドメインを持つ指定された要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定した名前、ドメイン、およびパスを持つ指定された要求に関連付けられているクッキーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバー ロードされたから呼び出される <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> cookie を削除するは、実際の作業を行う方法です。<xref:System.IdentityModel.Services.CookieHandler.Delete%2A> メソッドは、名前とパスが空でない文字列があることを確認します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You must override this method. The implementation is entirely up to the developer. In the typical case, implementations replace the specified cookie in the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, with a cookie that has <see langword="null" /> data and an expiration time that is set earlier than the current time; however, this is not a requirement.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie のために使用されるドメインを設定します。</summary>
        <value>Cookie の使用されるドメインです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=fullName> プロパティに対応します。  
  
 指定することによって、プロパティを初期化すること、 `domain` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアント スクリプトから cookie を非表示にするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> クライアント スクリプトから cookie を非表示にする場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハンドラーによって書き込まれた cookie の Set\-cookie ヘッダーに"HttpOnly"フラグが出力されるかどうかを制御します。 一部の web ブラウザーはクッキー値へのアクセスをクライアント側スクリプトを保持することでこのフラグを優先します。  
  
 このプロパティに対応して、 <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=fullName> プロパティです。  
  
 指定することによって、プロパティを初期化すること、 `hideFromScript` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">要求のベース URL です。</param>
        <param name="targetUri">一致するように URL</param>
        <summary>Cookie ドメイン内では、ターゲット ドメインは、cookie パス内のターゲット パスが、クッキーのパス部分の大文字と小文字が一致します。</summary>
        <returns>
          <see cref="T:System.String" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはハンドラーによって書き込まれた cookie のベース名を設定します。</summary>
        <value>クッキーを使用する基本名。 既定値は、"FedAuth"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに対応して、 <xref:System.Web.HttpCookie.Name%2A?displayProperty=fullName> プロパティです。  
  
 指定することによって、プロパティを初期化すること、 `name` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定の試行、 <see langword="null" /> か空の値が発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはハンドラーによって書き込まれた cookie の仮想パスを設定します。</summary>
        <value>仮想パス。 既定値は、ASP.NET アプリケーションのルートです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに対応して、 <xref:System.Web.HttpCookie.Path%2A?displayProperty=fullName> プロパティです。  
  
 指定することによって、プロパティを初期化すること、 `path` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定の試行、 <see langword="null" /> か空の値が発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>永続的なセッションの有効期間。 0 の場合、一時的なセッションは、常に使用します。</summary>
        <value>セッションの有効期間。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 永続的なセッション チケットは、意味は、web ブラウザーを閉じてから再び開いた後、サインイン セッションの継続、ファイル ベースの cookie に格納されます。  
  
 このプロパティは、設定に使用される、 <xref:System.Web.HttpCookie.Expires%2A?displayProperty=fullName> プロパティです。  
  
 指定することによって、プロパティを初期化すること、 `persistentSessionLifetime` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">0 未満の値を指定するとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定の名前を持つ現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または <see langword="null" /> cookie が見つからなかった場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたクッキーの名前、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> プロパティです。 要求の指定によって <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">読み取る cookie の名前です。</param>
        <summary>指定した名前を持つ現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または <see langword="null" /> cookie が見つからなかった場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要求が指定されました。 <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>既定の名前、ドメイン、およびパスが現在の要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または <see langword="null" /> cookie が見つからなかった場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたクッキーの名前、 <xref:System.IdentityModel.Services.CookieHandler.Name%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">読み取る cookie の名前です。</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>指定した名前および既定のドメインとパスを持つ指定された要求に関連付けられているクッキーを読み取ります。</summary>
        <returns>Cookie の値または <see langword="null" /> cookie が見つからなかった場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">クッキーの名前</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定の名前を持つ cookie を読み込んで、指定された要求に関連付けられています。</summary>
        <returns>Cookie の値または <see langword="null" /> 場合は、cookie が見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバー ロードされたから呼び出される <xref:System.IdentityModel.Services.CookieHandler.Read%2A> の cookie を読み取るの実際の作業を行う方法です。<xref:System.IdentityModel.Services.CookieHandler.Read%2A> メソッドが必ず `name` 空でない文字列です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You must override this method. The implementation is entirely up to the developer. In the typical case, implementations read the cookie data from the <see cref="P:System.Web.HttpRequest.Cookies" /> collection, however, this is not a requirement.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cookie を SSL でのみ使用する必要があるかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> cookie を; SSL 接続経由でのみ使用する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 書き込まれた cookie に対してセット クッキー ヘッダーの「セキュリティで保護された」フラグが生成されるかどうかを制御します。 この値が場合 `true`, 、cookie はできるだけ over HTTPS セッションです。  
  
 このプロパティに対応して、 <xref:System.Web.HttpCookie.Secure%2A?displayProperty=fullName> プロパティです。  
  
 指定することによって、プロパティを初期化すること、 `requireSSL` 属性を [\<cookieHandler\>](http://msdn.microsoft.com/ja-jp/bfdc127f-8d94-4566-8bef-f583c6ae7398) 構成内の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="isPersistent">
          <see langword="true" /> 場合は、クッキーが永続的です。 <see langword="false" /> クッキーがセッションのみの場合は、クライアントのブラウザーまでのみ有効ですが閉じられます。</param>
        <param name="tokenExpirationTime">基になるトークンの有効期限。</param>
        <summary>指定した値、永続化、および有効期限を持つ現在の要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `isPersistent` パラメーターは `false`, 、クッキーの有効期限に設定されている [Write メソッド \(Byte\<xref:System.DateTime.MinValue?displayProperty=fullName>します。 場合、 `isPersistent` パラメーターは `true`, 、クッキーの有効期限がの値に設定されている、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティがない場合 `null` 場合は、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> プロパティは、 `null`, の値に有効期限の時刻が設定されている、 `tokenExpirationTime` パラメーター。  
  
 Cookie 名、ドメインおよびパスがで指定された、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Name%2A>, 、[Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, 、および [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。 要求の指定によって [Write メソッド \(Byte\<xref:System.Web.HttpContext.Current%2A>します。 指定された SSL 経由のみ、クッキーを送信するかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> で指定されたプロパティは、クライアント側スクリプトから cookie を非表示にするかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="expirationTime">Cookie の有効期限または <see cref="F:System.DateTime.MinValue" /> セッション \(セッション専用\) のクッキー。</param>
        <summary>指定した名前、値、および有効期限が現在の要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Cookie ドメインとパスが指定された、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。 要求の指定によって [Write メソッド \(Byte\<xref:System.Web.HttpContext.Current%2A?displayProperty=fullName>します。  要求の指定によって [Write メソッド \(Byte\<xref:System.Web.HttpContext.Current%2A>します。 指定された SSL 経由のみ、クッキーを送信するかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> で指定されたプロパティは、クライアント側スクリプトから cookie を非表示にするかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="expirationTime">Cookie の有効期限または <see cref="F:System.DateTime.MinValue" /> セッション \(セッション専用\) のクッキー。</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>指定した名前、値、および有効期限を持つ指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Cookie ドメインとパスが指定された、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Domain%2A> と [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Path%2A> プロパティです。 要求の指定によって [Write メソッド \(Byte\<xref:System.Web.HttpContext.Current%2A>します。 指定された SSL 経由のみ、クッキーを送信するかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> で指定されたプロパティは、クライアント側スクリプトから cookie を非表示にするかどうか、 [Write メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="expirationTime">Cookie の有効期限または <see cref="F:System.DateTime.MinValue" /> セッション \(セッション専用\) のクッキー。</param>
        <param name="requiresSsl">
          <see langword="true" /> cookie を; SSL 接続経由でのみ使用する場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="hideFromClientScript">
          <see langword="true" /> クライアント スクリプトから cookie を非表示にする場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>指定した名前、値、ドメイン、パス、有効期限、および可視性を持つ指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> が <see langword="null" /> または空です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> が <see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Cookie の値。</param>
        <param name="name">クッキーの名前。</param>
        <param name="path">クッキーのパス</param>
        <param name="domain">クッキーのドメイン</param>
        <param name="expirationTime">Cookie の有効期限または <see cref="F:System.DateTime.MinValue" /> セッション \(セッション専用\) のクッキー。</param>
        <param name="secure">
          <see langword="true" /> cookie を; SSL 接続経由でのみ使用する場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="httpOnly">
          <see langword="true" /> クライアント スクリプトから cookie を非表示にする場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> 要求します。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定した名前、値、ドメイン、パス、有効期限、持続性と可視性を持つ指定された要求に関連付けられているクッキーを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバー ロードされたから呼び出される [WriteCore メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Write%2A> cookie の書き込みの実際の作業を行う方法です。[WriteCore メソッド \(Byte\<xref:System.IdentityModel.Services.CookieHandler.Write%2A> メソッドが必ず `value` が空でないバイト配列、 `name` と `path` 空でない文字列です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You must override this method. The implementation is entirely up to the developer. In the typical case, implementations write the cookie data to the <see cref="P:System.Web.HttpResponse.Cookies" /> collection, however, this is not a requirement. Most parameters of the method are typically used to set equivalent properties on one or more <see cref="T:System.Web.HttpCookie" /> objects.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cookie を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クッキーを読み取ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>