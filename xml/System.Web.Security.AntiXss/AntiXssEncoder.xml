<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTML、XML、CSS、URL の文字列で使用できるように文字列をエンコードします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.Security.AntiXss.AntiXssEncoder> をオーバーライドするクラス、 <xref:System.Web.Util.HttpEncoder> エンコードおよびなど、クラスのメソッド内の文字列をデコードする既定で使用されるクラス <xref:System.Web.HttpUtility>, 、<xref:System.Web.HttpServerUtility>, 、および <xref:System.Net.HttpResponseHeader>です。  
  
 <xref:System.Web.Security.AntiXss.AntiXssEncoder> セーフ リストに存在しないすべての文字は、クラス、によってエンコード、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> と <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> メソッドです。  
  
 置換する、 <xref:System.Web.Util.HttpEncoder> クラス、 <xref:System.Web.Security.AntiXss.AntiXssEncoder> クラスを使用して登録、 `encoderType` Web.config ファイルで次の例に示すように httpRuntime 要素の属性。  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 「解説」で別のエンコーディング メソッドの既定の安全な文字の一覧が見つかります、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, 、<xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, 、<xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, 、および <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> メソッドです。 使用して既定のセーフ リストを変更できる、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <summary>指定した文字列をカスケード スタイル シート \(CSS\) で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。  
  
> [!NOTE]
>  引用符 \(""\) をカスケード スタイル シートに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 CSS の文字のエスケープ シーケンスは、ISO 10646 の標準の文字コードを表す最大 6 個の 16 進数字の後に円記号 \(\\\) で構成されます。 \(標準の ISO 10646 は、Unicode と事実上同じ\)。 16 進数字以外の任意の文字はエスケープ シーケンスを終了します。 エスケープ シーケンスに続く文字が有効な 16 進でもある場合必要がありますエスケープ シーケンスに 6 桁を含めるか、エスケープ シーケンスを終了する空白文字を使用します。 たとえば、 `\000020` 場所を示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> 無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> 下位サロゲート コード ポイントが発生しなかった上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" /> 上位サロゲート コード ポイントの前に付いていない下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">エンコードする文字列。</param>
        <param name="output">文字列を出力するために使用するテキスト ライター。</param>
        <summary>指定した文字列を HTML 属性で使用できるようにエンコードして出力します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `&#DECIMAL;` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|ラテン アルファベット文字が大文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|ラテン アルファベット文字が小文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\!|感嘆符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\*|アスタリスク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\+|プラス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|、|コンマ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\=|等号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|商用の記号 \(\+\)|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\[ \]|角かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\`|抑音アクセント|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこの中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 \- 0x00AC|0x00A1 \(161 10 進数\) と 0x00AC \(172 10 進数\) の間の特殊文字。|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE \- 0x00FF|0x00AE \(174 10 進数\) と 0x00FF \(255 の 10 進数\) の間の特殊文字。|  
|[Latin\-Extended\-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 \- 0x017F|ラテンは、0x0100 \(10 進数では 256\) および 0x017F \(383 10 進数\) の間に文字を拡張します。|  
|[Latin\-Extended\-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 \- 0x024F|ラテンは、0x0180 \(384 10 進数\) と 0x024F \(591 10 進数\) の間に文字を拡張します。|  
|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 \- 0x02AF|0x0250 \(592 10 進数\) と 0x02AF \(687 10 進数\) の間の文字を IPA 拡張機能です。|  
|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 \- 0x02FF|修飾子文字を 0x02B0 \(688 10 進数\) と 0x02FF \(767 10 進数\) の間の間隔。|  
|[Combining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 \- 0x036F|0x0300 \(768 10 進数\) と 0x036F \(879 10 進数\) の間の分音記号の文字を組み合わせることです。|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> 無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> 下位サロゲート コード ポイントが発生しなかった上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" /> 上位サロゲート コード ポイントの前に付いていない下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <param name="useNamedEntities">特定の文字エンコーディングに HTML 4.0 名前付きエンティティを使用する場合は <see langword="true" />、<c>&amp;#DECIMAL;</c> 表記のみでエンコードする場合は <see langword="false" />。</param>
        <summary>指定した文字列を HTML マークアップのテキストとして使用できるようにエンコードし、オプションとして HTML 4.0 の名前付きエンティティを使用するかどうかを指定します。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた`&#DECIMAL;`表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果の文字列の周りです。  
  
 次の表には、既定の安全な文字が一覧表示します。  
  
|Unicode コード グラフ|文字|説明|  
|---------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|ラテン語アルファベット文字が大文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|ラテン語アルファベット文字が小文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\(スペース\)|スペース|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\!|感嘆符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\*|アスタリスク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\+|プラス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|,|コンマ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|」を参照してください。|期間、ドット、完全停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\=|等号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\[ \]|角かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|下線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\`|アクサン グラーブ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこ、中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|ティルダ|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 \- 0x00AC|0x00A1 \(161 10 進数\) と 0x00AC \(172 10 進数\) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE \- 0x00FF|0x00AE \(174 10 進数\) と 0x00FF \(255 の 10 進数\) の間での特殊文字。 この範囲内の文字がエンコードされたときに`useNamedEntities`は`true`します。|  
|[Latin Extended\-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 \- 0x017F|ラテンは、0x0100 \(256 10 進数\) と 0x017F \(383 10 進数\) の間で文字を拡張します。|  
|[Latin Extended\-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 \- 0x024F|ラテン文字は拡張 0x0180 \(10 進 384\) と 0x024F \(591 10 進数\) の間の文字です。|  
|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 \- 0x02AF|0x0250 \(592 10 進数\) と 0x02AF \(687 10 進数\) の間の文字を IPA 拡張機能です。|  
|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 \- 0x02FF|修飾子文字を 0x02B0 \(688 10 進数\) と 0x02FF \(767 10 進数\) の間の間隔。|  
|[Combining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 \- 0x036F|合成 0x0300 \(768 10 進数\) と 0x036F \(879 10 進数\) の間で分音記号文字。|  
  
 次の表は、入力と対応するエンコード済み出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、<xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" />無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" />下位サロゲート コード ポイントが続かない上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" />上位サロゲート コード ポイントが付いていません下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">エンコードする文字列。</param>
        <param name="output">文字列を出力するために使用するテキスト ライター。</param>
        <summary>指定した文字列を HTML マークアップ内のテキストとして使用できるようにエンコードし、指定したテキスト ライターを使用して文字列を出力します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `&#DECIMAL;` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|ラテン アルファベット文字が大文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|ラテン アルファベット文字が小文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\(スペース\)|スペース|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\!|感嘆符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\*|アスタリスク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\+|プラス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|、|コンマ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\=|等号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\[ \]|角かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\`|抑音アクセント|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこの中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 \- 0x00AC|0x00A1 \(161 10 進数\) と 0x00AC \(172 10 進数\) の間の特殊文字。 この範囲内の文字は、エンコードと `useNamedEntities` は `true`です。|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE \- 0x00FF|0x00AE \(174 10 進数\) と 0x00FF \(255 の 10 進数\) の間の特殊文字。 この範囲内の文字は、エンコードと `useNamedEntities` は `true`です。|  
|[Latin Extended\-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 \- 0x017F|ラテンは、0x0100 \(10 進数では 256\) および 0x017F \(383 10 進数\) の間に文字を拡張します。|  
|[Latin Extended\-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 \- 0x024F|ラテンは、0x0180 \(384 10 進数\) と 0x024F \(591 10 進数\) の間に文字を拡張します。|  
|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 \- 0x02AF|0x0250 \(592 10 進数\) と 0x02AF \(687 10 進数\) の間の文字を IPA 拡張機能です。|  
|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 \- 0x02FF|修飾子文字を 0x02B0 \(688 10 進数\) と 0x02FF \(767 10 進数\) の間の間隔。|  
|[Combining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 \- 0x036F|0x0300 \(768 10 進数\) と 0x036F \(879 10 進数\) の間の分音記号の文字を組み合わせることです。|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> 無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> 下位サロゲート コード ポイントが発生しなかった上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" /> 上位サロゲート コード ポイントの前に付いていない下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <summary>指定した文字列を、MIME タイプが "application\/x\-www\-form\-urlencoded" であるフォームの送信で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.  
  
> [!NOTE]
>  Put double quotation marks \(" "\) or single quotation marks \(' '\) around the resulting string before you add it to a page.  
  
|Unicode code chart|Character\(s\)|Description|  
|------------------------|--------------------|-----------------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A\-Z|Uppercase alphabetic characters|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a\-z|Lowercase alphabetic characters|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|Numbers|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|Hyphen, minus|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|Underscore|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  
  
 The following table lists examples of inputs and the corresponding encoded outputs.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <param name="codePage">
          <c>input</c> 文字列のエンコードに使用するコード ページ。</param>
        <summary>指定したコード ページを使用して、MIME タイプが "application\/x\-www\-form\-urlencoded" であるフォームの送信で使用できるように、指定した文字列をエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <param name="inputEncoding">入力エンコーディングの種類。</param>
        <summary>指定した文字エンコーディングの種類を使用して、MIME タイプが "application\/x\-www\-form\-urlencoded" であるフォームの送信向けに指定した文字列をエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">安全としてマークする、下部のコード テーブルの組み合わせ。</param>
        <param name="lowerMidCodeCharts">安全としてマークする、中央下部のコード テーブルの組み合わせ。</param>
        <param name="midCodeCharts">安全としてマークする、中央部のコード テーブルの組み合わせ。</param>
        <param name="upperMidCodeCharts">安全としてマークする、中央上部のコード テーブルの組み合わせ。</param>
        <param name="upperCodeCharts">安全としてマークする、上部のコード テーブルの組み合わせ。</param>
        <summary>指定された Unicode コード テーブルの文字を安全としてマークします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セーフ リストでは、すべての XML の HTML、CSS、および URL エンコード方法に影響します。  
  
 いくつかの例外では、Unicode コード テーブル直接対応しない記述言語にします。 多くの場合、特定の言語または言語のセットのサポートを追加するには、コードの複数のグラフをも安全だとマークすることが必要です。  
  
 英語を許可しつつ、日本語の言語のサポートを追加するには、次の構文を使用します。  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドを呼び出す必要があります、 `Application_Start` Global.asax ファイル内のメソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> の外部メソッドが呼び出された、 <see langword="Application_Start" /> Global.asax ファイル内のメソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <summary>指定した文字列を URL で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <param name="codePage">
          <c>input</c> 文字列のエンコードに使用するコード ページ。</param>
        <summary>指定したコード ページを使用して、指定した文字列を URL で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <param name="inputEncoding">入力エンコーディングの種類。</param>
        <summary>指定した文字エンコーディングの種類を使用して、指定した文字列を URL で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">エンコードするバイト配列。</param>
        <param name="offset">エンコードする最初のバイトのインデックス。</param>
        <param name="count">エンコードするバイト数。</param>
        <summary>指定したバイト配列を URL で使用できるようにエンコードします。エンコード処理は、バイト配列の指定したオフセットから、指定したバイト数だけ行います。</summary>
        <returns>エンコードされたバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">エンコードする文字列。</param>
        <summary>パス文字列を URL で使用できるようにエンコードします。</summary>
        <returns>エンコードされたパスを含む URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `%SINGLE_BYTE_HEX` 表記します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|大文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|小文字の英字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこの中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 このメソッドは、URL のパスのみをエンコードします。 このメソッドは、スキームをエンコードしません \(など `http:`, 、`ftp:`, 、または `file:`\)、権限 \(など `www.northwind.com` または `www.contoso.com:8080`\)、クエリ、フラグメント \(たとえば、 `?v=s978dfs9#x=103`\)。 パターンまたは文字列内の権限がない場合、文字列が相対パスと見なされ、パスをエンコードします。 次の url の部分文字列のみ `/default.htm` エンコードされます。  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <summary>指定した文字列を XML 属性で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `&#DECIMAL;` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|ラテン アルファベット文字が大文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|ラテン アルファベット文字が小文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\!|感嘆符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\*|アスタリスク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\+|プラス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|、|コンマ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間、ドット、完全に停止|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\=|等号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|商用の記号 \(\+\)|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\[ \]|角かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\`|抑音アクセント|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこの中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 \- 0x00AC|0x00A1 \(161 10 進数\) と 0x00AC \(172 10 進数\) の間の特殊文字。|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE \- 0x00FF|0x00AE \(174 10 進数\) と 0x00FF \(255 の 10 進数\) の間の特殊文字。|  
|[Latin Extended\-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 \- 0x017F|ラテンは、0x0100 \(10 進数では 256\) および 0x017F \(383 10 進数\) の間に文字を拡張します。|  
|[Latin Extended\-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 \- 0x024F|ラテンは、0x0180 \(384 10 進数\) と 0x024F \(591 10 進数\) の間に文字を拡張します。|  
|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 \- 0x02AF|0x0250 \(592 10 進数\) と 0x02AF \(687 10 進数\) の間の文字を IPA 拡張機能です。|  
|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 \- 0x02FF|修飾子文字を 0x02B0 \(688 10 進数\) と 0x02FF \(767 10 進数\) の間の間隔。|  
|[Combining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 \- 0x036F|0x0300 \(768 10 進数\) と 0x036F \(879 10 進数\) の間の分音記号の文字を組み合わせることです。|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> 無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> 下位サロゲート コード ポイントが発生しなかった上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" /> 上位サロゲート コード ポイントの前に付いていない下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">エンコードする文字列。</param>
        <summary>指定した文字列を XML 属性で使用できるようにエンコードします。</summary>
        <returns>エンコードされた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、セーフ リストに含まれるものを除くすべての文字をエンコードします。 文字を使用してエンコードされた `&#DECIMAL;` 表記します。  
  
> [!NOTE]
>  二重引用符 \(""\) の単一引用符または \(' '\) のページに追加する前に、結果として得られる文字列を囲む。  
  
 次の表は、既定の安全な文字を示します。  
  
|Unicode のコードのグラフ|文字|説明|  
|----------------------|--------|--------|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A ~ Z|ラテン アルファベット文字が大文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a ~ z|ラテン アルファベット文字が小文字|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0\-9|番号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\(スペース\)|スペース|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\!|感嘆符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\#|番号記号、ハッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|ドル記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|パーセント記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\( \)|かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\*|アスタリスク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\+|プラス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|、|コンマ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\-|ハイフン、マイナス記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|期間|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\/|スラッシュ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|コロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|セミコロン|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\=|等号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|疑問符|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|アットマーク|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\[ \]|角かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|円記号|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|キャレット|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\_|アンダー スコア|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\`|抑音アクセント|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|中かっこの中かっこ|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|垂直線|  
|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|チルダ|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 \- 0x00AC|0x00A1 \(161 10 進数\) と 0x00AC \(172 10 進数\) の間の特殊文字。 この範囲内の文字は、エンコードと `useNamedEntities` は `true`です。|  
|[C1 Controls and Latin\-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE \- 0x00FF|0x00AE \(174 10 進数\) と 0x00FF \(255 の 10 進数\) の間の特殊文字。 この範囲内の文字は、エンコードと `useNamedEntities` は `true`です。|  
|[Latin Extended\-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 \- 0x017F|ラテンは、0x0100 \(10 進数では 256\) および 0x017F \(383 10 進数\) の間に文字を拡張します。|  
|[Latin Extended\-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 \- 0x024F|ラテンは、0x0180 \(384 10 進数\) と 0x024F \(591 10 進数\) の間に文字を拡張します。|  
|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 \- 0x02AF|0x0250 \(592 10 進数\) と 0x02AF \(687 10 進数\) の間の文字を IPA 拡張機能です。|  
|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 \- 0x02FF|修飾子文字を 0x02B0 \(688 10 進数\) と 0x02FF \(767 10 進数\) の間の間隔。|  
|[Combining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 \- 0x036F|0x0300 \(768 10 進数\) と 0x036F \(879 10 進数\) の間の分音記号の文字を組み合わせることです。|  
  
 次の表は、入力と対応するエンコードされた出力の例を示します。  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 セーフ リストをカスタマイズするには、呼び出し、 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Security.Application.InvalidUnicodeValueException">
          <paramref name="input" /> 無効な Unicode 値を持つ文字が含まれています。</exception>
        <exception cref="T:Microsoft.Security.Application.InvalidSurrogatePairException">
          <paramref name="input" /> 下位サロゲート コード ポイントが発生しなかった上位サロゲート コード ポイントが含まれています。  
  
 または  
  
 <paramref name="input" /> 上位サロゲート コード ポイントの前に付いていない下位サロゲート コード ポイントが含まれています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した文字列を、MIME タイプが "application\/x\-www\-form\-urlencoded" であるフォームの送信で使用できるようにエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した文字列を HTML マークアップのテキストとして使用できるようにエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>URL で使用できるように文字列とバイト配列をエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>