<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトを新しい型をシリアル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> クラスと同じタスクを実行する、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, がこのクラス内でのオブジェクトをシリアル化する、新しい型を定義します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
        <param name="declaration">シリアル化に使用する宣言を入力します。</param>
        <summary>指定した型宣言を逆シリアル化します。</summary>
        <returns>ルート オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> メソッドは、シリアル化されたコード型宣言を逆シリアル化します。 次の表では、タスクの既定の実装の実行を示します。  
  
|タスク|説明|  
|---------|--------|  
|大文字小文字の区別のチェック|実装では、検索、 <xref:System.CodeDom.Compiler.CodeDomProvider> サービスとして、大文字と小文字または大文字と小文字のメンバーを扱うかを決定します。|  
|ステートメントの並べ替え|テーブルには、すべてのメンバー変数と init メソッドのローカル変数が格納されます。 次に init メソッド内の各ステートメントは、左側にあるに従ってグループ化されるためへの割り当てや、特定の変数で動作しているすべてのステートメントがその変数の下にグループ化されたステートメントのコレクションに追加されます。 ステートメントを持たない変数は破棄されます。|  
|逆シリアル化|に従って、変数は、各変数のステートメントのコレクションが逆シリアル化します。|  
  
 次の表に、サービス、 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> メソッドが必要です。  
  
|サービス|説明|  
|----------|--------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|必ずしも必要ではない、サービスで利用できる場合は使用かを確認するかどうかは、シリアル化する必要がありますか大文字と小文字、大文字小文字を区別します。|  
|<xref:System.ComponentModel.IContainer>|逆シリアル化、クエリの中で、名前のテーブルのオブジェクトが存在しない場合 <xref:System.ComponentModel.IContainer> されます。 このクエリが成功すると、コンテナーは、オブジェクトに対してチェックします。 コンテナーは、コンポーネントに必要なコンテナー引数の代理としても使用されます。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
        <param name="declaration">シリアル化に使用する型宣言。</param>
        <param name="value">シリアル化に使用する値。</param>
        <summary>メンバーのシリアル化に使用するステートメントが格納されたメソッドを返します。</summary>
        <returns>指定したメンバーのすべての初期化コードを出力するために使用されるメソッド。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> メソッドには、指定したメンバーのすべての初期化コードを出力する方法が返されます。 既定の実装では、空のコンス トラクターを返します。 同じメソッドを複数の値を返される場合は、メソッドの同じインスタンスが返されます。 使用することができます、 <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName> ディクショナリを作成する方法に注意してください。`typeDecl` パラメーターは、インフラストラクチャのメソッドを追加しても使用できます。 たとえば、オブジェクトごとに個別のメソッドを出力するには、1 つのメソッドをさらにすべてのこれらのメソッドを呼び出す必要があります。 このメソッドは、必要に応じて、コード型宣言を追加できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="typeDecl" />、または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
        <param name="declaration">シリアル化に使用する型宣言。</param>
        <summary>逆シリアル化中に解釈されるメソッドの配列を返します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeMemberMethod" /> に逆シリアル化中に解釈されるメソッドの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の実装で、コンス トラクターを持つ単一要素の配列を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用するシリアル化マネージャー。</param>
        <param name="root">シリアル化するオブジェクト。</param>
        <param name="members">メンバーの省略可能なコレクション。 できる <see langword="null" /> または空です。</param>
        <summary>ルートを定義する新しい型宣言を作成することで、オブジェクトのルートをシリアル化します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> ルート オブジェクトを定義します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> メソッドには、特定のルート オブジェクトとオプションの新しい種類の定義を作成するメンバーのコレクションがシリアル化します。 場合、 `members` コレクションは、値を含む、これらの値がシリアル化します。 値自体をメンバー変数またはローカル変数のいずれかとしてシリアル化可能性があります。 呼ばれるオブジェクトにエクステンダー プロパティを検索してこの判断を行う `GenerateMember`します。 場合 `true`, 、メンバーを生成します。 それ以外の場合、ローカル変数が生成されます。 便宜上、 `members` コレクションは、ルート オブジェクトを含めることができます。 ここでは、ルート オブジェクトがないとしても追加メンバーまたはローカル変数。  
  
 返される型の名前は、名前付きオブジェクトがあった場合、ルート オブジェクトの名前から取得されます。 それ以外の場合は、名前がルート クラスの単純型名から生成します。  
  
 次の表の既定の実装によって実行されるタスク、 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> メソッドです。  
  
|タスク|説明|  
|---------|--------|  
|コンテキストのシード|データを含むによるシリアル化コンテキストの初期化を行う、 <xref:System.ComponentModel.Design.Serialization.RootContext> と <xref:System.CodeDom.CodeTypeDeclaration>|  
|メンバーのシリアル化|次に、 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> すべてのメンバーおよび呼び出しでは、説明 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>します。 実際にシリアル化が行われるため <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, 、これにより、シリアル化を行わないと 2 回クリックします。|  
|ルートのシリアル化|次に、ルート オブジェクトをシリアル化し、そのステートメントがステートメントのコレクションに追加します。|  
|ステートメントの統合|ステータス メッセージには、すべてのオブジェクトをシリアル化した後、 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> メソッドがステートメントを注文しから返されるメソッドに追加 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>します。 呼び出すすべてのメソッドから返されたコンス トラクターが最後に、用意 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>します。|  
  
-  
  
 次の表は、オブジェクト、 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> メソッドは、コンテキスト スタックに配置します。  
  
|インスタンス|説明|  
|------------|--------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|このシリアライザー。 クラスを派生させると役に立ちますこのクラスにパブリック プロパティを追加します。|  
|<xref:System.CodeDom.CodeTypeDeclaration>|作成される型。 ほとんどのオブジェクトでは、これに直接アクセスは必要ありません。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="root" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>