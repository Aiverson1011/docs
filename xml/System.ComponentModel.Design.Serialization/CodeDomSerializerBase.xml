<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>基本クラスを提供 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラス間で共有のベースとして使用される、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> と <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> クラスです。 パブリック <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> クラスから派生し、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラスです。 各パブリック クラスでは、独自のパブリック API を定義します。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> クラスは、パブリック API を定義はありませんが、さまざまなシリアル化プロセスを支援するために使用できるユーティリティ メソッドを提供しています。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="name">式の結果オブジェクトの名前。 できる <see langword="null" /> 場合は、オブジェクトの名前を付ける必要はありません。</param>
        <param name="expression">
          <see cref="T:System.CodeDom.CodeExpression" /> を解釈します。</param>
        <summary>メモリ内オブジェクトに指定された式を逆シリアル化します。</summary>
        <returns>結果の解釈のオブジェクト <paramref name="expression" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、ヘルパー メソッドが派生クラスは、式を逆シリアル化を呼び出すことができます。 解釈およびによって指定された CodeDOM 式を実行して、ステートメントを逆シリアル化、 `expression` パラメーターとし、結果を返します。 指定された名前を指定してオブジェクトをこの式の結果として作成する場合は、 `name` パラメーター。 名前を指定できます `null` 場合は、オブジェクトの名前を付ける必要はありません。 次の表に、特定の式が処理されます。  
  
|式|動作|  
|-------|--------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|この式を表す `this` または `Me`です。 この式に関連付けられているオブジェクトを検索する、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> メソッドは、コンテキスト スタック用の検索、 <xref:System.ComponentModel.Design.Serialization.RootContext>です。 このオブジェクトには、グラフとそれを表す式のルート オブジェクトが含まれています。 オブジェクトが存在し、式が一致する場合は、ルート オブジェクトが返されます。 インスタンスが見つからない場合は、エラーが報告されます。|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|フィールドの参照先がルート オブジェクトに評価された場合、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> マネージャーのパラメーターのメソッドを使用して名前に基づいてオブジェクトのインスタンスの取得されます。 それ以外の場合、要求されたフィールドの検索に、対象オブジェクトに対して標準的なリフレクションを使用します。 フィールドが見つからない場合は、エラーが報告されます。|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> のメソッド、 `manager` パラメーターが指定された変数名を表すインスタンスの検索に使用します。 インスタンスが見つからない場合は、エラーが報告されます。|  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> オブジェクトに完全に解決するまで、または式を簡略化できる不要になった式を解釈し続けます。 この場合、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 戻ります、 <xref:System.CodeDom.CodeExpression> 最も単純な式を含みます。 次の式はサポートされていません。  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="type">
          <see cref="T:System.Type" /> 返されるインスタンスのです。</param>
        <param name="parameters">コンス トラクターに渡すパラメーター <c>type</c>します。</param>
        <param name="name">逆シリアル化されたオブジェクトの名前。</param>
        <param name="addToContainer">
          <see langword="true" /> このオブジェクトをデザイン コンテナーに追加するにはそれ以外の場合、 <see langword="false" />です。 この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</param>
        <summary>指定された型のインスタンスを返します。</summary>
        <returns>
          <paramref name="type" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [DeserializeInstance メソッド \(IDesignerSerializationManager, Type, Object\<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> オブジェクトのインスタンスを取得するには、逆シリアル化中にメソッドが呼び出されます。 呼び出されると、要求された型のインスタンスが返されます。 既定の実装を呼び出す、 [DeserializeInstance メソッド \(IDesignerSerializationManager, Type, Object\<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> のメソッド、 `manager` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="type" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">プロパティの逆シリアル化する元のオブジェクト。</param>
        <param name="filter">
          <see cref="T:System.Attribute" /> プロパティを逆シリアル化をフィルター処理する配列。</param>
        <summary>インバリアント カルチャのリソースのバンドルから指定したオブジェクトのプロパティを逆シリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> メソッドは、派生クラスのヘルパー メソッドを呼び出すことができます。 指定したオブジェクトのプロパティを検索し、インバリアント カルチャのリソースのバンドルからその値を読み込もうとします。 これは一般に、ソース コードには出力されませんデザイン時プロパティを処理に使用します。 指定しないでローカライズされたプロパティにインバリアント カルチャでのみ動作するためです。  
  
 このメソッドは、すべてのプロパティの検査、 `value` で指定された属性と一致するパラメーター、 `filter` パラメーター、および、リソースのバイナリ オブジェクトでこれらのプロパティをチェックします。 これは、逆シリアル化のプロパティをデザイン時のプロパティなどのコードでは表現できないに便利です。  
  
 このメソッドは、デザイナー ローダーが提供される必要があります、 <xref:System.ComponentModel.Design.IResourceService> リソースを読み取る。 場合、 <xref:System.ComponentModel.Design.IResourceService> 提供、 <xref:System.Resources.ResXResourceReader> 、インバリアント カルチャ <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> は、XML リソース \(.resx\) ファイルのメタデータ セクションで、最後のコンパイルされたコード内に含まれていないからリソースを読み取ります。 このサービスが利用できない場合は、リソースは読み取られません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statement">
          <see cref="T:System.CodeDom.CodeStatement" /> を逆シリアル化します。</param>
        <summary>解釈および CodeDOM ステートメントを実行して、ステートメントをシリアル化解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> メソッドは、派生クラスのヘルパー メソッドを呼び出すことができます。 解釈される、 `statement` パラメーター。  
  
 <xref:System.CodeDom.CodeStatement> 逆シリアル化は、コンテキスト スタックにプッシュされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="type">対象の型。</param>
        <summary>プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
        <returns>プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="instance">対象の型のオブジェクトです。</param>
        <summary>プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
        <returns>プロジェクトのターゲットのバージョンの .NET Framework で定義されている属性のコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="instance">対象の型のオブジェクトです。</param>
        <param name="attributes">.NET Framework のターゲット バージョンに渡す属性の配列。</param>
        <summary>プロジェクトのターゲットのバージョンの .NET Framework で定義されているイベントのコレクションを取得します。</summary>
        <returns>プロジェクトのターゲットのバージョンの .NET Framework で定義されているイベントのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">式を取得する対象のオブジェクト。</param>
        <summary>特定のオブジェクトの式を返します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> v を表す<paramref name="alue" />, 、または <see langword="null" /> v の既存の式がない場合は<paramref name="alue" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドは、指定したオブジェクトを表す式を返します。 返すこと `null`, ことを示すオブジェクト式が設定されていないことを示します。 式は、3 つの方法のいずれかで取得します。  
  
-   前回の呼び出しの結果である場合、式、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドです。  
  
-   式が検出された可能性がありますが、 <xref:System.ComponentModel.Design.Serialization.RootContext>です。  
  
-   式から派生でした <xref:System.ComponentModel.Design.IReferenceService>します。  
  
 式を派生させるために <xref:System.ComponentModel.Design.IReferenceService>, 、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドが特定のオブジェクトの名前の参照サービスを照会します。 式のサービスが有効な名前を返す場合 <xref:System.ComponentModel.Design.IReferenceService>, 、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドはあるかどうかをチェック、"です。"名にします。 これは、式サービスが、別のオブジェクトに対する読み取り専用プロパティの戻り値としてこのオブジェクトをすることを示します。 ある場合、"です。"、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> の部分に、参照を分割します。 左端の部分が名前に評価される、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> メソッドです。 後続する各部分のプロパティ参照式がビルドされます。 最後の式は、返されます。  
  
 オブジェクトで設定すると、式を持っていなかった場合、または参照サービスに、オブジェクトが見つからなかった場合 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 戻ります `null`, 、オブジェクトの既存の式がないことを示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="instance">対象の型のオブジェクトです。</param>
        <param name="attributes">.NET Framework のターゲット バージョンに渡す属性の配列。</param>
        <summary>プロジェクトのターゲットのバージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</summary>
        <returns>プロジェクトのターゲットのバージョンの .NET Framework で定義されているプロパティのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="type">メタデータを使用する型。</param>
        <summary>型のメタデータから生成されたリフレクション型を取得します。</summary>
        <returns>リフレクション型のメタデータから生成された <paramref name="type" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値は等しいできない `type` 非リフレクション型と比較するための利用はできません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化マネージャー。</param>
        <param name="instance">メタデータを使用するオブジェクト。</param>
        <summary>オブジェクトのメタデータから生成されたリフレクション型を取得します。</summary>
        <returns>リフレクション型のメタデータから生成された <paramref name="object" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値は、オブジェクトの型と一致できなくなり、非リフレクション型と比較するために使用しない必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">取得するシリアライザーを指定するオブジェクト。</param>
        <summary>指定したオブジェクトの値のシリアライザーを検索します。</summary>
        <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> に対して適切な <paramref name="value" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドは、拡張機能、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> メソッドです。<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります。 外部関係者はを通じて特定のオブジェクトのメタデータが優先される場合 <xref:System.ComponentModel.TypeDescriptor>, に、そのメタデータのオーバーライドを示されませんが、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> をのみ型を受け取るメソッドです。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドが値と値の型のメタデータを確認します。 2 つが異なる場合、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 値のカスタム デザイナーのシリアライザー属性がないかどうかになります。 必要な場合は、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> 使用を試みます。 それ以外の場合を延期 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="valueType">
          <see cref="T:System.Type" /> 取得するシリアライザーを指定します。</param>
        <summary>指定された型のシリアライザーを検索します。</summary>
        <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> に対して適切な <paramref name="valueType" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> メソッドは、拡張機能、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> メソッドです。<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="valueType" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">型の説明のプロバイダー サービス。</param>
        <param name="instance">元となる型の説明のプロバイダー サービス派生できる場合、オブジェクト <c>provider</c> は <see langword="null" />です。</param>
        <summary>取得、 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> は型のフィルター処理で使用するための .NET Framework のターゲット バージョンを認識します。</summary>
        <returns>.NET Framework 対応型説明のプロバイダー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">名前を取得するオブジェクト。</param>
        <summary>指定したオブジェクトの一意の名前を返します。</summary>
        <returns>一意の名前 <paramref name="value" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> メソッドは <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> メソッドを呼び出します。 このメソッドは、名前をし、取得していないかどうか <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> を使用して <xref:System.ComponentModel.Design.Serialization.INameCreationService> オブジェクトの有効な名前を生成します。 サービスが使用できない場合 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> 一意にするインデックス番号と組み合わせて短い型名に基づく名前を作成します。 呼び出して、生成される名前は、シリアル化マネージャーに関連付けられた、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> メソッドから、新しい名前が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">以前のシリアル化をテストするオブジェクト。</param>
        <summary>指定したオブジェクトをシリアル化されたかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="value" /> シリアル化された以外の場合、された <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `value` パラメーターと見なされるにシリアル化、 `manager` パラメーターまたは別のシリアライザーを呼び出す必要がありますが、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 間のリレーションシップを作成する方法 `value` と参照元の式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">以前のシリアル化をテストするオブジェクト。</param>
        <param name="honorPreset">
          <see langword="true" /> 既定の式を含めるそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指定したオブジェクトをシリアル化されたかどうかを示す、化の値を返します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="value" /> シリアル化された以外の場合、された <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `value` パラメーターと見なされるにシリアル化、 `manager` パラメーターまたは別のシリアライザーを呼び出す必要がありますが、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 間のリレーションシップを作成する方法 `value` と参照元の式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <param name="isComplete">
          <see langword="true" /> 場合 <c>value</c> が完全にシリアル化された以外の場合、 <see langword="false" />です。</param>
        <summary>指定したオブジェクトの作成を表す式を返します。</summary>
        <returns>式の作成を表す <paramref name="value" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> の作成を表す式をシリアル化するメソッドを使用できる、 `value` パラメーター。 インスタンスの記述子、認識されています。  
  
 `isComplete` にパラメーターが設定されている `true` 式は、完全に構成されたオブジェクトを表す場合、または `false` さらに、オブジェクトのプロパティのシリアル化を行う必要がある場合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statements">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
        <param name="value">
          <c>descriptor</c> のバインド先となるオブジェクト。</param>
        <param name="descriptor">シリアル化するイベントを指定する <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
        <summary>指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> メソッドに 1 つのイベントをシリアル化するクラスを派生するヘルパー メソッドを呼び出すことができます、指定された <xref:System.CodeDom.CodeStatementCollection>します。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> シリアル化マネージャーをクエリ、 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> 特定のイベントの後、それらの <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> にシリアル化します。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 配置、 `statements` と `descriptor` のパラメーター、 <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 必要があります、 <xref:System.ComponentModel.Design.IEventBindingService> がコンパイルされていないメソッドをイベント バインドを検出します。 このサービスが存在しない場合、コンパイルされていないメソッドをイベント バインドは書き込まれません。 コンパイル済みメソッドをイベント バインドは、イベントがバインドされているオブジェクトは、式に変換できる場合にもシリアル化されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="descriptor" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
          <see cref="T:System.ComponentModel.Design.IEventBindingService" /> が使用できません。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statements">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
        <param name="value">イベントをシリアル化する対象となるオブジェクト。</param>
        <param name="filter">シリアル化するイベントをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
        <summary>指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> メソッドは、派生クラスのヘルパー メソッドを呼び出すことができます。 イベントに表示されている、 `value` に一致するパラメーター、 `filter` パラメーター、その後の呼び出し、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 各イベントのメソッドです。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> メソッドの場所、 <xref:System.ComponentModel.InheritanceAttribute> の `value` 上、 <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statements">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
        <param name="value">プロパティをシリアル化する対象となるオブジェクト。</param>
        <param name="filter">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
        <summary>指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> メソッドは、派生クラスのヘルパー メソッドを呼び出すことができます。 これは、プロパティを調べ、 `value` に一致するパラメーター、 `filter` パラメーター、その後の呼び出し、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 各プロパティのメソッドです。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> メソッドの場所、 <xref:System.ComponentModel.InheritanceAttribute> の `value` 上、 <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statements">使用しません。</param>
        <param name="value">プロパティがシリアル化されるオブジェクト。</param>
        <param name="filter">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
        <summary>指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> メソッドは、派生クラスのヘルパー メソッドを呼び出すことができます。 これは、プロパティを調べ、 `value` に一致するパラメーター、 `filter` パラメーター、その後は、インバリアント カルチャのリソースのバンドルにプロパティをシリアル化します。 リソース サービスを返す場合、 <xref:System.Resources.ResXResourceWriter>, 、プロパティ値は、XML リソース \(.resx\) ファイルのメタデータ セクションで保存されます。`statements` パラメーターは使用されません。  
  
 リソースとしてシリアル化するプロパティがある必要があります \(コンテンツのプロパティではない\) 簡単なとその値をシリアル化可能にする必要があります。 このパターンに従っていないプロパティはスキップされます。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> 必要があります、 <xref:System.ComponentModel.Design.IResourceService> させることが、 <xref:System.Resources.ResourceWriter> インバリアント カルチャのリソースを記述します。 このサービスが利用できない場合は、リソースは書き込まれません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="statements">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
        <param name="value">プロパティをシリアル化する対象となるオブジェクト。</param>
        <param name="propertyToSerialize">シリアル化するプロパティ。</param>
        <summary>指定したオブジェクトのプロパティをシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> メソッドの取得、 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> の `propertyToSerialize` パラメーターとそれにデリゲートします。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 配置、 `statements` と `propertyToSerialize` のパラメーター、 <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="propertyToSerialize" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="resourceName">先のリソースのバンドルの名前 <c>value</c> シリアル化されます。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <summary>指定したオブジェクトを指定したリソース名を使用してリソースのバンドルにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> メソッドは、指定した名前でリソースのバンドルに値をシリアル化するヘルパー メソッドです。 シリアル化マネージャーを検索することにより、カルチャにリソースを書き込むことが決定されます <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> プロパティのコレクションと呼ばれる `ResourceCulture`です。 このプロパティが存在する場合は、そのカルチャのリソースが書き込まれます。 それ以外の場合、リソースは、インバリアント カルチャに書き込まれます。`value` パラメーターをシリアル化可能にする必要があります。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 必要があります、 <xref:System.ComponentModel.Design.IResourceService> させることが、 <xref:System.Resources.ResourceWriter> 正しいカルチャのリソースを記述します。 このサービスを利用できない場合 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> は代わりにリソースを表すコードのバイナリ オブジェクトを作成します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <see langword="ResourceCulture" /> is a read-write property that is accessed through the serialization manager’s <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> collection. The <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> method never changes the value of this property; it merely reads it to identify the culture to which it will write. The property is set during deserialization as resources are parsed and loaded.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="resourceName">先のリソースのバンドルの名前 <c>value</c> シリアル化されます。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <summary>指定したオブジェクトを指定したリソース名を使用してリソースのバンドルにシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リソースは常にインバリアント カルチャに書き込まれます。`value` パラメーターをシリアル化可能にする必要があります。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> メソッドが必要です、 <xref:System.ComponentModel.Design.IResourceService> させることが、 <xref:System.Resources.ResourceWriter> 正しいカルチャのリソースを記述します。 このサービスを利用できない場合 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> は代わりにリソースを表すコードのバイナリ オブジェクトを作成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。<see langword="null" /> の可能性があります。</param>
        <summary>式に指定したオブジェクトをシリアル化します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> オブジェクトの場合 <paramref name="value" /> 、シリアル化された以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `value` パラメーターを指定できます `null`, 、その場合、プリミティブの式が返されます。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは型をシリアル化するため、次の規則を使用します。  
  
1.  まず、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> オブジェクトの式が既に作成されているメソッド。 その場合は、既存の式を返します。  
  
2.  オブジェクトのシリアライザーでは、検索し、シリアル化するように指示します。  
  
3.  かどうか、オブジェクトのシリアライザーの戻り値は、 <xref:System.CodeDom.CodeExpression>, 、式が返されます。  
  
4.  いずれかの最後の呼び出しは <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> 、シリアライザーが式を追加するかどうかを確認します。  
  
5.  最後に、 `null`です。  
  
 式とは作成されず、適切なシリアライザーが見つからなかったこと場合、は、シリアル化マネージャーからエラーが報告されます。 シリアライザーは見つかりましたが、式を生成する失敗した場合、エラーは報告されません。 この場合、シリアライザーか、既にエラーが報告されたか、オブジェクトをシリアル化を試みなかったことと見なされます。  
  
 ステートメントまたはステートメントのコレクションに、シリアライザーが返される場合は、これらのステートメントは破棄されません。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは、まず、 <xref:System.ComponentModel.Design.Serialization.StatementContext> コンテキスト スタックが作成され、ステートメントのコンテキストのオブジェクトにステートメントを追加 <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> プロパティです。 ステートメントのコンテキストが存在しない場合、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッドは、コンテキストにおける検索、 <xref:System.CodeDom.CodeStatementCollection> がステートメントを追加します。 いいえ先が見つからない、ステートメントを追加する、エラーが生成されます。  
  
> [!NOTE]
>  呼び出す必要はありません、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> メソッド内で <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> 独自のオブジェクトのシリアル化します。 代わりを呼び出す必要があります <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>します。 返された場合 `null`, 、独自の式と呼び出し作成 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>します。 シリアル化の残りの部分に進むようにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <summary>式に指定したオブジェクトをシリアル化します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> を含む <paramref name="value" /> としてシリアル化された式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> リソース式の値をシリアル化するヘルパー メソッドです。 これは、対照的に、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> メソッドで、リソースのバイナリ オブジェクトに値を書き込みます。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> 一歩進めて、リソースを回復するために使用する式を返します。 など、戻り値が"rm をする可能性があります。GetValue\("SomeBitmap"\);"です。 リソースの名前が計算された、 <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, 、コンテキスト スタックに見つかることができます。  
  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> メソッドはを検索、 <xref:System.ComponentModel.Design.Serialization.ContextStack> 、次のオブジェクト。  
  
-   <xref:System.CodeDom.CodeStatementCollection>— 1 つ宣言する必要がある場合は、リソース マネージャーを追加するステートメントのコレクション。  
  
-   <xref:System.ComponentModel.Design.Serialization.RootContext>リソース マネージャーを作成するために必要なルートの式。  
  
-   <xref:System.ComponentModel.Design.Serialization.ExpressionContext>\-リソースの名前を作成して、発信するリソース マネージャーの呼び出しの種類を決定するために使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <param name="ensureInvariant">
          <see langword="true" /> インバリアント カルチャにシリアル化するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>インバリアント カルチャに適した式に指定したオブジェクトをシリアル化します。</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> を含む <paramref name="value" /> としてシリアル化された式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `ensureInvariant` パラメーターは `true`, 、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> メソッドも記述はリソースの値をインバリアント カルチャのリソース ファイルに場合は、現在 `ResourceCulture` インバリアント カルチャではありません.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <param name="expression">
          <c>value</c> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
        <summary>オブジェクトを式に関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドは、ヘルパー メソッドを関連付ける、 <xref:System.CodeDom.CodeExpression> するオブジェクトを使用します。 この方法での式に関連付けられているオブジェクトはを通してアクセス、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドです。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> これによって、シリアライザーのアクセスがコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルを格納 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />、<paramref name="value" />、または <paramref name="expression" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <param name="value">シリアル化するオブジェクト。</param>
        <param name="expression">
          <c>value</c> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
        <param name="isPreset">
          <see langword="true" /> 事前設定された式を指定するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>必要に応じて \[事前設定された式を指定する、式を持つオブジェクトを関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> メソッドは、ヘルパー メソッドを関連付ける、 <xref:System.CodeDom.CodeExpression> するオブジェクトを使用します。 この方法での式に関連付けられているオブジェクトはを通してアクセス、 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドです。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> ことによってアクセスが任意のシリアライザーのコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルを格納 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したオブジェクトの値または型のシリアライザーを検索します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>式にオブジェクトをシリアル化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトを式に関連付けます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したオブジェクトをシリアル化されたかどうかを示す値を返します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>