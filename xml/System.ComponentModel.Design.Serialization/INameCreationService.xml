<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>オブジェクトに一意の名前を生成できるサービスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> デザイナーが新しいオブジェクトに一意の名前を作成するための手段を提供するには、このサービスを実装することができます。 このサービスが利用できない場合、デザイナーは、既定の実装を使用します。  
  
   
  
## 例  
 次の例のコード例を示します <xref:System.ComponentModel.Design.Serialization.INameCreationService> 実装します。 サービスは、指定されたコンテナーの名前に一致しない型に基づく一意の名前を作成できます。 指定した名前の文字列を検証することもできます。  
  
 [!code-cpp[INameCreationServiceExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">新しいオブジェクトを追加する場所のコンテナーです。</param>
        <param name="dataType">名前を受け取るオブジェクトのデータ型。</param>
        <summary>指定されたコンテナーのすべてのコンポーネントに一意の新しい名前を作成します。</summary>
        <returns>データ型の一意の名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定されたコンテナー内で一意である新しいオブジェクトの名前を返します。  
  
   
  
## 例  
 次のコード例は、例を示します <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=fullName> メソッドの実装です。 メソッドは、指定されたコンテナー内のコンポーネントの名前には一意では、指定した種類の名前に基づいた名前で作成できます。  
  
 [!code-cpp[INameCreationServiceExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier. For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">検証対象の名前。</param>
        <summary>指定した名前が有効かどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 名前が無効である場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装、 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 有効な名前のパラメーターを定義するルールがあります。 名前を検証し、それらの規則を適用するのには、このメソッドを実装することができます。  
  
   
  
## 例  
 次のコード例は、例を示します <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=fullName> メソッドの実装です。 指定した文字列が有効な名前であるかどうかを確認する、指定した文字列の各文字を調査する文字列の検証スキームを使用します。 このメソッドを返します `true` 文字列が、有効な場合または `false` それ以外の場合。  
  
 [!code-cpp[INameCreationServiceExample\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">検証対象の名前。</param>
        <summary>指定した名前が有効かどうかを示す値を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装、 <xref:System.ComponentModel.Design.Serialization.INameCreationService> 有効な名前のパラメーターを定義するルールがあります。 名前を検証し、それらの規則を適用するのには、このメソッドを実装することができます。  
  
 このメソッドは <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, 、名前が有効でない場合、このメソッドが例外をスローする点が異なります。 これを使用するのには例外メッセージで詳細情報を提供します。  
  
   
  
## 例  
 次のコード例は、例を示します <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=fullName> メソッドの実装は、指定した文字列が有効な名前であるかどうかを確認する、指定した文字列の各文字を調査する文字列の検証スキームを使用します。 メソッドは、文字列が有効でない場合に例外をスローします。  
  
 [!code-cpp[INameCreationServiceExample\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>