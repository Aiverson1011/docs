<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>入れ子になったシリアライザーに情報を使用できるように、シリアライザーで使用できるスタック オブジェクトを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアライザーによっては、自身の状態を正しく持続するために、オブジェクトのコンテキストに関する情報を必要とします。<xref:System.ComponentModel.Design.Serialization.ContextStack> クラスが別のシリアライザーがアクセスできる場所スタックにシリアル化されるオブジェクトのコンテキストに関するデータを設定するシリアライザーを使用します。 値、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> によって提供されるプロパティ、 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> シリアライザーによってにとって利用価値の情報を共有します。  
  
 デザイン ドキュメントのシリアル化のプロセスを深く入れ子にすることができます、およびオブジェクトの入れ子の各レベルには、オブジェクトの状態を正しく持続するためにコンテキスト情報が必要であるために、コンテキスト スタックの使用をお勧めします。 シリアライザーは、入れ子になったシリアライザーを呼び出す前に、スタックにコンテキスト オブジェクトを設定できます。 入れ子になったシリアライザーに呼び出しが戻った後に設定するシリアライザーによっては、スタックに設定された各オブジェクトを削除してください。  
  
 通常、スタック上のオブジェクトがシリアル化される現在のオブジェクトのコンテキストに関する情報が含まれています。 親シリアライザーは、適切なシリアライザーを呼び出すコンテキスト情報をシリアル化する次のオブジェクトはスタックに追加、および、このシリアライザーは、オブジェクトの実行が完了したときに、スタックからコンテキスト情報を削除します。 どのようなオブジェクトがこのスタックにプッシュされるかを判断するには、各シリアライザーの実装の責任です。  
  
 たとえば、プロパティを持つオブジェクトが名前付き `Enabled` のデータ型を持つ <xref:System.Boolean>です。 シリアライザーがこの値をデータ ストリームを書き込んだ場合は、コンテキストまたはデータが書き込まれてプロパティの型を含める必要があります。 シリアライザーがこの情報は、ただし、それはのみを記述するように指示するため、 <xref:System.Boolean> 値。 この情報をシリアライザーを提供する親シリアライザーをプッシュできます、 <xref:System.ComponentModel.PropertyDescriptor> を指す、 `Enabled` コンテキスト スタックのプロパティです。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.ComponentModel.Design.Serialization.ContextStack> をプッシュしてから 10 個の値を削除します。  
  
 [!code-cpp[ContextStackExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">for full access to system resources. Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Associated state:</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  
  
 [!code-cpp[ContextStackExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">スタックに追加するコンテキスト オブジェクト。</param>
        <summary>オブジェクトをスタックの一番上にプッシュするのではなく、スタックの末尾に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、順序で削除する必要がないコンテキスト データ オブジェクトを追加することで、他のシリアライザーをやり取りするためにシリアライザーを使用します。 その他のすべてのオブジェクトを削除せず、スタックの末尾に追加されたオブジェクトを削除する方法はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタックの現在のオブジェクトを取得します。</summary>
        <value>スタック上の現在のオブジェクトまたは <see langword="null" /> プッシュされたオブジェクトがない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のオブジェクトは、スタックの最上部にあるオブジェクトまたはスタックに最後に追加されたオブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">スタックに取得するオブジェクトのレベルです。 レベル 0 は、スタックの一番上、レベル 1 次で下にします。 このレベルは、0 以上にする必要があります。 レベルが大きいかどうか、スタック上のレベル数よりも、それを返します <see langword="null" />します。</param>
        <summary>スタック上で、指定されたレベルには、オブジェクトを取得します。</summary>
        <value>指定したレベルでは、スタック上のオブジェクトまたは <see langword="null" /> そのレベルのオブジェクトが存在しない場合。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="level" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">コンテキスト スタックから取得する型。</param>
        <summary>継承されるか、指定された型を実装するスタックの最初のオブジェクトを取得します。</summary>
        <value>継承されるか、指定された型を実装するスタックの最初のオブジェクトまたは <see langword="null" /> 型を実装するスタック上のオブジェクトがない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装または継承するオブジェクトを検索、スタックの各レベルのチェックを行う `type`します。 一致が見つかると、それが返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>その値を返す、スタックから現在のオブジェクトを削除します。</summary>
        <returns>スタックから削除されたオブジェクト <see langword="null" /> オブジェクトがない場合、スタックにします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例に示しますから値を削除する、 <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 [!code-cpp[ContextStackExample\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">スタックにプッシュするコンテキスト オブジェクト。</param>
        <summary>プッシュ、またはスタックに指定したオブジェクトを配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例に示しますプッシュの値を <xref:System.ComponentModel.Design.Serialization.ContextStack>です。  
  
 [!code-cpp[ContextStackExample\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得またはスタック上で、指定されたレベル オブジェクトを設定します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>