<Type Name="DataSource" FullName="Microsoft.Build.Framework.XamlTypes.DataSource">
  <TypeSignature Language="C#" Value="public sealed class DataSource : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataSource extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.XamlTypes.DataSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>グループ化と保存場所を表す、 <see cref="T:Microsoft.Build.Framework.XamlTypes.BaseProperty" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスを手動でインスタンス化する場合に呼び出す <xref:Microsoft.Build.Framework.XamlTypes.DataSource.BeginInit%2A> オブジェクトの最初のプロパティを設定する前に、 <xref:Microsoft.Build.Framework.XamlTypes.DataSource.EndInit%2A> 最後のプロパティを設定した後です。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.XamlTypes.DataSource.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定のコンストラクター 適切な XAML の逆シリアル化が必要です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.XamlTypes.DataSource.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以下を参照してください。<see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.XamlTypes.DataSource.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以下を参照してください。<see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConfigurationCondition">
      <MemberSignature Language="C#" Value="public bool HasConfigurationCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConfigurationCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.HasConfigurationCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプロパティが構成に依存するであるが永続化の場所でプロパティの定義に関連付けられている構成状態の有無によって示されるかどうかを決定するフラグを設定します。</summary>
        <value>返します<see langword="true" />プロパティが構成に依存する、それ以外の場合は<see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフィールドは省略可能で、既定値`true`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースの項目の種類を設定します。</summary>
        <value>データ ソースの項目の種類を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:Microsoft.Build.Framework.XamlTypes.BaseProperty> 項目定義メタデータは、または項目のメタデータ、このフィールドはそれぞれ、項目の定義や、項目の項目の種類を指定します。 一般的なプロパティは、このフィールドを設定しないでください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプロパティ\/項目定義のメタデータが属している MSBuild プロパティ グループ\/項目定義グループのラベルを設定します。</summary>
        <value>プロパティまたは項目のグループのラベルを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値は、空の文字列です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MSBuildTarget">
      <MemberSignature Language="C#" Value="public string MSBuildTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MSBuildTarget" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.MSBuildTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または読み取り専用のプロパティまたはこのデータ ソースの項目を読み取る前に実行する必要がある MSBuild のターゲットのセミコロン区切りのリストを設定します。</summary>
        <value>セミコロンで区切った一覧を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedName">
      <MemberSignature Language="C#" Value="public string PersistedName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.PersistedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのプロパティの値の読み取り\/書き込みに使用される実際の MSBuild プロパティ名を設定します。</summary>
        <value>このプロパティの値の読み取り\/書き込みに使用される実際の MSBuild プロパティ名を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 のみ適用される <xref:Microsoft.Build.Framework.XamlTypes.DataSource> オブジェクトのプロパティにアタッチします。  
  
 永続化された名前場合、通常はプロパティ名と同じように、 <xref:Microsoft.Build.Framework.XamlTypes.Rule> し、このプロパティの値のままにすることができますのででは、既定値は `null`です。  
  
 プロパティ名が一意である必要がありますが \(項目の種類など、データ ソースの違いが他の\) のための永続化ストアで一意なできない必要がありますので、時間の XAML ファイルで一意であるが、MSBuild では、プロパティを永続化する方法を変更することがなくファイルにルールのプロパティ名を変更しなければならない場合があります。  
  
 このような場合はこのプロパティが便利な場所です。プロジェクト システムとの互換性を維持するために、プロパティ名を通常使用される名前と異なる必要があります、特殊なビルド環境で役立つ場合もあります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persistence">
      <MemberSignature Language="C#" Value="public string Persistence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Persistence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.Persistence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのデータ ソースの保存場所を設定します。</summary>
        <value>このデータ ソースの保存場所を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフィールドは必須、カルチャに依存しないです。  
  
 現在の許容値は `ProjectFile` と `UserFile`です。`ProjectFile` によって、プロパティ値への書き込みし、プロジェクトのマニフェスト ファイルまたは内のどのノードによって、プロパティ シートから読み取りを **ソリューション エクスプ ローラー** または **プロパティ** ウィンドウは、プロパティ ページの UI の生成に使用します。`UserFile` プロパティの値への書き込みし、.user ファイルから読み取りをさせます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceOfDefaultValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation SourceOfDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation SourceOfDefaultValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.SourceOfDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、<see cref="T:Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation" /> このデータ ソースの既定値の場所を示します。</summary>
        <value>
          <see cref="T:Microsoft.Build.Framework.XamlTypes.DefaultValueSourceLocation" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceType">
      <MemberSignature Language="C#" Value="public string SourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.XamlTypes.DataSource.SourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはビルド時にデータを処理する方法を指定すると、ソースのデータ型を設定します。</summary>
        <value>データ型を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、値を持つ `Item`, 、`ItemDefinition`, 、または `Property`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>