<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>この属性を XML Web 内のメソッドに追加する ASP.NET を使用して作成したサービスにより、メソッド呼び出し可能なリモートの Web クライアントからなります。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 この属性が設定されているクラス内のメソッドには、XML Web サービス メソッドが呼び出されます。 メソッドとクラスは、パブリックおよび ASP.NET Web アプリケーション内部で実行する必要があります。  
  
   
  
## 例  
 メソッドを次の例で `GetMachineName` があるために Web では、リモートで呼び出されますが、 <xref:System.Web.Services.WebMethodAttribute>です。`GetUserName` ないため、リモートで呼び出すことができない、 <xref:System.Web.Services.WebMethodAttribute>, である場合でも、 `public`です。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web サービス メソッドのセッション状態が有効になっているかどうかを初期化します。</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web サービス メソッドのセッション状態が有効になっているかどうかを初期化します。</param>
        <param name="transactionOption">XML Web サービス メソッドのトランザクション サポートを初期化します。</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web サービスの呼び出しは、HTTP プロトコルのステートレスな性質により、トランザクションのルートのみできます。 つまりは、次の 2 つの設定を新しいトランザクションの作成の呼び出しごとにそれと同等です。  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 または、次のすべての設定が同等であります。トランザクションのサポートは使いません。  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
   
  
## 例  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web サービス メソッドのセッション状態が有効になっているかどうかを初期化します。</param>
        <param name="transactionOption">XML Web サービス メソッドのトランザクション サポートを初期化します。</param>
        <param name="cacheDuration">応答をキャッシュする秒数を初期化します。</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web サービスの呼び出しは、HTTP プロトコルのステートレスな性質により、トランザクションのルートのみできます。  つまりは、次の 2 つの設定を新しいトランザクションの作成の呼び出しごとにそれと同等です。  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 または、次のすべての設定が同等であります。トランザクションのサポートは使いません。  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
   
  
## 例  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web サービス メソッドのセッション状態が有効になっているかどうかを初期化します。</param>
        <param name="transactionOption">XML Web サービス メソッドのトランザクション サポートを初期化します。</param>
        <param name="cacheDuration">応答をキャッシュする秒数を初期化します。</param>
        <param name="bufferResponse">この要求に対する応答がバッファーされるかどうかを初期化します。</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web サービスの呼び出しは、HTTP プロトコルのステートレスな性質により、トランザクションのルートのみできます。  つまりは、次の 2 つの設定を新しいトランザクションの作成の呼び出しごとにそれと同等です。  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 または、次のすべての設定が同等であります。トランザクションのサポートは使いません。  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
   
  
## 例  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、この要求に対する応答がバッファーされるかどうかを設定します。</summary>
        <value>
          <see langword="true" /> この要求に対する応答がバッファリングされる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> に `true`, 、バッファーがいっぱいか、応答が完全にシリアル化するまでは、メモリ バッファーに XML Web サービス メソッドの応答をシリアル化します。 応答がバッファリングされると、ネットワーク経由で XML Web サービス クライアントに返されます。<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> は `false`, はシリアル化と XML Web サービス メソッドへの応答がクライアントに送信します。 一般に、のみに設定する <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> に `false`, 、XML Web サービス メソッドがクライアントに大量のデータを返すことがわかっている場合。 少量のデータは、XML Web サービスのパフォーマンスは優れて <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> に `true`します。  
  
 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> は `false`, 、XML Web サービス メソッドの SOAP 拡張機能が無効になっています。  
  
   
  
## 例  
 次のコード例、 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> プロパティを `false` し、クライアントへのテキスト ファイルのストリーミングを処理します。 コードの例を実装するクラスを使用してクライアントにデータの大きな部分をストリーム配信では、 <xref:System.Collections.IEnumerable> インターフェイスです。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、応答をキャッシュに保持する秒数を設定します。</summary>
        <value>応答をキャッシュに保持する秒数。 既定値は、0 で、応答がキャッシュされていないことを意味します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キャッシュが有効になっているときに要求および応答内に保持されてのサーバー上のメモリには、少なくともキャッシュ期間のために非常に大きくなるには、要求または応答を期待または要求がサイトによって大きく異なる場合、注意を使用する必要があります。  
  
 ASP.NET 2.0 Web サービス アプリケーションの出力キャッシュに影響を及ぼす可能性がある問題が 2 つあります。  
  
 ASP.NET 2.0 では、テスト ページの HTTP メソッドが GET から POST に変更されました。 しかし、通常、POST はキャッシュされません。 GET を使用するように ASP.NET 2.0 Web サービス アプリケーションのテスト ページを変更すれば、キャッシュは正常に動作します。  
  
 また、HTTP では、ユーザー エージェント \(ブラウザーまたは呼び出し元アプリケーション\) で、"Cache\-Control" を "no\-cache" に設定することによってサーバーのキャッシュ機能をオーバーライドできる必要があることが示されています。 このため ASP.NET アプリケーションでは、"no\-cache" ヘッダーを見つけた場合に、キャッシュされた結果を無視します。  
  
   
  
## 例  
 次の例への呼び出しの結果を配置する、 `ServiceUsage` 60 秒間に、キャッシュ内の XML Web サービス メソッドです。 XML Web サービス クライアントが実行されるたび、 `ServiceUsage` 時間内に XML Web サービス メソッド、同じ結果が返されます。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドを記述する説明メッセージ。</summary>
        <value>XML Web サービス メソッドを記述する説明メッセージ。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 わかりやすいメッセージが表示されます、XML Web サービスのサービスの利用者に XML Web サービスを説明するドキュメントが生成されると、サービスの説明と、サービス ヘルプ ページなど。  
  
   
  
## 例  
 次は、文字列の例で `Obtains the Server Computer Name` XML Web サービスのサービスの説明とサービス ヘルプ ページで、XML Web サービス メソッドを表すために使用します。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドのセッション状態が有効になっているかどうかを示します。</summary>
        <value>
          <see langword="true" /> 場合は、XML Web サービス メソッドのセッション状態になっています。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET のセッション状態を格納するために <xref:System.Web.SessionState.HttpSessionState> オブジェクト、XML Web サービスを継承する必要が <xref:System.Web.Services.WebService> と <xref:System.Web.Services.WebMethodAttribute> 設定 XML Web サービス メソッドに適用、 <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> プロパティを `true`します。 XML Web サービス メソッドのセッション状態が不要な場合、無効にすることとパフォーマンスが向上します。  
  
 XML Web サービス クライアントは、XML Web サービスから返される HTTP クッキーによって一意に識別されます。 XML Web サービス クライアントのセッション状態を維持するためには、クライアントが cookie を保存する必要があります。 クライアントの新しいインスタンスを作成することで、HTTP クッキーを受信できる <xref:System.Net.CookieContainer> に割り当てると、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> XML Web サービス メソッドを呼び出す前に、プロキシ クラスのプロパティです。 プロキシ クラスのインスタンスがスコープ外に出るときに、セッション状態を維持する必要がある場合、クライアントは、XML Web サービスへの呼び出しの間で HTTP cookie を保存する必要があります。 Web フォームのクライアントが HTTP クッキーを永続化、保存するなど、 <xref:System.Net.CookieContainer> 独自のセッション状態にします。 すべての XML Web サービスは、セッション状態を使用し、したがってクライアントは常に使用する必要ありませんので、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> クライアント プロキシのプロパティは、XML Web サービスのマニュアルの必要があります状態にセッション状態が使用されているかどうか。  
  
   
  
## 例  
 回数を判断、特定のセッションにセッション状態を使用して次の例には、XML Web サービス メソッドがアクセスする `SessionHitCounter`です。  
  
  
  
 次のコード例は、セッション状態を使用する XML Web サービスの Web フォーム クライアントです。 クライアントには、クライアントのセッション状態に格納することによって、セッションを一意に識別する HTTP クッキーが永続化します。  
  
 [!code-csharp[HttpWebClientProtocol.CookieContainer\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-vb[HttpWebClientProtocol.CookieContainer\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドに渡され、XML Web サービス メソッドから返されるデータの使用する名前。</summary>
        <value>使用して、XML Web サービス メソッドから渡されるデータの XML Web サービス メソッド名。 既定値は、XML Web サービス メソッドの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> メソッドまたはプロパティの名前をエイリアスにプロパティを使用できます。 最も一般的な用途、 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 多様メソッドを一意に識別するプロパティになります。 既定では、 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> XML Web サービス メソッドの名前に設定されています。 そのため、XML Web サービスに同じ名前の 2 つ以上の XML Web サービス メソッドが含まれている場合、一意に識別できます個々 の XML Web サービス メソッドを設定して、 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> コードに、実際のメソッドの名前を変更することがなく、XML Web サービス内で一意の名前にします。  
  
 データが XML Web サービスに渡される要求を使用して、応答で送信されたが返されますが送信されます。 XML Web サービス メソッドで使用される名前には、要求と応答の <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> プロパティです。  
  
 XML Web サービス メソッドに関連付けられているメッセージ名は、XML Web サービス内で一意である必要があります。  
  
 クライアントは、元のメソッドを呼び出すことが後で、同じ名前が他のパラメーターを新しい XML Web サービス メソッドを追加する場合、新しいメソッドの異なるメッセージ名を指定する必要がありますは、既存のクライアントとの互換性を確認すると、元のメッセージ名をまま必要があります。  
  
   
  
## 例  
 次の例で <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 、2 つを区別するために使用される `Add` メソッドです。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドのトランザクション サポートを示します。</summary>
        <value>XML Web サービス メソッドのトランザクションのサポート。 既定値は、<see cref="F:System.EnterpriseServices.TransactionOption.Disabled" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML Web サービス メソッドは、HTTP プロトコルのステートレスな性質により、トランザクションのルート オブジェクトとしてのみ参加できます。 コンポーネント サービス管理ツールでトランザクション内で実行する COM オブジェクトが設定されている場合、XML Web サービス メソッドは、XML Web サービス メソッドと同じトランザクションに参加している COM オブジェクトを呼び出すことができます。 XML Web サービス メソッドの場合、 <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> のプロパティ `Required` または `RequiresNew` で別の XML Web サービス メソッドを呼び出します、 <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> のプロパティ `Required` または `RequiresNew`, 、XML Web サービス メソッドは、トランザクションのルート オブジェクトとしてのみ動作できるために、各 XML Web サービス メソッドが独自のトランザクションに参加します。  
  
|アイテム|説明|  
|----------|--------|  
|無効|XML Web サービス メソッドがトランザクションのスコープ内で実行しないことを示します。 要求を処理すると、XML Web サービス メソッドが、トランザクションなしに実行されます。<br /><br /> \[WebMethod\(TransactionOption\= `TransactionOption.Disabled`\)\]|  
|NotSupported|XML Web サービス メソッドがトランザクションのスコープ内で実行しないことを示します。 要求を処理すると、XML Web サービス メソッドが、トランザクションなしに実行されます。<br /><br /> \[WebMethod\(TransactionOption\= `TransactionOption.NotSupported`\)\]|  
|サポート状況|XML Web サービス メソッドがトランザクションのスコープ内で実行しないことを示します。 要求が処理されるときに、トランザクションなしに、XML Web サービスが作成されます。<br /><br /> \[WebMethod\(TransactionOption\= `TransactionOption.Supported`\)\]|  
|必須|XML Web サービス メソッドが、トランザクションが必要であることを示します。 XML Web サービス メソッドは、トランザクションのルート オブジェクトとしてのみ参加できる、以降は、XML Web サービス メソッドの新しいトランザクションが作成されます。<br /><br /> \[WebMethod\(TransactionOption\= `TransactionOption.Required`\)\]|  
|RequiresNew|XML Web サービス メソッドが新しいトランザクションが必要であることを示します。 要求を処理すると、新しいトランザクション内で XML Web サービスが作成されます。<br /><br /> \[WebMethod\(TransactionOption\= `TransactionOption.RequiresNew`\)\]|  
  
 例外がスローからや、XML Web サービス メソッドによってキャッチされない場合は、トランザクションが自動的に中止されます。 かどうかは例外が発生しないメソッドが明示的に呼び出さない限り、トランザクションは自動的にコミット `SetAbort`します。  
  
   
  
## 例  
 次の例では、新しいトランザクションを開始するときに、 `Transfer` メソッドが呼び出されます。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>