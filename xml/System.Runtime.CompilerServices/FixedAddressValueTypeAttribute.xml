<Type Name="FixedAddressValueTypeAttribute" FullName="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class FixedAddressValueTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FixedAddressValueTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>有効期間中、静的な値型のフィールドのアドレスを修正します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> 静的な値をマークする属性の種類の作成時に固定します。  
  
 この属性は、Microsoft Visual C コンパイラによって使用されます。  
  
 静的な値の型のフィールドは、ボックス化されたオブジェクトとして作成されます。 これは、ガベージ コレクションが実行されるように、アドレスを変更できることを意味します。 静的な値の型にこの属性を適用すると、アドレスが一定にとどまってその有効期間中です。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> をメモリ内の静的フィールドを固定属性です。 定義、 `Age` 構造体し、型の静的フィールドを持つ 2 つのクラスを初期化します `Age`します。 2 番目のクラスが適用される <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> フィールドのアドレスを固定します。 前に、と後、これら 2 つのオブジェクトがインスタンス化され、ガベージ コレクターが呼び出され、メモリ割り当ての数は行われます。 この例の出力ことを示していますが、最初のアドレス `Age` フィールドは、ガベージ コレクションするフィールドのアドレスの後に変更された <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> が適用されていません。  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedAddressValueTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用する、 <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> をメモリ内の静的フィールドを固定属性です。 定義、 `Age` 構造体し、型の静的フィールドを持つ 2 つのクラスを初期化します `Age`します。 2 番目のクラスが適用される <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> フィールドのアドレスを固定します。 前に、と後、これら 2 つのオブジェクトがインスタンス化され、ガベージ コレクターが呼び出され、メモリ割り当ての数は行われます。 この例の出力ことを示していますが、最初のアドレス `Age` フィールドは、ガベージ コレクションするフィールドのアドレスの後に変更された <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> が適用されていません。  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>