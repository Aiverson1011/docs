<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>時間のセグメントを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイムラインは、時間のセグメントを表します。  開始するように、何回か繰り返されますそのセグメントで時間の進行速度ときに、そのセグメントの長さを指定するためのプロパティを提供します。  
  
 タイムライン クラスから継承するクラスは、アニメーションやメディアの再生などの追加機能を提供します。 使用可能な特殊なタイムラインのさまざまな種類のいくつかの例を次に示します。  
  
-   **アニメーション**:<xref:System.Windows.Media.Animation.AnimationTimeline>出力値を生成するタイムラインの型です。 アニメーションをプロパティに関連付けるときに、アニメーションは、再生、それによって「してアニメーション化」プロパティの値を更新します。 アニメーションの概要については、次を参照してください。[アニメーションの概要](http://msdn.microsoft.com/ja-jp/bd9ce563-725d-4385-87c9-d7ee38cf79ea)です。 アニメーションを適用するさまざまな方法については、次を参照してください。、[プロパティ アニメーションの技術概要](http://msdn.microsoft.com/ja-jp/74f61413-f8c0-4e75-bf04-951886426c8b)です。  
  
-   **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>メディア ファイルの再生を制御するタイムラインの型です。  
  
-   **Paralleltimeline**: A<xref:System.Windows.Media.Animation.ParallelTimeline>他のタイムラインをグループ化するタイムラインの型です。  
  
-   **ストーリー ボード**: A<xref:System.Windows.Media.Animation.Storyboard>は特殊な種類の<xref:System.Windows.Media.Animation.ParallelTimeline>オブジェクトとが含まれているタイムラインの情報を対象とするプロパティを提供します。 詳細については<xref:System.Windows.Media.Animation.Storyboard>、オブジェクトを参照してください、[ストーリー ボードの概要](http://msdn.microsoft.com/ja-jp/1a698c3c-30f1-4b30-ae56-57e8a39811bd)です。  
  
 タイムラインの使用方法の詳細については、次を参照してください。、[アニメーションの概要](http://msdn.microsoft.com/ja-jp/bd9ce563-725d-4385-87c9-d7ee38cf79ea)です。 タイムラインのタイミング機能の紹介を参照してください、[タイミング動作の概要](http://msdn.microsoft.com/ja-jp/5b714d46-bd46-48b8-b467-b4be89ba3091)です。  
  
## データ バインディングとタイムラインをアニメーション化  
 ほとんどのタイムラインのプロパティは、データ バインドまたはアニメーション化します。ただし、タイミング システムが動作するしくみ、により、他のデータと同様に動作しない場合はバインドされている、またはアニメーションのタイムライン データはバインドされているか、オブジェクトをアニメーション化します。 その動作を理解するのには、タイムラインのアクティブ化意味を理解するのに役立ちます。  
  
 タイムラインを適用すると、タイムラインとその子タイムラインのコピーが作成されます。 これらのコピーが固定されている \(読み取り専用に変更\) と<xref:System.Windows.Media.Animation.Clock>そこからオブジェクトが作成されます。 これらのクロックを対象のプロパティをアニメーション化する実際の作業を実行することをお勧めします。 タイムラインがあった場合は、データ バインドされているか、アニメーション化されている現在の値のスナップショットが行われたそのクロックの作成時にします。 元のタイムラインは可能性があります変更が続いている場合でもそのクロックされていません。  
  
 データ バインディングまたはアニメーションの変更を反映するためにタイムラインは、その時計を再生成する必要があります。 クロックは再生成されませんを自動的にします。 タイムラインの変更を適用するいくつかの方法を次に示します。  
  
-   タイムラインがまたはに属している場合、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードを使用して、再適用して変更を反映することを行うことができます、<xref:System.Windows.Media.Animation.BeginStoryboard>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドです。 これは、アニメーションが再起動の副作用です。 コードでは、使用することができます、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>ストーリー ボードを進める方法は、前の位置にバックアップします。  
  
-   プロパティを使用して、直接には、アニメーションを適用したかどうか、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを呼び出し、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを再度が変更されたアニメーションを渡します。  
  
-   クロック レベルで直接作業している場合は、作成し、クロックの新しいセットを適用し、使用して生成されたクロックの前のセットを置き換えます。  
  
 データの例には、アニメーションがバインドされているを参照してください、 [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011)です。  
  
## タイムラインをタイマーとして使用します。  
 タイムラインの時計は、関連付けられているイベント ハンドラーがある場合にのみ実行または \(の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト\) のプロパティに関連付けられています。 この理由 \(など\)、これはお勧めしませんを使用すること、<xref:System.Windows.Media.Animation.Timeline>をタイマーとして。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">この時刻 <see cref="T:System.Windows.Media.Animation.Timeline" /> 始める必要があります。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</param>
        <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">この時刻 <see cref="T:System.Windows.Media.Animation.Timeline" /> 始める必要があります。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</param>
        <param name="duration">繰り返しをカウントせずに、このタイムラインの再生時間の長さ。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
        <summary>指定された <see cref="T:System.Windows.Media.Animation.Timeline" /> と <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">この時刻 <see cref="T:System.Windows.Media.Animation.Timeline" /> 始める必要があります。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</param>
        <param name="duration">繰り返しをカウントせずに、このタイムラインの再生時間の長さ。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</param>
        <param name="repeatBehavior">いずれかのイテレーションとしてこのタイムラインの繰り返し動作 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> または繰り返し <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />します。 詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> プロパティに関するトピックを参照してください。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Media.Animation.Timeline" /> 、指定したクラス <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, 、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, 、および <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</summary>
        <value>時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 から 1 の値。 タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> プロパティも設定されている場合、<see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> および <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計は 1 以下である必要があります。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> プロパティを緩やかに変化を起動し、時間の経過と共にを高速化するアニメーションを作成します。<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> プロパティは、イーズ イン効果を作成するかより自然に見える移動を行うに便利です。 使用して、 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> と <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> が開始されるが遅、アニメーションを作成するプロパティが速度が上がり、および終了する前に、速度が低下します。  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> が 0 未満であるか、または 1 を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Windows.Media.Animation.Clock" /> この <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <returns>このクロック <see cref="T:System.Windows.Media.Animation.Timeline" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> メソッド、コードで直接呼び出さないでいます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Implementers of <see cref="T:System.Windows.Media.Animation.Timeline" /> should override this method when it has a corresponding custom clock that should be used with the class. The overridden method should create and return a new instance of class that inherits from <see cref="T:System.Windows.Media.Animation.Clock" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>順方向の反復の完了後に、タイムラインを逆方向に再生するかどうかを示す値を取得または設定します。</summary>
        <value>各反復の終了時点で、タイムラインを逆方向に再生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> にプロパティが設定されている `true`, 、タイムラインの再生で指定した時間の長さの 2 倍の <xref:System.Windows.Media.Animation.Timeline.Duration%2A> プロパティです。  
  
### AutoReverse と繰り返し  
 タイムラインのときに <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> にプロパティが設定されている `true` とその <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> プロパティすると、繰り返すように、各転送のイテレーションの下位のイテレーションが続きます。 これにより、1 回の繰り返しです。 使用したタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> の値 `true` イテレーションに <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 がプレイ転送 1 回、その逆の順序で、転送、し、もう一度旧バージョンとします。  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</summary>
        <value>この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間 \(親の <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> に対する相対的な時間\)。 このタイムラインがルート タイムラインの場合は、対話による開始時間 \(タイムラインがトリガーされた時間\) に対する相対的な時間になります。 この値には、正の値、負の値、または <see langword="null" /> を指定できます。値が <see langword="null" /> の場合、そのタイムラインは再生されません。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、シーケンスで再生タイムラインを作成するために役立ちます。 を増やすことで、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 、同じ親を共有する一連のタイムラインの再生時間の時差を設定することができます。  
  
## 負の値  
 ネガティブ <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 値の原因として、 <xref:System.Windows.Media.Animation.Timeline> 過去のいずれかの時点で開始している場合と同様にします。 など、 <xref:System.Windows.Media.Animation.Timeline> で、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 負 2.5 秒と <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 5 秒間の中間に表示される開始と終了します。  
  
## BeginTime、SpeedRatio  
 指定された期間、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、タイムラインの親の時間で測定します。 使用したタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> の親が 5、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 の実際には、\[開始 2.5 秒後にします。  
  
 タイムライン独自の <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定は影響しません、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>です。 使用したタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 、5 秒間の <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2、および親タイムラインでの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 のない 2.5、5 秒後に開始します。  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## XAML 属性の使用方法  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>\="\[\-\]\[*days*.\]*hours*:*minutes*:*seconds*\[.*fractionalSeconds*\]"\/\>  
  
 または  
  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>\="\[\-\]\[*days*.\]*時間*:*分*"\/\>  
  
 または  
  
 \<*オブジェクト* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>\="\[\-\]*日*"\/\>  
  
 または  
  
 \<*オブジェクト* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>\="{[x:Null](http://msdn.microsoft.com/ja-jp/2e3ccc21-4996-481d-91b5-3910d8b3bfa3)}"\/\>  
  
<a name="xamlValues_BeginTime"></a>   
## XAML 値  
 角かっこ内の項目 \(`[` と `]`\) は省略可能です。  
  
 *日*  
 <xref:System.Int32?displayProperty=fullName>  
  
 これにより展開される日数を示す 0 以上の値は開始時間です。  
  
 *時間*  
 <xref:System.Int32?displayProperty=fullName>  
  
 これにより展開される時間数を表す 0 ~ 23 の範囲値は開始時間です。  
  
 *分*  
 <xref:System.Int32?displayProperty=fullName>  
  
 これにより展開される分数を表す 0 ~ 59 の間の値は開始時間です。  
  
 *\(秒\)*  
 <xref:System.Int32?displayProperty=fullName>  
  
 これにより展開される秒数を表す、0 ~ 59 の間の値は開始時間です。  
  
 *fractionalSeconds*  
 <xref:System.Int32?displayProperty=fullName>  
  
 秒の小数部を表す 1 ~ 7 桁で構成される値。  
  
 完全な <xref:System.TimeSpan> 構文の「解説」セクションを参照してください、 <xref:System.TimeSpan.Parse%2A> ページです。  
  
   
  
## 例  
 タイムラインの <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、タイムラインのアクティブな期間の開始を決定します。 タイムラインに親タイムラインがある場合、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、その親の開始後に起動するタイムラインに要する時間を決定します。 タイムラインがルート タイムラインである場合 \(、 <xref:System.Windows.Media.Animation.Storyboard>, など\)、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> プロパティは、タイムラインで再生がトリガーされると開始にかかる時間を決定します。  
  
 次の例では、異なる複数の異なるタイムライン <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 設定します。  
  
 [!code-xml[timingbehaviors\_snip\#\_graphicsmm\_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの使用の変更可能なコピーの作成をフリーズした <xref:System.Windows.Freezable> オブジェクト \(または任意 <xref:System.Windows.Freezable> オブジェクト\)。 便利な場合は、このメソッドは、厳密に型指定の実装と継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>」を参照してください。  
  
 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが \(ただし、これらは解決されなくなる場合があります\)、アニメーションやその現在の値はコピーしません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、 <see langword="false" /> 場合でも、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは <see langword="true" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの使用の変更可能なコピーの作成をフリーズした <xref:System.Windows.Freezable> オブジェクト \(または任意 <xref:System.Windows.Freezable> オブジェクト\)。 便利な場合は、このメソッドは、厳密に型指定の実装と継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>」を参照してください。  
  
 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このタイムラインの再生が完全に終了するときに発生します。 アクティブな期間は不要になったを入力します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このタイムラインがタイムライン ツリーのルートのタイムラインの場合は、アクティブな期間 \(をクラッシュの回数を含む\) の末尾に到達し、そのすべての子は、アクティブな期間の終わりに達しました、再生は完了します。 このタイムラインが子タイムラインの場合は、所属先に到達したタイムライン ツリーのルート タイムライン アクティブな期間とそのすべての子タイムラインの末尾が再生終了すると再生を完全に終了したと見なされます。  
  
 タイムラインを停止しても、その完了イベントは発生しませんが、保留期間をスキップします。  
  
 <xref:System.Object> のパラメーター、 <xref:System.EventHandler> イベント ハンドラーは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。  
  
 このイベント ハンドラーは、タイムラインと関連付ける示されますが、実際に登録すると、 <xref:System.Windows.Media.Animation.Clock> このタイムラインのスペースを作成します。  詳細については、次を参照してください。、 [タイミング イベントの概要](http://msdn.microsoft.com/ja-jp/597e3280-0867-4359-a97b-5b2f4149e350)します。  
  
   
  
## 例  
 次の例では、2 つ <xref:System.Windows.Media.Animation.Storyboard> オブジェクトが格納に使用される 2 つの画像間のアニメーション遷移の作成に使用する <xref:System.Windows.Media.ImageSource> を使用して表示、オブジェクト、 <xref:System.Windows.Controls.Image> コントロールです。 見えなくなるまで、1 つのストーリー ボードは、image コントロールを縮小します。 これが完了したら、古い <xref:System.Windows.Media.ImageSource> が、他のスワップされる <xref:System.Windows.Media.ImageSource>, 、およびイメージの展開された 2 つ目のストーリー ボードの制御になるまで拡大もう一度です。  
  
 [!code-xml[timingbehaviors\_snip\#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> から新しい制御可能な <see cref="T:System.Windows.Media.Animation.Clock" /> を作成します。 この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートにしてクロックのツリーが作成されます。</summary>
        <returns>この <see cref="T:System.Windows.Media.Animation.Timeline" /> から構築された、制御可能な新しい <see cref="T:System.Windows.Media.Animation.Clock" />。 この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> である場合、この <see cref="T:System.Windows.Media.Animation.Timeline" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Clock" /> をルートにして <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトのツリーが作成されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この <xref:System.Windows.Media.Animation.Timeline> 1 つまたは複数の子になる場合があります <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトの場合、この情報は無視されます。 このメソッドで現在 <xref:System.Windows.Media.Animation.Timeline> ルートとして <xref:System.Windows.Media.Animation.Timeline>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot">
          <see langword="true" /> 場合ルート <see cref="T:System.Windows.Media.Animation.Clock" /> 返される返す必要があります、 <see cref="T:System.Windows.Media.Animation.ClockController" /> からその <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> プロパティように、 <see cref="T:System.Windows.Media.Animation.Clock" /> 対話的に制御されているそれ以外の場合、ツリーが表示できる <see langword="false" />です。</param>
        <summary>新たに作成 <see cref="T:System.Windows.Media.Animation.Clock" /> これから <see cref="T:System.Windows.Media.Animation.Timeline" /> を指定するかどうか、新しい <see cref="T:System.Windows.Media.Animation.Clock" /> が制御できます。 この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートにしてクロックのツリーが作成されます。</summary>
        <returns>新しい <see cref="T:System.Windows.Media.Animation.Clock" /> これから構築された <see cref="T:System.Windows.Media.Animation.Timeline" />します。 この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> である場合、この <see cref="T:System.Windows.Media.Animation.Timeline" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Clock" /> をルートにして <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトのツリーが作成されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この <xref:System.Windows.Media.Animation.Timeline> 1 つまたは複数の子になる場合があります <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトの場合、この情報は無視されます。 このメソッドで現在 <xref:System.Windows.Media.Animation.Timeline> ルートとして <xref:System.Windows.Media.Animation.Timeline>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その時点のレートの進行のタイムラインのクロックの変更時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の場合、タイムラインのクロックの変更の現在のグローバル速度:  
  
-   タイムラインの方向が変わった場合、クロック <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 設定します。  
  
-   クロックが加速または減速のタイムラインのため <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> または <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> プロパティの設定です。  
  
-   クロックが一時停止または再開します。  
  
-   クロックが非アクティブになったまたは再アクティブ化します。  
  
-   <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> の時計の親の変更の 1 つです。  
  
 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントは、ストーリー ボードを使用して、タイムラインのクロックが一時停止しているを追跡するため、イベント ハンドラーの場合に役立ちます <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> メソッドまたは時計をチェック <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> クロックが一時停止するかどうかを確認するに変更されたかどうかを判断する以前にキャッシュされた値と比較します。  
  
 <xref:System.Object> のパラメーター、 <xref:System.EventHandler> イベント ハンドラーは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。  
  
 このイベント ハンドラーは、タイムラインと関連付ける示されますが、実際に登録すると、 <xref:System.Windows.Media.Animation.Clock> このタイムラインのスペースを作成します。  詳細については、次を参照してください。、 [タイミング イベントの概要](http://msdn.microsoft.com/ja-jp/597e3280-0867-4359-a97b-5b2f4149e350)します。  
  
   
  
## 例  
 次の例に登録する方法、 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> イベントです。  
  
 [!code-csharp[timingbehaviors\_procedural\_snip\#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors\_procedural\_snip\#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイムラインの <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> プロパティが更新されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified  when a timeline's <xref:System.Windows.Media.Animation.Clock> starts, stops, or fills.  
  
 Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>. To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  
  
 Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.  
  
 The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the  <xref:System.Windows.Media.Animation.Clock> that was created for this timeline.  
  
 Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.  For more information, see the [Timing Events Overview](http://msdn.microsoft.com/ja-jp/597e3280-0867-4359-a97b-5b2f4149e350).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 、タイムラインのプロパティ <see cref="T:System.Windows.Media.Animation.Clock" /> が更新されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> にするときにイベントときに通知、 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> のタイムラインの <xref:System.Windows.Media.Animation.Clock> が更新されます。  
  
 <xref:System.Object> のパラメーター、 <xref:System.EventHandler> イベント ハンドラーは、タイムラインの <xref:System.Windows.Media.Animation.Clock>です。  
  
 このイベント ハンドラーは、タイムラインと関連付ける示されますが、実際に登録すると、 <xref:System.Windows.Media.Animation.Clock> このタイムラインのスペースを作成します。  詳細については、次を参照してください。、 [タイミング イベントの概要](http://msdn.microsoft.com/ja-jp/597e3280-0867-4359-a97b-5b2f4149e350)します。  
  
   
  
## 例  
 次の例に登録する方法、 <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> イベントです。  
  
 [!code-csharp[timingbehaviors\_procedural\_snip\#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors\_procedural\_snip\#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</summary>
        <value>時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 ～ 1 \(両端を含む\) の値。 タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> プロパティも設定されている場合、<see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> の合計は 1 以下である必要があります。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property to create animations that slow down before stopping. The <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property is useful for creating ease\-in effects or making movement seem more natural. Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that that start slowly, speed up, and then slow down again before finishing.  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> が 0 より小さいか、または 1 を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または繰り返しをカウントせずに、このタイムラインの再生時間の長さを設定します。</summary>
        <value>タイムラインの単一の継続時間: このタイムラインは、1 つの前方反復処理を完了するまでの時間数。 既定値は <see cref="P:System.Windows.Duration.Automatic" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイムラインの単一の継続時間は、繰り返しが含まれる合計再生時間に対して 1 回の前方反復の時間を構成します。  
  
## 既定の期間の動作  
 動作、 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> の値を持つ <xref:System.Windows.Duration.Automatic%2A> タイムラインの種類によって異なります。  
  
|||  
|-|-|  
|**タイムライン**|**動作**|  
|<xref:System.Windows.Media.Animation.Timeline>|不定 \(<xref:System.Windows.Media.Animation.Timeline> は抽象クラスです\)|  
|<xref:System.Windows.Media.Animation.ParallelTimeline>、<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>、<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|子タイムラインを合わせて拡張されます。|  
|\<*型*\> アニメーション \(、"から\/に\/"または"basic"アニメーションと呼ばれます\)|1 秒|  
|\<*型*\> AnimationUsingKeyFrames \(キー フレーム アニメーションと呼ばれます\)|すべてのキー フレームの合計 <xref:System.Windows.Media.Animation.KeyTime> 値|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Media.Animation.ParallelTimeline> <xref:System.Windows.Media.Animation.Storyboard> 種類 <xref:System.Windows.Media.Animation.TimelineGroup> オブジェクトです。 期間、 <xref:System.Windows.Media.Animation.TimelineGroup> はその子タイムラインの期間によって決まります。 たとえば、 <xref:System.Windows.Media.Animation.Storyboard> 以下 6 秒間 \(6 秒の期間\) のためが実行されるとき、最後の子タイムライン \(<xref:System.Windows.Media.Animation.DoubleAnimation>\) を終了します。  
  
> [!NOTE]
>  注: からのものを次の例は、コードが実装されていません  
  
 \[xaml\]  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 例については \<*型*\> アニメーションとは、 <xref:System.Windows.Media.Animation.DoubleAnimation>, 、<xref:System.Windows.Media.Animation.PointAnimation>, 、<xref:System.Windows.Media.Animation.ColorAnimation>, などです。 ない場合 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> が指定されてこれらの種類のアニメーションでは、1 秒間実行されます。  
  
 \[xaml\]  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 例については \<*型*\> AnimationUsingKeyFrames 含める <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, 、<xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, などです。 ない場合 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> アニメーション キー フレームですべてが完了するまで、これらは実行のこれらの種類を指定します。  
  
 \[xaml\]  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティブ期間の終わりに達した後の <see cref="T:System.Windows.Media.Animation.Timeline" /> の動作を指定する値を取得または設定します。</summary>
        <value>アクティブ期間の終わりに達した後 \(ただし親はアクティブ期間内または保留期間内にある\) のタイムラインの動作を指定する値。 既定値は <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、アニメーション <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> プロパティを <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> アクティブな期間の終わりに達すると、その値を保持するために、アニメーションの場合します。 アクティブな期間の末尾に到達するアニメーションが、 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 設定 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> 保留期間内にあると言います。 アクティブな期間の終わりに達すると、アニメーションの値を保持する必要がある場合は、設定、  
  
 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> プロパティを <xref:System.Windows.Media.Animation.FillBehavior.Stop>します。  
  
 保留期間でのアニメーションは、ターゲット プロパティの値をオーバーライドし続ける、ためには、効果がないように見える可能性があります他の手段でターゲット プロパティの値を設定しようとしています。 アニメーション化された後に、プロパティ値を設定する方法を示す例では、次を参照してください。 [方法: 設定、プロパティ後アニメーション ストーリー ボードを](http://msdn.microsoft.com/ja-jp/79466556-4dbf-40bd-9c1e-a77613b07077)します。  
  
 子タイムライン再生と、親のタイムラインが中止されます。 保留を停止します。子タイムラインに入力する場合は、確認、親のタイムライン、 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> の <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>です。  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">このインスタンスが固定可能かどうかを確認するには、<see langword="true" />。このインスタンスを固定するには <see langword="false" />。</param>
        <summary>これにより、 <see cref="T:System.Windows.Media.Animation.Timeline" /> 不可能な状態をできるかどうか、不可能な状態を決定したりします。</summary>
        <returns>
          <paramref name="isChecking" /> が true の場合、このインスタンスを読み取り専用にできるなら、このメソッドは <see langword="true" /> を返します。読み取り専用にできないなら <see langword="false" /> を返します。  
  
 <paramref name="isChecking" /> が false の場合、このインスタンスが現在読み取り専用であるなら、このメソッドは <see langword="true" /> を返します。このオブジェクトの固定された状態を変更し始めたことの副作用によって、これを読み取り専用にできない場合は <see langword="false" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 直接 \(呼び出す場合を除きますベースの実装における\) には、このメソッドを呼び出す必要はありません。 このメソッドは内部で <xref:System.Windows.Freezable.Freeze%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.Media.Animation.Timeline" /> implementers must override this method when the class contains data that is not stored using dependency properties.  
  
 A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <see cref="T:System.Windows.Media.Animation.Timeline" /> インスタンスを複製します。</param>
        <summary>このインスタンスの指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが \(ただし、これらは解決されなくなる場合があります\)、アニメーションやその現在の値はコピーしません。 これらのプロパティには、データ バインディングまたはリソースの参照が含まれている場合は、 <xref:System.Windows.Freezable.GetAsFrozen%2A> に失敗する、オブジェクトを圧縮しようとしているとスローされます、 <xref:System.InvalidOperationException>です。  
  
 このメソッドは、 <xref:System.Windows.Freezable.GetAsFrozen%2A> メソッドは以外で呼び出されて、コードから直接このメソッドを上書きするときに基本実装を呼び出すときに、します。 現在のオブジェクトの固定コピーを作成するには <xref:System.Windows.Freezable.GetAsFrozen%2A> このメソッドを直接呼び出す代わりにします。  
  
 詳細については、「<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">コピーし、固定する <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>このインスタンスを指定した <see cref="T:System.Windows.Media.Animation.Timeline" />します。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> メソッドは以外で呼び出されて、コードから直接このメソッドを上書きするときに基本実装を呼び出すときに、します。 現在のオブジェクトの固定コピーを作成するには <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> このメソッドを直接呼び出す代わりにします。  
  
 詳細については、「<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">目的のフレーム レートを取得する対象のタイムラインになります。</param>
        <summary>指定した目的のフレーム レートを取得 <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <returns>このタイムラインの目的のフレーム レートです。 既定値は <see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドへの読み取りアクセスを提供する、 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 添付プロパティです。 詳細については、次を参照してください。、 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> ページです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">
          <see cref="T:System.Windows.Media.Animation.Clock" /> これに作成された <see cref="T:System.Windows.Media.Animation.Timeline" />します。</param>
        <summary>この単一のイテレーションの長さを返す <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <returns>この 1 つのイテレーションの長さ <see cref="T:System.Windows.Media.Animation.Timeline" />, 、または <see cref="P:System.Windows.Duration.Automatic" /> 自然な長さが不明な場合です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドをのみ呼び出すときに、 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> にプロパティが設定されている <xref:System.Windows.Duration.Automatic%2A>します。 場合 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> は <xref:System.Windows.Duration.Automatic%2A>, の特定のクラスの実装では、自然な時間を確認してください。 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>します。  
  
 場合 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> 返します <xref:System.Windows.Duration.Automatic%2A>, 、自然な長さが不明で、意味の自然な長さであることを意味して <xref:System.Windows.Duration.Forever%2A>します。 ストリーミングを行う場合などがこれです。  
  
 成功しているこのメソッドが作成されたものではないこのタイムライン用の時計は可能ですが、信頼できない結果に注意してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">
          <see cref="T:System.Windows.Media.Animation.Clock" /> これに作成された <see cref="T:System.Windows.Media.Animation.Timeline" />します。</param>
        <summary>この単一のイテレーションの長さを返す <see cref="T:System.Windows.Media.Animation.Timeline" />します。 このメソッドの実装を提供する <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />です。</summary>
        <returns>この 1 つのイテレーションの長さ <see cref="T:System.Windows.Media.Animation.Timeline" />, 、または <see cref="P:System.Windows.Duration.Automatic" /> 自然な長さが不明な場合です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの実装を提供する <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> コードから直接呼び出されない必要があります。 代わりに、<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> を使用してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method should be implemented by timeline classes that need to provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. If the author cannot determine the natural duration, this method should return <see cref="P:System.Windows.Duration.Automatic" />.</para>
        </block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この名前を取得または <see cref="T:System.Windows.Media.Animation.Timeline" />です。</summary>
        <value>このタイムラインの名前。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クロックがこのタイムラインの作成や、親タイムラインのいずれかが削除されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、適用することで、 <xref:System.Windows.Media.Animation.RemoveStoryboard> アクション、ストーリー ボードを使用して、ストーリー ボードを <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> メソッド、\(クロックを直接操作する\) 場合、またはを呼び出す、 <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName> メソッドです。  
  
 このイベント ハンドラーは、タイムラインと関連付ける示されますが、実際に登録すると、 <xref:System.Windows.Media.Animation.Clock> このタイムラインのスペースを作成します。  詳細については、次を参照してください。、 [タイミング イベントの概要](http://msdn.microsoft.com/ja-jp/597e3280-0867-4359-a97b-5b2f4149e350)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このタイムラインの繰り返し動作を取得または設定します。</summary>
        <value>タイムラインの再生回数を指定する <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />、タイムラインのアクティブな期間の長さの合計を指定する <see cref="T:System.TimeSpan" /> 値、またはタイムラインを無限に繰り返すように指定する特殊な値 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />。 既定値は、タイムラインが 1 回再生されることを示す、<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> が <c>1</c> の <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、イテレーション <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> が指定されていると、タイムラインの <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> にプロパティが設定されている `true`, 、順方向の 1 つの反復と旧バージョンとイテレーションは 1 つの 1 つの繰り返しで構成されます。 使用したタイムライン、 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> プロパティ イテレーションを true に設定 <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 を担うように、その逆の順序で、転送、し、もう一度旧バージョンとします。  
  
 タイムラインの再生回数を指定するには、代わりにも、タイムライン再生する時間の長さの合計を指定することができます。 このプロセスを繰り返して、タイムラインのスペースを <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> 値は、タイムラインのより大きくなければなりません <xref:System.Windows.Media.Animation.Timeline.Duration%2A>します。 使用したタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 2 秒間の <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> 4 秒には 2 回に再生されます。 場合、 <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> がタイムラインのより小さい <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, 、タイムラインの有効期間を短縮します。  
  
 詳細については、タイムラインの繰り返し、次を参照してください。 [アニメーションの概要](http://msdn.microsoft.com/ja-jp/bd9ce563-725d-4385-87c9-d7ee38cf79ea)します。  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <see cref="T:System.Windows.Media.Animation.Timeline" /> する <c>desiredFrameRate</c> が割り当てられます。</param>
        <param name="desiredFrameRate">このタイムラインは、1 秒間を生成するフレームの最大数または <see langword="null" /> 場合は、システムは、フレームの数を制御する必要があります。</param>
        <summary>指定した目的のフレーム レートを設定 <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、設定、 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 添付プロパティです。 詳細については、次を参照してください。、 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> ページです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の割合を親に対してこの時間の進行 <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <value>タイムラインの親の速度を基準としたこのタイムラインの時間の進行速度を示す 0 より大きい最小有限値またはルート タイムラインには、既定のタイムラインの速度の場合。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定の効果を持たないその <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; は、その時間は、タイムラインの親を基準とした場合、または、タイムラインがルート タイムラインには、タイムラインのクロックが開始された時点。  
  
 場合 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> または <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 指定すると、この <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 平均の比率がタイムラインの自然な長さを超えています。  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 タイムラインの <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> プロパティは親に対しての進行速度を制御します。 タイムラインが、ルートの場合、 <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> 既定のタイムラインの速度に対する相対パスです。 次の例では、異なるいくつかのタイムライン <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 設定します。  
  
 [!code-xml[timingbehaviors\_snip\#\_graphicsmm\_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 0 未満か、有限の値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>作成、 <see cref="T:System.Windows.Media.Animation.Clock" /> これから <see cref="T:System.Windows.Media.Animation.Timeline" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>