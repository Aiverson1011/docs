<Type Name="MatrixAnimationUsingPath" FullName="System.Windows.Media.Animation.MatrixAnimationUsingPath">
  <TypeSignature Language="C#" Value="public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatrixAnimationUsingPath extends System.Windows.Media.Animation.MatrixAnimationBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.MatrixAnimationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.PathGeometry" /> を使用して <see cref="T:System.Windows.Media.Matrix" /> プロパティの値をアニメーション化し、アニメーション値を生成します。 このアニメーションを使用してビジュアル オブジェクトをパスに沿って移動できます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> 角度と 1 つのアニメーションを持つオブジェクトの位置をアニメーション化することができ、 <xref:System.Windows.Media.MatrixTransform>です。  
  
 A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> を指定した線形補間を使用して、そのターゲットをアニメーション化 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathGeometry" />
    <altmember cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />
    <altmember cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatrixAnimationUsingPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値はありません <xref:System.Windows.Media.PathGeometry>, ので、ユーザーは、いずれかを指定する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.MatrixAnimationUsingPath Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.MatrixAnimationUsingPath</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが \(ただし、これらは解決されなくなる場合があります\)、アニメーションやその現在の値はコピーしません。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects \(or any <xref:System.Windows.Freezable> object\). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> の新しいインスタンスを作成します。</summary>
        <returns>新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangent">
      <MemberSignature Language="C#" Value="public bool DoesRotateWithTangent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoesRotateWithTangent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトがパスの接線に沿って回転するかどうかを示す値を取得または設定します。</summary>
        <value>オブジェクトがパスの接線に沿って回転する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use property when you want the animated object to appear to "slide" along the animation path.  
  
<a name="dependencyPropertyInfo_DoesRotateWithTangent"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoesRotateWithTangentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DoesRotateWithTangentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Media.Matrix GetCurrentValueCore(valuetype System.Windows.Media.Matrix defaultOriginValue, valuetype System.Windows.Media.Matrix defaultDestinationValue, class System.Windows.Media.Animation.AnimationClock animationClock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultOriginValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="defaultDestinationValue" Type="System.Windows.Media.Matrix" />
        <Parameter Name="animationClock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="defaultOriginValue">アニメーションが独自の明示的な開始値を持たない場合に使用される、起点の推奨値。</param>
        <param name="defaultDestinationValue">アニメーションが独自の明示的な終了値を持たない場合に使用される、終点の推奨値。</param>
        <param name="animationClock">アニメーションで使用される <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> または <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> を生成する <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</param>
        <summary>
          <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> によって決定されたように、アニメーション化されているプロパティの現在の値を表す値を計算します。</summary>
        <returns>現在のアニメーションで決定されたとおりに計算されたプロパティ値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `defaultOriginValue` 最初のスナップショット値 \(1 つある場合\) または基本プロパティ値構成チェーンでこの値になります。 それ以外の場合この値はチェーンの前のアニメーションによって返される値、 <xref:System.Windows.Media.Animation.AnimationClock> 外にある <xref:System.Windows.Media.Animation.Clock.Stopped%2A>です。  
  
 `defaultDestinationValue` は基本の値の場合、プロパティのアニメーションの最初の構成レイヤーでは、アニメーションのそれ以外の場合、値はプロパティのアニメーションの前の構成レイヤーからの出力値です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)" />
      </Docs>
    </Member>
    <Member MemberName="IsAdditive">
      <MemberSignature Language="C#" Value="public bool IsAdditive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdditive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>対象プロパティの現在の値をこのアニメーションの開始値に追加するかどうかを示す値を取得または設定します。</summary>
        <value>対象プロパティの現在の値をこのアニメーションの開始値に追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsAdditive"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
> [!NOTE]
>  この依存関係プロパティは、その識別子のフィールドがから入ってくるので、通常 <xref:System.Windows.Media.Animation.AnimationTimeline> し、さまざまな派生クラスで共有します。  
  
   
  
## 例  
 次の例を使用して 2 つのような <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> のアニメーションを同じ四角形をアニメーション化します。 最初のアニメーションの <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> にプロパティが設定されている `false`, 、アニメーションの開始値を常に、\(0, 0\) から四角形をアニメーション化、ようにします。 2 番目のアニメーションが同じターゲット値 \(その <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> 設定と同じです\) が、その <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> にプロパティが設定されている `true`、その結果、アニメーションが適用されたときに任意の位置から四角形をアニメーション化します。  
  
 [!code-xml[PathAnimationGallery\_snip\#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snip/CS/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]
 [!code-xml[PathAnimationGallery\_snip\#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/PathAnimationGallery_snip/xaml/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulative">
      <MemberSignature Language="C#" Value="public bool IsAngleCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAngleCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アニメーション化された行列の回転角度を繰り返しで累積する必要があるかどうかを指定する値を取得または設定します。</summary>
        <value>アニメーションの回転角度を繰り返しで累積する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定されている場合 `true`, 、アニメーション化された行列の回転角度が、アニメーションを繰り返すたびに蓄積されます。  パスが小さい円弧の場合は、累積的な角度が回転を開始する代わりに繰り返されるたびに継続的に回転するオブジェクトになります。  組み合わせると、 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> の `true`, 、\(指定したパス\) に応じて跳ね返るところ間をおおまかに、オブジェクトがあります。 関連情報については、「<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>」を参照してください。  
  
 このプロパティの設定も何も起こりません場合 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> は `false`です。  
  
 このプロパティのため、アニメーションを繰り返すたび時にアニメーション行列の角度を累積するかどうかを決定する、 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> ; の設定は行われませんにオフセットは、アニメーションが再起動されたときに累積します。 ビルド前のアニメーションの値にアニメーションを作成する方法については、次を参照してください。 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>します。  
  
<a name="dependencyPropertyInfo_IsAngleCumulative"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例を使用して 2 つのような <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> のアニメーションを同じ四角形をアニメーション化します。 両方のアニメーションが同じである <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> が四角形を画面上、右に移動され、4 回繰り返して、両方のアニメーションを設定するように設定します。 最初のアニメーションの <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> にプロパティが設定されている `false`, ので、四角形は、アニメーションを繰り返すたびときの角度が元に戻すジャンプします。 2 番目のアニメーションの <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> にプロパティが設定されている `true`、その結果、元の値に戻すジャンプするのではなく、アニメーションの繰り返しを向上させる四角形の角度が表示されます。  
  
 [!code-xml[PathAnimationGallery\_snip\#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snip/CS/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]
 [!code-xml[PathAnimationGallery\_snip\#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/PathAnimationGallery_snip/xaml/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      </Docs>
    </Member>
    <Member MemberName="IsAngleCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsAngleCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulative">
      <MemberSignature Language="C#" Value="public bool IsOffsetCumulative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffsetCumulative" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アニメーション化された行列によって生成されるオフセットを繰り返しで累積するかどうかを示す値を取得または設定します。</summary>
        <value>オブジェクトをアニメーションの繰り返しで累積する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定されている場合 `true`, 、アニメーション化された行列のオフセットが、アニメーションを繰り返すたびに蓄積されます。 たとえば、パスが小さい円弧を繰り返す、アニメーションが設定されている場合は、累積的なオフセットと、オブジェクト画面を横切ってバウンスに表示されないようにします。  
  
 このプロパティは、ときのため、アニメーションを繰り返すたびにアニメーション行列のオフセットが累積されるかどうかを決定の <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> ; の設定は行われませんにオフセットは、アニメーションが再起動されたときに累積します。 ビルド前のアニメーションの値にアニメーションを作成する方法については、次を参照してください。 <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>します。  
  
<a name="dependencyPropertyInfo_IsOffsetCumulative"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />
        <altmember cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive" />
      </Docs>
    </Member>
    <Member MemberName="IsOffsetCumulativeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOffsetCumulativeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> が変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>For information about overriding this method, see <see cref="M:System.Windows.Freezable.OnChanged" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry PathGeometry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathGeometry PathGeometry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このアニメーションの出力値の生成に使用されるジオメトリを取得または設定します。</summary>
        <value>このアニメーションの出力値の生成に使用されるジオメトリ。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Media.PathGeometry> 曲線を含む複雑な図形を記述でき、弧、できるようにすることが入力、アニメーションの複雑な図形を指定します。 詳細については、次を参照してください。 [ジオメトリの概要](http://msdn.microsoft.com/ja-jp/9fba8934-98b7-4af6-82f6-f4ef887f963a)します。  
  
<a name="dependencyPropertyInfo_PathGeometry"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.PathGeometry" />
      </Docs>
    </Member>
    <Member MemberName="PathGeometryProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathGeometryProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathGeometryProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>