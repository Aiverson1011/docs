<Type Name="BackEase" FullName="System.Windows.Media.Animation.BackEase">
  <TypeSignature Language="C#" Value="public class BackEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.BackEase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>示されたパスのアニメーション化を開始する前に、アニメーションの動きを少し縮小するイージング関数を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定する「バックアップ」動作をアニメーションで発生するかを制御することができます、 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> アニメーションのプロパティ値です。 次のグラフのそれぞれの値を示す <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, ここで、 *f*\(*t*\) アニメーションの進行状況を表すと *t* 時間を表します。  
  
 c9a1989b-168f-45cd-9bbe-a825440f263f  
  
 この関数で使用される数式は、以下のようです。  
  
 8cdb0c57-8655-4d14-947d-ae29e5984d98  
  
> [!NOTE]
>  このアニメーションを進行する前に取り消す値が発生するためが予期せずにアニメーションの補間が負の数値にで行わ可能性があります。 これにより、負の値は許可されていないプロパティをアニメーション化するときにエラーが発生することができます。 このアニメーションを適用する場合など、 <xref:System.Windows.FrameworkElement.Height%2A> オブジェクトの \(たとえば、200 をする場合は 0 から、 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> の <xref:System.Windows.Media.Animation.EasingMode.EaseIn>\) の負の値を補間するアニメーションを試みます <xref:System.Windows.FrameworkElement.Height%2A> するエラーがスローされます。  
  
 だけでなく他のいくつかのイージング関数は <xref:System.Windows.Media.Animation.BackEase> これを確認する次の Silverlight サンプルを使用します。  
  
 [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 継承することで、独自のイージング関数を作成する実行時に含まれるイージング関数を使用するだけでなく <xref:System.Windows.Media.Animation.EasingFunctionBase>です。  
  
<a name="xamlObjectElementUsage_BackEase"></a>   
## XAML オブジェクト要素の使用方法  
  
```  
<BackEase .../>  
```  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Windows.Media.Animation.BackEase> イージング関数を <xref:System.Windows.Media.Animation.DoubleAnimation> 先頭とアニメーションの最後に、少し縮小するアニメーションを作成します。  
  
 [!code-xml[BackEase\_scale\#BackEase\_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]
 [!code-xml[BackEase\_scale\#BackEase\_scale](~/samples/snippets/xaml/VS_Snippets_Wpf/backease_scale/xaml/window1.xaml#backease_scale)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Animation.BackEase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Amplitude">
      <MemberSignature Language="C#" Value="public double Amplitude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Amplitude" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BackEase.Amplitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられている取り消しの振幅、 <see cref="T:System.Windows.Media.Animation.BackEase" /> アニメーションです。</summary>
        <value>関連付けられている取り消しの振幅、 <see cref="T:System.Windows.Media.Animation.BackEase" /> アニメーションです。 この値は、0 以上でなければなりません。  
  
 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BackEase.AmplitudeProperty>  
  
 振幅が大きいほど、アニメーションの前後に収縮が大きくします。  
  
 943d9c77-9201-4544-9683-2ab67b62a598  
  
<a name="xamlAttributeUsage_Opacity"></a>   
## XAML 属性の使用方法  
  
```  
<object Amplitude="double" .../>  
```  
  
   
  
## 例  
 次の例では、適用、 <xref:System.Windows.Media.Animation.BackEase> イージング関数を <xref:System.Windows.Media.Animation.DoubleAnimation> 先頭とアニメーションの最後に、少し縮小するアニメーションを作成します。  
  
 [!code-xml[BackEase\_scale\#BackEase\_scale](~/samples/snippets/csharp/VS_Snippets_Wpf/backease_scale/CS/window1.xaml#backease_scale)]
 [!code-xml[BackEase\_scale\#BackEase\_scale](~/samples/snippets/xaml/VS_Snippets_Wpf/backease_scale/xaml/window1.xaml#backease_scale)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmplitudeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AmplitudeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AmplitudeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。 派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</summary>
        <returns>新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.  
  
   
  
## 例  
 The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample\_procedural\#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample\_procedural\#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">アニメーションの正規化された時間 \(進行状況\)。</param>
        <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできるイージング関数のロジック部分を提供します。</summary>
        <returns>変換された進行状況を表す double 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  
  
 You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms **parameterReference tag is not supported!!!!**  
 for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>