<Type Name="ITree&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;">
  <TypeSignature Language="C#" Value="public interface ITree&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITree`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.ITree`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">被制御シーケンス内の要素の主要なコンポーネントの型。</typeparam>
    <typeparam name="TValue">被制御シーケンス内の要素の値の構成要素の型。</typeparam>
    <summary>STL\/CLR のインターフェイスを定義 <c>hash_map</c>, 、<c>hash_multimap</c>, 、<c>hash_set</c>, 、および <c>hash_multiset</c> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 詳細については、「[hash\_map \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/c3cfc69b-04c6-42ae-a30e-0eda953fe883)」、「[hash\_multimap \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/cd78687b-8a05-48e0-9d22-8b8194ae3b0b)」、「[hash\_set \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/d110e356-ba3e-4e52-9e2d-d997bf975c96)」、および「[hash\_multiset \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/8462bd21-6829-4dd3-ac81-c42d6fdf92f0)」を参照してください。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>被制御シーケンスの先頭を指定します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::begin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/b2ff4605-ac37-4456-8299-b3bcccdbe45a)」、「[hash\_multimap::begin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/7f8d51c1-8183-4dc1-9dfc-f58dbf594c42)」、「[hash\_set::begin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1bd02b6b-0e24-4f42-ad13-fd7776f7f811)」、および「[hash\_multiset::begin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/f03fc205-cbc9-4054-ac6d-41ad526edfea)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての要素をコンテナーから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::clear \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/a2782336-f130-4e27-923e-7dd43c542d30)」、「[hash\_multimap::clear \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/8ad99f08-93b3-42b7-be07-f9a8ec556554)」、「[hash\_set::clear \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/9f38b72a-5db8-485a-b41a-7d47ac57f4a9)」、および「[hash\_multiset::clear \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/2253d5e3-38e6-4ad4-aff4-b546fe95830f)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">検索対象のキー値。</param>
        <summary>指定したキーと一致する要素の数を検索します。</summary>
        <returns>同じキーを持つ被制御シーケンス内の要素の数<paramref name="_Keyval" />です。 これを使用するには、被制御シーケンス内現在指定されたキーと一致する要素の数を決定します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::count \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1d02f764-d24f-4c8c-8a62-63074fe49aa8)」、「[hash\_multimap::count \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/a4bc5b19-e025-4063-9797-304ab4ba08aa)」、「[hash\_set::count \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/99dbaef5-64fd-4bef-bac4-a6072dd231f1)」、および「[hash\_multiset::count \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/2b31e6b6-3f2c-4042-a06d-90d3074aad43)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テスト要素が存在しないかどうかは、コンテナーに存在します。</summary>
        <returns>
          <see langword="true" /> コンテナーに要素があるない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::empty \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/2a145e16-a48a-4304-8fa6-5b2361693083)」、「[hash\_multimap::empty \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/5fd29e90-e33a-460f-9d42-491b82dbaa40)」、「[hash\_set::empty \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/7843eb9a-067b-4339-8637-5401b637c6d0)」、および「[hash\_multiset::empty \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e1c738eb-9ac9-426b-88b0-2997c9476001)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>被制御シーケンスの末尾を指定します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::end \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bda12a48-cc2b-426f-a4e8-992c88f61736)」、「[hash\_multimap::end \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e9354c40-6d48-4882-aaed-ccd9987f24a9)」、「[hash\_set::end \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/957de04e-fdc1-4295-ba25-8b0ad1ea97de)」、および「[hash\_multiset::end \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/6f4b222c-2f82-445e-80e5-6e2afd233d4b)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;&amp;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">検索対象のキー値。</param>
        <summary>指定したキーに一致する範囲を検索します。</summary>
        <returns>反復子のペアです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::equal\_range \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/9b9a18b8-42fd-4d17-91bd-df85e583cf61)」、「[hash\_multimap::equal\_range \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/3ea11e31-d4af-4d2e-a80b-eafe12c97d0c)」、「[hash\_set::equal\_range \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/502af4c5-f71e-44cf-a180-21e9da4b50ff)」、および「[hash\_multiset::equal\_range \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/a4141d7e-4964-4c78-8989-ae1d1258b50a)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コンテナーから要素を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1d2a79aa-62f7-461c-8f7c-7b660eb189be)」、「[hash\_multimap::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/663c67f6-8070-47db-abdc-58f7ace69736)」、「[hash\_set::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/620998a0-00c9-4be6-899b-2d71661375b6)」、および「[hash\_multiset::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bddd329d-aece-4b93-8355-005351c3aa45)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">消去するキー値。</param>
        <summary>指定したキーと一致するコンテナーから要素を削除します。</summary>
        <returns>削除された要素の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1d2a79aa-62f7-461c-8f7c-7b660eb189be)」、「[hash\_multimap::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/663c67f6-8070-47db-abdc-58f7ace69736)」、「[hash\_set::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/620998a0-00c9-4be6-899b-2d71661375b6)」、および「[hash\_multiset::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bddd329d-aece-4b93-8355-005351c3aa45)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">消去する要素を指す反復子。</param>
        <summary>指定された反復子によって指定された要素をコンテナーから削除します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1d2a79aa-62f7-461c-8f7c-7b660eb189be)」、「[hash\_multimap::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/663c67f6-8070-47db-abdc-58f7ace69736)」、「[hash\_set::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/620998a0-00c9-4be6-899b-2d71661375b6)」、および「[hash\_multiset::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bddd329d-aece-4b93-8355-005351c3aa45)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_First_iter">消去する範囲の先頭を指す反復子。</param>
        <param name="_Last_iter">消去する範囲の直後の位置を指す反復子。</param>
        <summary>指定された反復子間の要素をコンテナーから削除します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1d2a79aa-62f7-461c-8f7c-7b660eb189be)」、「[hash\_multimap::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/663c67f6-8070-47db-abdc-58f7ace69736)」、「[hash\_set::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/620998a0-00c9-4be6-899b-2d71661375b6)」、および「[hash\_multiset::erase \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bddd329d-aece-4b93-8355-005351c3aa45)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">検索対象のキー値。</param>
        <summary>指定したキーに一致する要素を検索します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::find \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/53ff8d57-2ea4-485e-9419-aed5e3f5affb)」、「[hash\_multimap::find \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/ce839c5e-b8c5-434e-9cc0-e4c6ee6a6bb3)」、「[hash\_set::find \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/758b7438-ef15-4af0-8001-a1126d5e9a9e)」、および「[hash\_multiset::find \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/fbedeb37-242e-4c2a-b1f8-234bcfd9cd25)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コンテナーに要素を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/52926ec7-ad4e-4791-a043-46136ee40a69)」、「[hash\_multimap::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/51cd98b0-c959-4a44-b914-582c00681bd7)」、「[hash\_set::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7)」、および「[hash\_multiset::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e7254f30-a514-4ddc-bf53-38aafbe9e8eb)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.Generic.IEnumerable&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.Generic.IEnumerable&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">コンテナーに挿入する列挙体。</param>
        <summary>指定された列挙をコンテナーに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/52926ec7-ad4e-4791-a043-46136ee40a69)」、「[hash\_multimap::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/51cd98b0-c959-4a44-b914-582c00681bd7)」、「[hash\_set::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7)」、および「[hash\_multiset::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e7254f30-a514-4ddc-bf53-38aafbe9e8eb)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First">挿入する要素の範囲の先頭を指す反復子。</param>
        <param name="_Last">挿入する要素の範囲のすぐ後に要素を指す反復子。</param>
        <summary>指定された反復子によって指定された要素をコンテナーに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/52926ec7-ad4e-4791-a043-46136ee40a69)」、「[hash\_multimap::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/51cd98b0-c959-4a44-b914-582c00681bd7)」、「[hash\_set::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7)」、および「[hash\_multiset::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e7254f30-a514-4ddc-bf53-38aafbe9e8eb)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;&amp;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Val">コンテナーに挿入するキー値。</param>
        <summary>指定した値をコンテナーに追加します。</summary>
        <returns>反復子のペアです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/52926ec7-ad4e-4791-a043-46136ee40a69)」、「[hash\_multimap::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/51cd98b0-c959-4a44-b914-582c00681bd7)」、「[hash\_set::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7)」、および「[hash\_multiset::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e7254f30-a514-4ddc-bf53-38aafbe9e8eb)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1 modreq(System.Runtime.CompilerServices.IsByValue) _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">要素を挿入するコンテナーの場所を指定する反復子。 これはヒントにすぎないとパフォーマンスを向上させるために使用します。 要素をこの場所に挿入しない可能性があります。</param>
        <param name="_Val">コンテナーに挿入するキー値。</param>
        <summary>指定した要素をコンテナーに追加します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/52926ec7-ad4e-4791-a043-46136ee40a69)」、「[hash\_multimap::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/51cd98b0-c959-4a44-b914-582c00681bd7)」、「[hash\_set::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/0a9bc9aa-012e-4101-9e8c-f1f4b6b76af7)」、および「[hash\_multiset::insert \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e7254f30-a514-4ddc-bf53-38aafbe9e8eb)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>被制御シーケンスを並べ替えに使用される順序付けのデリゲートを返します。 2 つのキーの比較に使用するとします。</summary>
        <returns>被制御シーケンスを並べ替えに使用される順序付けのデリゲート。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::key\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/08bd31cc-3a7c-49a3-ac48-089262b3bd44)」、「[hash\_multimap::key\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/221d0bfe-19ad-4c34-9b10-77921be32459)」、「[hash\_set::key\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/d5dc46c3-c2ee-4591-8f03-d8c9d3df0519)」、および「[hash\_multiset::key\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/b9653dd2-20f3-4ef3-875f-265749839ba6)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">検索対象のキー値。</param>
        <summary>指定したキーと一致する要素の範囲の先頭を検索します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::lower\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/7c88987a-9c77-4874-8052-192a148abbf1)」、「[hash\_multimap::lower\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/c61091ef-8364-4447-bdd2-a402cbc05f05)」、「[hash\_set::lower\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/54fe8ee5-1977-4192-9cc6-b51e84b03a16)」、および「[hash\_multiset::lower\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/891898fa-c9e8-4132-a71d-36e5141793f1)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>反転被制御シーケンスの先頭を指定します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::rbegin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e3b6c4d5-9482-471e-b5fc-70331b082a9b)」、「[hash\_multimap::rbegin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/f5ce0614-3c73-4cec-9fa2-efadf0fd36c7)」、「[hash\_set::rbegin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/1f2ff4ed-8557-40cf-8e61-816563acc43e)」、および「[hash\_multiset::rbegin \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/69a06d99-3262-495b-9956-5f155162da33)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>反転被制御シーケンスの末尾を指定します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::rend \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/87fb2a06-c92b-4d86-855d-22f5c04aabdb)」、「[hash\_multimap::rend \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/7cbed963-7615-40bf-80f2-37b878a64453)」、「[hash\_set::rend \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/12764bf1-ff3e-48db-a6ef-fe120187bc4e)」、および「[hash\_multiset::rend \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/6d007ac9-18cc-4b51-8384-a4ff65d23e97)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コンテナー内の要素の数をカウントします。</summary>
        <returns>被制御シーケンスの長さ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::size \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/5eb91502-1b11-4703-b473-eb609c181b74)」、「[hash\_multimap::size \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/6937c980-5952-48bf-b411-81ab03b2f940)」、「[hash\_set::size \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/e006590e-8710-4294-b3a3-dcded0668a24)」、および「[hash\_multiset::size \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/45f1f35e-35c4-4e39-8485-0786c1de22e3)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.ITree`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">コンテンツの交換に使用するコンテナーです。</param>
        <summary>2 つのコンテナーのコンテンツを交換します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::swap \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/bc1349e0-9be2-4767-a87b-4834615cb52a)」、「[hash\_multimap::swap \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/4baa60c2-865a-4e17-acd5-01b7c3c5cd44)」、「[hash\_set::swap \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/6476e48f-4744-486d-b028-cf0a048acd4d)」、および「[hash\_multiset::swap \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/b79372ab-ca51-494a-89cf-4e2da3ee3ff7)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">検索するキー値。</param>
        <summary>指定したキーと一致する要素の範囲の終了日を検索します。</summary>
        <returns>反復子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::upper\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/f83e88b4-e15e-49d5-90e4-cf7360c27c30)」、「[hash\_multimap::upper\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/4fa58df6-63ec-411d-bcf9-301d3c88569a)」、「[hash\_set::upper\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/dc8815f1-8b45-4f3d-a51f-54050d434d8f)」、および「[hash\_multiset::upper\_bound \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/d5be0d79-ae60-42bb-8a53-051bc374407d)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>被制御シーケンスを並べ替えに使用される順序付けのデリゲートを返します。</summary>
        <returns>被制御シーケンスを並べ替えに使用される順序付けのデリゲート。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「[hash\_map::value\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/b11a2dee-07e8-450c-8f85-979c0a15ae64)」、「[hash\_multimap::value\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/ec6108b8-a529-499b-bc7f-dce41f5b6175)」、「[hash\_set::value\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/7ef381ea-438b-48ce-b0cb-96d844ea5df7)」、および「[hash\_multiset::value\_comp \(STL\/CLR\)](http://msdn.microsoft.com/ja-jp/c5b25ded-9b27-43d5-9821-3f6e17338919)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>