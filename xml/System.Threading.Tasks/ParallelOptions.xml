<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>\[メソッドの操作を構成するオプションを格納、 <see cref="T:System.Threading.Tasks.Parallel" /> クラスです。</summary>
    <remarks>To be added.</remarks>
    <threadsafe>コンス トラクターは、スレッド セーフですし、複数のインスタンスを構築する同時に複数のスレッドが使用可能性があります。 その他のパブリック メンバーの中は、スレッド セーフです。</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Threading.Tasks.ParallelOptions" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターでは、既定値を持つインスタンスを初期化します。<xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> どの程度の並列処理を使用しないでくださいで設定した上限がないことを示す\-1 に初期化されます。<xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> 取り消せないトークンに初期化し、 <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> は、既定のスケジューラ \(TaskScheduler.Default\) に初期化します。  
  
 インスタンスのプロパティの set アクセサーを使用してこれらの既定値はすべて上書きされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Threading.CancellationToken" /> に関連付けられた <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンス。</summary>
        <value>このインスタンスに関連付けられているトークンです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 提供する、 <xref:System.Threading.CancellationToken> に、 <xref:System.Threading.Tasks.Parallel> メソッドは、早期に終了できない操作を使用します。 操作の外部のコードは、トークンを取り消すことがし、スローすることによって早期終了可能性があります、操作が設定されているトークンを監視する場合、 <xref:System.OperationCanceledException>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これによって有効になっている同時実行タスクの最大数を取得または <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンス。</summary>
        <value>並列処理の最大限度を表す整数です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> プロパティ同時操作の実行の数に影響を与えます <xref:System.Threading.Tasks.Parallel> これを渡されるメソッド呼び出し <xref:System.Threading.Tasks.ParallelOptions> インスタンス。 正のプロパティの値は、値に設定する同時操作の数を制限します。 \-1 の場合、同時に実行している操作の数に制限はありません。  
  
 既定では、 <xref:System.Threading.Tasks.Parallel.For%2A> と <xref:System.Threading.Tasks.Parallel.ForEach%2A> が、多くのスレッド、基になるスケジューラでは、変更することは利用 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> のみの既定の制限数の同時実行タスクが使用されます。  
  
 一般に、この設定を変更する必要はありません。 ただし、このような高度な使用シナリオで明示的に設定することもできます。  
  
-   わかっている場合を使用している特定のアルゴリズムは、コア数を超えた拡張不十分です。 さらにコアのサイクルを節約するためにプロパティを設定することができます。  
  
-   複数のアルゴリズムを同時に実行しているし、手動で定義する各アルゴリズムが利用できるシステムの量。 設定することができます、 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> ごとの値。  
  
-   スレッド プールのヒューリスティックが適切に使用するスレッド数を特定できないとスレッドが多すぎるを挿入することになります。 たとえば、実行時間の長いループ本体のイテレーションでは、スレッド プールが妥当な進行状況、ライブロック、またはデッドロックの相違は区別できない可能性があり、パフォーマンスを向上させるために追加されたスレッドを解放できないことができない可能性があります。 この場合、スレッドの適切な数よりも多く使用しないようにすることを確認するプロパティを設定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティは、0 または\-1 未満の値に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Threading.Tasks.TaskScheduler" /> に関連付けられた <see cref="T:System.Threading.Tasks.ParallelOptions" /> インスタンス。 このプロパティを null に設定すると、現在のスケジューラを使用することを示します。</summary>
        <value>このインスタンスに関連付けられているタスク スケジューラー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>