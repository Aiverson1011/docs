<Type Name="OracleRowUpdatingEventHandler" FullName="System.Data.OracleClient.OracleRowUpdatingEventHandler">
  <TypeSignature Language="C#" Value="public delegate void OracleRowUpdatingEventHandler(object sender, OracleRowUpdatingEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OracleRowUpdatingEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleRowUpdatingEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Data.OracleClient.OracleRowUpdatingEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納している <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" />。</param>
    <summary>処理するメソッドを表す、 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> のイベント、 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハンドラーが、任意の処理を実行する必要はありませんし、例外を生成するか、呼び出し元のメソッドに反映されるまでの例外を許可するコードを避ける必要があります。 呼び出し元に届くすべての例外は無視されます。  
  
 ハンドラーが使える、 <xref:System.Data.OracleClient.OracleRowUpdatingEventArgs> 更新プログラムの処理に影響を与える。 たとえば、ハンドラーは、残りのすべての行の更新をスキップしたり、現在の行の更新をスキップすることもできます。 データ ソースから受信した順序で行を更新することに注意してください。  
  
 <xref:System.Data.OracleClient.OracleRowUpdatingEventArgs> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>