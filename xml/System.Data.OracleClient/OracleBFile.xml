<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>マネージ表す <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトで、Oracle を使用するように設計 <see langword="BFILE" /> データ型。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Oracle `BFILE` データ型は、Oracle `LOB` を 4 ギガバイトの最大サイズのバイナリ データへの参照を含むデータ型。 Oracle `BFILE` 異なります `LOB` データ型の代わりに、オペレーティング システムで、サーバー上の物理ファイルにそのデータが格納されることにします。 なお、 `BFILE` データ型がデータに読み取り専用のアクセスを提供します。 そのため、書き込み指向のメソッドを継承、 <xref:System.IO.Stream> クラスがサポートされていません。  
  
 他の特性、 `BFILE` から区別するためのデータ型、 `LOB` データ型はできることです。  
  
-   非構造化データの保持。  
  
-   サーバー側チャンキングのサポート。  
  
-   参照コピーのセマンティクスの使用。 上のコピー操作を行う場合など、 `BFILE`, だけ、 `BFILE` ロケーター \(つまり、ファイルへの参照\) をコピーします。 ファイル内のデータはコピーされません。  
  
 `BFILE` を参照するために使用するデータの種類 `LOB`、大きいサイズになっているのため、データベースに格納する実際的でありません。 使用するためのクライアント、サーバー、および通信のオーバーヘッドは、 `BFILE` データ型と比較して、 `LOB` データ型。 アクセスする方が効率的です、 `BFILE` のみ少量のデータを取得する必要がある場合。 Access データベースに常駐する方が効率的である `LOB`s 全体のオブジェクトを取得する必要がある場合。  
  
 NULL 以外 <xref:System.Data.OracleClient.OracleBFile> オブジェクトが基になる物理ファイルの場所を定義する 2 つのエンティティに関連します。  
  
-   Oracle DIRECTORY オブジェクト。ファイル システムのディレクトリに対するデータベースのエイリアスです。  
  
-   基になる物理ファイルのファイル名。このファイルは、DIRECTORY オブジェクトに関連付けられたディレクトリに配置されています。  
  
 後に、 `BFILE` が作成されるの形式で、ロケーターを取得することができます、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトを使用して、 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> または <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> メソッドです。  
  
 取得する、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトを呼び出す、 <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> メソッドです。  
  
 物理ファイルを <xref:System.Data.OracleClient.OracleBFile> オブジェクトが関連付けられているとする必要はありませんがアクセスしようとするまで存在します。 アプリケーションをバインドする <xref:System.Data.OracleClient.OracleBFile> に存在しないファイルの \[予期される場所に物理ファイルを作成し、呼び出す <xref:System.Data.OracleClient.OracleBFile.Read%2A>です。  
  
 アクセス、閉じられた試行 <xref:System.Data.OracleClient.OracleBFile> を使用して、 <xref:System.Data.OracleClient.OracleBFile.Read%2A> または <xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッド再度、 <xref:System.Data.OracleClient.OracleBFile> 自動的にストリーム配信します。  
  
 次の c\# の例では、作成する方法を示しています、 `BFILE` 、Oracle では、テーブルし、の形式で取得、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトです。 例では、使用、 <xref:System.Data.OracleClient.OracleDataReader> オブジェクトおよび <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> と <xref:System.Data.OracleClient.OracleBFile.Read%2A> メソッドです。  
  
 [!code-csharp[DataWorks OracleClient.BFile\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 作成と、Oracle の使用の詳細については `BFILE`, 、適切な Oracle のマニュアルを参照してください。  
  
> [!NOTE]
>  `BeginWrite`, 、`EndWrite`, 、および `WriteByte` メソッドから継承されますが、 `System.IO.Stream` クラス、ためにサポートされていません、 `BFILE` データ型は読み取り専用です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see langword="BFILE" /> ストリームを読み取ることができます。</summary>
        <value>
          <see langword="false" /> 場合、 <see langword="BFILE" /> 終了または破棄。 それ以外の場合は、 <see langword="true" />です。 常に <see langword="true" /> の <see cref="F:System.Data.OracleClient.OracleBFile.Null" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前方シークおよび旧バージョンとシーク操作かどうかを示す値を取得を実行できます。</summary>
        <value>
          <see langword="false" /> 場合、 <see langword="BFILE" /> 終了または破棄。 それ以外の場合は、 <see langword="true" />です。 常に <see langword="true" /> の <see cref="F:System.Data.OracleClient.OracleBFile.Null" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトが書き込みをサポートするかどうかを示す値を取得します。</summary>
        <value>常に返します <see langword="false" /> ため、Oracle <see langword="BFILE" /> データ型は読み取り専用です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコピーを作成する <see cref="T:System.Data.OracleClient.OracleBFile" /> 元と同じ物理ファイルに関連付けられているオブジェクト。</summary>
        <returns>新しい <see cref="T:System.Data.OracleClient.OracleBFile" /> 元と同じ物理ファイルに関連付けられたオブジェクト <see langword="OracleBFile" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいプロパティ <xref:System.Data.OracleClient.OracleBFile> オブジェクトが最初に元のオブジェクトと同じ値を持ちます。 ただし後、 <xref:System.Data.OracleClient.OracleBFile.Clone%2A> が完了したら、各 <xref:System.Data.OracleClient.OracleBFile> オブジェクトは、もう一方から独立しています。 などの値を変更する、 <xref:System.Data.OracleClient.OracleBFile.Position%2A> 元のプロパティ <xref:System.Data.OracleClient.OracleBFile> の値を変更しない <xref:System.Data.OracleClient.OracleBFile.Position%2A> にコピーします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Data.OracleClient.OracleConnection" /> のこのインスタンスで使用される、 <see cref="T:System.Data.OracleClient.OracleBFile" />です。</summary>
        <value>データ ソースへの接続。 既定値は、null 値です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">変換先 <see cref="T:System.Data.OracleClient.OracleLob" /></param>
        <summary>この全体の内容をコピー <see cref="T:System.Data.OracleClient.OracleBFile" /> 変換先の先頭に <see cref="T:System.Data.OracleClient.OracleLob" />します。</summary>
        <returns>コピーされたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ソースの基になるデータ型 <xref:System.Data.OracleClient.OracleBFile> と変換先 <xref:System.Data.OracleClient.OracleLob> 互換である必要があります。 たとえば、先のバイナリ データをコピーすることはできません <xref:System.Data.OracleClient.OracleLob> 文字データ型であります。  
  
 変換先に書き込みアクセス権が必要 <xref:System.Data.OracleClient.OracleLob> の <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 操作が正常に実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">宛先 <see langword="OracleLob" /> は、null オブジェクト参照です。</exception>
        <exception cref="T:System.InvalidOperationException">マップ先は、null <see langword="OracleLob" />します。  
  
 または  
  
 この接続 <see langword="OracleBFile" /> が関連付けられている終了します。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> オブジェクトが終了または破棄されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">コピー先 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
        <param name="destinationOffset">コピー先となるまでのオフセット。</param>
        <summary>この全体の内容をコピー <see cref="T:System.Data.OracleClient.OracleBFile" /> 先の <see cref="T:System.Data.OracleClient.OracleLob" /> 指定したオフセット。</summary>
        <returns>コピーされたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ソースの基になるデータ型 <xref:System.Data.OracleClient.OracleBFile> と変換先 <xref:System.Data.OracleClient.OracleLob> 互換である必要があります。 たとえば、先のバイナリ データをコピーすることはできません <xref:System.Data.OracleClient.OracleLob> 文字データ型であります。  
  
 変換先に書き込みアクセス権が必要 <xref:System.Data.OracleClient.OracleLob> の <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 操作が正常に実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">宛先 <see langword="OracleLob" /> は、null オブジェクト参照です。</exception>
        <exception cref="T:System.InvalidOperationException">マップ先は、null <see langword="OracleLob" />します。  
  
 または  
  
 この接続 <see langword="OracleBFile" /> が関連付けられている終了します。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> オブジェクトが終了または破棄されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">コピー元のオフセット。</param>
        <param name="destination">コピー先 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
        <param name="destinationOffset">コピー先となるまでのオフセット。</param>
        <param name="amount">コピーするバイトのデータの数量。</param>
        <summary>これをコピーします。 <see cref="T:System.Data.OracleClient.OracleBFile" /> 先の <see cref="T:System.Data.OracleClient.OracleLob" /> と、指定したデータの量、ソースのオフセットとコピー先のオフセット。</summary>
        <returns>コピーされたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ソースの基になるデータ型 <xref:System.Data.OracleClient.OracleBFile> と変換先 <xref:System.Data.OracleClient.OracleLob> 互換である必要があります。 たとえば、先のバイナリ データをコピーすることはできません <xref:System.Data.OracleClient.OracleLob> 文字データ型であります。  
  
 変換先に書き込みアクセス権が必要 <xref:System.Data.OracleClient.OracleLob> の <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 操作が正常に実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">データ サイズのパラメーターの値は、0 未満か 4 ギガバイトより大きいです。</exception>
        <exception cref="T:System.ArgumentNullException">宛先 <see langword="OracleLob" /> は、null オブジェクト参照です。</exception>
        <exception cref="T:System.InvalidOperationException">マップ先は、null <see langword="OracleLob" />します。  
  
 または  
  
 この接続 <see langword="OracleBFile" /> が関連付けられている終了します。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> オブジェクトが終了または破棄されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これで、ディレクトリ オブジェクトの名前を取得、 <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが関連付けられています。</summary>
        <value>ディレクトリ オブジェクトの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 NULL 以外 <xref:System.Data.OracleClient.OracleBFile> オブジェクトが基になる物理ファイルの場所を定義する 2 つのエンティティに関連します。  
  
-   Oracle DIRECTORY オブジェクト。ファイル システムのディレクトリに対するデータベースのエイリアスです。  
  
-   基になる物理ファイルのファイル名。このファイルは、DIRECTORY オブジェクトに関連付けられたディレクトリに配置されています。  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> プロパティは、Oracle データベースからディレクトリ オブジェクトの名前を返します。  
  
 作成と、Oracle の使用の詳細については `BFILE`, 、適切な Oracle のマニュアルを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">呼び出そうと <see langword="DirectoryName" /> 、閉じられたのか、破棄される <see langword="OracleBFile" /> オブジェクトです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>物理ファイルを含んでいるかどうかを示す値を取得 <see langword="BFILE" /> オペレーティング システムにデータが存在します。</summary>
        <value>
          <see langword="true" /> 場合は、物理ファイルを含む <see langword="BFILE" /> データが存在する場合は <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが終了または破棄されます。</exception>
        <exception cref="T:System.InvalidOperationException">使用する接続、 <see langword="BFILE" /> が関連付けられているが閉じられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前を取得、 <see langword="BFILE" /> パスを含まない。</summary>
        <value>BFILE の名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleBFile.Null>, 、空の文字列が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが終了または破棄されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在サポートされていません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Data.OracleClient.OracleBFile" /> は、 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Data.OracleClient.OracleBFile" /> は、 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> ストリームです。 それ以外の場合 <see langword="false" />します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用する物理ファイルのバイト単位の長さを返す値を取得、 <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトが関連付けられています。</summary>
        <value>物理ファイルのバイトの長さを表す long 値。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">メソッドは、ストリームの終了または破棄された後に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Null 値を表す <see cref="T:System.Data.OracleClient.OracleBFile" /> 物理ファイルにバインドされていないオブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleBFile.Null> 比較操作を実行する場合に役に立ちます、 <xref:System.Data.OracleClient.OracleBFile> を null 値の許容を決定します。  
  
 読み取り操作を実行するしようとすると、 <xref:System.Data.OracleClient.OracleBFile.Null> オブジェクトは成功しますが、データが返されません。 書き込み操作を実行するしようとすると、 <xref:System.Data.OracleClient.OracleBFile.Null> オブジェクトには、例外が生成されます。 選択すると、 `BFILE` null 値を含む列を返します <xref:System.Data.OracleClient.OracleBFile.Null>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の位置を読み取り、現在の取得、 <see cref="T:System.Data.OracleClient.OracleBFile" /> ストリームします。</summary>
        <value>内の現在位置、 <see cref="T:System.Data.OracleClient.OracleBFile" /> ストリームします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ストリームの長さを超える位置へのシークはサポートされていません。  
  
 `Position` プロパティがないの追跡が消費される、スキップ、ストリーム、またはその両方からのバイト数。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">負の値またはストリームのサイズより大きい値の位置を設定しようとしました。</exception>
        <exception cref="T:System.ObjectDisposedException">メソッドは、ストリームの終了または破棄された後に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">バイト配列。 指定したバイト配列の値を持つが、バッファーに含まれているこのメソッドが戻るとき <c>offset</c> と \(<c>offset</c> \+ <c>count</c>\)、現在のソースから読み取られたバイトに置き換えします。</param>
        <param name="offset">現在のストリームから読み取ったデータの格納を開始する位置を示す <c>buffer</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
        <param name="count">現在のストリームから読み取る最大バイト数。</param>
        <summary>現在のバイトのシーケンスを読み取り <see cref="T:System.Data.OracleClient.OracleBFile" /> バイト数だけストリーム内の位置を読み取るストリーム。</summary>
        <returns>バッファーに読み取られた合計バイト数。 これは、操作によって、バイト数が、現時点ではないか、読み取れなかった場合、ファイルの末尾に到達したことを要求した場合のバイト数より小さくなる場合があります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> メソッドはの最大値を読み取る `count` 現在からのバイト ストリームし、保存 `buffer` 始点 `offset`します。 読み取るバイト数だけストリーム内の現在位置が高度なただし、例外が発生する場合は、ストリーム内の現在の位置は変更されません。[Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> 読み取られたバイト数を返します。 位置がストリームの末尾に現在場合にのみ、戻り値は 0 です。[Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> データが利用できないこと、少なくとも 1 バイトのデータを読み取るには、までにブロックされます。[Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> ファイルの末尾に到達した場合にのみ、0 を返します。[Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> ストリームの末尾に達していない場合でも、要求されたバイト数を返すことができます。  
  
 アクセス、閉じられた試行 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile> を使用して、 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> または [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッド再度、 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile> 自動的にストリーム配信します。  
  
 次の c\# の例では、Oracle テーブルには、このスキーマが前提とします。  
  
```  
(col1 number, col2 BFILE)  
```  
  
 この例で、 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Read%2A> と [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッドにアクセスする、 [Read メソッド \(Byte\<xref:System.Data.OracleClient.OracleBFile> オブジェクトです。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> と <paramref name="count" /> の合計が、バッファーの長さよりも大きくなっています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> が null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> または <paramref name="count" /> が負の値です。</exception>
        <exception cref="T:System.InvalidOperationException">使用する接続、 <see langword="BFILE" /> が関連付けられているが閉じられます。</exception>
        <exception cref="T:System.IO.IOException">I\/O エラーが発生しました。</exception>
        <exception cref="T:System.ObjectDisposedException">メソッドは、ストリームの終了または破棄された後に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">原点からのバイト オフセット。 場合 <c>offset</c> は負の場合、新しい位置よりも優先されますで指定した位置 <c>origin</c> で指定したバイト数だけ <c>offset</c>します。 場合 <c>offset</c> 0 の場合は、新しい位置で指定した位置になります <c>origin</c>します。 場合 <c>offset</c> が正の値であり、新しい位置で指定した位置に従います <c>origin</c> で指定したバイト数だけ <c>offset</c>します。</param>
        <param name="origin">新しい位置を取得するために使用する参照ポイントを示す <see langword="System.IO.SeekOrigin" /> 型の値。</param>
        <summary>現在の位置を設定 <see cref="T:System.Data.OracleClient.OracleBFile" /> ストリームします。</summary>
        <returns>現在のストリーム内の新しい位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `offset` は負の場合、新しい位置が必要で指定した位置の前に `origin` で指定したバイト数だけ `offset`します。 場合 `offset` 0 の場合は、新しい位置に指定した位置である必要は `origin`です。 場合 `offset` が正の値であり、新しい位置に指定した位置に従う必要が `origin` で指定したバイト数だけ `offset`します。  
  
 ストリームの長さを超える位置へのシークはサポートされていません。  
  
 アクセス、閉じられた試行 <xref:System.Data.OracleClient.OracleBFile> を使用して、 <xref:System.Data.OracleClient.OracleBFile.Read%2A> または <xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッド再度、 <xref:System.Data.OracleClient.OracleBFile> 自動的にストリーム配信します。  
  
 次の c\# の例では、Oracle テーブルには、このスキーマが前提とします。  
  
```  
(col1 number, col2 BFILE)  
```  
  
 この例で、 <xref:System.Data.OracleClient.OracleBFile.Read%2A> と <xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッドにアクセスする、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトです。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">負の値またはストリームのサイズより大きい値の位置を設定しようとしました。</exception>
        <exception cref="T:System.ObjectDisposedException">メソッドは、ストリームの終了または破棄された後に呼び出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">物理ファイルを格納しているディレクトリ オブジェクトの別名です。</param>
        <param name="file">オペレーティング システムでファイルの名前。</param>
        <summary>バインド、 <see cref="T:System.Data.OracleClient.OracleBFile" /> オペレーティング システムで別のファイルにオブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 操作が成功するトランザクション内である必要があります。 呼び出しているだけです <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 上、 `BFILE` 関連付けます、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトと別のファイルは Oracle のテーブルは更新されません。 呼び出した後、Oracle テーブルを更新する <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, 、呼び出す必要があります、 `Update` のメソッド、 <xref:System.Data.OracleClient.OracleDataAdapter> し、トランザクションをコミットします。  
  
 取得した後、 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> または <xref:System.Data.OracleClient.OracleBFile.FileName%2A> にキャッシュされるプロパティには、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトし、いずれかの複製による影響を受けません <xref:System.Data.OracleClient.OracleBFile> オブジェクトの呼び出しを <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, 、またはを変更して、 `BFILE` データベースにします。 つまりの実際の値を表すことがない、 `BFILE` サーバー内のオブジェクト。  
  
 さらに、いずれかのプロパティを取得する \(<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> または <xref:System.Data.OracleClient.OracleBFile.FileName%2A>\) をサーバーから取得してにキャッシュされている両方のプロパティ値により、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトです。  
  
 次の c\# の例では、Oracle テーブルには、このスキーマが前提とします。  
  
```  
(col1 number, col2 BFILE)  
```  
  
 この例で、 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, 、<xref:System.Data.OracleClient.OracleBFile.Read%2A> と <xref:System.Data.OracleClient.OracleBFile.Seek%2A> メソッドにアクセスする、 <xref:System.Data.OracleClient.OracleBFile> オブジェクトです。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">操作は、トランザクション内である必要があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">現在サポートされていません。</param>
        <summary>現在サポートされていません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">呼び出されたメソッドがサポートされていない場合、または呼び出された機能をサポートしないストリームに対して読み取り、シーク、または書き込みを行おうとした場合にスローされる例外。</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" /> を含む、 <see cref="T:System.Data.OracleClient.OracleBFile" /> データ。</summary>
        <value>
          <see cref="T:System.Array" /> 型の <see cref="T:System.Byte" /> を含む、 <see cref="T:System.Data.OracleClient.OracleBFile" /> データ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleBFile.Value%2A> プロパティには、全体が読み込まれる `BFILE` 一度に 1 つです。  
  
> [!NOTE]
>  使用する利点 `BFILE`s は大量のクライアント側のチャンク単位でデータを取得する機能です。 ただし、使用 <xref:System.Data.OracleClient.OracleBFile.Value%2A>, 、アプリケーションのオーバーヘッドを大幅に向上する可能性が 1 つの連続したチャンクとして BFILE 列のすべてのデータを取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">現在サポートされていません。</param>
        <param name="offset">現在サポートされていません。</param>
        <param name="count">現在サポートされていません。</param>
        <summary>現在サポートされていません。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">呼び出されたメソッドがサポートされていない場合、または呼び出された機能をサポートしないストリームに対して読み取り、シーク、または書き込みを行おうとした場合にスローされる例外。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>これからデータをコピー <see cref="T:System.Data.OracleClient.OracleBFile" /> 先の <see cref="T:System.Data.OracleClient.OracleLob" />です。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>