<Type Name="OracleDataReader" FullName="System.Data.OracleClient.OracleDataReader">
  <TypeSignature Language="C#" Value="public sealed class OracleDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ソースからデータ行の前方参照専用のストリームを読み取る手段を提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成する、 <xref:System.Data.OracleClient.OracleDataReader>, 、呼び出す必要があります、 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> のメソッド、 <xref:System.Data.OracleClient.OracleCommand> コンス トラクターを使用して直接ではなく、オブジェクトです。  
  
 データの読み取り中に、別のプロセスまたはスレッドによって結果セットに加えられた変更のユーザーに表示される場合があります、 <xref:System.Data.OracleClient.OracleDataReader>です。  
  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> 後に呼び出すことのできる唯一のプロパティには、 <xref:System.Data.OracleClient.OracleDataReader> が閉じられます。 場合によっては、呼び出す必要があります <xref:System.Data.OracleClient.OracleDataReader.Close%2A> を呼び出す <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>します。  
  
 1 つ以上 <xref:System.Data.OracleClient.OracleDataReader> がいつ開くことができます。  
  
 次のような Visual Basic の 2 つの例を使用する方法をデモンストレーションする、 <xref:System.Data.OracleClient.OracleDataReader> Oracle を取得する `REF CURSOR`です。 これらの例では、Oracle Scott\/tiger スキーマで定義され、次の PL\/SQL パッケージとパッケージ本体を必要とするテーブルを使用します。 例を使用するようにサーバーにこれらを作成する必要があります。  
  
 次の Oracle パッケージを Oracle サーバー上に作成します。  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR IN OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 Oracle サーバーで、次の Oracle パッケージ本体を作成します。  
  
```  
  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
/  
```  
  
 この Visual Basic の例を返す PL\/SQL ストアド プロシージャの実行、 `REF CURSOR` 、パラメーターとして値を読み取ります、 <xref:System.Data.OracleClient.OracleDataReader>です。  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369  
   command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader()  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
End Sub  
```  
  
 この Visual Basic の例を 2 つを返す PL\/SQL ストアド プロシージャを実行する `REF CURSOR` パラメーターを使用して値を読み取ります、 <xref:System.Data.OracleClient.OracleDataReader>です。  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim dataSet As New DataSet()  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
   command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader(CommandBehavior.CloseConnection)  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.NextResult()  
   While (reader.Read())  
        ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
 End Sub  
```  
  
 この c\# の例では、Oracle テーブルを作成し、データを読み込みます。 その後の例では、使用方法を示しますを実行する前にこの例を実行する必要があります、 <xref:System.Data.OracleClient.OracleDataReader> OracleType 構造を使用するデータにアクセスします。  
  
```csharp  
public void Setup(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   try  
   {  
      connection.Open();  
      OracleCommand command = connection.CreateCommand();  
      command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";  
      command.ExecuteNonQuery();  
      command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";  
      command.ExecuteNonQuery();  
      command.CommandText="SELECT * FROM OracleTypesTable";  
   }  
   catch(Exception)  
   {  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
 この c\# の例では、 <xref:System.Data.OracleClient.OracleDataReader> データにアクセスする、いくつかを使用して <xref:System.Data.OracleClient.OracleType> データを表示する構造体。  
  
```csharp  
public void ReadOracleTypesExample(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   connection.Open();  
   OracleCommand command = connection.CreateCommand();  
   try  
   {  
      command.CommandText = "SELECT * FROM OracleTypesTable";  
      OracleDataReader reader = command.ExecuteReader();  
      reader.Read();  
      //Using the Oracle specific getters for each type is faster than  
      //using GetOracleValue.  
      //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server  
      //and maps to OracleString.  
      OracleString oraclestring1 = reader.GetOracleString(0);  
      Console.WriteLine("OracleString " + oraclestring1.ToString());  
  
      //Second column, MyNumber, is a NUMBER data type in Oracle Server  
      //and maps to OracleNumber.  
      OracleNumber oraclenumber1 = reader.GetOracleNumber(1);  
      Console.WriteLine("OracleNumber " + oraclenumber1.ToString());  
  
      //Third column, MyDate, is a DATA data type in Oracle Server  
      //and maps to OracleDateTime.  
      OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);  
      Console.WriteLine("OracleDateTime " + oracledatetime1.ToString());  
  
      //Fourth column, MyRaw, is a RAW data type in Oracle Server and  
      //maps to OracleBinary.  
      OracleBinary oraclebinary1 = reader.GetOracleBinary(3);  
  
      //Calling value on a null OracleBinary throws  
      //OracleNullValueException; therefore, check for a null value.  
      if (oraclebinary1.IsNull==false)  
      {  
         foreach(byte b in oraclebinary1.Value)  
         {  
            Console.WriteLine("byte " + b.ToString());  
         }  
      }  
      reader.Close();  
   }  
   catch(Exception e)  
   {  
      Console.WriteLine(e.ToString());  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OracleClient.OracleConnection>, 、 <xref:System.Data.OracleClient.OracleCommand>, 、および <xref:System.Data.OracleClient.OracleDataReader>します。 この例をコンソールに出力データを読み取ります。 最後に、例、 <xref:System.Data.OracleClient.OracleDataReader>, 、 <xref:System.Data.OracleClient.OracleConnection>です。  
  
 [!code-csharp[Classic WebData OracleDataReader\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleDataReader\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.OracleClient.OracleDataReader" /> オブジェクトを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 1 つ以上 <xref:System.Data.OracleClient.OracleDataReader> がいつ開くことができます。  
  
> [!CAUTION]
>  呼び出す必要はありません `Close` または `Dispose` 接続では、 `DataReader`, 、またはその他のマネージ オブジェクトで、 `Finalize` クラスのメソッドです。 ファイナライザーでのみ、クラスが直接所有されているアンマネージ リソースを解放する必要があります。 クラスがアンマネージ リソースを所有していない場合は、クラス定義に `Finalize` メソッドを含めないでください。 詳細については、「[Garbage Collection](http://msdn.microsoft.com/ja-jp/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の行の入れ子の深さを示す値を取得します。</summary>
        <value>現在の行の入れ子の深さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The outermost table has a depth of zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の行の列の数を取得します。</summary>
        <value>有効なレコード セット 0; に配置されない場合それ以外の場合、現在のレコードの列の数。 既定値は \-1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 非表示フィールドを含めます。 非表示フィールドを除外するには、<xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> を使用します。  
  
 行を返さないクエリを実行すた後 <xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A> 0 を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">現在、データ ソースへの接続はありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値を Boolean として取得します。</summary>
        <returns>列の値を示すブール値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値をバイトとして取得します。</summary>
        <returns>バイトとして指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <param name="fieldOffset">読み取り操作の開始位置フィールド内のインデックス。</param>
        <param name="buffer2">バイトのストリームを読み取るバッファー。</param>
        <param name="bufferoffset">インデックス位置 <c>buffer</c> の書き込み操作を開始します。</param>
        <param name="length">読み取るバイト数。</param>
        <summary>指定したバッファー オフセットから始まる配列として指定した列オフセットからバイトのストリームをバッファーに読み込みます。</summary>
        <returns>実際に読み取られたバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [GetBytes メソッド \(Int32, Int64, Byte\<xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> フィールドで使用可能なバイト数を返します。 ほとんどの場合は、フィールドの正確な長さです。 ただし、返される数値フィールドの実際の長さよりも小さい場合あります `GetBytes` バイトを取得するフィールドからは既に使用されています。 これがある場合は、たとえば、 [GetBytes メソッド \(Int32, Int64, Byte\<xref:System.Data.OracleClient.OracleDataReader> をバッファーに大規模なデータ構造体を読み取り中です。 詳細については、次を参照してください。、 `SequentialAccess` 設定 [GetBytes メソッド \(Int32, Int64, Byte\<xref:System.Data.CommandBehavior>します。  
  
 Null の値であるバッファーを渡す場合 [GetBytes メソッド \(Int32, Int64, Byte\<xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> フィールドの長さをバイト単位で返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>文字として指定された列の値を取得します。</summary>
        <returns>文字として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 fieldOffset, char[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <param name="fieldOffset">読み取り操作の開始位置の行インデックス。</param>
        <param name="buffer2">データのコピー先のバッファー。</param>
        <param name="bufferoffset">インデックス位置 <c>buffer</c> の書き込み操作を開始します。</param>
        <param name="length">読み取る文字の数。</param>
        <summary>指定したバッファー オフセットを開始位置として、配列として、文字のストリームを指定した列オフセットからバッファーに読み取ります。</summary>
        <returns>実際に読み取られた文字数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [GetChars メソッド \(Int32, Int64, Char\<xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> フィールドに使用できる文字数を返します。 ほとんどの場合は、フィールドの正確な長さです。 ただし、返される数値フィールドの実際の長さよりも小さい場合あります `GetChars` フィールドから文字の取得は既に使用されています。 これがある場合は、たとえば、 [GetChars メソッド \(Int32, Int64, Char\<xref:System.Data.OracleClient.OracleDataReader> をバッファーに大規模なデータ構造体を読み取り中です。 詳細については、次を参照してください。、 `SequentialAccess` 設定 [GetChars メソッド \(Int32, Int64, Char\<xref:System.Data.CommandBehavior>します。  
  
 バッファーを渡す場合は、null 値です。[GetChars メソッド \(Int32, Int64, Char\<xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> フィールドの長さを文字数で返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>ソースのデータ型の名前を取得します。</summary>
        <returns>ソースのデータ型の名前。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値を <see langword="DateTime" /> オブジェクトとして取得します。</summary>
        <returns>指定した列の値、 <see langword="DateTime" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値を <see langword="Decimal" /> オブジェクトとして取得します。</summary>
        <returns>指定した列の値、 <see langword="Decimal" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値を倍精度浮動小数点値として取得します。</summary>
        <returns>倍精度浮動小数点数として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ リーダー内の行に対して反復処理を行うために使用できる <see cref="T:System.Collections.IEnumerator" /> を返します。</summary>
        <returns>データ リーダー内の行に対して反復処理を行うために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、明示的な列挙子を取得、foreach をサポートする言語では、構造、データ リーダー内の行を反復処理するために、直接ループ構造を使用する方が簡単です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>取得、 <see cref="T:System.Type" /> オブジェクトのデータ型です。</summary>
        <returns>
          <see cref="T:System.Type" /> オブジェクトのデータ型です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>単精度浮動小数点数として指定された列の値を取得します。</summary>
        <returns>単精度浮動小数点数として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値をグローバル一意識別子 \(GUID\) として取得します。</summary>
        <returns>GUID として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>16 ビット符号付き整数として指定された列の値を取得します。</summary>
        <returns>16 ビット符号付き整数として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>32 ビット符号付き整数として指定された列の値を取得します。</summary>
        <returns>32 ビット符号付き整数として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の値を 64 ビット符号付き整数として取得します。</summary>
        <returns>64 ビット符号付き整数として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定された列の名前を取得します。</summary>
        <returns>指定された列の名前を表す文字列。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOracleBFile">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleBFile GetOracleBFile(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleBFile" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleBinary">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleBinary GetOracleBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleBinary" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleBinary" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDateTime">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleDateTime GetOracleDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleDateTime" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleDateTime" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleLob">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleLob GetOracleLob (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleLob GetOracleLob(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleLob" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleMonthSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleMonthSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleNumber">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleNumber GetOracleNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleNumber" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleNumber" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleString">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleString GetOracleString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleString GetOracleString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleString" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleString" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleTimeSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> オブジェクトです。</summary>
        <returns>指定した列の値、 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValue">
      <MemberSignature Language="C#" Value="public object GetOracleValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOracleValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>Oracle の形式で指定された序数の列の値を取得します。</summary>
        <returns>返される Oracle 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る <xref:System.DBNull> null データベース列にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValues">
      <MemberSignature Language="C#" Value="public int GetOracleValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOracleValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">型の配列 <see cref="T:System.Object" /> 属性列のコピー先のです。</param>
        <summary>Oracle の形式で現在の行内のすべての属性列を取得します。</summary>
        <returns>配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ほとんどのアプリケーションに対して、 <xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A> メソッドは各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。  
  
 渡すことができます、 <xref:System.Object> 結果の行に含まれる列数よりも少ないを格納する配列。 データの量のみ、 <xref:System.Object> 配列は配列にコピーを保持します。 渡すことも、 <xref:System.Object> 、結果の行に含まれる列の数を超える長さの配列。  
  
 このメソッドが戻る <xref:System.DBNull> null データベース列にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前。</param>
        <summary>列の名前を指定して、列の序数を取得します。</summary>
        <returns>0 から始まる列序数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 大文字小文字の区別の参照を最初に実行します。 失敗した場合は、2 つ目の小文字を区別しない検索が行われます。 メソッドをスロー、 `IndexOutOfRange` 、0 から始まる列序数が見つからない場合に例外です。  
  
 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 小文字は区別されませんカタカナの全角します。  
  
 呼び出す効率的ではありませんので、序数に基づく参照は、名前による参照よりも効率的な <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> ループ内で。 代わりに、 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> とを整数の変数に結果をループ内で使用します。  
  
   
  
## 例  
 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> メソッドの使用方法を次の例に示します。  
  
 \[Visual Basic\]  
  
```  
Public Sub ReadOracleData(ByVal connectionString As String)  
  
    Dim queryString As String = "SELECT OrderID, CustomerID FROM Orders"  
    Dim connection As New OracleConnection(connectionString)  
    Dim command As New OracleCommand(queryString, connectionString)  
  
    connection.Open()  
  
    Dim reader As OracleDataReader = command.ExecuteReader()  
  
    Dim custIdCol As Integer = reader.GetOrdinal("CustomerID")  
  
    Do While reader.Read()  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol))  
    Loop  
  
    reader.Close()  
    connection.Close()  
End Sub  
```  
  
 \[C\#\]  
  
```  
public void ReadOracleData(string connectionString)  
{  
    string queryString = "SELECT OrderID, CustomerID FROM Orders";  
    OracleConnection connection = new OracleConnection(connectionString);  
    OracleCommand command = new OracleCommand(queryString,connection);  
  
    connection.Open();  
    OracleDataReader reader = command.ExecuteReader();  
  
    int custIdCol = reader.GetOrdinal("CustomerID");  
  
    while (reader.Read())  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol));  
  
    reader.Close();  
    connection.Close();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <see cref="T:System.Int32" />。</param>
        <summary>取得、 <see langword="Object" /> 基になるプロバイダーの特定のフィールド型の表現されています。</summary>
        <returns>取得、 <see cref="T:System.Object" /> 基になるプロバイダーの特定のフィールド型の表現されています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <see cref="T:System.Int32" />。</param>
        <summary>取得、 <see langword="Object" /> 基になるプロバイダーの特定のフィールド型の表現されています。</summary>
        <returns>取得、 <see cref="T:System.Object" /> 基になるプロバイダーの特定のフィールド型の表現されています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Object" /> の配列。</param>
        <summary>基になるプロバイダー固有の値の表現であるオブジェクトの配列を取得します。</summary>
        <returns>配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ほとんどのアプリケーションに対して、 <xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A> メソッドは各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。  
  
 渡すことができます、 <xref:System.Object> 結果の行に含まれる列数よりも少ないを格納する配列。 データの量のみ、 <xref:System.Object> 配列は配列にコピーを保持します。 渡すことも、 <xref:System.Object> 、結果の行に含まれる列の数を超える長さの配列。  
  
 このメソッドが戻る <xref:System.DBNull> null データベース列にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Data.DataTable" /> 、OracleDataReader の列メタデータを記述します。</summary>
        <returns>列メタデータを記述する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A> メソッドは、次の順序で各列についてのメタデータを返します。  
  
|DataReader 列|説明|  
|------------------|--------|  
|ColumnName|列の名前これは一意でない可能性があります。 列名を特定できない場合は、null 値が返されます。 この名前は、常に、現在のビューまたはコマンド テキスト内の列の最新の名前が反映されます。|  
|ColumnOrdinal|0 から始まる列の序数。 このコラムでは、null 値を含めることはできません。|  
|ColumnSize|\[列の値のできる最大の長さ。 固定長データ型を使用する列では、データ型のサイズです。|  
|Numericprecision プロパティ|場合 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 、数値データ型は、これは、列の最大有効桁数。 有効桁数は、列の定義によって異なります。`Float``Double` Oracle のデータ型はバイナリ有効桁数。|  
|NumericScale|場合 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> は数値データ型、小数点の右側にある数字の数です。`Float``Double` Oracle のデータ型はバイナリ スケールします。|  
|DataType|共通言語ランタイム型にマップ <xref:System.Data.OracleClient.OracleParameter.DbType%2A>します。|  
|IsLong|`true` 列にバイナリ長オブジェクト \(BLOB\) が含まれている場合は、非常に長いデータが含まれています。|  
|AllowDBNull|`true` コンシューマーが列を null 値に設定できる場合それ以外の場合、 `false`です。 列は、null 値に設定できない場合でも、null 値にすることがあります。|  
|IsUnique|`true`: で返されるベース テーブルのテーブルの 2 つの行 <xref:System.Data.Common.SchemaTableColumn.BaseTableName> \-この列の値が同じであることができます。**IsUnique** は必ず `true` 列がそれ自体でキーを構成する場合、またはこの列にのみ適用される UNIQUE 型の制約がある場合。`false`: 列は、ベース テーブルに重複する値を含めることができます。 この列の既定値は false です。|  
|IsKey|`true`: 列は、行セット内の列のセットの 1 つ、まとめると、行を一意に識別します。 列のセット **IsKey** true に設定が、行セット内の行を一意に識別する必要があります。 この一連の列が列の最小セットである必要はありません。 この列のセットは、ベース テーブルの主キー、unique 制約または一意のインデックスから生成された可能性があります。`false`列は、行を一意に識別する必要がないです。|  
|BaseTableName|テーブルまたは列を含むデータ ストア内のビューの名前。 ベース テーブル名が確認できない場合は、null 値。 この列の既定値は、null 値です。|  
|BaseColumnName|データ ストア内の列の名前。 これは異なる場合に返される列名、 **ColumnName** エイリアスが使用された場合は列です。 基になる列名が確認できない場合や行セットの列が派生したと一致しない、データの列ストアの場合は、null 値。 この列の既定値は、null 値です。|  
|BaseSchemaName|列を含むデータ ストア内のスキーマの名前。 ベース スキーマ名が確認できない場合は、null 値。 この列の既定値は、null 値です。|  
  
 結果セットの各列に対して行が返されます。  
  
> [!NOTE]
>  メタデータ列には、正しい情報が返されます。 は、呼び出す必要があります <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> で、 `behavior` パラメーターを設定する `KeyInfo`です。 それ以外の場合、既定では、null、または不適切なデータを返すスキーマのテーブル内の列のいくつかの可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>文字列として指定された列の値を取得します。</summary>
        <returns>文字列として指定された列の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>指定した列の値を取得、 <see langword="System.TimeSpan" />です。</summary>
        <returns>指定した列の値、 <see cref="T:System.TimeSpan" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> このメソッドを呼び出す前に null 値をチェックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">指定されたキャストは有効ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>ネイティブ形式で指定された序数の列の値を取得します。</summary>
        <returns>返される値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る <xref:System.DBNull> null データベース列にします。 このメソッドによって返される値は、Oracle の Number 型から .NET 10 進数型への変換の結果である可能性があります。 値が大きすぎて .NET Decimal に格納する場合は、このメソッドをスロー、 <xref:System.Data.OracleClient.OracleException> オーバーフロー例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException">.NET Decimal に格納される値が大きすぎます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">型の配列 <see cref="T:System.Object" /> 属性列のコピー先のです。</param>
        <summary>現在の行の列の値を持つオブジェクトの配列を設定します。</summary>
        <returns>配列に含まれる <see cref="T:System.Object" /> のインスタンスの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ほとんどのアプリケーションに対して、 <xref:System.Data.OracleClient.OracleDataReader.GetValues%2A> メソッドは各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。  
  
 渡すことができます、 <xref:System.Object> 結果の行に含まれる列数よりも少ないを格納する配列。 データの量のみ、 <xref:System.Object> 配列は配列にコピーを保持します。 渡すことも、 <xref:System.Object> 、結果の行に含まれる列の数を超える長さの配列。  
  
 このメソッドが戻る <xref:System.DBNull> null データベース列にします。 返された値、 <xref:System.Object> 配列は Oracle の Number 型から .NET 10 進数型への変換の結果である可能性があります。 値が大きすぎて .NET Decimal に格納する場合は、このメソッドをスロー、 <xref:System.Data.OracleClient.OracleException> オーバーフロー例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException">.NET Decimal に格納される値が大きすぎます。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 1 つまたは複数の行が含まれています。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 1 つまたは複数の行が含まれています。 そうしないと <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示すかどうか、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> が閉じられます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> が閉じているそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> 後に呼び出すことのできる唯一のプロパティには、 <xref:System.Data.OracleClient.OracleDataReader> が閉じられます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">0 から始まる列序数。</param>
        <summary>列に存在しないか見つからない値が含まれるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 指定された列の値に等しい場合 <see cref="T:System.DBNull" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エラーの発生を避けるためには、Get メソッドを型指定されたを呼び出す前に null 列値のチェックには、このメソッドを呼び出す \(たとえば、 <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, 、<xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>, など\)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">列の序数。</param>
        <summary>序数の列を指定して、ネイティブ形式で指定された列の値を取得します。</summary>
        <value>ネイティブ形式で指定された列の値。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">渡されたインデックスは 0 ~ の範囲外 <see cref="P:System.Data.IDataRecord.FieldCount" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">列の名前です。</param>
        <summary>列名を指定されたネイティブ形式で指定された列の値を取得します。</summary>
        <value>ネイティブ形式で指定された列の値。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">指定した名前の列は見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.NextResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>進めます、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 次の結果</summary>
        <returns>
          <see langword="true" /> 次の結果セットがある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する必要があります、 `REF CURSOR` このメソッドを呼び出すとします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Read" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>進めます、 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 次のレコードにします。</summary>
        <returns>
          <see langword="true" /> 複数の行がある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の位置、 <xref:System.Data.OracleClient.OracleDataReader> が最初のレコードより前です。 そのため、呼び出す必要があります <xref:System.Data.OracleClient.OracleDataReader.Read%2A> データへのアクセスを開始します。  
  
 1 つ以上 <xref:System.Data.OracleClient.OracleDataReader> がいつ開くことができます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OracleClient.OracleConnection>, 、 <xref:System.Data.OracleClient.OracleCommand>, 、および <xref:System.Data.OracleClient.OracleDataReader>します。 この例をコンソールに出力データを読み取ります。 最後に、例、 <xref:System.Data.OracleClient.OracleDataReader>, 、 <xref:System.Data.OracleClient.OracleConnection>です。  
  
 [!code-csharp[Classic WebData IDataReader.Read Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</summary>
        <value>変更、挿入、または削除された行の数。 SELECT ステートメントに達すると\-1影響を受けた行がないか、ステートメントが失敗した場合は 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> プロパティが設定されていないすべての行が読み取られ、 <xref:System.Data.OracleClient.OracleDataReader>です。  
  
 <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> 後に呼び出すことのできる唯一のプロパティには、 <xref:System.Data.OracleClient.OracleDataReader> が閉じられます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ネイティブ形式での列の値を取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>