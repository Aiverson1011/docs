<Type Name="BitmapEffect" FullName="System.Windows.Media.Effects.BitmapEffect">
  <TypeSignature Language="C#" Value="public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BitmapEffect extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.BitmapEffect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**メモ: この API は、互換性のために残されています。**旧式でない代替手段は、<see cref="T:System.Windows.Media.Effects.Effect" /> です。  
  
 ビットマップ効果を定義します。 派生クラスは、<see cref="T:System.Windows.Media.Visual" /> オブジェクトに適用できる効果を定義します \(<see cref="T:System.Windows.Controls.Button" /> や <see cref="T:System.Windows.Controls.Image" /> など\)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations, because this can degrade performance.  
  
> [!CAUTION]
>  Bitmap effects do not support partial trust execution. An application must have full trust permissions to use bitmap effects.  
  
 Scale transforms are applied to a visual before an effect is applied. In the event of a non\-uniform scale transform, the effect will use the larger of the scale values.  
  
 Updates to the visual tree of a <xref:System.Windows.Media.VisualBrush> will not propagate if a <xref:System.Windows.Media.Effects.BitmapEffect> is in the brush's parent chain. You can work around this limitation by forcing an update of the scene on the parent object of the effect. You can call <xref:System.Windows.UIElement.InvalidateVisual%2A> or include an animation to force a scene update.  
  
 Custom effects inherit this class to create a managed interface to the unmanaged effect. For more information, see the [Unmanaged BitmapEffect](https://msdn.microsoft.com/library/ms735092.aspx) API.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">for inheriting the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> class. Associated enumerations: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <block subset="none" type="overrides">
      <para>
        <see cref="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" /> must be overridden to initialize an unmanaged effect in managed code.  
  
 <see cref="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" /> must be overridden when an unmanaged effect has properties that the user can modify. Use this method in conjunction with <see cref="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" /> to update your unmanaged properties.</para>
    </block>
    <altmember cref="T:System.Windows.Media.Effects.BitmapEffectInput" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。 このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが \(ただし、これらは解決されなくなる場合があります\)、アニメーションやその現在の値はコピーしません。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects \(or any <xref:System.Windows.Freezable> object\). For convenience, this method shadows the inherited version.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.BitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects \(or any <xref:System.Windows.Freezable> object\). For convenience, this method shadows the inherited version.  
  
 For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmapEffectOuter">
      <MemberSignature Language="C#" Value="protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドルを作成、 [IMILBitmapEffect](http://msdn.microsoft.com/ja-jp/4bd5697d-bdde-4485-a05b-b3fea1403e16)カスタム エフェクトを初期化するために使用されるオブジェクト。</summary>
        <returns>ハンドル、 [IMILBitmapEffect](http://msdn.microsoft.com/ja-jp/4bd5697d-bdde-4485-a05b-b3fea1403e16)オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって、ユーザー設定の効果との対話のフレームワークが処理される、 [IMILBitmapEffect](http://msdn.microsoft.com/ja-jp/4bd5697d-bdde-4485-a05b-b3fea1403e16)オブジェクト。 外部の効果がを通じてカスタム効果で初期化されて、<xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>メソッドです。  
  
   
  
## 例  
 次の例の実装を示しています<xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A>を使用するの<xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter%2A>ラッパー効果オブジェクトを取得します。  
  
 [!code-csharp[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、アンマネージの効果の複製を作成します。</summary>
        <returns>アンマネージ効果の複製へのハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、オーバーライド、 <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> メソッドです。  
  
 [!code-csharp[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetOutput(class System.Windows.Media.Effects.BitmapEffectInput input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Windows.Media.Effects.BitmapEffectInput" />
      </Parameters>
      <Docs>
        <param name="input">効果を適用する入力。</param>
        <summary>返します。、 <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 効果が適用されると発生する、指定した <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" />します。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 効果を入力に適用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBitmapEffect">
      <MemberSignature Language="C#" Value="protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void InitializeBitmapEffect(class System.Runtime.InteropServices.SafeHandle outerObject, class System.Runtime.InteropServices.SafeHandle innerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outerObject" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="innerObject" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="outerObject">初期化する外部 IMILBitmapEffect ラッパー。</param>
        <param name="innerObject">内部 IMILBitmapEffectPrimitive。</param>
        <summary>指定した [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx) を使用して <see cref="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" /> から取得した [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) ハンドルを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A> method to initialize the wrapper object with the custom effect.  
  
 [!code-csharp[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/csharp/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/CSharp/RGBFilterBitmapEffect.cs#createunmanagedeffect)]
 [!code-vb[RGBFilterEffectAssembly\_snip\#CreateUnmanagedEffect](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RGBFilterEffectAssembly_snip/visualbasic/rgbfilterbitmapeffect.vb#createunmanagedeffect)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void SetValue(class System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="effect">効果を変更するプロパティを含むへのハンドル。</param>
        <param name="propertyName">変更するプロパティの名前。</param>
        <param name="value">プロパティの設定を使用する値。</param>
        <summary>指定したプロパティを指定した値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ためのヘルパー メソッドとしてこのメソッドは、 <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>です。 オーバーライドするときに <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, を使用して <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A> アンマネージ プロパティの値を更新します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">更新するプロパティを含む効果へのハンドル。</param>
        <summary>派生クラスでオーバーライドされた場合は、効果のアンマネージ プロパティのプロパティの状態を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドのオーバーライド内でアンマネージ プロパティを設定する場合は、ヘルパー メソッドを使用して <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>