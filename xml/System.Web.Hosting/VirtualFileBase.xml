<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>中核となる実装を提供、 <see cref="T:System.Web.Hosting.VirtualFile" /> と <see cref="T:System.Web.Hosting.VirtualDirectory" /> オブジェクトです。 抽象クラスでは、インスタンス化することはできません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Hosting.VirtualFileBase> 抽象クラスには共通のメソッドとの間で共有するプロパティ、 <xref:System.Web.Hosting.VirtualFile> と <xref:System.Web.Hosting.VirtualDirectory> オブジェクトです。 これらのクラスの実装では、ファイルとコンパイルのために使用されるパスへのアクセス権を持つ ASP.NET ランタイムを提供します。 仮想ファイルおよびパスの使用に関する詳細については、次を参照してください。、 <xref:System.Web.Hosting.VirtualPathProvider> クラスです。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you inherit from the <see cref="T:System.Web.Hosting.VirtualFileBase" /> class, you must override the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property to indicate whether the derived object is a virtual directory or a virtual file. If you derive from either the <see cref="T:System.Web.Hosting.VirtualFile" /> or the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class, the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property is already set.</para>
    </block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
    <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスを直接構築することはできませんが、 <xref:System.Web.Hosting.VirtualFileBase> クラスから継承したクラスのコンス トラクターは、このコンス トラクターを呼び出すことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Web.Hosting.VirtualFileBase" /> 無期限の有効期間リースが作成されるようにすることによってインスタンス化します。</summary>
        <returns>常に <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 、基本クラスのメソッドです。 常に返します `null` し、それによって作成されないリースで、仮想ファイルまたはディレクトリの有効期間が限定できないようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合を示す値を取得するかどうか、 <see cref="T:System.Web.Hosting.VirtualFileBase" /> インスタンスは、仮想ファイル、または仮想ディレクトリを表します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.Hosting.VirtualFileBase" /> インスタンスは、仮想ディレクトリ以外の場合、 <see langword="false" /> 場合、 <see cref="T:System.Web.Hosting.VirtualFileBase" /> インスタンスが仮想ファイルです。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想リソースの表示名を取得します。</summary>
        <value>仮想ファイルの表示名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Hosting.VirtualFileBase.Name%2A> プロパティは、通常、ファイル名と、リソースに関連付けられている拡張機能の仮想リソースは、任意の名前を使用してもします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> property should return the correct casing of the virtual resource for the virtual path provider. The correct casing may be different from the casing in the original path.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>仮想ファイルのパスを取得します。</summary>
        <value>仮想ファイルへのパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> プロパティがファイルまたはこのオブジェクトによって表されるディレクトリへのパスを返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
  </Members>
</Type>