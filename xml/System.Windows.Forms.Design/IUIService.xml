<Type Name="IUIService" FullName="System.Windows.Forms.Design.IUIService">
  <TypeSignature Language="C#" Value="public interface IUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.IUIService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("06A9C74B-5E32-4561-BE73-381B37869F4F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>デザイナーをホストしている開発環境オブジェクトのユーザー インターフェイスとの対話を有効にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Design.IUIService> エラー メッセージを表示、ダイアログ ボックスを表示およびのダイアログ ボックスと配色、フォントなどを通じて、ホストのアンビエント プロパティを取得、 <xref:System.Windows.Forms.Design.IUIService.Styles%2A> 辞書プロパティです。  
  
   
  
## 例  
 次のコード例のメソッドを呼び出したりするデザイナー動詞メニュー コマンドを提供するデザイナーの作成、 <xref:System.Windows.Forms.Design.IUIService>です。 例を使用して、サンプル コードをアセンブリにコンパイルし、Windows フォーム アプリケーションでアセンブリへの参照を追加します。 使用している場合は、 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], 、 `IUIServiceExampleControl` が自動的に追加、 **ツールボックス**します。 インスタンスを追加、 `IUIServiceExampleControl` に、 <xref:System.Windows.Forms.Form>です。 呼び出すデザイナー動詞コマンドにアクセスする <xref:System.Windows.Forms.Design.IUIService> メソッド、か、コントロールのサーフェイスを右クリックし、またはコントロールのスマート タグ グリフをクリックしておよびスマート タグ パネルからアイテムを選択します。  
  
 [!code-cpp[IUIServiceExample\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[IUIServiceExample\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#1)]
 [!code-vb[IUIServiceExample\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanShowComponentEditor">
      <MemberSignature Language="C#" Value="public bool CanShowComponentEditor (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanShowComponentEditor(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.CanShowComponentEditor(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">表示するためのサポートを確認する対象のコンポーネント、 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />です。</param>
        <summary>コンポーネントで表示できるかどうかを示す、 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />です。</summary>
        <returns>
          <see langword="true" /> 指定したコンポーネントがコンポーネント エディター フォームを表示できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンポーネント エディターでは、次のようなプロパティ ページからコンポーネント オブジェクト モデル \(COM\) コンポーネント エディター フォームを表示できます。  
  
 このメソッドは、指定したコンポーネントがあるかどうかを確認するチェック、 <xref:System.ComponentModel.ComponentEditor> を表示できる、 <xref:System.Windows.Forms.Design.ComponentEditorForm>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.IUIService.ShowComponentEditor(System.Object,System.Windows.Forms.IWin32Window)" />
      </Docs>
    </Member>
    <Member MemberName="GetDialogOwnerWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWin32Window GetDialogOwnerWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.IWin32Window GetDialogOwnerWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.GetDialogOwnerWindow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWin32Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ダイアログ ボックスを表示するときに、所有者として使用する必要があります、ウィンドウを取得します。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.IWin32Window" /> を示すすべての子のダイアログ ボックスを所有するウィンドウです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一部のダイアログ ボックスでは、所有者アプリケーションの親として設定し、タスク一覧に表示されません。 このメソッドが戻る、 <xref:System.Windows.Forms.IWin32Window> を示す統合開発環境から生成されるものが、このようなダイアログ ボックスの所有者であるウィンドウです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUIDirty">
      <MemberSignature Language="C#" Value="public void SetUIDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUIDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.SetUIDirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>UI が変更されたことを示すフラグを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、UI が変更されて、更新する必要があることを示します。 ツールバーまたはメニュー項目の状態が変更されるたびに更新の必要性を示すために重要です。 ほとんどの開発環境では、速度、これらの要素の状態をキャッシュし、更新する必要がある場合を知る必要があります。 このメソッドが呼び出される、たとえば、オブジェクトは、切り取りを有効にして、メニュー項目をコピーするデザイナー ビュー内で選択されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowComponentEditor">
      <MemberSignature Language="C#" Value="public bool ShowComponentEditor (object component, System.Windows.Forms.IWin32Window parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowComponentEditor(object component, class System.Windows.Forms.IWin32Window parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowComponentEditor(System.Object,System.Windows.Forms.IWin32Window)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="parent" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="component">表示対象のコンポーネント、 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />です。</param>
        <param name="parent">
          <see cref="T:System.Windows.Forms.IWin32Window" /> するダイアログ ボックスの親にします。</param>
        <summary>表示しようとしています、 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" /> コンポーネントにします。</summary>
        <returns>
          <see langword="true" /> 試行が成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Forms.Design.ComponentEditorForm> に似ていますが、プロパティ ページからコンポーネント オブジェクト モデル \(COM\)。  
  
 コンポーネントがコンポーネント エディターをサポートしていない場合、 <xref:System.ArgumentException> がスローされます。 これを回避するを呼び出すことを確認する <xref:System.Windows.Forms.Design.IUIService.CanShowComponentEditor%2A> 最初です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">コンポーネントは、コンポーネント エディターをサポートしません。</exception>
        <altmember cref="M:System.Windows.Forms.Design.IUIService.CanShowComponentEditor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowDialog(System.Windows.Forms.Form)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <see cref="T:System.Windows.Forms.Form" /> を表示します。</param>
        <summary>ダイアログ ボックスで指定したフォームを表示しようとします。</summary>
        <returns>いずれか、 <see cref="T:System.Windows.Forms.DialogResult" /> \] ダイアログ ボックスによって返される結果コードを示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 インスタンスを取得しようとしている次のコード例、 <xref:System.Windows.Forms.Design.IUIService> クラスし、サービスを呼び出す <xref:System.Windows.Forms.Design.IUIService.ShowDialog%2A> メソッドです。  
  
 [!code-cpp[IUIServiceExample\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[IUIServiceExample\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#4)]
 [!code-vb[IUIServiceExample\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">
          <see cref="T:System.Exception" /> を表示します。</param>
        <summary>メッセージ ボックスに、指定した例外と例外に関する情報を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、メッセージ ボックスの表示に適切に開発環境に統合できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">表示するエラー メッセージ。</param>
        <summary>指定したエラー メッセージをメッセージ ボックスに表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、メッセージ ボックスの表示に適切に開発環境に統合できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (Exception ex, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(class System.Exception ex, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex">
          <see cref="T:System.Exception" /> を表示します。</param>
        <param name="message">例外に関する情報を提供する、表示するメッセージ。</param>
        <summary>メッセージ ボックスに、指定した例外と例外に関する情報を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、メッセージ ボックスの表示に適切に開発環境に統合できます。  
  
   
  
## 例  
 インスタンスを取得しようとしている次のコード例、 <xref:System.Windows.Forms.Design.IUIService> 、サービスを呼び出すと <xref:System.Windows.Forms.Design.IUIService.ShowError%2A> メソッドです。  
  
 [!code-cpp[IUIServiceExample\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[IUIServiceExample\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#3)]
 [!code-vb[IUIServiceExample\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public void ShowMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">メッセージを表示するには</param>
        <summary>指定したメッセージをメッセージ ボックスに表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、メッセージ ボックスの表示が開発環境が正しく統合されているを確認します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> をメッセージ ボックスを表示するメソッドです。  
  
 [!code-cpp[IUIServiceExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public void ShowMessage (string message, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowMessage(string message, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">表示するメッセージ。</param>
        <param name="caption">メッセージ ボックスのキャプションです。</param>
        <summary>指定されたキャプションを含むメッセージ ボックスで指定されたメッセージを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、メッセージ ボックスの表示が開発環境が正しく統合されているを確認します。  
  
   
  
## 例  
 インスタンスを取得しようとしている次のコード例、 <xref:System.Windows.Forms.Design.IUIService> 、サービスを呼び出すと <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> メソッドです。  
  
 [!code-cpp[IUIServiceExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowMessage (string message, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DialogResult ShowMessage(string message, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="message">表示するメッセージ。</param>
        <param name="caption">ダイアログ ボックスのキャプションです。</param>
        <param name="buttons">いずれか、 <see cref="T:System.Windows.Forms.MessageBoxButtons" /> 値: <see cref="F:System.Windows.Forms.MessageBoxButtons.OK" />, 、<see cref="F:System.Windows.Forms.MessageBoxButtons.OKCancel" />, 、<see cref="F:System.Windows.Forms.MessageBoxButtons.YesNo" />, 、または <see cref="F:System.Windows.Forms.MessageBoxButtons.YesNoCancel" />です。</param>
        <summary>指定されたキャプションと、ダイアログ ボックスに配置するボタンを含むメッセージ ボックスで指定されたメッセージを表示します。</summary>
        <returns>いずれか、 <see cref="T:System.Windows.Forms.DialogResult" /> \] ダイアログ ボックスによって返される結果コードを示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、メッセージ ボックスの表示が開発環境が正しく統合されているを確認します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> をメッセージ ボックスを表示するメソッドです。  
  
 [!code-cpp[IUIServiceExample\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="T:System.Windows.Forms.MessageBox" />
      </Docs>
    </Member>
    <Member MemberName="ShowToolWindow">
      <MemberSignature Language="C#" Value="public bool ShowToolWindow (Guid toolWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowToolWindow(valuetype System.Guid toolWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowToolWindow(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolWindow" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="toolWindow">A <see cref="T:System.Guid" /> ツール ウィンドウの識別子。 これは、カスタム <see cref="T:System.Guid" /> から定義済みの値のいずれかまたは <see cref="T:System.ComponentModel.Design.StandardToolWindows" />です。</param>
        <summary>指定したツール ウィンドウを表示します。</summary>
        <returns>
          <see langword="true" /> ツール ウィンドウが正常に表示された場合 <see langword="false" /> ことが表示されるか、検出された場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 インスタンスを取得しようとしている次のコード例、 <xref:System.Windows.Forms.Design.IUIService> 、サービスを呼び出すと <xref:System.Windows.Forms.Design.IUIService.ShowToolWindow%2A> メソッドです。  
  
 [!code-cpp[IUIServiceExample\#5](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#5)]
 [!code-csharp[IUIServiceExample\#5](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#5)]
 [!code-vb[IUIServiceExample\#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.StandardToolWindows" />
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Styles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.IUIService.Styles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ホストの環境に固有のスタイルのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> スタイルの設定を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ディクショナリには、ホスト環境から情報を提供できます。 少なくともこれには、標準の UI テキストと色の強調表示に使用するために使用するフォントので構成されます。 これらは、"DialogFont"と"HighlightColor"のスタイルが必要です。  
  
 これらのスタイルの値は、キーを使用するのには、インデクサー、ディクショナリにアクセスするディクショナリのキーとして、スタイルを使用して取得できます。 例: \(オブジェクトを実装する <xref:System.Windows.Forms.Design.IUIService>\)。スタイル \[\(スタイル名文字列引用符で囲まれた\)\] です。  
  
   
  
## 例  
 次のコード例では、ホスト環境からダイアログ ボックスのフォントを取得します。  
  
 [!code-cpp[Classic IUIService.Styles Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic IUIService.Styles Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IUIService.Styles Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic IUIService.Styles Example/CS/source.cs#1)]
 [!code-vb[Classic IUIService.Styles Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic IUIService.Styles Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowMessage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したメッセージをメッセージ ボックスに表示します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ShowError">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したエラー メッセージをメッセージ ボックスに表示します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>