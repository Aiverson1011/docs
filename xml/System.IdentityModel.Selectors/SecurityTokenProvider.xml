<Type Name="SecurityTokenProvider" FullName="System.IdentityModel.Selectors.SecurityTokenProvider">
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenProvider" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SOAP メッセージ送信者のセキュリティ トークンを処理するセキュリティ トークン プロバイダーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム セキュリティ トークンが必要な場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider> クラスを使用します。 セキュリティ トークン プロバイダーは、クライアントから SOAP メッセージが送信されたときにセキュリティ トークンを取得する機能を果たします。セキュリティ トークンはクライアントの認証や SOAP メッセージの保護に使用されます。 具体的には、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドは、セキュリティ トークンを取得するために、呼び出されます。<xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> メソッドや <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> メソッドを使用してセキュリティ トークン プロバイダーを呼び出し、セキュリティのキャンセルや更新を行うこともできます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenManager> クラスの派生クラスは、<xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> メソッドを実装して、特定のセキュリティ トークンにどのセキュリティ トークン プロバイダーが必要かであるのかを確認します。  
  
 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> クラスおよび <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> クラスには、組み込みのセキュリティ トークンの種類の既定の実装が用意されています。 カスタム セキュリティ トークン シナリオでは、<xref:System.IdentityModel.Selectors.SecurityTokenManager>、<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>、または <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> クラスのいずれかの派生クラスを作成し、カスタム セキュリティ トークンのセキュリティ トークン プロバイダーの作成、セキュリティ トークンの認証、およびセキュリティ トークンのシリアル化の機能を実装する必要があります。 カスタム トークンの作成[!INCLUDE[crabout](~/includes/crabout-md.md)]、「[How To: Create a Custom Token](http://msdn.microsoft.com/ja-jp/6d892973-1558-4115-a9e1-696777776125)」を参照してください。  
  
   
  
## 例  
 [!code-csharp[SecurityTokenProvider\#0](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#0)]
 [!code-vb[SecurityTokenProvider\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">キャンセルする <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンのキャンセルを開始します。</summary>
        <returns>非同期の取り消し操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発行済みトークンなど、キャンセル可能なセキュリティ トークンでは、セキュリティ トークンを要求したクライアントが不要になったセキュリティ トークンをキャンセルできます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method is called by the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.  
  
 The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginCancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">キャンセルする <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンのキャンセルを開始します。</summary>
        <returns>非同期の取り消し操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発行済みトークンなど、キャンセル可能なセキュリティ トークンでは、セキュリティ トークンを要求したクライアントが不要になったセキュリティ トークンをキャンセルできます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> class you are not required to override the asynchronous methods, as the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method, unless you need to provide your own asynchronous implementation.  
  
 The <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method is called by the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.  
  
 The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetToken(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンの取得を開始します。</summary>
        <returns>非同期の close 操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetTokenCore(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンの取得を開始します。</summary>
        <returns>非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method, unless you must provide your own asynchronous implementation.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを更新するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">To be added.</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンの更新を開始します。</summary>
        <returns>非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを更新するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">To be added.</param>
        <param name="callback">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</param>
        <summary>非同期の操作によるセキュリティ トークンの更新を開始します。</summary>
        <returns>非同期操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> クラスから継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider> 基本クラスが同期メソッドに基づいて非同期メソッドをサポートするので、非同期メソッドをオーバーライドする必要はありません。 したがって、独自の非同期実装を提供する必要がなければ、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> メソッドをオーバーライドする必要はありません。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelToken">
      <MemberSignature Language="C#" Value="public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">キャンセルする <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>セキュリティ トークンをキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">キャンセルする <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
        <summary>セキュリティ トークンをキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method.  
  
 When the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> method is overridden and the security token passed into the token parameter cannot be canceled, throw the <xref:System.IdentityModel.Tokens.SecurityTokenException> exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancelToken">
      <MemberSignature Language="C#" Value="public void EndCancelToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancelToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンのキャンセルを完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The asynchronous methods, which have a prefix of Begin and End, do not need to be overridden in derived classes. The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> base class provides an asynchronous implementation that is based on the synchronous methods.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void EndCancelTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndCancelTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンのキャンセルを完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A security token that can be cancelled, such as one that is issued, allows a client that requested a security token to cancel it when it is done with it.  
  
 When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method, unless you must provide your own asynchronous implementation.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> method calls <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndGetToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンの取得を完了します。</summary>
        <returns>セキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndGetTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンの取得を完了します。</summary>
        <returns>セキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method, unless you must provide your own asynchronous implementation.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndRenewToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンの更新を完了します。</summary>
        <returns>更新するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />。</param>
        <summary>非同期の操作によるセキュリティ トークンの更新を完了します。</summary>
        <returns>更新するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you inherit from the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class you are not required to override the asynchronous methods, as the <xref:System.IdentityModel.Selectors.SecurityTokenProvider> base class provides asynchronous support based upon the synchronous methods. Therefore, you are not required to override the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method, unless you must provide your own asynchronous implementation.  
  
 The <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken GetToken(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <summary>セキュリティ トークンを取得します。</summary>
        <returns>取得するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントが SOAP メッセージを送信し、セキュリティ トークンが要求される場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドが <xref:System.ServiceModel.Description.ClientCredentials> クラスにより呼び出されます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> メソッドを呼び出します。  
  
 ほとんどの場合、`timeout` パラメーターは、<xref:System.IdentityModel.Selectors.SecurityTokenProvider> などの <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> の派生クラスでは使用されません。 ただし、セキュリティ トークンの取得に分散メッセージングを伴う場合があります。 フェデレーション サービスで使用される <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> はその一例です。 このような場合、`timeout` パラメーターを使用して、ネットワーク エラー、メッセージの紛失、およびその他のエラー条件によって引き起こされる例外を回避します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを取得するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <summary>セキュリティ トークンを取得します。</summary>
        <returns>取得するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> メソッドがオーバーライドされていて、トークン パラメーターに渡したセキュリティ トークンを取得できない場合、<xref:System.IdentityModel.Tokens.SecurityTokenException> 例外をスローします。  
  
 クライアントが SOAP メッセージを送信し、セキュリティ トークンが要求される場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドが <xref:System.ServiceModel.Description.ClientCredentials> クラスにより呼び出されます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> メソッドを呼び出します。  
  
   
  
## 例  
 [!code-csharp[SecurityTokenProvider\#1](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#1)]
 [!code-vb[SecurityTokenProvider\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを更新するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">To be added.</param>
        <summary>セキュリティ トークンを更新します。</summary>
        <returns>更新するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 更新可能な発行済みセキュリティ トークンでは、セキュリティ トークンの期限が切れるとき、または期限が切れた後に、クライアントがセキュリティ トークンを更新できます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">セキュリティ トークンを更新するメッセージのタイムアウト値を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="token">To be added.</param>
        <summary>セキュリティ トークンを更新します。</summary>
        <returns>更新するセキュリティ トークンを表す <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 更新可能な発行済みセキュリティ トークンでは、セキュリティ トークンの期限が切れるとき、または期限が切れた後に、クライアントがセキュリティ トークンを更新できます。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> メソッドがオーバーライドされていて、トークン パラメーターに渡したセキュリティ トークンを更新できない場合、<xref:System.IdentityModel.Tokens.SecurityTokenException> 例外をスローします。  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> メソッドは <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenCancellation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenCancellation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenCancellation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンをキャンセルできるかどうかを示す値を取得します。</summary>
        <value>セキュリティ トークンをキャンセルできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 発行済みトークンなど、キャンセル可能なセキュリティ トークンでは、セキュリティ トークンを要求したクライアントが不要になったセキュリティ トークンをキャンセルできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenRenewal">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenRenewal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンを更新できるかどうかを示す値を取得します。</summary>
        <value>セキュリティ トークンを更新することができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 更新可能な発行済みセキュリティ トークンでは、セキュリティ トークンの期限が切れるとき、または期限が切れた後に、クライアントがセキュリティ トークンを更新できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>