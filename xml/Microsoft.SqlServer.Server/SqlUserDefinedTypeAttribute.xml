<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SQL Server のユーザー定義型 \(UDT\) としてアセンブリの型定義を示すために使用します。 属性のプロパティには、種類が SQL Server に登録されているときに使用する物理的な特性が反映されます。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 SQL Server が、型定義にバインドされているユーザー定義型の作成、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> カスタム属性です。 すべての UDT は、この属性でマーク付けする必要があります。 参照してください [CLR User\-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) Udt についての詳細については、UDT の例を含みます。  
  
   
  
## 例  
 例を次に、 `UserDefinedType` Point UDT の属性です。  UDT がバイト順、"Point"という、"ValidatePoint"という名前の検証メソッドとを持ってはネイティブ シリアル化形式を使用します。  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">いずれか、 <see cref="T:Microsoft.SqlServer.Server.Format" /> 型のシリアル化形式を表す値。</param>
        <summary>必須の属性にユーザー定義型 \(UDT\)、指定された型が UDT であることを確認し、UDT のストレージ形式を指定するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定する次の例、 `Format` ユーザー定義型を `SerializedDataWithMetadata`と`MaxByteSize` は 8,000 バイトです。  
  
   
  
## 例  
 [!code-csharp[VbRaddataSQLObjects\#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects\#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル化形式として、 <see cref="T:Microsoft.SqlServer.Server.Format" />です。</summary>
        <value>A <see cref="T:Microsoft.SqlServer.Server.Format" /> シリアル化形式を表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義型がバイト順の並びであるかどうかを示します。</summary>
        <value>
          <see langword="true" /> ユーザー定義型がバイトの順序付けになる; 場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定すると `true`, 、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> プロパティが有効で順序情報のシリアル化されたバイナリ データを使用できることを保証します。 したがって、バイト順の UDT オブジェクトの各インスタンスは、シリアル化表現は 1 つだけ配置できます。 シリアル化されたバイト数の SQL Server の比較操作が実行されると、その結果は同じ比較演算をマネージ コードで実行した場合と同じをする必要があります.  
  
 次の機能がサポートされているときに <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> に設定されている `true`:  
  
-   この型の列にインデックスを作成する権限です。  
  
-   この型の列に制約チェックと UNIQUE 制約と主キーと外部キーを作成する機能。  
  
-   TRANSACT\-SQL ORDER BY、GROUP BY、および PARTITION BY 句を使用する権限です。 このような場合は、型のバイナリ表現を使用して、順序を決定します。  
  
-   TRANSACT\-SQL ステートメントで比較演算子を使用する権限です。  
  
-   この型の計算列を保存する機能。  
  
 両方、 `Native` と `UserDefined` シリアル化形式は次の比較演算子をサポートと <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> に設定されている `true`:  
  
-   等しい \(\=\)  
  
-   等しくない \(\!\=\)  
  
-   大なり \(\>\)  
  
-   小なり \(\<\)  
  
-   以上 \(\>\=\)  
  
-   以下 \(\<\=\)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このユーザー定義型のすべてのインスタンスを同じ長さにするかどうかを示します。</summary>
        <value>
          <see langword="true" /> この種類のすべてのインスタンスが同じ長さである場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合に設定 `true`, 、この共通言語ランタイム \(CLR\) 型に対応する Udt のすべてのインスタンスに正確に一致バイトの長さが必要 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>します。 この属性はだけによる Udt に関連 `UserDefined` シリアル化 <xref:Microsoft.SqlServer.Server.Format>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\(バイト単位\) のインスタンスの最大サイズ。</summary>
        <value>
          <see cref="T:System.Int32" /> インスタンスの最大サイズを表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定する必要があります、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> プロパティを `UserDefined` シリアル化 <xref:Microsoft.SqlServer.Server.Format>します。  
  
 または前の手順では、SQL Server 2005 に接続するときに <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 1 ~ 8000 にする必要があります。  
  
 SQL Server 2008 以降を接続すると、設定 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 1 ~ 8000、型があり、そのインスタンスは、常に 8,000 バイト以内の間です。 8000 より大きいインスタンスことのある型の場合は\-1 を指定します。  
  
 ユーザー定義シリアル化を指定すると、UDT に <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 、ユーザーが定義されているシリアル化された形式で UDT の合計サイズを参照します。 10 文字の文字列のプロパティを持つ UDT を検討してください \(<xref:System.Char>\)。 使用して、UDT がシリアル化する場合、 <xref:System.IO.BinaryWriter>, 、シリアル化された文字列の合計サイズは 1 文字の最大数を掛けた Unicode utf\-16 文字を 22 バイト数: 2 バイトを加えたからコントロールを 2 バイトのオーバーヘッドが発生するバイナリ ストリームのシリアル化します。 値を決定する際、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, 、シリアル化される UDT の合計サイズを考慮する必要があります: バイナリ形式でシリアル化されたデータとシリアル化によるオーバーヘッドのサイズ。  
  
 このプロパティには使用しないで `Native` シリアル化 <xref:Microsoft.SqlServer.Server.Format>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義型の SQL Server の名前。</summary>
        <value>A <see cref="T:System.String" /> ユーザー定義型の SQL Server 名を表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> プロパティは、SQL Server 内で使用されていなくても、によって、Microsoft Visual Studio .NET 統合開発環境 \(IDE\) を使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義型のインスタンスの検証に使用されるメソッドの名前。</summary>
        <value>A <see cref="T:System.String" /> ユーザー定義型のインスタンスの検証に使用するメソッドの名前を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この属性によって指定されたメソッドは、信頼されていないバイナリ値から UDT が逆シリアル化されたときに、UDT のインスタンスを検証します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>