<Type Name="NamedPipeServerStream" FullName="System.IO.Pipes.NamedPipeServerStream">
  <TypeSignature Language="C#" Value="public sealed class NamedPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.NamedPipeServerStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>公開する、 <see cref="T:System.IO.Stream" /> 、名前付きパイプに関連同期および非同期の両方をサポートする読み取りおよび書き込み操作です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前付きパイプは、パイプ サーバーと 1 つ以上のパイプ クライアント間の通信の一方向または双方向のパイプを提供します。 名前付きパイプは、ローカルまたはネットワーク経由で、プロセス間通信に使用できます。 1 つのパイプ名は、複数で共有できる <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトです。  
  
 任意のプロセスは、名前付きパイプ サーバー クライアント、またはその両方として動作できます。  
  
> [!NOTE]
>  [!INCLUDE[winxppro](~/includes/winxppro-md.md)] と [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], 、ネットワーク経由で接続できる 10 のパイプの最大数。  
  
   
  
## 例  
 次の例では、親プロセスから同じコンピューターを使用して、名前付きパイプで子プロセスに文字列を送信する方法を示します。 この例で作成、 <xref:System.IO.Pipes.NamedPipeServerStream> で親プロセス内のオブジェクト、 <xref:System.IO.Pipes.PipeDirection> の値 <xref:System.IO.Pipes.PipeDirection.Out>です。 サーバーが、待機、 <xref:System.IO.Pipes.NamedPipeClientStream> に接続する子プロセス内のオブジェクト。 この例では、両方のプロセスが同じコンピューターには、 <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトには、 <xref:System.IO.Pipes.PipeDirection> の値 <xref:System.IO.Pipes.PipeDirection.In>です。 次に、親プロセスはユーザー指定の文字列を子プロセスに送信します。 文字列は、コンソールに表示されます。  
  
 この例を使用するサーバー プロセスは、 <xref:System.IO.Pipes.NamedPipeServerStream> クラスです。 パイプ クライアントとサーバーの両方のコードを含む完全なコード例を参照してください。 [How to: Use Named Pipes to Communicate Between Processes over a Network](http://msdn.microsoft.com/ja-jp/4e4d7e64-9f1b-4026-98f7-20488ac7b42b)します。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 指定したパイプの名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   既定のパイプ方向 <xref:System.IO.Pipes.PipeDirection.InOut>します。  
  
-   同じ名前を共有するサーバー インスタンスの最大数は 1 に設定します。  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode.Byte> の <xref:System.IO.Pipes.PipeTransmissionMode> 値。  
  
-   <xref:System.IO.Pipes.PipeOptions.None> の <xref:System.IO.Pipes.PipeOptions> 値。  
  
-   既定の入力と出力バッファー サイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability.None> の <xref:System.IO.HandleInheritability> 値。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスを指定したパイプ名とパイプの方向を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode.Byte> の <xref:System.IO.Pipes.PipeTransmissionMode> 値。  
  
-   <xref:System.IO.Pipes.PipeOptions.None> の <xref:System.IO.Pipes.PipeOptions> 値。  
  
-   既定の入力と出力バッファー サイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability.None> の <xref:System.IO.HandleInheritability> 値。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 次の例では、親プロセスから名前付きパイプを使用して子プロセスに文字列を送信する方法を示します。 この例で作成、 <xref:System.IO.Pipes.NamedPipeServerStream> 、親プロセス内のオブジェクト。<xref:System.IO.Pipes.NamedPipeServerStream> オブジェクトには、 <xref:System.IO.Pipes.PipeDirection> の値 <xref:System.IO.Pipes.PipeDirection.Out>, 、まで、次のブロック、 <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトが現在の接続を確立 <xref:System.IO.Pipes.NamedPipeServerStream> オブジェクトです。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <summary>指定したパイプ名、パイプの方向、およびサーバー インスタンスの最大数を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This constructor creates a <xref:System.IO.Pipes.NamedPipeServerStream> object that has the following characteristics:  
  
-   A default value of 1 for the maximum number of server instances that share the same name.  
  
-   A default <xref:System.IO.Pipes.PipeTransmissionMode> value of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.  
  
-   A <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  
  
-   Default input and output buffer sizes.  
  
-   No pipe security.  
  
-   A <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.  
  
-   No specified additional <xref:System.IO.Pipes.PipeAccessRights>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 負以外の数値が必要です。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> が \-1 未満であるか、または 254 を超えています \(\-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します\)。  
  
 または  
  
 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> が必要です。  
  
 または  
  
 アクセス権は、<see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> フラグ、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> フラグ、および <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> フラグに制限されます。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン \(":"\) が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="isAsync" Type="System.Boolean" />
        <Parameter Name="isConnected" Type="System.Boolean" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="isAsync">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="isConnected">
          <see langword="true" /> パイプが接続されているかを示すそれ以外の場合、 <see langword="false" />です。</param>
        <param name="safePipeHandle">このパイプの処理は安全な <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトによってカプセル化します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 指定したパイプ ハンドル。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="safePipeHandle" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="safePipeHandle" /> 無効なハンドルです。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="safePipeHandle" /> 有効なパイプ ハンドルではありません。  
  
 または  
  
 サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> の指定したパイプ名、パイプの方向、サーバー インスタンス、および送信モードの最大数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   既定の <xref:System.IO.Pipes.PipeOptions> の値 <xref:System.IO.Pipes.PipeOptions.None>です。  
  
-   既定の入力と出力バッファー サイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability.None> の <xref:System.IO.HandleInheritability> 値。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> の指定したパイプ名、パイプの方向、サーバー インスタンス、送信モード、およびパイプのオプションの最大数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   既定の入力と出力バッファー サイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability.None> の <xref:System.IO.HandleInheritability> 値。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)  
  
 または  
  
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> の指定したパイプ名、パイプの方向、最大数のサーバー インスタンス、送信モード、パイプのオプション、およびバッファー サイズと出力バッファーのサイズをお勧めします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   追加のパイプ セキュリティなし。  
  
-   既定の <xref:System.IO.HandleInheritability> の値 <xref:System.IO.HandleInheritability.None>です。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)  
  
 または  
  
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
 または  
  
 <paramref name="inBufferSize" /> は負の値です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスを指定したパイプ名、パイプの方向、サーバー インスタンスの最大数送信モード、パイプのオプション、および縮小に推奨されるバッファー サイズ、およびパイプのセキュリティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を次の特性を持つオブジェクト。  
  
-   既定の <xref:System.IO.HandleInheritability> の値 <xref:System.IO.HandleInheritability.None>です。  
  
-   指定されていない追加 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)  
  
 または  
  
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
 または  
  
 <paramref name="inBufferSize" /> は負の値です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> の指定したパイプ名、パイプの方向、サーバー インスタンス、送信モード、パイプのオプションを使用して、バッファー サイズと出力バッファー サイズ、パイプのセキュリティ、および継承性のモードをお勧めの最大数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を持たないオブジェクトを追加指定 <xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)  
  
 または  
  
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
 または  
  
 <paramref name="inBufferSize" /> は負の値です。  
  
 または  
  
 <paramref name="inheritability" /> は有効な <see cref="T:System.IO.HandleInheritability" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability, System.IO.Pipes.PipeAccessRights additionalAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability, valuetype System.IO.Pipes.PipeAccessRights additionalAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="additionalAccessRights" Type="System.IO.Pipes.PipeAccessRights" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 渡せる <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> この値にします。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズ。</param>
        <param name="outBufferSize">出力バッファー サイズ。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</param>
        <param name="additionalAccessRights">パイプのアクセス権を指定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスを指定したパイプ名、パイプの方向、サーバー インスタンスの最大数送信モード、パイプのオプション、推奨とアウトは、サイズ、パイプのセキュリティ保護、継承性モードでは、バッファーに格納し、パイプのアクセス権。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 長さ 0 の文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> 設定されている「匿名」です。  
  
 または  
  
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
 または  
  
 <paramref name="maxNumberofServerInstances" /> \-1 254 より大きいか小さい \(\-1 の場合 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />\)  
  
 または  
  
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
 または  
  
 <paramref name="inBufferSize" /> は負の値です。  
  
 または  
  
 <paramref name="inheritability" /> は有効な <see cref="T:System.IO.HandleInheritability" /> 値ではありません。  
  
 または  
  
 <paramref name="additionalAccessRights" /> は有効な <see cref="T:System.IO.Pipes.PipeAccessRights" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> コロンが含まれています \(":"\) です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムは、Windows Millennium Edition、Windows 98、または Windows 95 の場合、これはサポートされません。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの最大数を超えています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">For full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForConnection">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForConnection (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForConnection(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">クライアントが接続するときに呼び出すメソッド、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトです。</param>
        <param name="state">この特定の非同期要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
        <summary>クライアントが接続するのを待機する非同期操作を開始します。</summary>
        <returns>非同期の要求を参照するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、非同期相当の <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>です。  
  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 呼び出しごとに 1 回だけ呼び出す必要が <xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれていません。  
  
 または  
  
 パイプの接続が既に確立されています。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.IO.IOException">パイプ接続は切断されています。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の接続を切断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す、 <xref:System.IO.Pipes.NamedPipeServerStream.Disconnect%2A> メソッドは、パイプの送信モードを設定しない限り、送信済みのすべての文字が読み取られたまでブロック <xref:System.IO.Pipes.PipeTransmissionMode.Message> バッファー サイズを作成するコンス トラクターで設定されていると、 <xref:System.IO.Pipes.NamedPipeServerStream> オブジェクトです。 この場合、すべてのメッセージは受信されます。 呼び出す <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> サーバーをパイプからすべてのデータが読み取られるまでブロックします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプ接続はまだ行われていません。  
  
 または  
  
 接続しているパイプがすでに切断されました。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForConnection">
      <MemberSignature Language="C#" Value="public void EndWaitForConnection (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWaitForConnection(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">保留中の非同期の要求。</param>
        <summary>クライアントが接続するのを待機する非同期操作を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 呼び出しごとに 1 回だけ呼び出す必要が <xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれていません。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.IO.IOException">パイプ接続は切断されています。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NamedPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アンマネージ リソースを解放し、前に他のクリーンアップ操作を実行、 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスがガベージ コレクションによって回収されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImpersonationUserName">
      <MemberSignature Language="C#" Value="public string GetImpersonationUserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetImpersonationUserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パイプのもう一方の終端のクライアントのユーザー名を取得します。</summary>
        <returns>パイプのもう一方の終端のクライアントのユーザー名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName%2A> メソッドが返す `null` 、クライアントがまだパイプに記述されていない場合、または接続されているクライアントと接続していない場合、 <xref:System.Security.Principal.TokenImpersonationLevel> の <xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>です。  
  
   
  
## 例  
 次の例では、複数の同時クライアント要求に応答できるパイプ サーバーを作成する方法とクライアントの権限借用の方法を示します。 この例で作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を待機する複数のスレッドを作成する親プロセス内のオブジェクト <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトに接続します。 クライアントが接続されると、サーバーにファイル名を提供し、そのファイルの内容が読み取られ、クライアントに送信します。<xref:System.IO.Pipes.NamedPipeServerStream> ファイルを開くとき、クライアントを要求できるだけでファイルを開くための十分なアクセス許可を持つことがクライアントを偽装します。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプ接続はまだ行われていません。  
  
 または  
  
 接続しているパイプがすでに切断されました。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプ接続は切断されています。  
  
 または  
  
 クライアントのユーザー名は、19 文字を超えています。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">for the ability to manipulate the principal object. Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaxAllowedServerInstances">
      <MemberSignature Language="C#" Value="public const int MaxAllowedServerInstances = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxAllowedServerInstances = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>システム リソースで許されるサーバー インスタンスの最大数を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances> を作成するとき、 <xref:System.IO.Pipes.NamedPipeServerStream> システム リソースで許されるサーバー インスタンスの最大数を設定するオブジェクト。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsClient">
      <MemberSignature Language="C#" Value="public void RunAsClient (System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunAsClient(class System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationWorker" Type="System.IO.Pipes.PipeStreamImpersonationWorker" />
      </Parameters>
      <Docs>
        <param name="impersonationWorker">呼び出すメソッドを指定するデリゲート。</param>
        <summary>クライアントの偽装中にデリゲートを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リモート サーバーに接続するクライアントのアクセス許可が適用されます。 たとえば、接続するクライアントは、サーバー上のファイルの内容を要求すると、クライアントを開くための十分なアクセス許可を持つファイルのみを要求できます。  
  
   
  
## 例  
 次の例では、複数の同時クライアント要求に応答できるパイプ サーバーを作成する方法とクライアントの権限借用の方法を示します。 この例で作成、 <xref:System.IO.Pipes.NamedPipeServerStream> を待機する複数のスレッドを作成する親プロセス内のオブジェクト <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトに接続します。 クライアントが接続されると、サーバーにファイル名を提供し、そのファイルの内容が読み取られ、クライアントに送信します。<xref:System.IO.Pipes.NamedPipeServerStream> ファイルを開くとき、クライアントを要求できるだけでファイルを開くための十分なアクセス許可を持つことがクライアントを偽装します。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream\_ImpersonationSample1\#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプ接続はまだ行われていません。  
  
 または  
  
 接続しているパイプがすでに切断されました。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプ接続は切断されています。  
  
 または  
  
 I\/O エラーが発生しました。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">for the ability to manipulate the principal object. Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnection">
      <MemberSignature Language="C#" Value="public void WaitForConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これに接続するクライアントの待機 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出すと、 <xref:System.IO.Pipes.NamedPipeServerStream> オブジェクトをクライアントが接続するまでブロックします。  
  
   
  
## 例  
 次の例では、親プロセスから名前付きパイプを使用して子プロセスに文字列を送信する方法を示します。 この例で作成、 <xref:System.IO.Pipes.NamedPipeServerStream> 、親プロセス内のオブジェクト。 このオブジェクトには、 <xref:System.IO.Pipes.PipeDirection> の値 <xref:System.IO.Pipes.PipeDirection.Out>, 、まで、次のブロック、 <xref:System.IO.Pipes.NamedPipeClientStream> オブジェクトへの接続の確立、 <xref:System.IO.Pipes.NamedPipeServerStream> オブジェクトです。 この例に示されている例の一部である、 <xref:System.IO.Pipes.NamedPipeServerStream> と <xref:System.IO.Pipes.NamedPipeClientStream> クラスです。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream\_Sample1\#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプの接続が既に確立されています。  
  
 または  
  
 パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプ接続は切断されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これに接続するクライアントに非同期的に待機 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトです。</summary>
        <returns>非同期の待機操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 非同期である、このメソッドからすぐが接続プロセスを完了して、クライアントが呼び出すため <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> または <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
        <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機し、キャンセル要求を監視します。</summary>
        <returns>非同期の待機操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because it is asynchronous, this method returns immediately, but the connection process is completed when the client calls <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> or <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>.  
  
 Cancellation requests using the cancellation token will only work if   the <xref:System.IO.Pipes.NamedPipeServerStream> object was created with a pipe option value of <xref:System.IO.Pipes.PipeOptions.Asynchronous?displayProperty=fullName> or if the cancellation occurs before the <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync%2A> method is called.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForConnectionAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>これに接続するクライアントに非同期的に待機 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>