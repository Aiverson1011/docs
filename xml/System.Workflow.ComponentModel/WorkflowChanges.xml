<Type Name="WorkflowChanges" FullName="System.Workflow.ComponentModel.WorkflowChanges">
  <TypeSignature Language="C#" Value="public sealed class WorkflowChanges" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowChanges extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.WorkflowChanges" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>実行中のワークフロー インスタンスに対して行おうとしている変更内容を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 実行中のワークフロー インスタンスを変更するときは、常に <xref:System.Workflow.ComponentModel.WorkflowChanges> オブジェクトを使用する必要があります。  
  
 <xref:System.Workflow.ComponentModel.WorkflowChanges> のインスタンスをアプリケーション コードで \(ワークフロー インスタンス外で\) 作成する場合、コンストラクターに渡す <xref:System.Workflow.ComponentModel.Activity> オブジェクトは、<xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> クラスの <xref:System.Workflow.Runtime.WorkflowInstance> メソッドから返されたものでなければなりません。  
  
   
  
## 例  
 <xref:System.Workflow.ComponentModel.WorkflowChanges> オブジェクトの新しいインスタンスを作成する例を次に示します。 この例は、注文処理ステート マシンの SDK サンプルです。 詳細については、「[Ordering State Machine Sample](http://msdn.microsoft.com/ja-jp/59272cf4-bc98-439c-bcfa-b66999ebce5c)」を参照してください。  
  
 [!code-csharp[WF\_Samples\#87](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#87)]
 [!code-vb[WF\_Samples\#87](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#87)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowChanges (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">ワークフローのルートの <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rootActivity" /> が null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rootActivity" /> が <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rootActivity" /> はデザイン モードです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> を適用するために必要な条件を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property can be set on a root activity to disallow dynamic updates to the running workflow.  
  
 When the property is set on the root activity, and condition evaluates to **languageKeyword tag is not supported!!!!**  
, the dynamic updates are disallowed on the workflow instance. If the condition evaluates to **languageKeyword tag is not supported!!!!**  
, or the condition is not set, the dynamic updates are allowed.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCondition">
      <MemberSignature Language="C#" Value="public static object GetCondition (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCondition(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> アクティビティや <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> アクティビティなど、条件プロパティを格納している <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> \(派生型\)。</param>
        <summary>依存関係オブジェクトの条件プロパティを取得します。</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> などの条件プロパティ型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> は依存プロパティです。つまり、ある型によって宣言および使用され、別の型に設定されます。 したがって、プロパティを宣言する型に静的な `get` メソッドと `set` メソッドが必要です。  
  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> を取得するヘルパー メソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> が null \(Visual Basic の場合は <see langword="Nothing" />\) です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dependencyObject" /> が <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> でも <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> の派生型でもありません。</exception>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> アクティビティや <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> アクティビティなど、条件プロパティを格納している <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> \(派生型\)。</param>
        <param name="value">依存関係オブジェクトに設定する条件型。たとえば <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</param>
        <summary>依存関係オブジェクトに条件プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> は依存プロパティです。つまり、ある型によって宣言および使用され、別の型に設定されます。 したがって、プロパティを宣言する型に静的な `get` メソッドと `set` メソッドが必要です。  
  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> を設定するヘルパー メソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="TransientWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity TransientWorkflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity TransientWorkflow" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティビティ ツリーの複製を返します。この複製を変更して、実行中のワークフロー インスタンスに適用できます。</summary>
        <value>ワークフローのルート アクティビティの複製が格納された <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 アクティビティを TransientWorkflow プロパティに追加する方法を次の例に示します。 この例は、注文処理ステート マシンの SDK サンプルです。 詳細については、「[Ordering State Machine Sample](http://msdn.microsoft.com/ja-jp/59272cf4-bc98-439c-bcfa-b66999ebce5c)」を参照してください。  
  
 [!code-csharp[WF\_Samples\#88](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#88)]
 [!code-vb[WF\_Samples\#88](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" /> プロパティによって表された、アクティビティ ツリーに対する現在の変更セットを検証します。</summary>
        <returns>検証中に発生したエラーまたは警告を格納している <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>