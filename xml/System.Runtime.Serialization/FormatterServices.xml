<Type Name="FormatterServices" FullName="System.Runtime.Serialization.FormatterServices">
  <TypeSignature Language="C#" Value="public static class FormatterServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FormatterServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.FormatterServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>実装を支援するための静的メソッドを提供する <see cref="T:System.Runtime.Serialization.Formatter" /> シリアル化します。 このクラスは継承できません。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
  </Docs>
  <Members>
    <Member MemberName="CheckTypeSecurity">
      <MemberSignature Language="C#" Value="public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckTypeSecurity(class System.Type t, valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="securityLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      </Parameters>
      <Docs>
        <param name="t">
          <see cref="T:System.Type" /> に逆シリアル化に必要なアクセス許可を確認します。</param>
        <param name="securityLevel">
          <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> プロパティ値。</param>
        <summary>決定するかどうか、指定した <see cref="T:System.Type" /> と逆シリアル化することができます、 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> プロパティに設定 <see langword="Low" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 かを判断する、指定した型を逆シリアル化されたときにこのメソッドを使用して、 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> にプロパティが設定されている `Low`します。  
  
 .NET framework リモート処理は、2 つのレベルの自動逆シリアル化、 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> と <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>です。<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> 最も基本的なリモート処理機能に関連付けられている型だけを逆シリアル化して逆シリアル化攻撃から保護できます。<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> レベルは、リモート処理が各種の状況でサポートするすべての型の自動逆シリアル化をサポートします。 詳細については、.net Framework リモート処理の種類を <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> と <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> サポートを参照してください [&#91;\<topic:\/\/cpconAutomaticDeserializationInNETRemoting\>&#93;](http://msdn.microsoft.com/ja-jp/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)します。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Runtime.Serialization.FormatterServices> クラスが基底クラスを実装しないオブジェクトを逆シリアル化または逆シリアル化を <xref:System.Runtime.Serialization.ISerializable> が派生クラスでは。  
  
 [!code-cpp[FormatterServices\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#1)]
 [!code-csharp[FormatterServices\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <paramref name="t" /> パラメーターは高度な型でありすることはできません逆シリアル化されたときに、 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> にプロパティが設定されている <see langword="Low" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectData(object obj, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
      </Parameters>
      <Docs>
        <param name="obj">フォーマッタに書き込むオブジェクト。</param>
        <param name="members">オブジェクトから抽出するメンバー。</param>
        <summary>指定したオブジェクトからデータを抽出し、オブジェクトの配列として返します。</summary>
        <returns>配列 <see cref="T:System.Object" /> に格納されたデータを格納している <paramref name="members" /> に関連付けられていると <paramref name="obj" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された各メンバーに対して、 `members` 配列、 <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> メソッドに関連付けられている値を抽出し、 `obj` オブジェクト、およびそれを返します。 返される配列の長さは、の長さと同じ、 `members` 配列。  
  
   
  
## 例  
 次の例では、Book クラスのインスタンスを作成し、インスタンスのフィールドの値を設定します。 型情報を使用して、コードが、取得、 <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> メソッドです。 コード オブジェクトの配列を使用して、インスタンス データがコピー、 <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> メソッドです。 使用して、クラスの新しい初期化されていないインスタンスを作成、 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> メソッドです。 使用して 2 つ目のインスタンスに最初のインスタンスからデータをコピーする最後に、 <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> メソッドです。  
  
 [!code-csharp[FormatterServices\_PopulateObjects\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices\_PopulateObjects\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> パラメーターまたは <paramref name="members" /> パラメーターが <see langword="null" /> です。  
  
 要素 <paramref name="members" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">要素 <paramref name="members" /> フィールドではありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetSafeUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetSafeUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSafeUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">作成するオブジェクトの型。</param>
        <summary>指定したオブジェクトの種類の新しいインスタンスを作成します。</summary>
        <returns>指定した型のゼロで埋められてオブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 0 に、オブジェクトの新しいインスタンスを初期化、コンス トラクターが実行しないため、オブジェクトがそのオブジェクトが有効と見なされる状態を表さない可能性があります。<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 必要がある逆シリアル化の場合にのみ使用、ユーザーはすぐにすべてのフィールドを設定しようとしています。 変更不可の型の空のインスタンスを作成しても無効なため、初期化されていない文字列は作成されません。  
  
 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> クラスのすべてのレベルに変換 [&#91;\<topic:\/\/cpconLinkDemands\>&#93;](http://msdn.microsoft.com/ja-jp/a33fd5f9-2de9-4653-a4f0-d9df25082c4d) に [要求](http://msdn.microsoft.com/ja-jp/e5283e28-2366-4519-b27d-ef5c1ddc1f48) を直接と間接のすべての呼び出し元に要求を指定する権限があることを確認します。 使用 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 部分的に信頼されたソースから逆シリアル化時にセキュリティのレベルを上げるにいます。 完全な信頼のシナリオでパフォーマンスを向上させるを使用して <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="type" /> パラメーターが有効な共通言語ランタイム型ではありません。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">シリアル化される型。</param>
        <summary>指定したクラスのシリアル化可能なすべてのメンバーを取得 <see cref="T:System.Type" />します。</summary>
        <returns>型の配列 <see cref="T:System.Reflection.MemberInfo" /> 一時的でない、非静的メンバーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般に、クラスのシリアル化可能なメンバーは、フィールドやプロパティなどの一時的でない、非静的メンバーです。 追加するには、プロパティは、getter と setter の両方が必要です。 実装するクラス、 <xref:System.Runtime.Serialization.ISerializable> インターフェイスまたはシリアル化サロゲートは、これらすべてのメンバーをシリアル化する必要はありませんまたはその他のメンバーをシリアル化できます。  
  
   
  
## 例  
 次のコード例では、実装することを示しています、 <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> メソッドです。 このコード例が示されている例の一部は、 <xref:System.Runtime.Serialization.FormatterServices> クラスです。  
  
 [!code-cpp[FormatterServices\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#2)]
 [!code-csharp[FormatterServices\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="type">シリアル化または複製される型。</param>
        <param name="context">シリアル化が行われるコンテキストです。</param>
        <summary>指定したクラスのシリアル化可能なすべてのメンバーを取得 <see cref="T:System.Type" /> と、指定した <see cref="T:System.Runtime.Serialization.StreamingContext" />します。</summary>
        <returns>型の配列 <see cref="T:System.Reflection.MemberInfo" /> 一時的でない、非静的メンバーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般に、クラスのシリアル化可能なメンバーは、フィールドやプロパティなどの一時的でない、非静的メンバーです。 追加するには、プロパティは、getter と setter の両方が必要です。 実装するクラス <xref:System.Runtime.Serialization.ISerializable> か、シリアル化サロゲートは、これらすべてのメンバーをシリアル化する必要はありませんまたはその他のメンバーをシリアル化できます。  
  
 現在のところ、しない限り、何かする必要はありません `context` が、 <xref:System.Runtime.Serialization.StreamingContextStates> 値 <xref:System.Runtime.Serialization.StreamingContextStates.Clone> を設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetSurrogateForCyclicalReference">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference(class System.Runtime.Serialization.ISerializationSurrogate innerSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISerializationSurrogate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerSurrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
      </Parameters>
      <Docs>
        <param name="innerSurrogate">指定したサロゲート。</param>
        <summary>指定したシリアル化サロゲートを返す <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />します。</summary>
        <returns>
          <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 、指定された <paramref name="innerSurrogate" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromAssembly">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromAssembly(class System.Reflection.Assembly assem, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assem" Type="System.Reflection.Assembly" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assem">オブジェクトを検索するアセンブリ。</param>
        <param name="name">オブジェクトの名前。</param>
        <summary>検索、 <see cref="T:System.Type" /> で提供されている指定したオブジェクトの <see cref="T:System.Reflection.Assembly" />です。</summary>
        <returns>
          <see cref="T:System.Type" /> の名前付きオブジェクトです。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assem" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">For extraction of reflection information on members of a type that are not visible. Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />.</permission>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">作成するオブジェクトの型。</param>
        <summary>指定したオブジェクトの種類の新しいインスタンスを作成します。</summary>
        <returns>指定した型のゼロで埋められてオブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 0 に、オブジェクトの新しいインスタンスを初期化、コンス トラクターが実行しないため、オブジェクトがそのオブジェクトが有効と見なされる状態を表さない可能性があります。 すぐにすべてのフィールドを設定する必要のあるユーザーと、現在のメソッドを逆シリアル化に使用のみ必要があります。 変更不可の型の空のインスタンスを作成しても無効なため、初期化されていない文字列は作成されません。  
  
> [!NOTE]
>  使用することはできません、 <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A> から派生した型のインスタンスを作成する方法、 <xref:System.ContextBoundObject> クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PopulateObjectMembers">
      <MemberSignature Language="C#" Value="public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PopulateObjectMembers(object obj, class System.Reflection.MemberInfo[] members, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">設定されるオブジェクト。</param>
        <param name="members">配列 <see cref="T:System.Reflection.MemberInfo" /> フィールドとプロパティを設定することについて説明します。</param>
        <param name="data">配列 <see cref="T:System.Object" /> の各フィールドとプロパティを設定する値を指定します。</param>
        <summary>オブジェクトのデータ配列から抽出された各フィールドの値で指定したオブジェクトを追加します。</summary>
        <returns>新しく作成されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内の要素の場合 `data` は `null`, 、[PopulateObjectMembers メソッド \(Object, MemberInfo\<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> そのフィールドに何も書き込まれません。  
  
   
  
## 例  
 次の例では、Book クラスのインスタンスを作成し、インスタンスのフィールドの値を設定します。 型情報を使用して、コードが、取得、 [PopulateObjectMembers メソッド \(Object, MemberInfo\<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> メソッドです。 コード オブジェクトの配列を使用して、インスタンス データがコピー、 [PopulateObjectMembers メソッド \(Object, MemberInfo\<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> メソッドです。 使用して、クラスの新しい初期化されていないインスタンスを作成、 [PopulateObjectMembers メソッド \(Object, MemberInfo\<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> メソッドです。 使用して 2 つ目のインスタンスに最初のインスタンスからデータをコピーする最後に、 [PopulateObjectMembers メソッド \(Object, MemberInfo\<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> メソッドです。  
  
 [!code-csharp[FormatterServices\_PopulateObjects\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices\_PopulateObjects\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" />、<paramref name="members" />、または <paramref name="data" /> パラメーターが <see langword="null" />です。  
  
 <paramref name="members" /> の要素は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">長さ <paramref name="members" /> の長さと一致しない <paramref name="data" />します。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">要素 <paramref name="members" /> のインスタンスではない <see cref="T:System.Reflection.FieldInfo" />します。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For providing serialization services. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />, <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializableMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>特定のクラスのシリアル化可能なすべてのメンバーを返します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>