<Type Name="NetDataContractSerializer" FullName="System.Runtime.Serialization.NetDataContractSerializer">
  <TypeSignature Language="C#" Value="public sealed class NetDataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetDataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer implements class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.NetDataContractSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>指定した .NET Framework 型を使用して、型のインスタンスを XML ストリームまたはドキュメントにシリアル化および逆シリアル化します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.NetDataContractSerializer> は、1 つの重要な点で <xref:System.Runtime.Serialization.DataContractSerializer> とは異なります。<xref:System.Runtime.Serialization.NetDataContractSerializer> はシリアル化された XML の中に CLR 型情報を含みますが、<xref:System.Runtime.Serialization.DataContractSerializer> にはこの情報は含まれません。 したがって、<xref:System.Runtime.Serialization.NetDataContractSerializer> は、シリアル化と逆シリアル化の両方で、同一の CLR 型を共有する結果になる場合のみ使用できます。  
  
 シリアライザーは、<xref:System.Runtime.Serialization.DataContractAttribute> 属性または <xref:System.SerializableAttribute> 属性のいずれかが適用されている型をシリアル化できます。 また、<xref:System.Runtime.Serialization.ISerializable> を実装する型をシリアル化します。  
  
 シリアル化の詳細については、「[Using Stand\-alone Serialization](http://msdn.microsoft.com/ja-jp/3d71814c-bda7-424b-85b7-15084ff9377a)」を参照してください。  
  
## XElement との互換性がない  
 <xref:System.Xml.Linq.XElement> クラスは XML の記述に使用されます。 ただし、`NetDataContractSerializer` はこの型のインスタンスをシリアル化できません。 したがって、次のコードは、"ルート型 ''System.Xml.Linq.XElement'' は、`IsAny`\=`true` が設定された IXmlSerializable であり、ルート要素を含むすべてのコンテンツを書き込む必要があります。このため、NetDataContractSerializer では、トップ レベルでの使用はサポートされていません。" という例外により失敗します。  
  
 [!code-csharp[NetDataContractSerializer\#15](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#15)]
 [!code-vb[NetDataContractSerializer\#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#15)]  
  
 ただし、`XElement` をフィールドの型またはクラスのプロパティとして使用する場合、フィールドまたはプロパティに含まれるデータはシリアル化されます。 これは、クラスのメンバーとして、データはクラスのトップ レベルではないからです。  
  
   
  
## 例  
 次のコード例は、`Person` によってシリアル化される <xref:System.Runtime.Serialization.NetDataContractSerializer> という名前の型を示しています。<xref:System.Runtime.Serialization.DataContractAttribute> 属性がクラスに適用され、<xref:System.Runtime.Serialization.DataMemberAttribute> がメンバー \(プライベート メンバーを含みます\) に適用され、シリアル化の対象を <xref:System.Runtime.Serialization.NetDataContractSerializer> に指示します。  
  
 [!code-csharp[NetDataContractSerializer\#0](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#0)]
 [!code-vb[NetDataContractSerializer\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XmlObjectSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 [!code-csharp[NetDataContractSerializer\#8](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#8)]
 [!code-vb[NetDataContractSerializer\#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">コンテキスト データを含む <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>指定したストリーミング コンテキスト データを使用して、<see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.StreamingContext> クラスを使用して、オブジェクトの読み取りと書き込み中に使用する、ユーザー固有のコンテキスト データを渡すことができます。  
  
   
  
## 例  
 次の例では、<xref:System.Runtime.Serialization.NetDataContractSerializer> を使用して、<xref:System.Runtime.Serialization.StreamingContext> のインスタンスを作成しています。  
  
 [!code-csharp[NetDataContractSerializer\#9](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#9)]
 [!code-vb[NetDataContractSerializer\#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
        <param name="rootNamespace">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前空間。</param>
        <summary>指定した XML ルート要素と名前空間を指定して、<see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 オブジェクトを逆シリアル化するときに予想する XML ルート要素と名前空間を指定して、<xref:System.Runtime.Serialization.DataContractSerializer> のインスタンスを作成する例を次に示します。  
  
 [!code-csharp[NetDataContractSerializer\#10](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#10)]
 [!code-vb[NetDataContractSerializer\#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
        <param name="rootNamespace">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
        <summary>コンテンツを指定するために使用されるルート要素と名前空間を含む <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 型の 2 つのパラメーターを使用して、<see cref="T:System.Xml.XmlDictionaryString" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクト インスタンス間で同じ文字列のセットが使用される場合は、<xref:System.Xml.XmlDictionaryString> を使用してパフォーマンスを最適化できます。  
  
   
  
## 例  
 オブジェクトを逆シリアル化するときに予想する XML ルート要素と名前空間を \(<xref:System.Runtime.Serialization.DataContractSerializer> 引数として\) 指定して、<xref:System.Xml.XmlDictionaryString> のインスタンスを作成する例を次に示します。  
  
 [!code-csharp[NetDataContractSerializer\#11](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#11)]
 [!code-vb[NetDataContractSerializer\#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="context">コンテキスト データを含む <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <param name="maxItemsInObjectGraph">シリアル化または逆シリアル化するグラフ内の項目の最大数。</param>
        <param name="ignoreExtensionDataObject">種類の拡張機能により提供されるデータを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="assemblyFormat">アセンブリの検索および読み込みをするメソッドを指定する <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 値。</param>
        <param name="surrogateSelector">
          <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> の実装。</param>
        <summary>コンテキスト データ、シリアル化されるオブジェクト内の項目の最大数、追加データを無視するかどうかを指定するパラメーター、アセンブリを読み込むメソッドを指定するパラメーター、サロゲート セレクターを指定するパラメーターを使用して、<see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化または逆シリアル化されるクラス内で `ignoreExtensionDataObject` インターフェイスが実装される場合、<xref:System.Runtime.Serialization.IExtensibleDataObject> パラメーターが使用されます。  
  
   
  
## 例  
 次の例では、<xref:System.Runtime.Serialization.NetDataContractSerializer> を使用して、<xref:System.Runtime.Serialization.StreamingContext> のインスタンスを作成しています。 このコードはまた、`ignoreExtensionDataObject` を設定し、従来の種類を逆シリアル化するためのサロゲートの選択時にシリアライザーの支援処理を行う `ISurrogateSelector` インターフェイスの実装を指定します。  
  
 [!code-csharp[NetDataContractSerializer\#12](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#12)]
 [!code-vb[NetDataContractSerializer\#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" /> 値が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
        <param name="rootNamespace">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前空間。</param>
        <param name="context">コンテキスト データを含む <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <param name="maxItemsInObjectGraph">シリアル化または逆シリアル化するグラフ内の項目の最大数。</param>
        <param name="ignoreExtensionDataObject">種類の拡張機能により提供されるデータを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="assemblyFormat">アセンブリの検索および読み込みをするメソッドを指定する <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 値。</param>
        <param name="surrogateSelector">従来の型を処理するための <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> の実装。</param>
        <summary>コンテキスト データ、ルート名、シリアル化されるオブジェクト内の項目の最大数、追加データを無視するかどうかを指定するパラメーター、アセンブリを読み込むメソッドを指定するパラメーター、およびサロゲート セレクターを指定するパラメーターを使用して、<see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化または逆シリアル化されるクラス内で `ignoreExtensionDataObject` インターフェイスが実装される場合、<xref:System.Runtime.Serialization.IExtensibleDataObject> パラメーターが使用されます。  
  
   
  
## 例  
 逆シリアル化するときに予想する XML 要素名と名前空間を指定して、<xref:System.Runtime.Serialization.NetDataContractSerializer> のインスタンスを作成する例を次に示します。 このコードはまた、`ignoreExtensionDataObject` を設定し、従来の種類を逆シリアル化するためのサロゲートの選択時にシリアライザーの支援処理を行う <xref:System.Runtime.Serialization.ISurrogateSelector> インターフェイスの実装を指定します。  
  
 [!code-csharp[NetDataContractSerializer\#13](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#13)]
 [!code-vb[NetDataContractSerializer\#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" /> 値が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">コンテンツのルート要素を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
        <param name="rootNamespace">ルート要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
        <param name="context">コンテキスト データを含む <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <param name="maxItemsInObjectGraph">シリアル化または逆シリアル化するグラフ内の項目の最大数。</param>
        <param name="ignoreExtensionDataObject">種類の拡張機能により提供されるデータを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="assemblyFormat">アセンブリの検索および読み込みをするメソッドを指定する <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 値。</param>
        <param name="surrogateSelector">従来の型を処理するための <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> の実装。</param>
        <summary>コンテキスト データ、ルート名、名前空間 \(<see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> パラメーターとして指定\)、シリアル化されるオブジェクト内の項目の最大数、追加データを無視するかどうかを指定するパラメーター、アセンブリを読み込むメソッドを指定するパラメーター、およびサロゲート セレクターを指定するパラメーターを使用して、<see cref="T:System.Xml.XmlDictionaryString" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクト インスタンス間で同じ文字列のセットが使用される場合は、<xref:System.Xml.XmlDictionaryString> を使用してパフォーマンスを最適化できます。  
  
 シリアル化または逆シリアル化されるクラス内で `ignoreExtensionDataObject` インターフェイスが実装される場合、<xref:System.Runtime.Serialization.IExtensibleDataObject> パラメーターが使用されます。  
  
   
  
## 例  
 逆シリアル化するときに予想する XML 要素名と名前空間 \(<xref:System.Runtime.Serialization.NetDataContractSerializer> 引数として指定\) を指定して、<xref:System.Xml.XmlDictionaryString> のインスタンスを作成する例を次に示します。 このコードはまた、`ignoreExtensionDataObject` を設定し、従来の種類を逆シリアル化するためのサロゲートの選択時にシリアライザーの支援処理を行う <xref:System.Runtime.Serialization.ISurrogateSelector> インターフェイスの実装を指定します。  
  
 [!code-csharp[NetDataContractSerializer\#14](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#14)]
 [!code-vb[NetDataContractSerializer\#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxItemsInObjectGraph" /> 値が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アセンブリの検索および読み込みをするメソッドを指定する値を取得します。</summary>
        <value>アセンブリの検索および読み込みをするメソッドを指定する <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `AssemblyFormat` インスタンスは、<xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> または <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple> という 2 つのスタイルをとることができます。`Simple` を指定すると、あるバージョンの型を、別のバージョンからシリアル化されたインスタンスに読み込みおよび逆シリアル化できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定される値は <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 値のいずれとも対応しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クラスの読み込みを制御するオブジェクトを取得または設定します。</summary>
        <value>現在のフォーマッタと共に使用する <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化中に、フォーマッタは、正しい型およびバージョンのオブジェクトのインスタンスを作成するために必要な情報を送信します。 通常、この情報には、オブジェクトの完全な型名および完全なアセンブリ名が含まれます。 アセンブリ名には、アセンブリの名前、バージョン、および厳密な名前のハッシュが含まれます。 既定では、逆シリアル化でこの情報を使用して、同一のオブジェクトのインスタンスを作成します。セキュリティ ポリシーで制限されるアセンブリの読み込みの場合は例外です。 クラスがアセンブリ間を移動したためか、異なるバージョンのクラスがサーバー上およびクライアント上で必要であるためのいずれかの理由で、一部のユーザーはどのクラスを読み込むかを制御する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル化または逆シリアル化するときに役に立つコンテキスト データを渡すことを可能にするオブジェクトを取得または設定します。</summary>
        <value>コンテキスト データを含む <see cref="T:System.Runtime.Serialization.StreamingContext" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.Stream" />。</param>
        <summary>XML ドキュメントまたはストリームをオブジェクトに逆シリアル化します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method assumes the default format is text XML.  
  
> [!IMPORTANT]
>  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトの拡張機能により提供されるデータを無視するかどうかを指定する値を取得します。</summary>
        <value>種類の拡張機能により提供されるデータを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.IExtensibleDataObject> の実装時に、型の将来のバージョンのデータを <xref:System.Runtime.Serialization.ExtensionDataObject> によって保存できます。 ラウンド トリップ中 \(オブジェクトが逆シリアル化され、変更され、再度シリアル化される間\) に、追加データが保存され、再度シリアル化されます。 詳細については、「[Serialization and Deserialization](http://msdn.microsoft.com/ja-jp/3d71814c-bda7-424b-85b7-15084ff9377a)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>逆シリアル化できるオブジェクトにリーダーが配置されているかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、`ReadObject` インターフェイスの `IFormatter` メソッドを使用することと同じです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">読み取る XML を含む <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
        <summary>指定したリーダーを使用して逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを決定します。</summary>
        <returns>読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> は、リーダーが配置する XML 要素の名前と名前空間を調べ、その値を想定される名前および名前空間と比較することにより、オブジェクトを読み取ることができるかどうかを決定します。 想定される名前および名前空間は、コンストラクターに渡される種類のデータ コントラクト名および名前空間、またはコンストラクターに渡される `rootName` 値および `rootNamespace` の値 \(存在する場合\) により設定できます。  
  
 `rootName` と `rootNamespace` は、次のコンストラクターの中に設定できます。<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=fullName>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=fullName> および <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=fullName>。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">読み取る XML を含む <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>指定したリーダーを使用して逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを決定します。</summary>
        <returns>読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル化されるオブジェクトで許可される項目の最大数を取得します。</summary>
        <value>オブジェクトで許可される項目の最大数。 既定値は、<see cref="F:System.Int32.MaxValue" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クォータの設定の詳細については、「[Security Considerations for Data](http://msdn.microsoft.com/ja-jp/a7eb98da-4a93-4692-8b59-9d670c79ffb2)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>XML ストリームまたはドキュメントを読んで、逆シリアル化されたオブジェクトを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームまたはドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
        <param name="verifyObjectName">シリアライザーの構築で使用されるルート名とルート名前空間に対して、周囲の XML 要素名と名前空間が対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームまたはドキュメントを読み取ります。オブジェクトのデータが、シリアライザーを作成するために使用された名前および名前空間と一致するかどうかもチェックされます。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `verifyObjectName` パラメーターは、リーダーが配置する XML 要素の名前と名前空間を調べ、その値を想定される名前および名前空間と比較することにより、オブジェクトを読み取ることができるかどうかを決定します。 想定される名前および名前空間は、コンストラクターに渡される種類のデータ コントラクト名および名前空間、またはコンストラクターに渡される `rootName` 値および `rootNamespace` の値 \(存在する場合\) により設定できます。  
  
 `rootName` と `rootNamespace` は、次のコンストラクターの中に設定できます。<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> および <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="verifyObjectName">シリアライザーの構築で使用されるルート名とルート名前空間に対して、周囲の XML 要素名と名前空間が対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームまたはドキュメントを読み取ります。オブジェクトのデータが、シリアライザーを作成するために使用された名前および名前空間と一致するかどうかもチェックされます。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `verifyObjectName` パラメーターは、リーダーが配置する XML 要素の名前と名前空間を調べ、その値を想定される名前および名前空間と比較することにより、オブジェクトを読み取ることができるかどうかを決定します。 想定される名前および名前空間は、コンストラクターに渡される種類のデータ コントラクト名および名前空間、またはコンストラクターに渡される `rootName` 値および `rootNamespace` の値 \(存在する場合\) により設定できます。  
  
 `rootName` と `rootNamespace` は、次のコンストラクターの中に設定できます。<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> および <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">シリアル化する <see cref="T:System.IO.Stream" />。</param>
        <param name="graph">シリアル化するオブジェクト。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>指定したライターを使用して、指定したオブジェクトをシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル化のサロゲートを選択するときにフォーマッタを支援するオブジェクトを取得または設定します。</summary>
        <value>サロゲートを選択するための <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.IDataContractSurrogate> の詳細については、「[Data Contract Surrogates](http://msdn.microsoft.com/ja-jp/8c31134c-46c5-4ed7-94af-bab0ac0dfce5)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        <altmember cref="T:System.Runtime.Serialization.IFormatter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したライターを使用して、XML の終了要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>、および <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> の各メソッドは、書き込み開始、コンテンツの書き込み、および書き込み終了というパターンを使用する完全なシリアル化を書き込むために、続けて使用されます。 この 3 つのメソッドは、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> メソッドとも呼ばれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、シリアル化するオブジェクト、<xref:System.Runtime.Serialization.NetDataContractSerializer> のインスタンス、および <xref:System.Xml.XmlDictionaryWriter> クラスのインスタンスを作成しています。  この例では、XML ドキュメントにオブジェクト データを書き込むために、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A> メソッド、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>、および <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> メソッドを使用します。  
  
 [!code-csharp[NetDataContractSerializer\#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
        <summary>
          <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> に <see langword="null" /> が設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
        <summary>
          <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクトの完全なコンテンツ \(開始、コンテンツ、および終了\) を XML ドキュメントまたはストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したライターを使用して、XML コンテンツを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>、および <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> の各メソッドは、書き込み開始、コンテンツの書き込み、および書き込み終了というパターンを使用する完全なシリアル化を書き込むために、続けて使用されます。 この 3 つのメソッドは、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> メソッドとも呼ばれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">XML コンテンツを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <param name="graph">シリアル化するオブジェクト。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、シリアル化するオブジェクト、<xref:System.Runtime.Serialization.NetDataContractSerializer> のインスタンス、および <xref:System.Xml.XmlDictionaryWriter> クラスのインスタンスを作成しています。  この例では、XML ドキュメントにオブジェクト データを書き込むために、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A> メソッド、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>、および <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> メソッドを使用します。  
  
 [!code-csharp[NetDataContractSerializer\#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">XML コンテンツを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="graph">シリアル化するオブジェクト。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>
          <see cref="T:System.Xml.XmlWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">XML 要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <param name="graph">シリアル化するオブジェクト。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>
          <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、シリアル化するオブジェクト、<xref:System.Runtime.Serialization.NetDataContractSerializer> のインスタンス、および <xref:System.Xml.XmlDictionaryWriter> クラスのインスタンスを作成しています。  この例では、XML ドキュメントにオブジェクト データを書き込むために、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A> メソッド、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>、および <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> メソッドを使用します。  
  
 [!code-csharp[NetDataContractSerializer\#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">XML 要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <param name="graph">シリアル化するオブジェクト。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>
          <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したライターを使用して、XML の開始要素を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>