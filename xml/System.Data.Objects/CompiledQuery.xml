<Type Name="CompiledQuery" FullName="System.Data.Objects.CompiledQuery">
  <TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.CompiledQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>キャッシュ済みの LINQ to Entities クエリを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 再利用できるように、クエリをコンパイルおよびキャッシュする機能を提供します。 このクラスには、概念上、単一の `Compile` メソッドとその複数のオーバーロードが存在します。`Compile` メソッドを呼び出すことにより、コンパイル済みクエリを表す新しいデリゲートを作成できます。 このデリゲートに、<xref:System.Data.Objects.ObjectContext> 入力パラメーターや、その他のパラメーター値を指定して呼び出すことによって、なんらかの結果 \(<xref:System.Linq.IQueryable%601> のインスタンスなど\) を得ることができます。 デリゲートの初回呼び出し時に、クエリが変換およびキャッシュされます。  
  
   
  
## 例  
 次の例では、入力パラメーターとして <xref:System.DateTime> および <xref:System.Decimal> を受け取り、注文日が 2003 年 3 月 8 日より遅く合計支払額が $300.00 未満である一連の注文を返すクエリをコンパイルした後、呼び出しています。  
  
 [!code-csharp[DP L2E Conceptual Examples\#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples\#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`2" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
   
  
## 例  
 次の例では、<xref:System.Data.Objects.ObjectQuery%601> のインスタンスを返すクエリをコンパイルして呼び出します。  
  
 [!code-csharp[DP L2E Conceptual Examples\#CompiledQuery1\_MQ](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery1_mq)]
 [!code-vb[DP L2E Conceptual Examples\#CompiledQuery1\_MQ](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery1_mq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c>プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`3" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
   
  
## 例  
 次の例では、入力パラメーターとして <xref:System.Decimal> を受け取り、合計支払額が $200.00 以上である一連の注文を返すクエリをコンパイルして呼び出します。  
  
 [!code-csharp[DP L2E Conceptual Examples\#CompiledQuery2](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery2)]
 [!code-vb[DP L2E Conceptual Examples\#CompiledQuery2](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`4" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
   
  
## 例  
 次の例では、入力パラメーターとして <xref:System.DateTime> および <xref:System.Decimal> を受け取り、注文日が 2003 年 3 月 8 日より遅く合計支払額が $300.00 未満である一連の注文を返すクエリをコンパイルした後、呼び出しています。  
  
 [!code-csharp[DP L2E Conceptual Examples\#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples\#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`5" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`6" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`7" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`8" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`9" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`10" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`11" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`12" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg11">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg11</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`13" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg11">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg11</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg12">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg12</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`14" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg11">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg11</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg12">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg12</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg13">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg13</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`15" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg11">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg11</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg12">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg12</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg13">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg13</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg14">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg14</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`16" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">派生した種類 <see cref="T:System.Data.Objects.ObjectContext" />します。</typeparam>
        <typeparam name="TArg1">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg1</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg2">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg2</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg3">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg3</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg4">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg4</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg5">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg5</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg6">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg6</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg7">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg7</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg8">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg8</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg9">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg9</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg10">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg10</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg11">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg11</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg12">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg12</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg13">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg13</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg14">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg14</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TArg15">渡されるデリゲートの実行、返されたときにこのメソッドであるパラメーターの型を表します。<c>TArg15</c> プリミティブ型である必要があります。</typeparam>
        <typeparam name="TResult">種類 <c>T</c> によって返されたデリゲートを実行することによって返されるクエリ結果の <see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" /> メソッドです。</typeparam>
        <param name="query">コンパイルするラムダ式。</param>
        <summary>コンパイル済みの LINQ to Entities クエリを表す新しいデリゲートを作成します。</summary>
        <returns>コンパイル済みの LINQ to Entities クエリを表すジェネリック デリゲート \(<see cref="T:System.Func`17" />\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細と例については、次を参照してください。 [コンパイルされたクエリ \(LINQ to Entities\)](http://msdn.microsoft.com/ja-jp/8025ba1d-29c7-4407-841b-d5a3bed40b7a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>