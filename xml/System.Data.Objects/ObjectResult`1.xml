<Type Name="ObjectResult&lt;T&gt;" FullName="System.Data.Objects.ObjectResult&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class ObjectResult&lt;T&gt; : System.Data.Objects.ObjectResult, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectResult`1&lt;T&gt; extends System.Data.Objects.ObjectResult implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectResult`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectResult</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">結果のエンティティ型。</typeparam>
    <summary>
      <see cref="T:System.Data.Objects.ObjectQuery`1" /> の結果をオブジェクトの列挙可能なコレクションとして表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは <xref:System.Collections.Generic.IEnumerable%601> および <xref:System.IDisposable> を実装します。 このクラスのインスタンスは、<xref:System.Data.Objects.ObjectQuery%601.Execute%2A> メソッドおよび <xref:System.Data.Objects.ObjectQuery%601.System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドから返されます。  
  
   
  
## 例  
 このトピックの例では、に基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832), 、生成された、 [Entity Data Model ウィザード](http://msdn.microsoft.com/ja-jp/423ec9a7-5464-43b7-a7ef-9f5f000848b5)します。  
  
 次の例では、<xref:System.Data.Objects.ObjectResult%601> メソッドから <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> を返します。 次に、列挙子を取得し、クエリ結果を反復処理します。 最後に、列挙子と <xref:System.Data.Objects.ObjectResult%601> オブジェクトを解放します。  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Execute](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_execute)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Execute](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_execute)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectResult`1.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リソースの解放またはリセットに関連付けられているタスクを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Closes the <xref:System.Data.Common.DbDataReader>, which contains the results of the query.  
  
   
  
## 例  
 The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example returns an <xref:System.Data.Objects.ObjectResult%601> from the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method. Then it gets an enumerator and iterates through the query results. At the end, it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.  
  
 [!code-csharp[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectResult`1.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Objects.ObjectResult`1" /> の型を取得します。</summary>
        <value>
          <see cref="T:System.Type" /> の型を表す <see cref="T:System.Data.Objects.ObjectResult`1" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectResult`1.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クエリ結果を反復処理する列挙子を返します。</summary>
        <returns>クエリ結果を反復処理する列挙子。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 不要になった列挙子は破棄する必要があります。 使用して、 `foreach` ステートメント \(`For Each` Visual basic\) に、列挙子が正しく破棄結果に対する反復処理が完了するとします。  
  
   
  
## 例  
 このトピックの例では、に基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectResult%601> メソッドから <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> を返します。 次に、列挙子を取得し、クエリ結果を反復処理します。 最後に、列挙子と <xref:System.Data.Objects.ObjectResult%601> オブジェクトを解放します。  
  
 [!code-csharp[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>