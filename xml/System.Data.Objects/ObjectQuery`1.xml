<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">クエリのエンティティ型。</typeparam>
    <summary>指定されたオブジェクト コンテキスト内の概念モデルに対する型指定されたクエリを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601> ジェネリック クラスは、特定の型のオブジェクトを 0 個以上含んだコレクションを返すクエリを表します。 オブジェクト クエリを実行するには、事前に <xref:System.Data.Objects.ObjectContext> を定義する必要があります。 このコンテキストにより、クエリの作成と実行に必要な接続情報とメタデータ情報が取得されます。 オブジェクト クエリは次のシナリオで実行されます。  
  
-   `foreach` \(C\#\) や `For Each` \(Visual Basic\) 列挙などの操作を実行するとき。  
  
-   <xref:System.Collections.Generic.List%601> コレクションにデータを設定するためにクエリが割り当てられているとき。  
  
-   <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> メソッドが明示的に呼び出されたとき。  
  
 使用して、クエリ自体を作成することができます、[!INCLUDE[esql](~/includes/esql-md.md)]ステートメントまたは LINQ クエリ、またはそのをクラスに含まれるクエリ ビルダー メソッドを使用して、段階的構築できます。 いずれの場合も、結果は新しい <xref:System.Data.Objects.ObjectQuery%601> インスタンスであり、これが明示的に実行されるか列挙されることで、クエリがデータ ソースに送信されて実行され、結果が返されます。  
  
 <xref:System.Data.Objects.ObjectQuery%601> で多いのはエンティティ型ですが、<xref:System.Data.Common.DbDataRecord> 型 \(匿名型に投影する場合\) またはプリミティブ型 \(整数や文字列など\) にすることもできます。 詳細については、次を参照してください。[オブジェクト クエリ](http://msdn.microsoft.com/ja-jp/0768033c-876f-471d-85d5-264884349276)です。  
  
   
  
## 例  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832)です。  
  
 この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Objects.ObjectQuery`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601> は、スカラー結果のコレクションではなく単一のスカラー結果を表すように初期化できます。 一部の拡張メソッドは、入力としてコレクション結果を必要とします。 その場合は、該当するメソッドのいずれかが呼び出されたときに、<xref:System.ArgumentException> がスローされます。 詳細については、次を参照してください。 [オブジェクト クエリ](http://msdn.microsoft.com/ja-jp/0768033c-876f-471d-85d5-264884349276)します。  
  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限を認識できます。 Entity SQL では、クエリ内のコマンド テキストの長さに制限は適用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText">Entity SQL クエリ。</param>
        <param name="context">クエリが実行される <see cref="T:System.Data.Objects.ObjectContext" />。</param>
        <summary>指定された <see cref="T:System.Data.Objects.ObjectQuery`1" /> コマンドを最初のクエリとして使用して、新しい Entity SQL インスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限を認識できます。 Entity SQL では、クエリ内のコマンド テキストの長さに制限は適用されません。  
  
   
  
## 例  
 このトピックの例では、に基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText">Entity SQL クエリ。</param>
        <param name="context">クエリが実行される <see cref="T:System.Data.Objects.ObjectContext" />。</param>
        <param name="mergeOption">このクエリによって取得されるエンティティを、同じ <see cref="T:System.Data.Objects.ObjectContext" /> に対する以前のクエリから返されたエンティティとどのようにマージするかを指定します。</param>
        <summary>指定された <see cref="T:System.Data.Objects.ObjectQuery`1" /> コマンドを最初のクエリとして使用し、さらに指定されたマージ オプションを使用して、新しい Entity SQL インスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限を認識できます。 Entity SQL では、クエリ内のコマンド テキストの長さに制限は適用されません。  
  
   
  
## 例  
 この例は基に、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832)します。<xref:System.Data.Objects.ObjectQuery%601> は、指定されたクエリ、<xref:System.Data.Objects.ObjectContext>、および <xref:System.Data.Objects.MergeOption> で初期化されます。  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>結果が一意となるようにクエリを制限します。</summary>
        <returns>[SELECT DISTINCT](http://msdn.microsoft.com/ja-jp/9a33bd0d-ded1-41e7-ba3c-305502755e3b) が適用された元のインスタンスに相当する新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](http://msdn.microsoft.com/ja-jp/9a33bd0d-ded1-41e7-ba3c-305502755e3b) applied.  
  
 The **languageKeyword tag is not supported!!!!**  
 operator cannot be applied to an object that includes a mapping to a non\-comparable column in the data source \(such as ntext\).  
  
   
  
## 例  
 The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object. Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">クエリから除外する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</param>
        <summary>別のオブジェクト クエリの結果を基に一部の結果を除外することで、クエリの結果を制限します。</summary>
        <returns>指定された <paramref name="query" /> に基づいて [EXCEPT](http://msdn.microsoft.com/ja-jp/69cc23e5-3f8f-4b49-b20e-2f84ff11c80d) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The supplied **parameterReference tag is not supported!!!!**  
 that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  
  
 Parameters that are defined in the supplied **parameterReference tag is not supported!!!!**  
 are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/ja-jp/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">クエリの実行時に使用する <see cref="T:System.Data.Objects.MergeOption" />。 既定値は、<see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> です。</param>
        <summary>指定されたマージ オプションを使用してオブジェクト クエリを実行します。</summary>
        <returns>クエリによって返されるエンティティ オブジェクトのコレクションを含む <see cref="T:System.Data.Objects.ObjectResult`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/ja-jp/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method. Then it gets an enumerator and iterates through the query results. At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.  
  
 [!code-csharp[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts\#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">結果のグループ化に使用するキー列。</param>
        <param name="projection">投影を定義する、選択したプロパティの一覧。</param>
        <param name="parameters">このメソッドで使用される 0 個以上のパラメーター。</param>
        <summary>指定された条件でクエリの結果をグループ化します。</summary>
        <returns>GROUP BY<see cref="T:System.Data.Objects.ObjectQuery`1" /> が適用された元のインスタンスに相当する、<see cref="T:System.Data.Common.DbDataRecord" /> 型の新しい [](http://msdn.microsoft.com/ja-jp/cf4f4972-4724-4945-ba44-943a08549139) インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter. This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>. For more information, see [Object Queries](http://msdn.microsoft.com/ja-jp/0768033c-876f-471d-85d5-264884349276).  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832).  
  
 This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  
  
 This example returns a set of nested data records that contain the **languageKeyword tag is not supported!!!!**  
 column, grouped and sorted alphabetically by the first letter of **languageKeyword tag is not supported!!!!**  
.  
  
 [!code-csharp[DP ObjectServices Concepts\#Projection\_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts\#Projection\_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。  
  
 または  
  
 <paramref name="projection" /> パラメーターが <see langword="null" /> または空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">クエリの結果で返す関連オブジェクトをドットで区切った一覧。</param>
        <summary>クエリ結果に含める関連オブジェクトを指定します。</summary>
        <returns>定義されたクエリ パスを使用する新しい <see cref="T:System.Data.Objects.ObjectQuery`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クエリ パスは、Entity SQL および LINQ クエリで使用できます。  
  
 パスは包括的です。 たとえば、インクルード呼び出し `Include("Orders.OrderLines")`, 、するだけでなく `OrderLines` もが含まれる `Orders`です。 詳細については、次を参照してください。 [関連オブジェクトの読み込み](http://msdn.microsoft.com/ja-jp/452347d2-7b3b-44cd-9001-231299a28cb1)します。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドを呼び出した場合、クエリ パスは <xref:System.Data.Objects.ObjectQuery%601> の返されたインスタンスでのみ有効です。<xref:System.Data.Objects.ObjectQuery%601> の他のインスタンスとオブジェクト コンテキスト自体は影響を受けません。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドはクエリ オブジェクトを返すので、このメソッドを <xref:System.Data.Objects.ObjectQuery%601> で複数回呼び出すことで、次の例のようにクエリに複数のパスを指定できます。  
  
 [!code-csharp[DP ObjectServices Concepts\#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts\#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]  
  
   
  
## 例  
 [!code-csharp[DP ObjectServices Concepts\#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts\#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> は <see langword="empty" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">クエリに含める結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</param>
        <summary>別のオブジェクト クエリに存在する結果のみを含めることで、クエリの結果を制限します。</summary>
        <returns>指定された <paramref name="query" /> に基づいて [INTERSECT](http://msdn.microsoft.com/ja-jp/93c6fe33-f341-4b52-911e-adf503891951) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The supplied **parameterReference tag is not supported!!!!**  
 that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  
  
 Parameters that are defined in the supplied **parameterReference tag is not supported!!!!**  
 are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/ja-jp/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.  
  
   
  
## 例  
 The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクト クエリの名前を取得または設定します。</summary>
        <value>A <see langword="string" /> これの名前を指定する値 <see cref="T:System.Data.Objects.ObjectQuery`1" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクト クエリの名前は、クエリ ビルダー メソッドの作成時に、シーケンス内の現在のオブジェクト クエリを名前で識別するために使用されます。 クエリ名は、既定では、 `it`です。 この名前は、<xref:System.Data.Objects.Query%601.Where%2A> メソッド内の結合または <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> メソッド内で、現在のシーケンスを参照する際に便利です。 詳細については、次を参照してください。 [クエリ ビルダー メソッド](http://msdn.microsoft.com/ja-jp/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Name%2A> の <xref:System.Data.Objects.ObjectQuery%601> プロパティを設定すると、その値が後続のメソッドで別名として使用されます。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Name%2A> プロパティの値は、先頭を英字にする必要があり、英字、数字、およびアンダースコアを含めることができます。  
  
   
  
## 例  
 この例では、最初の <xref:System.Data.Objects.ObjectQuery%601> の名前を "product" に設定し、この別名を後続の <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> メソッドで使用します。 このトピックの例では、に基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 [!code-csharp[DP ObjectServices Concepts\#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts\#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定時に指定された値が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType">フィルターを適用してクエリを実行したときに返された <see cref="T:System.Data.Objects.ObjectResult`1" /> の型。</typeparam>
        <summary>特定の型のみが結果となるようにクエリを制限します。</summary>
        <returns>[OFTYPE](http://msdn.microsoft.com/ja-jp/6d259ca7-bbf0-40f8-a154-181d25c0d67e) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.OfType%2A> is used to filter query results by a specific entity or complex type. This supports a conceptual model with object inheritance. For more information, see [Entity Data Model Inheritance \(Application Scenarios\)](http://msdn.microsoft.com/ja-jp/5de40bf8-527f-4f2e-96e3-61164f429caa). The  
  
 <xref:System.Data.Objects.ObjectQuery%601.OfType%2A> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException">指定された型が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">結果の並べ替えに使用するキー列。</param>
        <param name="parameters">このメソッドで使用される 0 個以上のパラメーター。</param>
        <summary>指定された条件でクエリの結果を並べ替えます。</summary>
        <returns>[ORDER BY](http://msdn.microsoft.com/ja-jp/c0b61572-ecee-41eb-9d7f-74132ec8a26c) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The ordering of results in a nested query cannot be guaranteed.  
  
 <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by **languageKeyword tag is not supported!!!!**  
.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keys" /> パラメーターまたは <paramref name="parameters" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection">投影を定義する、選択したプロパティの一覧。</param>
        <param name="parameters">このメソッドで使用される 0 個以上のパラメーター。</param>
        <summary>クエリの結果を、指定された投影で定義されているプロパティのみに制限します。</summary>
        <returns>SELECT<see cref="T:System.Data.Objects.ObjectQuery`1" /> が適用された元のインスタンスに相当する、<see cref="T:System.Data.Common.DbDataRecord" /> 型の新しい [](http://msdn.microsoft.com/ja-jp/9a33bd0d-ded1-41e7-ba3c-305502755e3b) インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>. Use the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method to return values that are simple types, entity types, or complex types. For more information, see [Object Queries](http://msdn.microsoft.com/ja-jp/0768033c-876f-471d-85d5-264884349276).  
  
 When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects. For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/ja-jp/b1d71c7d-16a7-4b46-96ac-690176bd5057).  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the **languageKeyword tag is not supported!!!!**  
 fields of the results of this query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="projection" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="parameters" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="projection" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <see cref="T:System.Data.Objects.ObjectQuery`1" /> メソッドによって返された <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> の型。</typeparam>
        <param name="projection">投影の一覧。</param>
        <param name="parameters">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</param>
        <summary>クエリの結果を、投影で指定されたプロパティのみに制限します。</summary>
        <returns>特定の投影と互換性がある型の新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。 返される <see cref="T:System.Data.Objects.ObjectQuery`1" /> は、[SELECT VALUE](http://msdn.microsoft.com/ja-jp/9a33bd0d-ded1-41e7-ba3c-305502755e3b) が適用された元のインスタンスに相当します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> is used to return values that are simple types, entity types, or complex types. Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type. For more information, see [Object Queries](http://msdn.microsoft.com/ja-jp/0768033c-876f-471d-85d5-264884349276).  
  
 The <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method applies the projection specified by the **parameterReference tag is not supported!!!!**  
 parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A>.  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of **languageKeyword tag is not supported!!!!**  
 values projected from the results of the existing query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="projection" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="parameters" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="projection" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">結果の並べ替えに使用するキー列。</param>
        <param name="count">スキップする結果の数。 定数またはパラメーター参照を指定する必要があります。</param>
        <param name="parameters">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</param>
        <summary>指定された条件でクエリの結果を並べ替え、指定された数の結果をスキップします。</summary>
        <returns>ORDER BY<see cref="T:System.Data.Objects.ObjectQuery`1" /> と [SKIP](http://msdn.microsoft.com/ja-jp/c0b61572-ecee-41eb-9d7f-74132ec8a26c) の両方が適用された元のインスタンスに相当する、新しい [](http://msdn.microsoft.com/ja-jp/e2139412-8ea4-451b-8f10-91af18dfa3ec) インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method. When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](http://msdn.microsoft.com/ja-jp/c22ffede-0a52-44d1-99b9-4a91e651e1b9) statement of an  clause.  
  
   
  
## 例  
 This example gets five **languageKeyword tag is not supported!!!!**  
 objects after skipping the first three in the query result, sorted by **languageKeyword tag is not supported!!!!**  
.  
  
 [!code-csharp[DP ObjectServices Concepts\#Projection\_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts\#Projection\_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">任意の引数が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keys" /> が空の文字列です。  
  
 または  
  
 <paramref name="count" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クエリの結果を反復処理する列挙子を返します。</summary>
        <returns>結果の反復処理に使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> を呼び出すとクエリが実行されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count">結果に文字列として返されるアイテムの数。</param>
        <param name="parameters">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</param>
        <summary>クエリの結果を、指定されたアイテム数に制限します。</summary>
        <returns>[TOP](http://msdn.microsoft.com/ja-jp/4a4a0954-82e2-4eae-bcaf-7c4552f3532d) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.  
  
 When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](http://msdn.microsoft.com/ja-jp/c22ffede-0a52-44d1-99b9-4a91e651e1b9) statement of an [ORDER BY](http://msdn.microsoft.com/ja-jp/c0b61572-ecee-41eb-9d7f-74132ec8a26c) clause.  
  
   
  
## 例  
 These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832).  
  
 This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  
  
 This example gets five **languageKeyword tag is not supported!!!!**  
 objects after skipping the first three in the query result, sorted by **languageKeyword tag is not supported!!!!**  
. <xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](http://msdn.microsoft.com/ja-jp/c22ffede-0a52-44d1-99b9-4a91e651e1b9) for paging.  
  
 [!code-csharp[DP ObjectServices Concepts\#Projection\_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts\#Projection\_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="count" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="count" /> が空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">追加する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</param>
        <summary>クエリの結果を、別のオブジェクト クエリの結果と重複しないように結合します。</summary>
        <returns>指定された <paramref name="query" /> の結果を追加するために [UNION](http://msdn.microsoft.com/ja-jp/df98a4db-b00d-4c8b-bd74-0d285f27e1df) を適用した元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.  
  
 The supplied **parameterReference tag is not supported!!!!**  
 that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because **languageKeyword tag is not supported!!!!**  
 can be promoted to **languageKeyword tag is not supported!!!!**  
:  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 The following will throw an exception because **languageKeyword tag is not supported!!!!**  
 cannot be promoted to **languageKeyword tag is not supported!!!!**  
.  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed **parameterReference tag is not supported!!!!**  
 must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  
  
 Parameters that are defined in the supplied **parameterReference tag is not supported!!!!**  
 are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/ja-jp/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.  
  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">追加する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</param>
        <summary>クエリの結果を、別のオブジェクト クエリの結果と、重複をすべて含めて結合します。</summary>
        <returns>指定された <paramref name="query" /> の結果を追加するために [UNION ALL](http://msdn.microsoft.com/ja-jp/df98a4db-b00d-4c8b-bd74-0d285f27e1df) を適用した元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.  
  
 The supplied **parameterReference tag is not supported!!!!**  
 that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because **languageKeyword tag is not supported!!!!**  
 can be promoted to **languageKeyword tag is not supported!!!!**  
:  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 The following will throw an exception because **languageKeyword tag is not supported!!!!**  
 cannot be promoted to **languageKeyword tag is not supported!!!!**  
.  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed **parameterReference tag is not supported!!!!**  
 must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  
  
 Parameters that are defined in the supplied **parameterReference tag is not supported!!!!**  
 are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/ja-jp/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.  
  
   
  
## 例  
 The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object. Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Distinct\_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate">フィルター述語。</param>
        <param name="parameters">このメソッドで使用される 0 個以上のパラメーター。</param>
        <summary>指定されたフィルター条件と一致する結果となるようにクエリを制限します。</summary>
        <returns>[WHERE](http://msdn.microsoft.com/ja-jp/a8e1061e-0028-4a6f-8f19-b9f48e96c4b8) が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/ja-jp/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.  
  
 [!code-csharp[DP ObjectServices Concepts\#ObjectQuery\_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts\#ObjectQuery\_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="predicate" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="parameters" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="predicate" /> が空の文字列です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>