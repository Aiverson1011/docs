<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET プロジェクト内の 1 つまたは複数の仮想パスからアセンブリを構築するためのコンテナーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Web.Compilation.AssemblyBuilder> クラスの併用 <xref:System.Web.Compilation.BuildProvider> クラスのメソッドを 1 つまたは複数のファイルをコンパイルされたアセンブリに組み込みます。  
  
 <xref:System.Web.Compilation.BuildProvider> クラスは、個々 のファイルのビルド機能を定義し、 <xref:System.Web.Compilation.AssemblyBuilder> クラスは、それぞれによって提供されるソース コードを組み合わせた <xref:System.Web.Compilation.BuildProvider> インスタンスを 1 つのアセンブリにします。 ASP.NET ビルド環境、 <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトを <xref:System.Web.Compilation.BuildProvider> メソッドの 1 つまたは複数のファイルからアセンブリを作成するときにそのように各 <xref:System.Web.Compilation.BuildProvider> インスタンスは、ソース コード ファイル全体のアセンブリにそのファイルを投稿できます。  
  
 ASP.NET ビルド環境を決定言語およびコンパイラが必要に応じて、プロジェクト内のファイルによって、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> プロパティです。 ビルド環境のグループのファイルは、コンパイラ設定に基づいており、コンパイラが必要なファイルからアセンブリをビルドします。  
  
 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> プロパティを示す、 <xref:System.CodeDom.Compiler.CodeDomProvider> それぞれによって提供されるソース コードからアセンブリをコンパイルする ASP.NET ビルド環境を使用して実装 <xref:System.Web.Compilation.BuildProvider> 実装します。  
  
 A <xref:System.Web.Compilation.BuildProvider> オブジェクトを使用して CodeDOM グラフの形式でソース コードを提供する、 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドです。 A <xref:System.Web.Compilation.BuildProvider> オブジェクトを使用して、物理ファイルに格納されているソース コードを提供する、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドです。  
  
 各後 <xref:System.Web.Compilation.BuildProvider> オブジェクトは、適切なソース コードを提供 <xref:System.Web.Compilation.AssemblyBuilder> メソッド、ASP.NET ビルド環境の使用方法、 <xref:System.Web.Compilation.AssemblyBuilder> 収集されたソース コードをアセンブリにコンパイルするクラス。  
  
   
  
## 例  
 次のコード例は、抽象から継承する簡単なビルド プロバイダーの実装を示しています。 <xref:System.Web.Compilation.BuildProvider> 基本クラスです。 ビルド プロバイダーは、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, 、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 基底クラスのメンバーです。  
  
 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装、ビルド プロバイダーが、アセンブリのコンパイルを使用するため、生成されたコードを追加、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドです。 この例の実装を含まない、 `SampleClassGenerator` クラスです。 詳細については、「<xref:System.CodeDom.CodeCompileUnit>」を参照してください。  
  
 [!code-csharp[System.Web.Compilation\_SampleBuildProvider\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation\_SampleBuildProvider\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">アセンブリ コンパイルに含めるコード コンパイル単位またはソース ファイルによって参照されるアセンブリ。</param>
        <summary>ファイルを生成するソース コードによって参照されるアセンブリを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> 実装を使用して、 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドは入力アセンブリ内の型を参照するソース コードを生成するとします。  
  
 ASP.NET ビルド環境によって初期化のビルド プロバイダーを使って参照に使用できるアセンブリの既定のコレクション、 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName> プロパティです。 ビルド プロバイダーを使用して、追加のアセンブリに追加のビルド プロバイダーでは、その他のアセンブリを参照するソース コードを生成する場合、 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> メソッドです。 ASP.NET ビルド環境では、プロバイダーとアセンブリ参照の既定のコレクションをビルドによって追加された両方の参照先アセンブリを使用してアセンブリのコンパイル時に外部のタイプを解決します。  
  
 通常、 <xref:System.Web.Compilation.BuildProvider> オブジェクトは、ソース コードを追加、 <xref:System.Web.Compilation.AssemblyBuilder> 内のオブジェクト、 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドです。 ビルド プロバイダーが使用して、型のアセンブリを追加するビルド プロバイダーでは、外部型を使用するソース コードを生成する場合、 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=fullName> メソッドです。  
  
 使用して、 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> によって生成されたソース コードで必要な参照先アセンブリを追加するメソッドを <xref:System.Web.Compilation.BuildProvider> 特定のファイルの種類のインスタンス。 使用して、 [\(ASP.NET 設定スキーマ\) compilation の assemblies 要素](http://msdn.microsoft.com/ja-jp/3811c448-af1c-498d-be2b-6ed2634c51e9) プロジェクトで複数のファイルの種類間の参照のためにアセンブリを構成する構成要素。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">生成するためのビルド プロバイダー <c>compileUnit</c>します。</param>
        <param name="compileUnit">アセンブリのコンパイルに含めるコード コンパイル単位です。</param>
        <summary>CodeDOM グラフの形式のアセンブリのソース コードを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> 実装の呼び出し、 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> メソッドは仮想パスの CodeDOM グラフを生成するとします。 ソース コードを使用して追加 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> アセンブリのコンパイルに含まれています。  
  
 通常、ビルド プロバイダーの <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装の読み取り、 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティが、内容を解析しを指定された生成されたソース コードを追加 <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトです。 ビルド プロバイダーを使用して、 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> CodeDOM グラフとして、アセンブリにソース コードを追加します。 または、ビルド プロバイダーを使用できる、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> アセンブリへの物理ファイルとしてソース コードを追加する方法です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アセンブリにソース コードを構築するためのコンパイラを取得します。</summary>
        <value>読み取り専用 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> アセンブリに各ビルド プロバイダーによって提供されるソース コードをコンパイルするために使用されている実装します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> プロパティを示す、 <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName> それぞれによって提供されるソース コードからアセンブリをコンパイルする ASP.NET ビルド環境を使用して実装 <xref:System.Web.Compilation.BuildProvider> 実装します。  
  
 ASP.NET ビルド環境を決定言語およびコンパイラが必要に応じて、プロジェクト内のファイルによって、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName> プロパティです。 ビルド環境のグループのファイルは、コンパイラ設定に基づいており、コンパイラが必要なファイルからアセンブリをビルドします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">ビルド プロバイダーがコードのソース ファイルを生成します。</param>
        <summary>一時的なソース ファイルを作成し、アセンブリのコンパイルにソース ファイルをインクルードするビルド プロバイダーを使用します。</summary>
        <returns>開いている <see cref="T:System.IO.TextWriter" /> を使用して、一時ファイルにソース コードを記述できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> 実装の呼び出し、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドは仮想パスのソース ファイルを生成するとします。 ソース コードを使用して追加 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> アセンブリのコンパイルに含まれています。  
  
 ビルド プロバイダーでは通常、 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装の読み取り、 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> プロパティが、内容を解析しを指定された生成されたソース コードを追加 <xref:System.Web.Compilation.AssemblyBuilder> オブジェクトです。 ビルド プロバイダーを使用して、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> アセンブリに物理ファイルとしてソース コードを追加します。 または、ビルド プロバイダーを使用できる、 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> CodeDOM グラフとして、アセンブリにソース コードを追加するメソッドです。  
  
 呼び出した後 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, 、ビルド プロバイダーは、ソース、返されたを使用してファイルの内容を書き込む <xref:System.IO.TextWriter> オブジェクトです。 ソース ファイルを作成した後、 <xref:System.Web.Compilation.BuildProvider> オブジェクトを使用する必要があります、 <xref:System.IO.TextWriter.Close%2A> を終了するメソッド、 <xref:System.IO.TextWriter> オブジェクトし、関連付けられているシステム リソースを解放します。  
  
   
  
## 例  
 次のコード例は、抽象から継承する簡単なビルド プロバイダーの実装を示しています。 <xref:System.Web.Compilation.BuildProvider> 基本クラスです。 ビルド プロバイダーは、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, 、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 、および <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 基底クラスのメンバーです。  
  
 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> メソッドの実装、ビルド プロバイダーが、アセンブリのコンパイルを使用するため、生成されたコードを追加、 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> メソッドです。 この例の実装を含まない、 `SampleClassGenerator` クラスです。 詳細については、「<xref:System.CodeDom.CodeCompileUnit>」を参照してください。  
  
 [!code-csharp[System.Web.Compilation\_SampleBuildProvider\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation\_SampleBuildProvider\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">リソースを生成するビルド プロバイダー。</param>
        <param name="name">作成するリソース ファイルの名前。</param>
        <summary>アセンブリのコンパイルに含めるリソース ファイルを作成するビルド プロバイダーを使用します。</summary>
        <returns>開いている <see cref="T:System.IO.Stream" /> を使用して、アセンブリのコンパイルに含まれているリソースを記述できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出した後、 <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> 、メソッド、 <xref:System.Web.Compilation.BuildProvider> オブジェクトは、リソース、返されたを使用してファイルの内容を書き込みます <xref:System.IO.Stream> オブジェクトです。 ビルド プロバイダーが使用しているリソースを記述するなど、 <xref:System.Resources.ResourceWriter> オブジェクトです。 リソース ファイルを書き込み後のビルド プロバイダーを使用する必要があります、 <xref:System.IO.Stream.Close%2A> を終了するメソッド、 <xref:System.IO.Stream> オブジェクトし、関連付けられているシステム リソースを解放します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は有効なファイル名ではありません。</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">生成する型の名前。</param>
        <summary>型のオブジェクトの高速工場出荷時のテンプレートをコンパイルされたアセンブリに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> 実装の呼び出し、 <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> 型のインスタンスを頻繁に作成するためのパフォーマンスを最適化する方法です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">一時ファイルに使用するファイル拡張子。</param>
        <summary>一時ファイルのパスを生成します。</summary>
        <returns>指定したファイル拡張子の一時ファイルへのパス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.Compilation.BuildProvider> 実装の呼び出し、 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> アセンブリをコンパイルした後に自動的に削除される一時ファイルのパスを取得します。  
  
 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> メソッドは、一意の一時ファイルのパスが生成されますが、ファイルを作成できません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>