<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>アセンブリがビルドされたら、アセンブリを処理するクラスが実装するメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンパイルされた後、このインターフェイスを実装するクラスはアセンブリにアクセスできます。<xref:System.Web.Compilation.AssemblyBuilder> クラスがアセンブリをコンパイルし、かを確認するかどうか、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイスは、Web 構成ファイルに登録されています。 場合は、 <xref:System.Web.Compilation.AssemblyBuilder> 呼び出しをインスタンス化、 <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> のメソッド、 <xref:System.Web.Compilation.IAssemblyPostProcessor> コンパイルした後、アセンブリを読み込む前に何もするインターフェイスです。 たとえば、プロファイラー ツールでは、アセンブリのプローブを確立するためには、このインターフェイスを実装でした。  
  
 ときに、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイスが登録されて、デバッグ モードで ASP.NET アプリケーションとそのアセンブリをコンパイルするが常にします。  
  
   
  
## 例  
 次のコード例では、実装を作成、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイス、および Web アプリケーションの Web.config ファイルに登録します。  
  
 という名前のクラスを作成するコード例の最初の部分 `Samples.Process.postProcessTest` を実装する、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイスです。 このクラスは、ファイルの書き込みの単純な操作を実行するときに、 <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> メソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 コマンドを使用して、.dll ファイルにクラスをコンパイル `csc /target:library postProcessTest.cs`します。 ASP.NET アプリケーションの Bin フォルダーに生成された .dll ファイルを追加し、次のコードに示すように、Web.config ファイルに .dll を登録します。  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 ユーザーは、Web サイトにアクセス、Web アプリケーションを動的にコンパイルし、ファイルと、MyTest.txt は C:\\compile に書き込まれます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">アセンブリへのパス。</param>
        <summary>アセンブリがアセンブリの変更を実装するクラスを許可するように読み込まれる前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Compilation.AssemblyBuilder> クラスは、アセンブリがコンパイルされた後にこのメソッドを呼び出します。 このメソッドで、アセンブリを読み込む前に実行されるアクションは含めないでください。  
  
   
  
## 例  
 次のコード例では、実装を作成、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイス、および Web アプリケーションの Web.config ファイルに登録します。  
  
 という名前のクラスを作成するコード例の最初の部分 `Samples.Process.postProcessTest` を実装する、 <xref:System.Web.Compilation.IAssemblyPostProcessor> インターフェイスです。 このクラスは、ファイルの書き込みの単純な操作を実行するときに、 <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> メソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 コマンドを使用して、.dll ファイルにクラスをコンパイル `csc /target:library postProcessTest.cs`します。 ASP.NET アプリケーションの Bin フォルダーに生成された .dll ファイルを追加し、次のコードに示すように、Web.config ファイルに .dll を登録します。  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 ユーザーは、Web サイトにアクセス、Web アプリケーションを動的にコンパイルし、ファイルと、MyTest.txt は C:\\compile に書き込まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>