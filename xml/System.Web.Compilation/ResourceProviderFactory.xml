<Type Name="ResourceProviderFactory" FullName="System.Web.Compilation.ResourceProviderFactory">
  <TypeSignature Language="C#" Value="public abstract class ResourceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceProviderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>リソース プロバイダーを作成するクラスの基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Compilation.ResourceProviderFactory> グローバルとローカル リソース プロバイダーを返すオブジェクトの基本クラスとして機能する抽象クラスです。 クラスから派生する必要があります <xref:System.Web.Compilation.ResourceProviderFactory> その機能を実装します。  
  
   
  
## 例  
 次のコード例では、キャッシュされた値を取得するカスタマイズされたリソース プロバイダー ファクトリを示します。  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.IResourceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>派生クラスとして実装された場合は、派生クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 抽象クラスのインスタンスを作成できません。 派生するクラス <xref:System.Web.Compilation.ResourceProviderFactory> すべての既定値を設定するコンス トラクターを実装することができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalResourceProvider">
      <MemberSignature Language="C#" Value="public abstract System.Web.Compilation.IResourceProvider CreateGlobalResourceProvider (string classKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Compilation.IResourceProvider CreateGlobalResourceProvider(string classKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.CreateGlobalResourceProvider(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.IResourceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">リソース クラスの名前。</param>
        <summary>派生クラスでオーバーライドされた場合は、グローバル リソース プロバイダーを作成します。</summary>
        <returns>グローバル リソース プロバイダーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生クラスでオーバーライドされると、このメソッドが戻る、 <xref:System.Web.Compilation.IResourceProvider> オブジェクトを指定した `classKey` パラメーター。 メソッドを実装することがように `classKey` App\_GlobalResources フォルダー内の .resx ファイルの名前を指定します。  
  
   
  
## 例  
 次のコード例は、カスタマイズされたリソース プロバイダーのファクトリを実装するを示しています、 <xref:System.Web.Compilation.ResourceProviderFactory.CreateGlobalResourceProvider%2A> キャッシュされた値のメソッドを取得します。  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalResourceProvider">
      <MemberSignature Language="C#" Value="public abstract System.Web.Compilation.IResourceProvider CreateLocalResourceProvider (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Compilation.IResourceProvider CreateLocalResourceProvider(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceProviderFactory.CreateLocalResourceProvider(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.IResourceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">リソース ファイルへのパス。</param>
        <summary>派生クラスでオーバーライドされた場合は、ローカルのリソース プロバイダーを作成します。</summary>
        <returns>ローカル リソース プロバイダーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生クラスでオーバーライドされると、このメソッドが戻る、 <xref:System.Web.Compilation.IResourceProvider> オブジェクトを指定した `virtualPath` パラメーター。 メソッドを実装することがように `virtualPath` リソース ファイルにマップします。  
  
   
  
## 例  
 次のコード例は、カスタマイズされたリソース プロバイダーのファクトリを実装するを示しています、 <xref:System.Web.Compilation.ResourceProviderFactory.CreateLocalResourceProvider%2A> キャッシュされた値のメソッドを取得します。  
  
 [!code-csharp[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ResourceProviderFactory\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceProviderFactory/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>