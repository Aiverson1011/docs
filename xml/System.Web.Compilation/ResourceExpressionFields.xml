<Type Name="ResourceExpressionFields" FullName="System.Web.Compilation.ResourceExpressionFields">
  <TypeSignature Language="C#" Value="public sealed class ResourceExpressionFields" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceExpressionFields extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceExpressionFields" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>解析されたリソースの式のフィールドが含まれています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 リソースの式に含まれる値は解析されのインスタンスに格納されているページが解析されるとき、 <xref:System.Web.Compilation.ResourceExpressionFields> クラスです。 これは、 <xref:System.Web.Compilation.ResourceExpressionFields> オブジェクトには、2 つのフィールドが含まれています。 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> と <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>です。 これらのフィールドは、明示的でリソースの式の値から取り出さ \(`<%$ Resources: ClassKey, ResourceKey %>`\) または暗黙的な \(`meta:resourcekey="ResourceKey"`\) 形式です。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> プロパティは、リソース ファイルにマップされているリソースのクラス名を指定します。 たとえば、名前付き Financial.resx、または Financial.en GB.resx などのローカライズされたリソース ファイルを参照するリソースの式と表示されます `<%$ Resources: Financial, ResourceKey %>`します。 解析後に、 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> プロパティはその値として"Financial"を返します。  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> プロパティは、ファイルから取得する特定のキー\/値ペアを識別します。 Financial.resx ファイルと呼ばれるキーが含まれている場合 `Currency`, 、リソースの式に値を指定する可能性があります `<%$ Resources: Financial, Currency %>`します。 解析後に、 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> プロパティはその値として"Currency"を返します。  
  
 リソースの式を解析、 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> メソッドです。  
  
> [!CAUTION]
>  リソース ファイルに機密情報を保存しないかです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>解析されたリソースの式のクラスのキーを取得します。</summary>
        <value>A <see cref="T:System.String" /> クラス キーを含むまたは <see cref="F:System.String.Empty" /> クラスのキーが設定されていない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、解析されたリソースの式のクラスのキーを返します。 クラス キーは、リソース ファイルの名前を表し、形式の式でコンマ \(,\) の前に指定された値は、 `<%$ Resources: [Namespace.]ClassKey, ResourceKey $>`です。 リソース クラスの名前空間の値は省略できます。 名前空間とクラスのキーが返される名前空間を指定した場合、 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> プロパティです。 クラス キーは、スペースを含めることはできません、または 2 バイト文字セット \(DBCS\)。  
  
 名前付き Financial.resx または Financial.en GB.resx などのローカライズされたリソース ファイルを参照するには、リソースの式を含めます \<`%$ Resources: Financial, ResourceKey %>`します。 解析後に、 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> プロパティはその値として"Financial"を返します。  
  
> [!CAUTION]
>  リソース ファイルに機密情報を保存しないかです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>解析されたリソースの式のリソース キーを取得します。</summary>
        <value>A <see cref="T:System.String" /> リソース キーを含むまたは <see cref="F:System.String.Empty" /> リソース キーが設定されていない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、解析されたリソースの式のリソース キーを返します。 リソース キーはコンマ \(,\) の後の形式の式で指定された値 `<%$ Resources: ClassKey, ResourceKey %>`です。<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> プロパティは、クラスのキーにマップされているリソース ファイル内の特定のキー\/値ペアを識別します。 たとえば、という名前のファイル Financial.resx 含まれていると呼ばれるキー `Currency`, 、リソースの式に値を指定する可能性があります `<%$ Resources: Financial, Currency %>`します。 解析後に、 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> プロパティはその値として"Currency"を返します。  
  
> [!CAUTION]
>  リソース ファイルに機密情報を保存しないかです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>