<Type Name="BuildManager" FullName="System.Web.Compilation.BuildManager">
  <TypeSignature Language="C#" Value="public sealed class BuildManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BuildManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET アプリケーションのコンパイルを管理するためにメソッドのセットを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Compilation.BuildManager> クラスは、アセンブリとアプリケーションのページをコンパイルするプロセスを管理します。 シール クラスしは継承できません。  
  
 <xref:System.Web.Compilation.BuildManager> コンパイルされたアセンブリに関する情報を提供する静的メンバーが含まれています。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <Member MemberName="AddCompilationDependency">
      <MemberSignature Language="C#" Value="public static void AddCompilationDependency (string dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCompilationDependency(string dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependency" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependency">依存関係を表す文字列。</param>
        <summary>ビルド マネージャーが、クリーン ビルドが必要なかどうかを判断するために使用する依存関係を表す文字列を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に、メソッドを呼び出す必要があります、 `Application_PreStartInit` アプリケーションの段階です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dependency" /> パラメーターは <see langword="null" /> または空の文字列です。</exception>
        <exception cref="T:System.InvalidOperationException">後にメソッドが呼び出された、 <see langword="Application_PreStartInit" /> アプリケーションの段階です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddReferencedAssembly">
      <MemberSignature Language="C#" Value="public static void AddReferencedAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddReferencedAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">追加するアセンブリ。</param>
        <summary>参照アセンブリのアプリケーションのセットには、アセンブリを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出すことは、アプリケーション レベルの Web.config ファイルにアセンブリを追加すると同じです。 中に、メソッドを呼び出す必要があります、 `Application_PreStartInit` アプリケーションの段階です。  
  
 <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> メソッドでは、構成ファイルから決定されるアセンブリと、このメソッドを使用して追加されたすべてのアセンブリのセットを返します。  
  
 既に追加されているアセンブリを追加しようとすると、重複するエントリが無視されます。  
  
 このメソッドは、前に呼び出す必要があります、 `Application_Start` Global.asax ファイル内のイベントが発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assembly" /> パラメーターは <see langword="null" /> または空です。</exception>
        <exception cref="T:System.InvalidOperationException">前に、メソッドが呼び出されなかった、 <see langword="Application_Start" /> Global.asax ファイル内のイベントが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BatchCompilationEnabled">
      <MemberSignature Language="C#" Value="public static Nullable&lt;bool&gt; BatchCompilationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Nullable`1&lt;bool&gt; BatchCompilationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.BatchCompilationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバッチのコンパイルが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> バッチのコンパイルは常に有効な場合、 <see langword="false" /> バッチのコンパイルが有効にない場合または <see langword="null" /> コンパイルの設定が構成ファイルから特定された場合。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティでは、バッチのコンパイルを有効または無効にできます。 プログラムを使用しています。 対応する、 `batch` の属性、 `compilation` Web.config ファイル内の要素。 詳細については、次を参照してください。 [compilation 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/7c319582-074a-4d2a-a787-03b9d4541c12)します。  
  
 のみ、プロパティを設定することができます、 `PreApplicationStart` メソッドです。`PreApplicationStart` メソッドの詳細については、<xref:System.Web.PreApplicationStartMethodAttribute> を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">プロパティが設定されていない、 <see langword="PreApplicationStart" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CodeAssemblies">
      <MemberSignature Language="C#" Value="public static System.Collections.IList CodeAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IList CodeAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.CodeAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>App\_Code ディレクトリからビルドされたアセンブリの一覧を取得します。</summary>
        <value>
          <see cref="T:System.Collections.IList" /> を App\_Code ディレクトリからビルドされたアセンブリを含むコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCachedFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream CreateCachedFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream CreateCachedFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.CreateCachedFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">作成するファイルの名前。</param>
        <summary>キャッシュされたファイルを作成します。</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> 、新しいファイルのオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドと <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> メソッドを使用すると、部分的に信頼された環境でアプリケーション ドメインの再起動前後で保持されるキャッシュ処理を実行します。 コント ローラーの検索の結果をキャッシュする MVC フレームワークが使用されます。  
  
 データをキャッシュするへの書き込み、 <xref:System.IO.Stream> このメソッドによって返されるオブジェクト。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFromVirtualPath">
      <MemberSignature Language="C#" Value="public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstanceFromVirtualPath(string virtualPath, class System.Type requiredBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="requiredBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="virtualPath">インスタンスを作成するファイルの仮想パス。</param>
        <param name="requiredBaseType">作成するオブジェクトを定義する基本データ型。</param>
        <summary>指定された仮想パス、ファイルを処理し、結果のインスタンスを作成します。</summary>
        <returns>
          <see cref="T:System.Object" /> 処理されたファイルのインスタンスを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath%2A> メソッドがページ コンパイルとコンパイル以外で動作します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedBuildDependencySet">
      <MemberSignature Language="C#" Value="public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(class System.Web.HttpContext context, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildDependencySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">要求のコンテキスト。</param>
        <param name="virtualPath">ビルド依存関係のセットを決定するための仮想パス。</param>
        <summary>ビルド依存関係は、パスが、ASP.NET キャッシュ内にある場合は、仮想パスの設定を返します。</summary>
        <returns>A <see cref="T:System.Web.Compilation.BuildDependencySet" /> 、キャッシュに格納されているオブジェクトまたは <see langword="null" /> 場合、 <see cref="T:System.Web.Compilation.BuildDependencySet" /> キャッシュからオブジェクトを取得することはできません。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildDependencySet" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedBuildDependencySet">
      <MemberSignature Language="C#" Value="public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(class System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildDependencySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="ensureIsUpToDate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">要求のコンテキスト。</param>
        <param name="virtualPath">ビルド依存関係のセットを決定するための仮想パス。</param>
        <param name="ensureIsUpToDate">
          <see langword="true" /> 現在のみが依存関係を構築することを指定するセットを返す、または <see langword="false" /> を現在がない場合でも、使用可能なビルド依存関係のセットを返す必要あることを示します。 既定値は、<see langword="true" /> です。</param>
        <summary>ビルド依存関係が、コンテンツが最新ではない場合でも、パスが、ASP.NET キャッシュ内にある場合は仮想パスのセットを返します。</summary>
        <returns>A <see cref="T:System.Web.Compilation.BuildDependencySet" /> 、キャッシュに格納されているオブジェクトまたは <see langword="null" /> 場合、 <see cref="T:System.Web.Compilation.BuildDependencySet" /> キャッシュからオブジェクトを取得することはできません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `ensureIsUpToDate` パラメーターの値に設定されて `true`, 、 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> メソッドのオーバー ロードと同様に動作、 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> メソッドのオーバー ロードします。 両方のオーバー ロードは、現在ビルド依存関係が存在する場合は、設定を返す、それ以外の場合、返す `null`します。  
  
 ただし、 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> メソッドのオーバー ロードには、最新でないものも、利用可能なビルド依存関係のセットを取得するオプションが含まれています。 場合、 `ensureIsUpToDate` パラメーターの値に設定されて `false`, 、メソッドは、使用可能なビルド依存関係のセットを返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCompiledAssembly(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アセンブリを構築する仮想パス。</param>
        <summary>ファイルを指定した仮想パスを使用してアセンブリにコンパイルします。</summary>
        <returns>
          <see cref="T:System.Reflection.Assembly" /> が指定の仮想パスで、いずれかのメモリまたはディスクにキャッシュからコンパイルされたオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledCustomString">
      <MemberSignature Language="C#" Value="public static string GetCompiledCustomString (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCompiledCustomString(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">ビルドするファイルの仮想パス。</param>
        <summary>仮想パスを指定のファイルをコンパイルし、ビルド プロバイダーがキャッシュに保持するカスタム文字列を返します。</summary>
        <returns>によって返される、文字列、 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> ディスクまたはメモリにキャッシュされているメソッド。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public static Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledType(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">ビルドの種類への仮想パス。</param>
        <summary>仮想パスを指定のファイルをコンパイルし、コンパイル済みの型を返します。</summary>
        <returns>A <see cref="T:System.Type" /> の仮想パスのコンパイルによって生成された型を表すオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">仮想パスをコンパイルするときにエラーが発生しました。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalAsaxType">
      <MemberSignature Language="C#" Value="public static Type GetGlobalAsaxType ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetGlobalAsaxType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetGlobalAsaxType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Global.asax ファイルのコンパイル済みの型を表すオブジェクトを取得します。</summary>
        <returns>Global.asax ファイルのコンパイルされた型を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Global.asax ファイルがコンパイルされる前に、このメソッドが呼び出された場合は、例外がスローされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Global.asax ページをコンパイルする前に、このメソッドを呼び出してしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectFactory">
      <MemberSignature Language="C#" Value="public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Util.IWebObjectFactory GetObjectFactory(string virtualPath, bool throwIfNotFound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.IWebObjectFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="throwIfNotFound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <param name="throwIfNotFound">
          <see langword="true" /> 仮想パスが存在しない場合は、エラーをスローするにはそれ以外の場合、 <see langword="false" />です。 仮想パスが存在しない場合、 <c>throwIfNotFound</c> は <see langword="false" />, 、このメソッドが戻る <see langword="null" />します。</param>
        <summary>指定した仮想パスのオブジェクト ファクトリを取得します。</summary>
        <returns>オブジェクト ファクトリです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、仮想パスをコンパイルすることで、型を生成することを有効にするオブジェクトを返します。 Web サイトをプリコンパイルするかどうかに関係なく、オブジェクトを返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">仮想パスが存在しません。  
  
 または  
  
 このメソッドが呼び出されたとき、既に高度なレベルの例外が存在しています。  
  
 または  
  
 このメソッドは、コンパイル プロセスが最上位のファイルをビルドするときに呼び出されました。  
  
 または  
  
 これは、プリコンパイル済みのアプリケーションであり、キャッシュ内の仮想パスが見つかりません。  
  
 または  
  
 循環参照が検出されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public static System.Collections.ICollection GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ICollection GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetReferencedAssemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのページ コンパイルを参照するアセンブリ参照の一覧を返します。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> アセンブリ参照のコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返されるアセンブリのコレクション、 <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> メソッドが他の最上位のフォルダーに Web.config ファイルの要素で指定されたアセンブリ、App\_Code ディレクトリ内のカスタム コードからビルドされたアセンブリおよびアセンブリを含まれています。  
  
 <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[.NET Framework のバージョンおよび依存関係](http://msdn.microsoft.com/ja-jp/f75a72de-e2f2-4a7a-9574-3f278684ea90)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>最上位レベル アセンブリで、または構成で定義されているアセンブリでは、型を検索します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最上位レベル アセンブリでは、App\_GlobalResources、App\_WebReferences、App\_Code、または App\_Browsers ディレクトリにあるファイルまたは Global.asax ファイルを参照します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static Type GetType (string typeName, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetType(string typeName, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">型の名前。</param>
        <param name="throwOnError">
          <see langword="true" /> 場合に例外をスローする、 <see cref="T:System.Type" /> 型の名前に生成された以外の場合、オブジェクトをすることはできません <see langword="false" />します。</param>
        <summary>最上位レベル アセンブリ内、または構成では、定義されているアセンブリで型を検索し、必要に応じて失敗時に例外をスローします。</summary>
        <returns>A <see cref="T:System.Type" /> を表す、要求されたオブジェクト <paramref name="typeName" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最上位レベル アセンブリでは、App\_GlobalResources、App\_WebReferences、App\_Code、または App\_Browsers ディレクトリにあるファイルまたは Global.asax ファイルを参照します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="typeName" /> が無効です。  
  
 または  
  
 <paramref name="typeName" /> あいまいです。  
  
 または  
  
 <paramref name="typeName" /> 見つかりませんでした、および <paramref name="throwOnError" /> は <see langword="true" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetType(string typeName, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">型の名前。</param>
        <param name="throwOnError">
          <see langword="true" /> 場合に例外をスローする、 <see cref="T:System.Type" /> 型の名前に生成される以外にすることはできません <see langword="false" />します。</param>
        <param name="ignoreCase">
          <see langword="true" /> 場合 <c>typeName</c> は大文字小文字が区別されない場合は <see langword="false" />です。</param>
        <summary>最上位レベル アセンブリまたは小文字を区別しない検索を使用して、必要に応じてエラーに例外をスローして、構成では、定義されているアセンブリの型を検索します。</summary>
        <returns>A <see cref="T:System.Type" /> を表す、要求されたオブジェクト <paramref name="typeName" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最上位レベル アセンブリでは、App\_GlobalResources、App\_WebReferences、App\_Code、または App\_Browsers ディレクトリにあるファイルまたは Global.asax ファイルを参照します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="typeName" /> が無効です。  
  
 または  
  
 <paramref name="typeName" /> あいまいです。  
  
 または  
  
 <paramref name="typeName" /> 見つかりませんでした、および <paramref name="throwOnError" /> は <see langword="true" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPathDependencies">
      <MemberSignature Language="C#" Value="public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ICollection GetVirtualPathDependencies(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">依存関係を確認するために使用する仮想パス。</param>
        <summary>指定した仮想パスの仮想パスの依存関係のコレクションを提供します。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> 仮想パスの依存関係をキャッシュする仮想パスによって表されるファイルのコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrecompiledApp">
      <MemberSignature Language="C#" Value="public static bool IsPrecompiledApp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPrecompiledApp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.IsPrecompiledApp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションをプリコンパイルするかどうかを指定する値を取得します。</summary>
        <value>
          <see langword="true" /> アプリケーションのプリコンパイル済み; 場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatablePrecompiledApp">
      <MemberSignature Language="C#" Value="public static bool IsUpdatablePrecompiledApp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsUpdatablePrecompiledApp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションを更新可能としてプリコンパイルするかどうかを指定する値を取得します。</summary>
        <value>
          <see langword="true" /> アプリケーションが更新可能なとしてプリコンパイル済みの場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadCachedFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream ReadCachedFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream ReadCachedFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.ReadCachedFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">読み取るファイルの名前。</param>
        <summary>キャッシュされたファイルを読み取ります。</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> ファイルは、オブジェクトまたは <see langword="null" /> ファイルが存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドと <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> メソッドを使用すると、部分的に信頼された環境でアプリケーション ドメインの再起動前後で保持されるキャッシュ処理を実行します。 コント ローラーの検索の結果をキャッシュする MVC フレームワークが使用されます。  
  
 読み書きキャッシュされたデータを取得する、 <xref:System.IO.Stream> このメソッドによって返されるオブジェクト。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Versioning.FrameworkName TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.FrameworkName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の Web サイトの .NET Framework のターゲット バージョンを取得します。</summary>
        <value>現在の Web サイトの .NET Framework のターゲット バージョン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、ASP.NET マルチ ターゲット機能の最新バージョンを使用することにより [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] は .NET Framework の以前のバージョンで実行するアプリケーションを開発します。 ビルド プロバイダーでは、このプロパティを使用して、プロバイダーが .NET Framework の対象とするバージョンに適したコードを生成するかどうかを確認します。 Web サイトのターゲットかどうかに応じて異なるコードを生成するなど、 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] または [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]です。 複数バージョン対応の詳細については、次を参照してください。 [ASP.NET Web プロジェクトの .NET Framework の複数バージョン対応](http://msdn.microsoft.com/ja-jp/8b8145a9-62f6-4fc4-8a83-47b0487cbe76)します。  
  
 Web サイトが Web.config ファイルを持たない場合、ASP.NET はターゲット フレームワークのバージョンが、サイトが実行されている IIS アプリケーション プールに関連付けられているバージョンであると仮定します。 既定のフレームワークのバージョンはの現在のバージョンを Visual Studio で実行されているファイル システム Web サイトの場合、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。  
  
 Web サイトは、Web.config ファイルには、ASP.NET は、Web.config ファイルを確認するには、ターゲット フレームワークを決定します。  
  
## .NET Framework 2.0 を対象とする Web サイト  
 Web アプリケーションを対象とする、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] の場合、ターゲットが同じようにコンパイル、 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]です。 ビルド プロセスが区別されません、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] と [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] ため、これらのバージョンのいずれかのターゲットになると、Web.config ファイルはコンパイラのバージョンまたはターゲット フレームワークを示しません。 \(の [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], 、Web.config ファイル、コンパイラのバージョンを指定して、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 、Web.config ファイルがターゲット フレームワークを指定します\)。 したがっての Web アプリケーションを対象とする、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], 、このプロパティを示す、ターゲット フレームワーク モニカーを取得する、 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]です。  
  
 これは、通常は、問題が生じません。[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] 参照を作成できない場合 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] の対象となるプロジェクトの機能、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]です。 たとえば、 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] WCF サービスの対象となるプロジェクトの項目テンプレートを行いません [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], WCF がで導入されたため、 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] と互換性がないと、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]です。  
  
 Web サイトを展開する予定の場合、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] ランタイム環境とする以外のツールを使用 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] とのみ互換性がある参照機能を [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], 、エラーまたは警告を生成せずに、プロジェクトがビルド可能性があります。 ただし、アプリケーションが生成エラー、Web サイトを実行すると、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedBuildDependencySet">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ビルド依存関係は、ASP.NET キャッシュから設定を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>