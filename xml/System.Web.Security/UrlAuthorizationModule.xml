<Type Name="UrlAuthorizationModule" FullName="System.Web.Security.UrlAuthorizationModule">
  <TypeSignature Language="C#" Value="public sealed class UrlAuthorizationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UrlAuthorizationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.UrlAuthorizationModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ユーザーが要求された URL にアクセスする権限を持っていることを確認します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.UrlAuthorizationModule> 、現在のユーザーがユーザーに基づく、要求された URL にアクセスを許可されるかどうかを判断 <xref:System.Security.Principal.IIdentity.Name%2A> またはユーザーのメンバーであるロールの一覧です。 ユーザー名を決定する方法については、次を参照してください。 [ASP.NET Authentication](http://msdn.microsoft.com/ja-jp/fc10b0ef-4ce4-4a7f-9174-886325221ee1)します。 ユーザー ロールを管理する方法については、次を参照してください。 [Managing Authorization Using ASP.NET Roles](http://msdn.microsoft.com/ja-jp/01954ce4-39a2-487f-8153-a69f6f6f3195)します。  
  
 構成要素を使用して、ユーザーまたはロールの承認が管理されます。 許可するか、ユーザーまたはロールを使用して、拒否、 `allow` または `deny` サブ要素それぞれします。`allow` と `deny` サブ要素は、構成の順序で解釈されます。 アクセスが許可または拒否される要素で指定すると、 <xref:System.Web.Security.UrlAuthorizationModule> 、承認チェックが完了するとします。 たとえば、Web.config ファイルから次のセクションでは、\(匿名ユーザーを拒否\)、してログオンする必要があり、アクセス権の管理者ロールにユーザーにのみを許可します。 管理者ロールに属していないユーザーは拒否されます。  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 ユーザーまたはロールは、URL にユーザーまたはロールのアクセスを拒否するように具体的に拒否する必要があります。 つまり、前の例が指定されていない場合、 `<deny users="*" />` し、要素を認証されたすべてのユーザーが認められているが、どのようなロールのメンバーに関係なく、要求された URL にアクセスします。  
  
   
  
## 例  
 次のコード例では、John とすべての匿名ユーザーを拒否しながら、Kim および管理者ロールのメンバーにアクセスを付与します。  
  
```  
<authorization>  
  <allow users="Kim"/>  
  <allow roles="Admins"/>  
  <deny users="John"/>  
  <deny users="?"/>  
</authorization>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlAuthorizationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.UrlAuthorizationModule" /> クラスのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。  
  
 ASP.NET のインスタンスを作成するこのコンス トラクターを呼び出し、 <xref:System.Web.Security.UrlAuthorizationModule> クラスです。 コンス トラクターを呼び出す、 <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> 新しい初期化するメソッドを <xref:System.Web.Security.UrlAuthorizationModule> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUrlAccessForPrincipal">
      <MemberSignature Language="C#" Value="public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckUrlAccessForPrincipal(string virtualPath, class System.Security.Principal.IPrincipal user, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="user" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">ファイルへの仮想パス。</param>
        <param name="user">
          <see cref="T:System.Security.Principal.IPrincipal" /> 、現在のユーザーを表すオブジェクト。</param>
        <param name="verb">要求を行うために使用する HTTP 動詞。</param>
        <summary>ユーザーが要求されたファイルへのアクセスを持つかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 現在のユーザーがファイルにアクセスできる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> メソッドか、現在のユーザーが、アプリケーションの Web.config ファイルで要求されたファイルへのアクセスを許可しているかどうかをチェックします。  
  
 かどうか、要求に使用される HTTP 動詞は `GET`, 、`POST`, 、または `HEAD`, 、 <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> メソッドは、ファイルへの読み取りアクセスをチェックします。 その他の動詞を使用する場合、 <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> ファイルへの読み取り\/書き込みアクセスを確認します。  
  
 詳細については、Web.config ファイルの例を参照してください、 <xref:System.Web.Security.UrlAuthorizationModule> クラスのドキュメントです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="user" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="verb" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> アプリケーション ルートのパスがありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>によって使用されるメモリ以外のすべてのリソースを解放、 <see cref="T:System.Web.Security.UrlAuthorizationModule" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">現在の <see cref="T:System.Web.HttpApplication" /> インスタンス。</param>
        <summary>初期化、 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> メソッドにより、 <xref:System.Web.Security.UrlAuthorizationModule> の処理に含まれる、 <xref:System.Web.HttpApplication.AuthorizeRequest> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>