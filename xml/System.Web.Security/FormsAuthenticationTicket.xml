<Type Name="FormsAuthenticationTicket" FullName="System.Web.Security.FormsAuthenticationTicket">
  <TypeSignature Language="C#" Value="public sealed class FormsAuthenticationTicket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FormsAuthenticationTicket extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthenticationTicket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザーを識別するために、フォーム認証で使用されるチケットのプロパティと値へのアクセスを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.FormsAuthenticationTicket> フォーム認証で認証されたユーザーを識別するために使用される認証チケットを表すオブジェクトを作成するクラスを使用します。 プロパティとフォーム認証チケットの値をクッキーまたは URL に格納されている暗号化された文字列との間に変換されます。  
  
 <xref:System.Web.Security.FormsAuthentication> クラスには、 <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> cookie または URL を格納できる文字列値を作成する方法、 <xref:System.Web.Security.FormsAuthenticationTicket>です。<xref:System.Web.Security.FormsAuthentication> クラスも提供、 <xref:System.Web.Security.FormsAuthentication.Decrypt%2A> を作成する方法、 <xref:System.Web.Security.FormsAuthenticationTicket> フォーム認証クッキーまたは URL から、暗号化された認証チケットからオブジェクトを取得します。  
  
 <xref:System.Web.Security.FormsAuthenticationTicket> を使用して、現在の認証されたユーザーがアクセスできるため、 <xref:System.Web.Security.FormsIdentity.Ticket%2A> のプロパティ、 <xref:System.Web.Security.FormsIdentity> クラスです。 現在アクセスできる <xref:System.Web.Security.FormsIdentity> オブジェクトにキャストして、 <xref:System.Security.Principal.IPrincipal.Identity%2A> 、現在のプロパティ <xref:System.Web.HttpContext.User%2A> 型として <xref:System.Web.Security.FormsIdentity>します。  
  
   
  
## 例  
 次のコード例の結果を保持する、 <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> で cookie を使用して、メソッド、 <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> から返された URL にユーザーをリダイレクトし、 <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[FormsAuthenticationTicketClass\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketClass\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationTicket (string name, bool isPersistent, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool isPersistent, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.String,System.Boolean,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">チケットに関連付けられているユーザー名。</param>
        <param name="isPersistent">
          <see langword="true" /> チケットは \(ブラウザー セッション間で保存されます\) 永続的な cookie に保存する場合。それ以外の場合、 <see langword="false" />です。 チケットが URL に格納されている場合は、この値は無視されます。</param>
        <param name="timeout">時間 \(分\)、認証チケットの有効期限。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> クラスのクッキーの名前と有効期限の情報を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.FormsAuthenticationTicket> このコンス トラクターによって作成されたオブジェクトがある、 <xref:System.Web.Security.FormsAuthenticationTicket.CookiePath%2A> 値の値に設定、 <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> プロパティには、 <xref:System.Web.Security.FormsAuthenticationTicket.Version%2A> 2 を指定、 <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> 、現在の日付と時刻の値、 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> は空の文字列値 \(""\)、および <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> 現在の日付と時刻の値に設定されている値、 `timeout` パラメーター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationTicket (int version, string name, DateTime issueDate, DateTime expiration, bool isPersistent, string userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 version, string name, valuetype System.DateTime issueDate, valuetype System.DateTime expiration, bool isPersistent, string userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.Int32,System.String,System.DateTime,System.DateTime,System.Boolean,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="issueDate" Type="System.DateTime" />
        <Parameter Name="expiration" Type="System.DateTime" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="userData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">チケットのバージョン番号。</param>
        <param name="name">チケットに関連付けられているユーザー名。</param>
        <param name="issueDate">ローカルの日付と時刻をチケットが発行されました。</param>
        <param name="expiration">ローカルの日付とチケットの有効期限が切れる時刻。</param>
        <param name="isPersistent">
          <see langword="true" /> チケットは \(ブラウザー セッション間で保存されます\) 永続的な cookie に保存する場合。それ以外の場合、 <see langword="false" />です。 チケットが URL に格納されている場合は、この値は無視されます。</param>
        <param name="userData">チケットに格納するユーザーに固有のデータです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> cookie の名前、バージョン、有効期限、発行日、永続化、およびユーザーに固有のデータを持つクラス。 Cookie パスは、アプリケーションの構成ファイルで設定された既定値に設定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.FormsAuthenticationTicket> このコンス トラクターによって作成されたオブジェクトがある、 <xref:System.Web.Security.FormsAuthenticationTicket.CookiePath%2A> 値の値に設定、 <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>です。  
  
> [!NOTE]
>  `userData` パラメーターを `null` にすることはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationTicket (int version, string name, DateTime issueDate, DateTime expiration, bool isPersistent, string userData, string cookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 version, string name, valuetype System.DateTime issueDate, valuetype System.DateTime expiration, bool isPersistent, string userData, string cookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthenticationTicket.#ctor(System.Int32,System.String,System.DateTime,System.DateTime,System.Boolean,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="issueDate" Type="System.DateTime" />
        <Parameter Name="expiration" Type="System.DateTime" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="userData" Type="System.String" />
        <Parameter Name="cookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">チケットのバージョン番号。</param>
        <param name="name">チケットに関連付けられているユーザー名。</param>
        <param name="issueDate">ローカルの日付と時刻をチケットが発行されました。</param>
        <param name="expiration">ローカルの日付とチケットの有効期限が切れる時刻。</param>
        <param name="isPersistent">
          <see langword="true" /> チケットは \(ブラウザー セッション間で保存されます\) 永続的な cookie に保存する場合。それ以外の場合、 <see langword="false" />です。 チケットが URL に格納されている場合は、この値は無視されます。</param>
        <param name="userData">チケットに格納するユーザーに固有のデータです。</param>
        <param name="cookiePath">Cookie に格納されている場合、チケットのパスです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> cookie の名前、バージョン、ディレクトリのパス、発行日、有効期限の日付、永続化、およびユーザー定義データを持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  `userData` パラメーターを `null` にすることはできません。  
  
   
  
## 例  
 次のコード例の結果を保持する、 <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> で cookie を使用して、メソッド、 <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> プロパティは、リダイレクト URL にユーザーがから返される、 <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[FormsAuthenticationTicketClass\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketClass\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証チケットの cookie のパスを取得します。</summary>
        <value>フォーム認証チケットのクッキーのパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Security.FormsAuthenticationTicket> が指定されていないコンス トラクターを使用して作成、 `cookiePath` パラメーター、 <xref:System.Web.Security.FormsAuthenticationTicket.CookiePath%2A> プロパティの値を返す、 <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> プロパティ バージョン プロパティがそれ以外の場合に指定された値を返します、 <xref:System.Web.Security.FormsAuthenticationTicket> コンス トラクターです。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expiration">
      <MemberSignature Language="C#" Value="public DateTime Expiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.Expiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカルの日付とフォーム認証チケットの有効期限が切れる時刻を取得します。</summary>
        <value>
          <see cref="T:System.DateTime" /> フォーム認証チケットが期限切れにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Security.FormsAuthenticationTicket> を使用して作成されて、 <xref:System.Web.Security.FormsAuthenticationTicket.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Int32%29> 有効期限の日付と時刻のパラメーターが指定されていないコンス トラクター、 <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> プロパティに基づいて、現在の日付と時刻の値の合計値を返す、 `timeout` コンス トラクターに指定されたパラメーター。  
  
 場合、 <xref:System.Web.Security.FormsAuthenticationTicket> を受け取るコンス トラクターを使用して作成された、 `expiration` 、パラメーター、 <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> プロパティに指定された値を返す、 `expiration` パラメーター。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証チケットの有効期限が切れているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 場合は、フォーム認証チケットの有効期限が切れました。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.FormsAuthenticationTicket.Expired%2A> プロパティを返します。 `true` 場合、 <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> 日付と時刻が現在の日付と時刻よりも小さい場合は、、 <xref:System.Web.Security.FormsAuthenticationTicket.Expired%2A> プロパティを返します。 `false`します。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証チケットの情報が含まれた cookie は永続的かどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 永続的な cookie \(ブラウザー セッション間で保存されている cookie\) が実行された場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証チケットが最初にリリースされたローカルの日付を取得します。</summary>
        <value>
          <see cref="T:System.DateTime" /> フォーム認証チケットが最初にリリースされたとき。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> プロパティは、ローカルの日付と時刻のフォーム認証チケットが発行された時間を表します。<xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> メソッドの使用方法、 <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> プロパティの値を決定するかどうか、 <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> 日付と時刻のフォーム認証チケットが使用して更新する必要があります、 <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> プロパティの値を新しい <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> 日付と時刻。 チケットが更新されるときに、 <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> プロパティがローカルの日付と時刻に更新します。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーム認証チケットに関連付けられているユーザー名を取得します。</summary>
        <value>フォーム認証チケットに関連付けられているユーザー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserData">
      <MemberSignature Language="C#" Value="public string UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.UserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チケットに格納されているユーザーに固有の文字列を取得します。</summary>
        <value>チケットに格納されているユーザー固有の文字列です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Security.FormsAuthenticationTicket> が指定されていないコンス トラクターを使用して作成、 `userData` 、パラメーター、 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> プロパティが空の文字列を返します \(""\) です。それ以外の場合、version プロパティに指定された値を返す、 <xref:System.Web.Security.FormsAuthenticationTicket> コンス トラクターです。  
  
 使用することができます、 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> とその他のユーザー情報を格納するプロパティ、 <xref:System.Web.Security.FormsAuthenticationTicket> が保守されません、 <xref:System.Web.Security.FormsAuthenticationTicket> プロパティの値。  
  
> [!NOTE]
>  格納されたデータの量を制限する必要があります、 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> プロパティです。 サイズをようにする必要があります、 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> プロパティが無効なクッキーまたは長すぎる URL になりません。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthenticationTicket.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チケットのバージョン番号を取得します。</summary>
        <value>チケットのバージョン番号。 既定値は 2 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Security.FormsAuthenticationTicket> が指定されていないコンス トラクターを使用して作成、 `version` 、パラメーター、 <xref:System.Web.Security.FormsAuthenticationTicket.Version%2A> プロパティ 2 を返します。 それ以外の場合、バージョン プロパティがに指定された値を返します、 <xref:System.Web.Security.FormsAuthenticationTicket> コンス トラクターです。  
  
   
  
## 例  
 次のコード例のプロパティ値を表示する、 <xref:System.Web.Security.FormsAuthenticationTicket> 現在ログオンしているユーザーのです。  
  
> [!NOTE]
>  ユーザーのログオンが存在しない場合、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティ `null` 、キャストしようとしています。 コンパイラ例外が表示されます、 <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティとして、 <xref:System.Web.Security.FormsIdentity> オブジェクトです。  
  
 [!code-csharp[FormsAuthenticationTicketProperties\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/CS/formsauthenticationticketpropertiescs.aspx#1)]
 [!code-vb[FormsAuthenticationTicketProperties\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketProperties/VB/formsauthenticationticketpropertiesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>