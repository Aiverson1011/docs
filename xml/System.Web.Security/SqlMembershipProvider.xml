<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SQL Server データベースに、ASP.NET アプリケーションのメンバーシップ情報の記憶域を管理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは使用、 <xref:System.Web.Security.Membership> と <xref:System.Web.Security.MembershipUser> を SQL Server データベースを使用して、ASP.NET アプリケーションのメンバーシップ サービスを提供するクラス。 使用することはできません、 <xref:System.Web.Security.SqlMembershipProvider> SQL サーバーがない場合。 お使いのコンピューターがあり、既定のインスタンス名と共にインストールされる SQL Server Express ユーザー インスタンスが有効なときに、 <xref:System.Web.Security.SqlMembershipProvider> という名前のデータベース オブジェクトを作成 `aspnetdb` アプリケーションの `App_Data` アプリケーションを実行する 1 つ目のディレクトリにします。  
  
 データベースを手動で作成するには、実行、 `Aspnet_regsql.exe` については、実行可能ファイル、 `%systemroot%\Microsoft.NET\Framework\ versionNumber` フォルダーを指定し、 `-A m` オプション \(たとえば `aspnet_regsql.exe -A m`\)。 作成されたデータベースには、Aspnetdb が呼び出されます。 また、実行 `Aspnet_regsql.exe` GUI 構成モードをプルし、すべての ASP.NET 機能の構成を選択します。  
  
 メンバーシップ プロバイダーが統合セキュリティを使用する接続文字列で構成されている場合、ASP.NET アプリケーションのプロセス アカウントは、SQL Server データベースに接続する権限が必要です。  
  
 Machine.config ファイルで、既定値は定義 <xref:System.Web.Security.SqlMembershipProvider> という名前のインスタンス `AspNetSqlMembershipProvider` 、ローカル コンピューターの既定の SQL Server Express インスタンスに接続します。 既定のインスタンス名を SQL Server Express をインストールしたか、Web.config ファイルで独自のインスタンスを定義するには、ASP.NET アプリケーションの場合は、プロバイダーのこのインスタンスを使用できます。  
  
 設定した場合、 `passwordCompatMode` 属性を <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, アプリケーションは、ハッシュを使用、およびオプションの暗号化メンバーシップ ASP.NET 4 で追加されたものです。 ただし場合、 `passwordCompatMode` に属性が設定されている <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, ハッシュおよび暗号化のメンバーシップのみが、ASP.NET 2.0 では、ASP.NET 3.5 からオプション、および ASP.NET 3.5 SP1 を使用することができます。 既定値は <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20> です。 詳細については、「<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>」を参照してください。  
  
   
  
## 例  
 次のコード例を使用するように構成、ASP.NET アプリケーションの Web.config ファイルを示しています、 <xref:System.Web.Security.SqlMembershipProvider>です。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.SqlMembershipProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> コンス トラクターを呼び出す ASP.NET のインスタンスを作成する、 <xref:System.Web.Security.SqlMembershipProvider> クラスのアプリケーションの構成で指定します。 このコンス トラクターは、コードから使用することはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または格納およびメンバーシップ情報を取得するには、アプリケーションの名前を設定します。</summary>
        <value>メンバーシップ情報を格納および取得するアプリケーションの名前。 既定値は、 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> プロパティの値を現在の <see cref="P:System.Web.HttpContext.Request" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> によって使用される、 <xref:System.Web.Security.SqlMembershipProvider> グループのユーザー情報\] にします。 ユーザー情報をアプリケーション名を修飾することにより、重複するユーザー名の競合を発生させず、単一のデータベースに複数のアプリケーションの情報を格納できます。 複数の ASP.NET アプリケーションが同じユーザー データベースを使用して、内の同じ値を指定しても、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティです。<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティをプログラムを使用して、設定することができますかで Web アプリケーションの構成ファイルで宣言によって設定できます、 `applicationName` 属性です。  
  
 値が指定されていない場合、 `applicationName` Web アプリケーションの構成ファイルで、 <xref:System.Web.HttpRequest.ApplicationPath%2A> アプリケーションへの最初の要求のプロパティの値を使用します。  
  
> [!CAUTION]
>  すべてで処理された要求の 1 つの既定のメンバーシップ プロバイダーのインスタンスが使用されるため、 <xref:System.Web.HttpApplication> オブジェクト、複数の要求が同時に実行し、設定しようとした、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティの値。<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティは複数の書き込みに対して安全、かつ変化のスレッドではありません、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティの値は、アプリケーションの複数のユーザーに対して予期しない動作をされることができます。 ユーザー設定できるようにするコードを記述しないことをお勧めします <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティ必要な場合です。 アプリケーションの例の設定場所、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティが必要な可能性がありますが複数のアプリケーションにメンバーシップ データを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定 <xref:System.Web.Security.SqlMembershipProvider> インスタンスとセット、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> に `MyApplication`します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定しようとしましたが、 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> プロパティを空の文字列または <see langword="null" />です。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">設定しようとしましたが、 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> プロパティを 256 文字以下である文字列にします。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを更新するユーザー。</param>
        <param name="oldPassword">指定したユーザーの現在のパスワード。</param>
        <param name="newPassword">指定したユーザーの新しいパスワード。</param>
        <summary>ユーザーのパスワードを変更します。</summary>
        <returns>
          <see langword="true" /> 場合は、パスワードが正常に更新されました。<see langword="false" /> 指定された古いパスワードが有効でない場合、ユーザーがロックアウトまたはユーザーがデータベースに存在しません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベース内のユーザーのパスワードを更新するクラス。  
  
 パスワードの最大長は、128 文字です。  
  
 間違ったパスワードを指定する場合、 <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> メソッドは、無効なパスワードのトラックが 1 ずつ増加する内部カウンターです。 これにより、ユーザーへの呼び出しによってロックの状態がクリアされるまで、ログオンできません、ロックされている、 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> メソッドです。 正しいパスワードを指定し、ユーザーは現在ロックアウトされていない、内部カウンター トラック、無効なパスワードをパスワードの解答の試行は、0 にリセットされます。 詳細については、次を参照してください。、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> と <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティです。  
  
 呼び出すことができます、 <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> への参照を取得することによって直接、 <xref:System.Web.Security.SqlMembershipProvider> を通じてインスタンス、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。<xref:System.Web.Security.Membership.Provider%2A> プロパティを公開、 `defaultProvider` アプリケーションの Web.config ファイルで指定します。 構成済みのプロバイダーを使用して参照されている既定のプロバイダーではない、 <xref:System.Web.Security.Membership.Providers%2A> プロパティです。  
  
 使用して、ユーザーのパスワードを変更することも、 <xref:System.Web.Security.MembershipUser.ChangePassword%2A> メソッドです。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例では、指定されたユーザーのパスワードを変更します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字より長くなります。  
  
 または  
  
 <paramref name="oldPassword" /> 空の文字列または 128 文字より長くします。  
  
 または  
  
 <paramref name="newPassword" /> 空の文字列または 128 文字より長くします。  
  
 または  
  
 エンコードされたバージョンの <paramref name="newPassword" /> 128 文字よりも大きいです。  
  
 または  
  
 サブスクライバーによってパスワードの変更操作が取り消されました、 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> イベント、および <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> プロパティが <see langword="null" />です。  
  
 または  
  
 長さ <paramref name="newPassword" /> で指定された最小の長さよりも小さい、 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> プロパティです。  
  
 または  
  
 アルファベット以外の文字数 <paramref name="newPassword" /> が必要な英数字以外の文字で指定された数より小さい、 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> プロパティです。  
  
 または  
  
 <paramref name="newPassword" /> 定義されている正規表現は渡しません、 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> プロパティです。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="oldPassword" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="newPassword" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> データベースに見つかりませんでした。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">データベースに新しいパスワード値の設定中にエラーが発生しました。</exception>
        <exception cref="T:System.Exception">未処理の例外が発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードの質問と回答を変更するユーザー。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="newPasswordQuestion">指定したユーザーの新しいパスワードの質問。</param>
        <param name="newPasswordAnswer">指定したユーザーの新しいパスワードの回答。</param>
        <summary>パスワードの質問と SQL Server メンバーシップ データベース内のユーザーの応答を更新します。</summary>
        <returns>更新が正常に実行された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 値 <see langword="false" /> 場合にも返さ、 <paramref name="password" /> は誤りで、ユーザーがロックされているか、ユーザーがデータベースに存在しません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.MembershipUser> パスワードの質問を更新し、ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定されている SQL Server データベース内のユーザーの応答をクラスです。 パスワードを暗号化で指定されている形式を使用して、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> プロパティです。  
  
 パスワードの質問と回答を必要とするを取得またはユーザーのパスワードをリセットするときのセキュリティの追加のレイヤーを提供します。 ユーザー名を作成するときに、ユーザーは質問と回答を取得または忘れたパスワードをリセット後で使用できることを指定できます。<xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> メソッドは、パスワードの質問とメンバーシップのユーザーの応答を更新します。  
  
 間違ったパスワードを指定する場合、 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> メソッドは、内部カウンターを追跡の無効なパスワードの試行は、1 が加算されます。 これによりを呼び出してロックの状態がクリアされるまで、ログオンできません、ロックされているユーザー、 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> メソッドです。 正しいパスワードを指定し、ユーザーは現在ロックアウトされていない、内部カウンター トラック、無効なパスワードをパスワードの解答の試行は、0 にリセットされます。 詳細については、次を参照してください。、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> と <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティです。  
  
 パスワードの質問の最大長は、256 文字です。 パスワードの解答の最大長は、128 文字です。  
  
 詳しくは、「<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>」、「<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>」、「<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>」をご覧ください。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例では、パスワードの質問と、ユーザーの回答を更新します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字より長くなります。  
  
 または  
  
 <paramref name="password" /> 空の文字列または 128 文字より長くなります。  
  
 または  
  
 <paramref name="newPasswordQuestion" /> 空の文字列または 256 文字より長い。  
  
 または  
  
 <paramref name="newPasswordAnswer" /> 空の文字列または 128 文字より長くなります。  
  
 または  
  
 エンコードされたバージョンの <paramref name="newPasswordAnswer" /> 128 文字より長くなります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="password" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="newPasswordQuestion" /> が <see langword="null" /> で、<see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> が <see langword="true" /> です。  
  
 または  
  
 <paramref name="newPasswordAnswer" /> が <see langword="null" /> で、<see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> が <see langword="true" /> です。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">パスワードの質問と回答、データベースを変更するときにエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, valuetype System.Web.Security.MembershipCreateStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <param name="passwordQuestion">新しいユーザーのパスワードの質問。</param>
        <param name="passwordAnswer">新しいユーザーのパスワードの回答。</param>
        <param name="isApproved">新しいユーザーを承認するかどうか。</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> SQL Server データベース内のメンバーシップのユーザーを一意に識別します。</param>
        <param name="status">いずれか、 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 、ユーザーが正常に作成されたかどうかを示す値。</param>
        <summary>SQL Server メンバーシップ データベースに新しいユーザーを追加します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> 新しく作成したユーザーのオブジェクト。 このメソッドが戻るかどうかはユーザーが作成されなかった、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースに新しいユーザーを作成するクラス。  
  
 新しいユーザーが識別される、構成された <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 場合、 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> にプロパティが設定されている `true`, 、および `null` または空の文字列 \(""\) が指定されて、 `email` パラメーター、ユーザーの作成は失敗します。 場合も、ユーザーの作成は失敗、 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> にプロパティが設定されている `true` と指定された値、 `email` パラメーターに、構成されたデータベースの既存のユーザーの電子メール アドレスの重複は、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>です。  
  
 ユーザー名の最大長は、256 文字です。 電子メール アドレスの最大長は、256 文字です。 クリア テキストで、またはハッシュまたは暗号化した後、パスワードの最大長は、128 文字です。  
  
 ユーザーの作成が失敗すると、その他の条件:  
  
-   `password` パラメーターは `null`, 、またはトリミング後に空の文字列です。  
  
-   長さ、 `password` パラメーターが指定された値より小さい、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティです。  
  
-   アルファベット以外の文字数、 `password` パラメーターが指定された値より小さい、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティです。  
  
-   `password` パラメーターには、正規表現では渡しません、 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> プロパティです。  
  
-   カスタム パスワード検証コードがユーザーの作成中に取り消された、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントです。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> プロパティは `true` と `passwordAnswer` パラメーターは、いずれかの `null` またはトリミング後に空の文字列です。  
  
-   `passwordAnswer` パラメーターは、空の文字列です。  
  
-   `passwordAnswer` パラメーターは、128 文字より長くします。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> プロパティは、 `true` パスワードの質問があるか、および `null` またはトリミング後に空の文字列です。  
  
-   `passwordQuestion` パラメーターは、空の文字列です。  
  
-   `passwordQuestion` パラメーターは 256 文字以下です。  
  
-   `providerUserKey` 以外のパラメーターの型のオブジェクトに設定 <xref:System.Guid?displayProperty=fullName>します。  
  
-   `providerUserKey` パラメーターは、既存のユーザー キーの重複します。  
  
-   `username` パラメーターは、既存のユーザー名の複製。  
  
 すべての文字列パラメーターの値からは、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例は、フォーム認証を使用するように構成、ASP.NET アプリケーションの新しいユーザーを作成し、 <xref:System.Web.Security.SqlMembershipProvider>です。 ユーザーが正常に作成されていない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーは、アプリケーションのサインイン ページにリダイレクトされます。  
  
> [!NOTE]
>  このサンプルを呼び出す、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` web.config ファイルを使用して、 <xref:System.Web.Security.Membership> クラスです。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">削除するユーザーの名前。</param>
        <param name="deleteAllRelatedData">データベースからユーザーに関連するデータを削除するには <see langword="true" />。データベース内のユーザーに関連するデータをそのままにするには <see langword="false" />。</param>
        <summary>SQL Server メンバーシップ データベースからユーザーのメンバーシップ情報を削除します。</summary>
        <returns>
          <see langword="true" /> ユーザーが削除された場合それ以外の場合、 <see langword="false" />です。 値 <see langword="false" /> 、ユーザーがデータベースに存在しないかどうかも返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースからユーザーを削除するクラス。  
  
 削除済みユーザーは削除されてから <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 場合 `deleteAllRelatedData` に設定されている `true`, 、し、すべてのユーザー データ用のデータベースに格納されている、 <xref:System.Web.Security.Roles>, 、<xref:System.Web.HttpContext.Profile%2A>, 、または <xref:System.Web.UI.WebControls.WebParts.WebPart> パーソナル化機能を削除しても、構成済みの <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>です。  
  
 メンバーシップのユーザーが、データベースに存在しない場合と `deleteAllRelatedData` は `true`, 、関連するデータとユーザー情報が格納されているの <xref:System.Web.Security.Roles>, 、<xref:System.Web.HttpContext.Profile%2A>, 、または <xref:System.Web.UI.WebControls.WebParts.WebPart> で指定したアプリケーションのパーソナル化機能を削除するがまだ、 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> プロパティです。 結果として、 <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> メソッドを簡単にユーザーに関連する情報を削除するために使用する場合でも、その、 <xref:System.Web.Security.SqlMembershipProvider> 認証されたユーザーの情報を格納するオブジェクトが使用されていません。  
  
 先頭および末尾のスペースは削除から、 `username` パラメーターの値。  
  
   
  
## 例  
 次のコード例では、現在ログオンしているユーザーを削除します。  
  
> [!NOTE]
>  この例では <xref:System.Web.Security.SqlMembershipProvider> を呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字より長くなります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server メンバーシップ プロバイダーがユーザーに自分のパスワードのリセットを許可するように構成されているかどうかを示す値を取得します。</summary>
        <value>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合は <see langword="true" />、そうでない場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パスワードのリセットには、現在のパスワードを新しいユーザー名をランダムに生成されたパスワードを交換できるメンバーシップ プロバイダーことができます。 これは特に便利な場合に、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> にプロパティが設定されている <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 、ユーザーはパスワードのハッシュ値を取得できません。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定 <xref:System.Web.Security.SqlMembershipProvider> インスタンスを有効のパスワードをリセットします。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server メンバーシップ プロバイダーがユーザーに自分のパスワードの取得を許可するように構成されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> メンバーシップ プロバイダーは、パスワードの取得をサポートしている場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> にプロパティが設定されている <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 、ユーザーは、データベースから既存のパスワードを取得できません。<xref:System.Web.Security.MembershipPasswordFormat.Hashed> パスワードの形式は、パスワードの値の一方向のエンコーディングを提供します。 パスワードはランダムに生成された salt 値でハッシュし、認証用のデータベースに格納されている値と比較します。 ハッシュされた値を元のパスワード値を取得するエンコード前にすることはできません。  
  
 場合、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> にプロパティが設定されている <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 、および <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> に設定されている `true`, 、 <xref:System.Configuration.Provider.ProviderException> 、プロバイダーが初期化される場合にスローされます。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定 <xref:System.Web.Security.SqlMembershipProvider> をインスタンス化し、パスワードの取得を可能にします。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索するメール アドレス。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>電子メール アドレスのフィールドが指定した電子メール アドレスを含むメンバーシップ ユーザーのコレクションを返します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> のページを格納している <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> オブジェクトで指定されたページから開始 <paramref name="pageIndex" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 電子メール アドレスに指定されたと一致するものが含まれているメンバーシップ ユーザーの一覧を返す `emailToMatch` に、構成された <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> と一致するユーザー名を検索、 `emailToMatch` LIKE 句を使用してパラメーターを指定します。 パラメーターの値には、SQL Server のワイルドカード文字を含めることができます。 たとえば場合、 `emailToMatch` パラメーターが"address@example.com"に設定し、存在する場合、電子メール アドレス"address@example.com"を持つユーザーの情報が返されます。 場合、 `emailToMatch` パラメーターは"% @example.com"し、電子メール アドレス"address@example.com"、"address2@example.com"、"admin@example.com"を持つユーザーの情報に設定されなどが返されます。  
  
 によって返される結果 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection>です。`pageIndex` パラメーターは、結果を返すには、0 が最初のページを識別する場合のどのページを識別します。`totalRecords` パラメーターは、 `out` に、構成されたメンバーシップ ユーザーの合計数に設定されているパラメーター `applicationName`します。 などに、構成された 13 のユーザーがある場合 `applicationName`, 、および `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 返される 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` パラメーターは 13 に設定されます。  
  
 先頭および末尾のスペースは削除から、 `emailToMatch` パラメーターの値。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> ユーザーのメンバーシップ情報とデータのページで結果を表示を取得します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> 256 文字を超えています。  
  
 または  
  
 <paramref name="pageIndex" /> が 0 未満です。  
  
 または  
  
 <paramref name="pageSize" /> 1 つ未満です。  
  
 または  
  
 <paramref name="pageIndex" /> 乗算 <paramref name="pageSize" /> plus <paramref name="pageSize" /> マイナス 1 を超える <see cref="F:System.Int32.MaxValue" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">このメソッドが戻るときに、一致したユーザーの合計数が含まれています。</param>
        <summary>指定したユーザー名と一致するユーザー名を持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> のページを格納している <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> オブジェクトで指定されたページから開始 <paramref name="pageIndex" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> ユーザー名が、指定されたとの一致を含むメンバーシップ ユーザーの一覧を返す `usernameToMatch` に、構成された <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 <xref:System.Web.Security.SqlMembershipProvider> と一致するユーザー名を検索、 `usernameToMatch` LIKE 句を使用してパラメーターを指定します。 SQL Server のワイルドカード文字は、パラメーターの値を含めることできます。 たとえば場合、 `usernameToMatch` パラメーターは"user1"に設定し、存在する場合、"user1"という名前のユーザー名を持つユーザーのユーザー情報が返されます。 場合、 `usernameToMatch` パラメーターを設定し、「ユーザー %」、"user1"、"user2"、"user\_admin"のユーザー名を持つユーザーのユーザー情報となどが返されます。  
  
 によって返される結果 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection>です。`pageIndex` パラメーターは、結果を返すには、0 が最初のページを識別する場合のどのページを識別します。`totalRecords` パラメーターは、 `out` に、構成されたメンバーシップ ユーザーの合計数に設定されているパラメーター `applicationName`します。 などに、構成された 13 のユーザーがある場合 `applicationName`, 、および `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 返される 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` パラメーターは 13 に設定されます。  
  
 先頭および末尾のスペースは削除から、 `usernameToMatch` パラメーターの値。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> ユーザーのメンバーシップ情報とデータのページで結果を表示を取得します。  
  
> [!NOTE]
>  この例では、System.Web.Security.SqlMembershipProvider を使用して、呼び出す、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 空の文字列 \(""\) または 256 文字より長い。  
  
 または  
  
 <paramref name="pageIndex" /> が 0 未満です。  
  
 または  
  
 <paramref name="pageSize" /> 1 より小さいです。  
  
 または  
  
 <paramref name="pageIndex" /> 乗算 <paramref name="pageSize" /> plus <paramref name="pageSize" /> マイナス 1 を超える <see cref="F:System.Int32.MaxValue" />します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>少なくとも 14 文字のランダム パスワードを生成します。</summary>
        <returns>少なくとも 14 文字の長さは、ランダムなパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership> クラスには、 <xref:System.Web.Security.Membership.GeneratePassword%2A> 少なくともアルファベット以外の文字数の指定したのと、メソッドで、指定したパスワードが生成されますがサイズします。<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> のメソッド、 <xref:System.Web.Security.SqlMembershipProvider> 呼び出し、 <xref:System.Web.Security.Membership.GeneratePassword%2A> のメソッド、 <xref:System.Web.Security.Membership> 以上 14 文字のランダム パスワードを取得するクラス。 場合、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティが 14 より大きい場合、返されるパスワードが指定された長さになります、  <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティです。  
  
 具体的には呼び出すことができます、 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> メソッドを参照することで、 <xref:System.Web.Security.SqlMembershipProvider> クラスから直接、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。  
  
 生成されたパスワードには文字の英数字や次の区切り記号をのみが含まれています: `!@#$%^&*()_-+=[{]};:<>|./?`です。 生成されたパスワードで非表示または印刷不可能な制御文字が含まれていません。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> で正規表現を渡すメソッドが保証はない、 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> プロパティです。 ただし、ランダムなパスワードがによって確立された条件を満たして、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> と <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、10 文字のランダムなパスワードを生成します。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">ユーザーの合計数。</param>
        <summary>SQL Server メンバーシップ データベース内のすべてのユーザーのコレクションを取得します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> の <see cref="T:System.Web.Security.MembershipUser" /> に、構成されたデータベース内のすべてのユーザーを表す <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベースからユーザー情報を取得するクラス。  
  
 によって返される結果 <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの最大数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection>です。`pageIndex` パラメーターは、結果を返すには、0 が最初のページを識別する場合のどのページを識別します。`totalRecords` パラメーターは、 `out` に、構成されたメンバーシップ ユーザーの合計数に設定されているパラメーター `applicationName`します。 などに、構成された 13 のユーザーがある場合 `applicationName`, 、および `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 返される 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` パラメーターは 13 に設定されます。  
  
   
  
## 例  
 次のコード例では、ユーザーの一覧を返すユーザー数のカウントと共にデータのページで現在オンラインになっています。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> が 0 未満です。  
  
 または  
  
 <paramref name="pageSize" /> 1 つ未満です。  
  
 または  
  
 <paramref name="pageIndex" /> 乗算 <paramref name="pageSize" /> plus <paramref name="pageSize" /> マイナス 1 を超える <see cref="F:System.Int32.MaxValue" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在、アプリケーションにアクセスするユーザー数を返します。</summary>
        <returns>アプリケーションに現在アクセスしているユーザーの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベースからオンライン状態であるユーザーの数を取得するクラス。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 最後のアクティビティの日付と時刻が現在の日付と時刻の値以下を超える、現在のアプリケーションのユーザーの数を返す、 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> \(分\) のプロパティです。  
  
 構成されたに関連付けられているユーザーのみ <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> カウントに含まれます。  
  
   
  
## 例  
 次のコード例は、ユーザーのカウントを持つユーザーの一覧を返します現在オンラインになっています。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを取得する対象となるユーザー。</param>
        <param name="passwordAnswer">ユーザーのパスワードの回答。</param>
        <summary>SQL Server メンバーシップ データベースから指定されたユーザー名のパスワードを返します。</summary>
        <returns>指定したユーザー名のパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.MembershipUser> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベースからユーザーのパスワードを取得するクラス。  
  
 パスワードが正しくない応答が指定された場合、 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> メソッドは、無効なパスワードの解答の試行のトラックが 1 ずつ増加する内部カウンターです。 これにより、ユーザーへの呼び出しによってロックの状態がクリアされるまで、ログオンできません、ロックされている、 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> メソッドです。 正しいパスワードの解答を指定し、ユーザーは現在ロックアウトされていない、無効なパスワードの解答の回数を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください。、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> と <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティです。  
  
 呼び出すことができます、 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> への参照を取得することによって直接、 <xref:System.Web.Security.SqlMembershipProvider> を通じてインスタンス、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。  
  
 場合、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> にプロパティが設定されている <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 、 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> メソッドは、パスワードを取得できません。 ハッシュされたパスワードは、一方向暗号化され、暗号化を解除できません。 場合、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> にプロパティが設定されている <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, 、および <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> に設定されている `true`, 、 <xref:System.Configuration.Provider.ProviderException> 、プロバイダーが初期化される場合にスローされます。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例では、指定したユーザー名のパスワードを取得し、電子メール メッセージでユーザーに送信します。  
  
> [!NOTE]
>  高レベルのセキュリティを必要とするサイトには、電子メールを使用してクリア テキストでパスワードを返すことはしないでください。 高度なセキュリティ サイトの SSL などの暗号化を使用してパスワードを返すことをお勧めします。  
  
> [!NOTE]
>  このサンプルを呼び出す、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` を使用して Web.config ファイルで、 <xref:System.Web.Security.Membership> クラスです。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> が無効です。  
  
 または  
  
 識別されたメンバーシップ ユーザー <paramref name="username" /> ロックアウトされます。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> が <see langword="false" /> に設定されます。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> メンバーシップ データベースに見つかりません。  
  
 または  
  
 データベースから、パスワードを取得中にエラーが発生しました。</exception>
        <exception cref="T:System.ArgumentException">パラメーター値の 1 つには、許容最大長を超えています。  
  
 または  
  
 <paramref name="username" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字より長くなります。  
  
 または  
  
 <paramref name="passwordAnswer" /> 空の文字列と <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> は <see langword="true" />です。  
  
 または  
  
 <paramref name="passwordAnswer" /> 128 文字を超えています。  
  
 または  
  
 エンコードされたバージョンの <paramref name="passwordAnswer" /> 128 文字よりも大きいです。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="passwordAnswer" /> が <see langword="null" /> で、<see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> が <see langword="true" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">ユーザーの一意の識別子。</param>
        <param name="userIsOnline">
          <see langword="true" /> 最後のアクティビティを更新するタイムスタンプを指定したユーザーのそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指定の一意の識別子に関連付けられているメンバーシップ ユーザーのデータ ソースから情報を取得し、指定した場合に、ユーザーの最後のアクティビティ日付\/時刻スタンプを更新します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> 指定の一意の識別子に関連付けられているユーザーを表すオブジェクト。 ユーザーが見つからないかどうかは、指定されたデータベースで <paramref name="providerUserKey" /> 値、 <see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership.GetUser%2A> データ ソースからユーザー情報を取得し、作成、 <xref:System.Web.Security.MembershipUser> オブジェクトが返されたデータが設定されます。 指定された一意の識別子を使用してユーザーを識別、 `providerUserKey` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> が <see cref="T:System.Guid" /> 型ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">情報を取得するユーザーの名前。</param>
        <param name="userIsOnline">
          <see langword="true" /> ユーザーの最後のアクティビティ日付\/時刻スタンプを更新するには <see langword="false" /> をユーザーの最後のアクティビティ日付\/時刻スタンプを更新することがなくユーザー情報を返します。</param>
        <summary>ユーザーの SQL Server メンバーシップ データベースから情報を取得し、ユーザーの最後のアクティビティ日付\/時刻スタンプを更新するオプションを提供します。</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> 指定したユーザーを表すオブジェクト。 ユーザーが見つからないかどうかは、指定されたデータベースで <paramref name="username" /> 値、 <see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベースからユーザー情報を取得するクラス。  
  
 場合 `userIsOnline` は `true`, 、ユーザーの最後のアクティビティ日付\/時刻スタンプは、現在の日付と時刻に更新されます。 これに反映されて、 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> と <xref:System.Web.Security.MembershipUser.IsOnline%2A> プロパティによって返される値で <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>します。  
  
 先頭および末尾のスペースは削除から、 `username` パラメーターの値。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> メソッドをユーザーのパスワードを取得する前に、ユーザーが存在するかどうかを確認します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 256 文字を超えています。  
  
 または  
  
 <paramref name="username" /> コンマが含まれています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">検索するメール アドレス。</param>
        <summary>指定した電子メール アドレスに関連付けられているユーザー名を取得します。</summary>
        <returns>指定した電子メール アドレスに関連付けられているユーザー名。 一致が見つからないかどうかはこのメソッドが戻る <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> 電子メール アドレスが、それを使用して ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベースから関連付けられたユーザー名を取得するクラス。  
  
 メンバーシップ データベースに複数のユーザーは、同じ電子メール アドレスを持っている場合は、最初のユーザー名が返されます。 設定することができます、 `requiresUniqueEmail` 属性を `true` 、データベースの場合は、各電子メール アドレスが一意であることを確認するアプリケーション構成ファイルにします。  
  
 先頭および末尾のスペースは削除から、 `email` パラメーターの値。  
  
   
  
## 例  
 次のコード例では、指定した電子メール アドレスのユーザー名を取得します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> 256 文字を超えています。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">同じ電子メール アドレスを持つ複数のユーザーがデータベースに存在し、 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> は <see langword="true" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">名前、 <see cref="T:System.Web.Security.SqlMembershipProvider" /> インスタンスを初期化します。</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> 名と、メンバーシップ プロバイダーの構成オプションの値を含みます。</param>
        <summary>ASP.NET アプリケーションの構成ファイルで指定されたプロパティ値を持つ SQL Server メンバーシップ プロバイダーを初期化します。 このメソッドは、コードから直接使用するものでありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、初期化、 <xref:System.Web.Security.SqlMembershipProvider> プロパティを使用して値が ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定し、コードから直接使用するものではありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="enablePasswordRetrieval" />, 、<see langword="enablePasswordReset" />, 、<see langword="requiresQuestionAndAnswer" />, 、または <see langword="requiresUniqueEmail" /> 属性が以外の値に設定されて、 <see langword="Boolean" />です。  
  
 または  
  
 <see langword="maxInvalidPasswordAttempts" /> または <see langword="passwordAttemptWindow" /> 属性が正の整数以外の値に設定します。  
  
 または  
  
 <see langword="minRequiredPasswordLength" /> 属性が正の整数以外の値に設定されているか、値は 128 文字より長くします。  
  
 または  
  
 <see langword="minRequiredNonalphanumericCharacters" /> 属性が 0 または正の整数以外の値に設定されているか、値は 128 文字より長くします。  
  
 または  
  
 値、 <see langword="passwordStrengthRegularExpression" /> 属性が有効な正規表現ではありません。  
  
 または  
  
 <see langword="applicationName" /> 属性が 256 文字よりも大きい値に設定します。  
  
 または  
  
 <see langword="passwordFormat" /> アプリケーション構成ファイルで指定された属性は、無効な <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 列挙します。  
  
 または  
  
 <see langword="passwordFormat" /> に属性が設定されている <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> と <see langword="enablePasswordRetrieval" /> に属性が設定されている <see langword="true" /> アプリケーションの構成にします。  
  
 または  
  
 <see langword="passwordFormat" /> に属性が設定されている <see langword="Encrypted" /> 構成要素を指定して <see langword="AutoGenerate" /> の <see langword="decryptionKey" /> 属性です。  
  
 または  
  
 <see langword="connectionStringName" /> 属性が空か、アプリケーションの構成に存在しません。  
  
 または  
  
 接続文字列の値、 <see langword="connectionStringName" /> 属性の値が空、または指定した <see langword="connectionStringName" /> アプリケーション構成ファイルに存在しません。  
  
 または  
  
 値、 <see langword="commandTimeout" /> 属性が 0 または正の整数以外の値に設定します。  
  
 または  
  
 このアプリケーション構成ファイル <see cref="T:System.Web.Security.SqlMembershipProvider" /> インスタンスには、認識されない属性が含まれています。</exception>
        <exception cref="T:System.Web.HttpException">現在の信頼レベルより小さい <see langword="Low" />します。</exception>
        <exception cref="T:System.InvalidOperationException">現在の呼び出しの前に、プロバイダーは既に初期化されて、 <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数を取得します。</summary>
        <value>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> と連携して、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> パスワードまたは繰り返しを試行するメンバーシップ ユーザーのパスワードの解答を推測する必要のないソースからの保護にします。 無効なパスワードまたはメンバーシップ ユーザーのパスワードの質問の数がより大きいかの値に等しい場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティの値によって識別される時間を分単位内で、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティには、そのメンバーシップ ユーザーはロックアウトを設定して、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true` とユーザーのロックが解除されるまで、 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドです。 前に、有効なパスワードを指定する場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 値に達すると、無効なパスワードとパスワードの解答の試行回数を追跡するカウンターがゼロにリセットされます。 有効なパスワードの回答をする前に指定した場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 値に達すると、無効なパスワードの解答の試行回数を追跡するカウンターのみがゼロにリセットします。  
  
 <xref:System.Web.Security.SqlMembershipProvider> 個別に無効なパスワードでのログオンと無効なパスワードの解答の試行の数を保持します。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 パスワードの無効な答えでは、パスワードの解答のあるカウンターがインクリメントされる結果を試行します。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `maxInvalidPasswordAttempts` 構成セクションの属性です。  
  
 場合、 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> にプロパティが設定されている `false`, 、無効なパスワード解答は追跡されません。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> し、設定、 `maxInvalidPasswordAttempts` 属性を 5 つの無効な試行回数と `passwordAttemptWindow` を 30 分にします。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードに存在する必要がある特殊文字の最小数を取得します。</summary>
        <value>有効なパスワードに存在する必要がある特殊文字の最小数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティの有効なパスワードを作成する入力する必要がある特別なアルファベット以外の文字の最小数を取得、 <xref:System.Web.Security.SqlMembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `minRequiredNonalphanumericCharacters` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
 英数字以外の文字は、対象の文字、 <xref:System.Char.IsLetterOrDigit%2A> メソッドが返す `false`します。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `minRequiredNonalphanumericCharacters` 属性を 1 つの文字にします。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードに最低限必要な長さを取得します。</summary>
        <value>パスワードに最低限必要な長さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティは有効なパスワードを作成する入力する必要がある文字の最小数を取得、 <xref:System.Web.Security.SqlMembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `minRequiredPasswordLength` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `minRequiredPasswordLength` 属性を 7 文字です。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードまたはパスワードの解答を提供する、連続して間の時間枠の失敗を取得が追跡されます。</summary>
        <value>時間枠中に、連続して分単位でしようとすると、有効なパスワードを指定すると失敗したか、パスワードの解答が追跡されます。 既定値は、10 分です。 現在の失敗した試行と、障害が発生した前回の間隔がより大きい場合、 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> プロパティを設定すると、各操作の失敗が最初の試行の失敗の場合と同様に扱われます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティの動作と組み合わせて、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> パスワードか、メンバーシップを通じてユーザーのパスワードの解答を推測する必要のないソースから保護するためのプロパティには、試行が繰り返されます。 ユーザーは、ログイン、パスワードの変更またはパスワードのリセットすると、連続した試行の特定の数だけが、指定した時間枠内に許可します。 時間枠の長さがで指定された、 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティは分単位の数を指定します。 ユーザーに連続する試行の失敗の数が彼をリセットするか、または自分のパスワードに格納されている値に等しい場合、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 試行が最後に無効なが指定された分数より小さいためプロパティ、および時間の経過時間、 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティには、そのメンバーシップ ユーザーはロックアウトを設定して、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true`します。 呼び出してロックを解除するユーザー、 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドです。 現在の失敗した試行と、障害が発生した前回の間隔がより大きい場合、 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティを設定すると、現在の無効な試行回数は 1 つ目としてカウントされます。 許可されている無効な試行回数の最大数に達する前に、有効なパスワードの解答が入力する場合、無効なパスワードの解答の試行回数は 0 に設定します。 最大数が無効な許可される前に、有効なパスワードを指定した場合は、試行回数に達すると、無効なパスワードの試行回数と、無効なパスワードの解答の試行回数が 0 に設定されます。  
  
 <xref:System.Web.Security.SqlMembershipProvider> 個別に無効なパスワードでのログオンと無効なパスワードの解答の試行の回数を保持します。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 パスワードの無効な答えでは、パスワードの解答のあるカウンターがインクリメントされる結果を試行します。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `passwordAttemptWindow` 構成セクションの属性です。  
  
 場合、 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> にプロパティが設定されている `false`, 、無効なパスワード解答は追跡されません。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> し、設定、 `maxInvalidPasswordAttempts` 属性を 5 つの無効な試行回数と `passwordAttemptWindow` を 30 分にします。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server メンバーシップ データベースにパスワードを格納する形式を示す値を取得します。</summary>
        <value>SQL Server データベースにパスワードを格納する形式を示す <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use **languageKeyword tag is not supported!!!!**  
 only, **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 are not secure. **languageKeyword tag is not supported!!!!**  
 passwords are hashed using a one\-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. **languageKeyword tag is not supported!!!!**  
 passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  
  
 The <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> value is specified in the  section of the Web.config file for the ASP.NET application.  
  
 `Encrypted` and `Hashed` passwords are encrypted or hashed by default based on information supplied in the  element in your configuration. Note that if you specify a value of `3DES` for the `validation` attribute, or if no value is specified, hashed passwords will be hashed using the <xref:System.Security.Cryptography.SHA1> algorithm.  
  
 A custom hash algorithm can be defined using the **languageKeyword tag is not supported!!!!**  
 attribute of the [membership Element \(ASP.NET Settings Schema\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element. If you choose encryption, default password encryption uses AES. You can change the encryption algorithm by setting the **languageKeyword tag is not supported!!!!**  
 attribute of the  configuration element. If you are encrypting passwords, you must provide an explicit value for the **languageKeyword tag is not supported!!!!**  
 attribute in the  element. The default value of **languageKeyword tag is not supported!!!!**  
 for the **languageKeyword tag is not supported!!!!**  
 attribute is not supported when using encrypted passwords with ASP.NET Membership.  
  
   
  
## 例  
 The following code example shows the  element in the **languageKeyword tag is not supported!!!!**  
 section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to **languageKeyword tag is not supported!!!!**  
.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの評価に使用される正規表現を取得します。</summary>
        <value>パスワードの評価に使用される正規表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> のパスワードの複雑さを評価するために使用する正規表現を取得するプロパティ、 <xref:System.Web.Security.SqlMembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティを使用してアプリケーションの構成で設定、 `passwordStrengthRegularExpression` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `passwordStrengthRegularExpression` 属性、パスワードが、次の条件を満たしていることを検証する正規表現に。  
  
-   少なくとも 7 文字です。  
  
-   少なくとも 1 つの数字が含まれています。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれています。  
  
 パスワードがこれらの条件を満たしていない場合、メンバーシップ プロバイダーによって、パスワードは受け入れられません。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server メンバーシップ プロバイダーが、ユーザー パスワードのリセットおよび取得する際のパスワードの質問の回答を要求するように構成されているかどうかを示す値を取得します。</summary>
        <value>パスワードのリセットと取得においてパスワードの質問に対する回答が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パスワードの質問と回答を必要とするを取得またはユーザーのパスワードをリセットするときのセキュリティの追加のレイヤーを提供します。 ユーザー名を作成するときに、ユーザーは質問と回答を取得または忘れたパスワードをリセット後で使用できることを指定できます。 場合、 <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> プロパティおよび <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> プロパティは、どちらも `false`, の値、 <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> プロパティは使用されません。  
  
 詳細については、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> および <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> を参照してください。  
  
   
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定 <xref:System.Web.Security.SqlMembershipProvider> をインスタンス化し、パスワードのリセットや取得のためのパスワードの解答を必要とするように構成します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server メンバーシップ プロバイダーが各ユーザー名に対して一意の電子メール アドレスを要求するように構成されているかどうかを示す値を取得します。</summary>
        <value>メンバーシップ プロバイダーが一意の電子メール アドレスを必要とする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例にある要素を示しています、 `system.web` 、ASP.NET アプリケーションの Web.config ファイルのセクションです。 指定して、 <xref:System.Web.Security.SqlMembershipProvider> をインスタンス化し、各ユーザー名に対して一意の電子メール アドレスを要求するように構成します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードをリセットするユーザー。</param>
        <param name="passwordAnswer">指定したユーザーのパスワードの回答。</param>
        <summary>ユーザーのパスワードをリセットして、自動的に生成された新しいパスワードにします。</summary>
        <returns>指定したユーザーの新しいパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> 、新規作成\] を ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベース内のユーザーのパスワードをリセットするクラスが値をランダムに生成します。 新しいパスワードが返されます。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> で正規表現を渡すメソッドが保証はない、 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> プロパティです。 ただし、ランダムなパスワードがによって確立された条件を満たして、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> と <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティです。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> メソッドは、ほとんどよく使用するときに、 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> プロパティに設定されて `Hashed`します。 ユーザーがハッシュされるパスワードを忘れた場合、パスワードを取得できません。 ただし、ユーザーはパスワードが正しい答えを提供する場合に、プロバイダーは、パスワードを自動的に生成された、新しいパスワードにリセットできます。  
  
 パスワードが正しくない応答が指定された場合、 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> メソッドは、無効なパスワードのトラックが 1 ずつ増加する内部カウンターです。 これにより、ユーザーへの呼び出しによってロックの状態がクリアされるまで、ログオンできません、ロックされている、 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> メソッドです。 正しいパスワードの解答を指定し、ユーザーは現在ロックアウトされていない、無効なパスワードの解答の回数を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください。、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> と <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティです。  
  
 呼び出すことができます、 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> への参照を取得することによって直接、 <xref:System.Web.Security.SqlMembershipProvider> インスタンスから、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 生成されたパスワードが少なくとも 14 文字またはで指定された長さ、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティで指定された文字の英数字以外の文字の個数と、 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティです。 格納されている正規表現を渡すには、パスワードは保証されません、 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> プロパティでは、いずれかを指定します。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例では、ユーザーのパスワードをリセットし、自動的に生成された、新しいパスワードを返します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> が正しくありません。  
  
 または  
  
 ユーザー アカウントがロックされています。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> が <see langword="false" /> に設定されます。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> メンバーシップ データベースに見つかりません。  
  
 または  
  
 パスワード アクションに変更がサブスクライバーを取り消しました、 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> イベントおよび <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> プロパティが <see langword="null" />です。  
  
 または  
  
 データベースから、パスワードを取得中にエラーが発生しました。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字より長くなります。  
  
 または  
  
 <paramref name="passwordAnswer" /> 空の文字列は、または 128 文字より長いと <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> は <see langword="true" />です。  
  
 または  
  
 <paramref name="passwordAnswer" /> 128 文字より長くをエンコードした後です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="passwordAnswer" /> が <see langword="null" /> で、<see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> が <see langword="true" /> です。</exception>
        <exception cref="T:System.Exception">未処理の例外が発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">ロックを解除するメンバーシップ ユーザーの名前。</param>
        <summary>メンバーシップのユーザーを検証できるように、ユーザーのロックアウトのステータスをクリアします。</summary>
        <returns>メンバーシップ ユーザーのロックを正常に解除した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 値 <see langword="false" /> 、ユーザーがデータベースに存在しないかどうかも返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが最も一般的にロックアウトされ、して検証することはできません、 <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> メソッドと、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 内を超えた、 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>です。  
  
 先頭および末尾のスペースは削除から、 `username` パラメーターの値。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 空の文字列、256 文字を超えるまたはコンマが含まれています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">更新対象のユーザーとそのユーザーの更新情報を表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</param>
        <summary>SQL Server メンバーシップ データベースにユーザーに関する情報を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベース内のユーザーのユーザー情報を更新するクラス。<xref:System.Web.Security.MembershipUser.Email%2A>, 、<xref:System.Web.Security.MembershipUser.Comment%2A>, 、<xref:System.Web.Security.MembershipUser.IsApproved%2A>, 、<xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, 、および <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> メンバーシップを指定したユーザーのプロパティの値が更新されます。  
  
 最大長、 <xref:System.Web.Security.MembershipUser.UserName%2A> プロパティは、256 文字です。 最大長、 <xref:System.Web.Security.MembershipUser.Email%2A> プロパティは、256 文字です。  
  
 使用してメンバーシップ ユーザーのパスワードを更新することはできません、 <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> メソッドです。 メンバーシップのユーザーのパスワードを更新する、 <xref:System.Web.Security.MembershipUser.ChangePassword%2A> のメソッド、 <xref:System.Web.Security.MembershipUser> クラスです。  
  
   
  
## 例  
 次のコード例では、ユーザーの電子メール アドレスを更新します。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> は <see langword="null" /> です。  
  
 または  
  
 <paramref name="user" /> の <see cref="P:System.Web.Security.MembershipUser.UserName" /> プロパティは <see langword="null" /> です。  
  
 または  
  
 <see cref="P:System.Web.Security.MembershipUser.Email" /> の <paramref name="user" /> は <see langword="null" /> と <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> に設定されている <see langword="true" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.Security.MembershipUser.UserName" /> の <paramref name="user" /> 空の文字列 \(""\)、コンマが含まれる、または 256 文字を超える。  
  
 または  
  
 <see cref="P:System.Web.Security.MembershipUser.Email" /> の <paramref name="user" /> が 256 文字より長い。  
  
 または  
  
 <see cref="P:System.Web.Security.MembershipUser.Email" /> の <paramref name="user" /> 空の文字列と <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> に設定されている <see langword="true" />します。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Security.MembershipUser.UserName" /> の <paramref name="user" /> がデータベースに見つかりませんでした。  
  
 または  
  
 <see cref="P:System.Web.Security.MembershipUser.Email" /> プロパティの <paramref name="user" /> されたデータベース内の既存の電子メール アドレスと同じと <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 設定を true にします。  
  
 または  
  
 ユーザーの更新が失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検証するユーザーの名前。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <summary>指定したユーザー名とパスワードを SQL Server メンバーシップ データベースに存在することを確認します。</summary>
        <returns>指定されたユーザー名とパスワードが有効な場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。 値 <see langword="false" /> 、ユーザーがデータベースに存在しないかどうかも返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル \(Web.config\) で指定された SQL Server データベース内のユーザーのユーザー情報を検証するクラス。  
  
 ユーザーが正常に検証されると、最後のアクティビティの日付と最後のサイン イン日付値が現在の日付と時刻、データベース内に更新されます。  
  
 間違ったパスワードを指定する場合、 <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> メソッドは、無効なパスワードのトラックが 1 ずつ増加する内部カウンターです。 これにより、ユーザーへの呼び出しによってロックの状態がクリアされるまで、ログオンできません、ロックされている、 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> メソッドです。 正しいパスワードを指定し、ユーザーは現在ロックアウトされていない、内部カウンター トラック、無効なパスワードをパスワードの解答の試行は、0 にリセットされます。 詳細については、次を参照してください。、 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> と <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> プロパティです。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## 例  
 次のコード例は、フォーム認証を使用するように構成、ASP.NET アプリケーションのサインイン ページを示しています。 および <xref:System.Web.Security.SqlMembershipProvider>します。 指定されたユーザーの資格情報が有効でない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーが最初に要求された URL にリダイレクトされますを使用して、 <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> メソッドです。  
  
> [!NOTE]
>  この例では、 <xref:System.Web.Security.Membership> クラスを呼び出して、 <xref:System.Web.Security.SqlMembershipProvider> として指定された、 `defaultProvider` Web.config ファイルにします。 型と既定のプロバイダーにアクセスする必要があるかどうかは <xref:System.Web.Security.SqlMembershipProvider>, 、キャストすることができます、 <xref:System.Web.Security.Membership.Provider%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスです。 他のアクセスするには、特定のプロバイダーの種類としてプロバイダーを構成で構成されている名前を指定してアクセスできる、 <xref:System.Web.Security.Membership.Providers%2A> のプロパティ、 <xref:System.Web.Security.Membership> クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-vb[System.Web.Security.SqlMembershipProvider\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ ソースからのメンバーシップのユーザーの情報を取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>