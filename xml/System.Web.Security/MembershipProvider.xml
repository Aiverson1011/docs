<Type Name="MembershipProvider" FullName="System.Web.Security.MembershipProvider">
  <TypeSignature Language="C#" Value="public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MembershipProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET がカスタム メンバーシップ プロバイダーを使用してメンバーシップ サービスを提供するために実装するコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET メンバーシップは、ASP.NET アプリケーションのさまざまなメンバーシップ プロバイダーを簡単に使用できるように設計されています。 .NET Framework に含まれているメンバーシップ プロバイダーを使用することも、独自のプロバイダーを実装することができます。  
  
> [!NOTE]
>  ASP.NET のメンバーシップ機能に慣れていない場合は、次を参照してください。 [Introduction to Membership](http://msdn.microsoft.com/ja-jp/79184d17-f4c7-4c9f-a073-cec4f5543980) 続行する前にします。 メンバーシップに関連するその他のトピックの一覧は、次を参照してください。 [Managing Users By Using Membership](http://msdn.microsoft.com/ja-jp/824c3a24-f0af-427c-a652-0d2d1e9397cd)します。  
  
 カスタム メンバーシップ プロバイダーを実装する場合は、継承する必要が、 <xref:System.Web.Security.MembershipProvider> 抽象クラスです。  
  
 カスタム メンバーシップ プロバイダーを作成する 2 つの主な理由があります。  
  
-   FoxPro データベース、Oracle データベース、またはその他のデータ ソースなどの .NET Framework に含まれているメンバーシップ プロバイダーによってサポートされていないデータ ソースへのメンバーシップ情報を保存する必要があります。  
  
-   .NET Framework に付属するプロバイダーで使用されるデータベース スキーマとは異なるデータベース スキーマを使用してメンバーシップ情報を管理する必要があります。 この一般的な例は、会社や Web サイトの SQL Server データベースに既に存在するメンバーシップ データになります。  
  
 <xref:System.Web.Security.MembershipProvider> 抽象クラスから継承、 <xref:System.Configuration.Provider.ProviderBase> 抽象クラスです。<xref:System.Web.Security.MembershipProvider> 必要なメンバーが実装もする必要があります <xref:System.Configuration.Provider.ProviderBase>します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.MembershipProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 継承するクラスのコンス トラクターを実装する必要はありません、 <xref:System.Web.Security.MembershipProvider> 抽象クラスです。 初期設定の値は、 <xref:System.Web.Security.MembershipProvider> に実装が渡される、 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> メソッドの実装です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム メンバーシップ プロバイダーを使用するアプリケーションの名前。</summary>
        <value>カスタム メンバーシップ プロバイダーを使用するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read\/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.  
  
 Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  
  
 In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public abstract bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを更新するユーザー。</param>
        <param name="oldPassword">指定したユーザーの現在のパスワード。</param>
        <param name="newPassword">指定したユーザーの新しいパスワード。</param>
        <summary>メンバーシップ ユーザーに対するパスワードの更新要求を処理します。</summary>
        <returns>パスワードが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードの質問と回答を変更するユーザー。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="newPasswordQuestion">指定したユーザーの新しいパスワードの質問。</param>
        <param name="newPasswordAnswer">指定したユーザーの新しいパスワードの回答。</param>
        <summary>パスワードの質問とメンバーシップ ユーザーの回答を更新するための要求を処理します。</summary>
        <returns>パスワードの質問と回答が正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.  
  
 If the supplied user name and password are not valid, **languageKeyword tag is not supported!!!!**  
 is returned.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, valuetype System.Web.Security.MembershipCreateStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <param name="passwordQuestion">新しいユーザーのパスワードの質問。</param>
        <param name="passwordAnswer">新しいユーザーのパスワードの答え。</param>
        <param name="isApproved">新しいユーザーを承認するかどうか。</param>
        <param name="providerUserKey">メンバーシップ データ ソースでのユーザーの一意の識別子。</param>
        <param name="status">ユーザーが正常に作成されたかどうかを示す <see cref="T:System.Web.Security.MembershipCreateStatus" /> 列挙値。</param>
        <summary>データ ソースに新しいメンバーシップ ユーザーを追加します。</summary>
        <returns>新しく作成したユーザーに関する情報を格納している <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいユーザー、パスワード、および電子メール アドレスの名前を入力として受け取り、アプリケーションの新しいユーザーをデータ ソースに挿入します。<xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッドが返される、 <xref:System.Web.Security.MembershipUser> オブジェクトの新しく作成したユーザーの情報を設定します。<xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッドも定義、 `out` パラメーター \(Visual basic で使用することができます `ByRef`\) を返す、 <xref:System.Web.Security.MembershipCreateStatus> をユーザーが正常に作成された、または理由そのユーザーの作成失敗したことを示す値。  
  
 <xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッドを発生させる、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベント場合、 <xref:System.Web.Security.MembershipValidatePasswordEventHandler> イベント ハンドラーを指定されているし、続行するか、イベントの結果に基づくユーザーの作成操作をキャンセルします。 使用することができます、 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> 仮想メソッドを指定された実行 <xref:System.Web.Security.MembershipValidatePasswordEventHandler> イベント ハンドラーです。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] DecryptPassword (byte[] encodedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] DecryptPassword(unsigned int8[] encodedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedPassword" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedPassword">暗号化を解除する暗号化されたパスワードを格納するバイト配列。</param>
        <summary>暗号化されたパスワードの暗号化を解除します。</summary>
        <returns>暗号化を解除されたパスワードを格納するバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが .NET Framework 4 Client Profile の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public abstract bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">削除するユーザーの名前。</param>
        <param name="deleteAllRelatedData">データベースからユーザーに関連するデータを削除するには <see langword="true" />。データベース内のユーザーに関連するデータをそのままにするには <see langword="false" />。</param>
        <summary>メンバーシップ データ ソースからユーザーを削除します。</summary>
        <returns>ユーザーが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Takes, as input, the name of a user and deletes that user's information from the data source. If **parameterReference tag is not supported!!!!**  
 is **languageKeyword tag is not supported!!!!**  
, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーがユーザーに自分のパスワードのリセットを許可するように構成されているかどうかを示します。</summary>
        <value>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合は <see langword="true" />、そうでない場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file \(Web.config\) using the `enablePasswordReset` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password. This property is read\-only.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーがユーザーに自分のパスワードの取得を許可するように構成されているかどうかを示します。</summary>
        <value>メンバーシップ プロバイダーはパスワードの取得をサポートするよう構成されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> プロパティが使用して、構成ファイル \(Web.config\) で指定したブール値を含む、 `enablePasswordRetrieval` 属性です。 値は、ユーザーが使用できるかどうかを示します、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> データ ソースから、現在のパスワードを取得します。 このプロパティは読み取り専用です。  
  
 カスタム メンバーシップ プロバイダーは、ハッシュされたパスワードをサポートしている場合、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> 場合、メソッドの実装は例外をスローする必要があります <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> に設定されている `true` に設定されているパスワードの形式と `Hashed`です。 ハッシュされたパスワードを取得できません。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptPassword">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パスワードを暗号化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、暗号化されたパスワードを格納するバイト配列を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">暗号化するパスワードを格納するバイト配列。</param>
        <summary>パスワードを暗号化します。</summary>
        <returns>暗号化されたパスワードを格納するバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが .NET Framework 4 Client Profile の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password, valuetype System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="legacyPasswordCompatibilityMode" Type="System.Web.Configuration.MembershipPasswordCompatibilityMode" />
      </Parameters>
      <Docs>
        <param name="password">暗号化するパスワードを格納するバイト配列。</param>
        <param name="legacyPasswordCompatibilityMode">メンバーシップ パスワード互換モード。</param>
        <summary>指定したパスワードの互換性モードを使用して、指定されたパスワードを暗号化します。</summary>
        <returns>暗号化されたパスワードを格納するバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが .NET Framework 4 Client Profile の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索するメール アドレス。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>指定したメール アドレスと一致するメール アドレスを持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageIndex" /> によって指定されたページから始まる、<paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> オブジェクトのページを含む <see cref="T:System.Web.Security.MembershipUserCollection" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> ユーザーの電子メール アドレスが、指定された一致するユーザーのメンバーシップの一覧を返します `emailToMatch` に、構成された <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> プロパティです。 データ ソースは、ワイルドカード文字などの他の検索機能をサポートしている場合は、電子メール アドレスをより広範な検索機能を提供できます。  
  
 によって返される結果 <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection> コレクションです。`pageIndex` パラメーターは、0 が最初のページを識別する場合に返される結果のページを識別します。`totalRecords` パラメーターは、 `out` パラメーターに一致するメンバーシップ ユーザーの合計数に設定されている、 `emailToMatch` 値。 13 ユーザーはどこで検出された場合など `emailToMatch` の一部または全体の電子メール アドレスに一致して、 `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` 13 に設定されます。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>指定したユーザー名と一致するユーザー名を持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageIndex" /> によって指定されたページから始まる、<paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> オブジェクトのページを含む <see cref="T:System.Web.Security.MembershipUserCollection" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> メンバーシップ ユーザーの一覧を返しますユーザー名と一致する、指定された `usernameToMatch` に、構成された <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> プロパティです。 データ ソースは、ワイルドカード文字などの他の検索機能をサポートしている場合は、ユーザー名をより広範な検索機能を提供できます。  
  
 によって返される結果 <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection> コレクションです。`pageIndex` パラメーターは、結果を返すには、0 が最初のページを識別する場合のどのページを識別します。`totalRecords` パラメーターは、 `out` パラメーターに一致するメンバーシップ ユーザーの合計数に設定されている、 `usernameToMatch` 値。 13 ユーザーはどこで検出された場合など `usernameToMatch` の一部または全体のユーザー名に一致して、 `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` 13 に設定されます。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, int32 totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">返される結果ページのインデックス。<c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>データのページにあるデータ ソース内のすべてのユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageIndex" /> によって指定されたページから始まる、<paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> オブジェクトのページを含む <see cref="T:System.Web.Security.MembershipUserCollection" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> 構成済みのデータ ソースからのすべてのユーザーの一覧を返します <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> プロパティです。 ユーザーは、ユーザー名によってアルファベット順に返されます。  
  
 によって返される結果 <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> による制限、 `pageIndex` と `pageSize` パラメーター。`pageSize` パラメーターの数を識別する <xref:System.Web.Security.MembershipUser> で返されるオブジェクト、 <xref:System.Web.Security.MembershipUserCollection> コレクションです。`pageIndex` パラメーターは、結果を返すには、0 が最初のページを識別する場合のどのページを識別します。`totalRecords` パラメーターは、 `out` データベース内のメンバーシップのユーザーの合計数に設定されているパラメーターです。 たとえば、データベース内の 13 のユーザーがおよび `pageIndex` の値が 1 に、 `pageSize` 5 の <xref:System.Web.Security.MembershipUserCollection> 6 番目を通じて返される 10 番目のユーザーにはが含まれます。`totalRecords` 13 に設定されます。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public abstract int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションに現在アクセスしているユーザーの数を取得します。</summary>
        <returns>アプリケーションに現在アクセスしているユーザーの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ ソース内のすべてのユーザーの数を示す整数値を返す場所、 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> が現在の日付と時刻から差し引いたものより大きい、 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>です。<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> はときに使用する分数を指定する正の整数値を決定する、ユーザーがオンラインかどうか。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public abstract string GetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを取得する対象となるユーザー。</param>
        <param name="answer">ユーザーのパスワードの回答。</param>
        <summary>データ ソースから指定されたユーザー名のパスワードを取得します。</summary>
        <returns>指定したユーザー名のパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー名とパスワードの解答の入力として受け取り、およびデータ ソースからそのユーザーのパスワードを取得し、文字列としてパスワードを返します。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> メソッドにより、 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> にフラグが設定されている `true` 操作を実行する前にします。 場合 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> は `false`, 、 <xref:System.NotSupportedException> 例外がスローされます。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> 値を調べても、 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> プロパティです。 場合 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> は `true`, 、<xref:System.Web.Security.MembershipProvider.GetPassword%2A> データ ソースに保存されたパスワード、回答に対して指定された応答パラメーターの値をチェックします。 一致しない場合、 <xref:System.Web.Security.MembershipPasswordException> 例外がスローされます。  
  
 カスタム メンバーシップ プロバイダーは、ハッシュされたパスワードをサポートしている場合、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> 場合、メソッドは例外をスローする必要があります、 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> にプロパティが設定されている `true` に設定されているパスワードの形式と `Hashed`です。 ハッシュされたパスワードを取得できません。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">情報を取得するメンバーシップ ユーザーの一意の識別子。</param>
        <param name="userIsOnline">ユーザーの最終アクティビティの日付\/時刻スタンプを更新するには <see langword="true" />。ユーザーの最終アクティビティの日付\/時刻スタンプを更新せずにユーザー情報に戻るには <see langword="false" />。</param>
        <summary>メンバーシップ ユーザーの一意の識別子に基づいてデータ ソースからユーザー情報を取得します。 ユーザーの最終アクティビティの日付\/時刻スタンプを更新するオプションを提供します。</summary>
        <returns>データ ソースから得た指定したユーザーの情報を読み込んだ <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー レコードおよび更新するかどうかを示すブール値の一意の識別子を入力として受け取り、 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 、ユーザーが現在オンラインであるかを表示するユーザーの値。<xref:System.Web.Security.MembershipProvider.GetUser%2A> メソッドが返される、 <xref:System.Web.Security.MembershipUser> オブジェクトに指定されたユーザーのデータ ソースからの現在の値が設定されます。 データ ソースにユーザー名が見つからない場合 <xref:System.Web.Security.MembershipProvider.GetUser%2A> 返します `null`します。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">情報を取得するユーザーの名前。</param>
        <param name="userIsOnline">ユーザーの最終アクティビティの日時スタンプを更新するには <see langword="true" />。ユーザーの最終アクティビティの日時スタンプを更新せずにユーザー情報を返すには <see langword="false" />。</param>
        <summary>データ ソースからユーザーの情報を取得します。 ユーザーの最終アクティビティの日時スタンプを更新するオプションを提供します。</summary>
        <returns>データ ソースから得た指定したユーザーの情報を読み込んだ <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー名と更新するかどうかを示すブール値を入力として受け取り、 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 、ユーザーが現在オンラインであるかを表示するユーザーのプロパティの値。<xref:System.Web.Security.MembershipProvider.GetUser%2A> 返します、 <xref:System.Web.Security.MembershipUser> オブジェクトに指定されたユーザーのデータ ソースからの現在の値が設定されます。 データ ソースにユーザー名が見つからない場合 <xref:System.Web.Security.MembershipProvider.GetUser%2A> 返します `null`します。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public abstract string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">検索するメール アドレス。</param>
        <summary>指定した電子メール アドレスに関連付けられているユーザー名を取得します。</summary>
        <returns>指定した電子メール アドレスに関連付けられているユーザー名。 一致が見つからない場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 電子メール アドレスを入力として受け取り、および電子メール アドレスが、指定された一致するデータ ソースから最初のユーザー名を返す `email` パラメーターの値。  
  
 一致する、電子メール アドレスを持つユーザー名が存在しない場合 `null` が返されます。  
  
 複数のユーザー名が見つからない場合は、特定の電子メール アドレスに一致する最初のユーザー名のみが返されます。 など、各ユーザー名に対して一意の電子メール アドレスを確保するためのカスタム メカニズムを実装する、 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> でサポートされているプロパティ、 <xref:System.Web.Security.SqlMembershipProvider> プロバイダー。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public abstract int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数を取得します。</summary>
        <value>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティの動作と組み合わせて、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> パスワードまたはメンバーシップを通じてユーザーのパスワードの解答を推測する必要のないソースからの保護にプロパティには、試行が繰り返されます。 無効なパスワードまたはメンバーシップ ユーザーのパスワードの質問の数がより大きいかに等しい場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> プロパティの値によって識別される時間を分単位で、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, 、メンバーシップのユーザーが設定してロックアウトして、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true` への呼び出しによって、ユーザーのロックを解除するまで、 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドです。 有効なパスワードまたはパスワードの解答が前に指定したかどうか、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 値に達すると、無効な試行回数を追跡するカウンターがゼロにリセットします。  
  
 無効なパスワードとパスワードの解答の試行回数は、互いに独立して蓄積されます。 たとえば場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> を 5 に、プロパティを設定し、3 つ無効なパスワードの試行後に無効なパスワードの解答の試みが 2、内では、2 つの無効なパスワード再試行 \(または複数の無効なパスワードの解答の試行を 3 つ\) を行う必要があります、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> メンバーシップ ユーザーがロックアウトされるのです。  
  
 場合、 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> にプロパティが設定されている `false`, 、無効なパスワード解答は追跡されません。  
  
 無効なパスワードとパスワードの解答の試行がで追跡されます、 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, 、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>, 、および <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドです。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードに存在する必要がある特殊文字の最小数を取得します。</summary>
        <value>有効なパスワードに存在する必要がある特殊文字の最小数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティの有効なパスワードを作成する入力する必要がある特別なアルファベット以外の文字の最小数を取得、 <xref:System.Web.Security.MembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `minRequiredNonalphanumericCharacters` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
 英数字以外の文字は、対象の文字、 <xref:System.Char.IsLetterOrDigit%2A> メソッドが返す `false`します。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `minRequiredNonalphanumericCharacters` 属性を 1 文字にします。  
  
```  
<membership>  
  <providers>  
    <clear/>  
    <add name="AspNetSqlMembershipProvider"   
      type="System.Web.Security.SqlMembershipProvider"   
      connectionStringName="ApplicationServices"   
      enablePasswordRetrieval="false"   
      enablePasswordReset="true"   
      requiresQuestionAndAnswer="false"   
      requiresUniqueEmail="false"   
      maxInvalidPasswordAttempts="5"   
      minRequiredPasswordLength="6"   
      minRequiredNonalphanumericCharacters="1"   
      passwordAttemptWindow="10"   
      applicationName="/"/>  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードに最低限必要な長さを取得します。</summary>
        <value>パスワードに最低限必要な長さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> プロパティが有効なパスワードを作成する入力する必要がある文字の最小数を取得、 <xref:System.Web.Security.MembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> プロパティ値がアプリケーションの構成を使用して、設定、 `minRequiredPasswordLength` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `minRequiredPasswordLength` 属性を 7 文字です。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidatingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidatingPassword(class System.Web.Security.ValidatePasswordEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.Security.ValidatePasswordEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> イベント ハンドラーに渡す <see cref="T:System.Web.Security.ValidatePasswordEventArgs" />。</param>
        <summary>イベント ハンドラーが定義されている場合に <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> 中に仮想メソッドを使用、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, 、および <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> を発生させる方法、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベント場合、 <xref:System.Web.Security.MembershipValidatePasswordEventHandler> が指定されています。`e` パラメーターを渡すために使用する <xref:System.Web.Security.ValidatePasswordEventArgs> オブジェクトを <xref:System.Web.Security.MembershipValidatePasswordEventHandler> イベント ハンドラーです。 ときに、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントが完了すると、プロパティの <xref:System.Web.Security.ValidatePasswordEventArgs> として渡されるオブジェクト、 `e` パラメーターを調べて特定し、現在のアクションをキャンセルする必要があるかどうかを判断 <xref:System.Exception>, に格納されている、 <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> プロパティをスローする必要があります。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public abstract int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロックアウトされるまでに、無効なパスワードまたはパスワードの回答の最大試行回数が許可される時間 \(分\) を取得します。</summary>
        <value>メンバーシップ ユーザーがロックアウトされるまでに、無効なパスワードまたはパスワードの回答の最大試行回数が許可される時間 \(分\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> プロパティの動作と組み合わせて、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> パスワードまたはメンバーシップを通じてユーザーのパスワードの解答を推測する必要のないソースからの保護にプロパティには、試行が繰り返されます。 無効なパスワードまたはメンバーシップ ユーザーのパスワードの質問の数を超えると、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 内で識別される時間を分単位で、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, 、メンバーシップのユーザーが設定してロックアウトして、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `true` への呼び出しによって、ユーザーのロックを解除するまで、 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> メソッドです。 有効なパスワードまたはパスワードの回答をする前に指定した場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> に達すると、無効な試行回数を追跡するカウンターがゼロにリセットします。  
  
 無効なパスワードとパスワードの解答の試行回数は、互いに独立して蓄積されます。 たとえば場合、 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> を 5 に、プロパティを設定し、3 つ無効なパスワードの試行後に無効なパスワードの解答の試みが 2、内では、2 つの無効なパスワード再試行 \(または複数の無効なパスワードの解答の試行を 3 つ\) を行う必要があります、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> がロックアウトされるメンバーシップ ユーザーの値。  
  
 場合、 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> にプロパティが設定されている `false`, 、無効なパスワード解答は追跡されません。  
  
 無効なパスワードとパスワードの解答の試行がで追跡されます、 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, 、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>, 、および <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドです。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ データ ソースにパスワードを格納する形式を示す値を取得します。</summary>
        <value>データ ソースにパスワードを格納する形式を示す <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in. Use **languageKeyword tag is not supported!!!!**  
 only, **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 are not secure. **languageKeyword tag is not supported!!!!**  
 passwords are hashed using a one\-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. **languageKeyword tag is not supported!!!!**  
 passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  
  
 You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code. If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, **languageKeyword tag is not supported!!!!**  
 passwords are encrypted using the key information supplied in the [machineKey Element \(ASP.NET Settings Schema\)](http://msdn.microsoft.com/ja-jp/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration.  
  
   
  
## 例  
 For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public abstract string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの評価に使用される正規表現を取得します。</summary>
        <value>パスワードの評価に使用される正規表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> のパスワードの複雑さを評価するために使用する正規表現を取得するプロパティ、 <xref:System.Web.Security.MembershipProvider> オブジェクトです。  
  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> プロパティを使用してアプリケーションの構成で設定、 `passwordStrengthRegularExpression` の属性、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 構成要素。  
  
   
  
## 例  
 例を次に、 [membership 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/b9c1ee8f-33ca-4361-8666-b42a0fe86049) で構成要素、 `system.web` アプリケーションの Web.config ファイルのセクションです。 アプリケーションでのインスタンスを使用することを指定、 <xref:System.Web.Security.SqlMembershipProvider> メンバーシップ サービス、およびセットを提供するクラス、 `passwordStrengthRegularExpression` 属性、パスワードが、次の条件を満たしていることを検証する正規表現に。  
  
-   7 文字を超えています。  
  
-   少なくとも 1 つの数字が含まれています。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれています。  
  
 パスワードがこれらの条件を満たしていない場合、メンバーシップ プロバイダーによって、パスワードは受け入れられません。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードのリセットと取得においてパスワードの質問に対するユーザーの回答を要求するよう、メンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。</summary>
        <value>パスワードのリセットと取得においてパスワードの質問に対する回答が必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成ファイル \(Web.config\) で指定するブール値。<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> プロパティは、ユーザーは、パスワードを使用して取得するためにパスワードの解答を指定する必要があるかどうかを示す、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> メソッドを使用して、パスワードをリセットまたは、 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドです。  
  
 このプロパティは読み取り専用です。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public abstract bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーが各ユーザー名に対して一意の電子メール アドレスを要求するように構成されているかどうかを示す値を取得します。</summary>
        <value>メンバーシップ プロバイダーが一意の電子メール アドレスを必要とする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> プロパティは、ユーザーの作成時に、ユーザーが一意の電子メール アドレスの値を指定する必要があるかどうかを示します。 ユーザーが現在のデータ ソース内に既に存在する場合 <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, 、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッドが返す `null` およびのステータス値 <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>です。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public abstract string ResetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードをリセットするユーザー。</param>
        <param name="answer">指定したユーザーのパスワードの回答。</param>
        <summary>ユーザーのパスワードをリセットして、自動的に生成された新しいパスワードにします。</summary>
        <returns>指定したユーザーの新しいパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー名とパスワードの解答の入力として受け取り、指定されたユーザーの新しいランダムなパスワードを生成します。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> で正規表現を渡すメソッドが保証はない、 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> プロパティです。 ただし、ランダムなパスワードがによって確立された条件を満たして、 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> と <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> プロパティ  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドは、新しいパスワード値で、データ ソース内のユーザー情報を更新し、文字列として新しいパスワードを返します。 ランダムなパスワードを生成するための便利なメカニズムは、 <xref:System.Web.Security.Membership.GeneratePassword%2A> メソッドです。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 確実に、 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> にフラグが設定されている `true` 操作を実行する前にします。 場合 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> は `false`, 、 <xref:System.NotSupportedException> 例外がスローされます。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 値を調べても、 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> プロパティです。 場合 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> は `true`, 、<xref:System.Web.Security.MembershipProvider.ResetPassword%2A> データ ソースに保存されたパスワード、回答に対して指定された応答パラメーターの値をチェックします。 一致しない場合、 <xref:System.Web.Security.MembershipPasswordException> 例外がスローされます。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public abstract bool UnlockUser (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlockUser(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UnlockUser(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">ロック状態を解除するメンバーシップ ユーザー。</param>
        <summary>メンバーシップ ユーザーを検証できるようにロックを解除します。</summary>
        <returns>メンバーシップ ユーザーのロックを正常に解除した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーの名前を入力として受け取り、および保存されているデータ ソースのフィールドを更新、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティを `false`します。<xref:System.Web.Security.MembershipProvider.UnlockUser%2A> メソッドが返す `true` しました。 そうしないと、メンバーシップのユーザーのレコードが更新された場合 `false`します。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public abstract void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">更新対象のユーザーとそのユーザーの更新情報を表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</param>
        <summary>データ ソース内のユーザーに関する情報を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 入力として受け取り、 <xref:System.Web.Security.MembershipUser> オブジェクトは、ユーザー情報が設定され、指定された値を持つデータ ソースを更新します。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public abstract bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検証するユーザーの名前。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <summary>データ ソースに指定したユーザー名とパスワードが存在することを確認します。</summary>
        <returns>指定されたユーザー名とパスワードが有効な場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー名とパスワードを入力として受け取り、およびデータ ソースの値に一致することを確認します。<xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 返します `true` の成功したユーザー名とパスワード一致します。 それ以外の場合、 `false`です。  
  
 正常に検証において <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 更新プログラム、 <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> 特定のユーザーです。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.MembershipProvider.ValidatingPassword" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが作成されるとき、パスワードが変更されるとき、またはリセットされるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 中にイベントが発生した、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, 、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, 、および <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> メソッドです。  
  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントは、要求されたアクションの前に発生し、続行するか、要求された操作をキャンセルすることができます。 操作が取り消された場合、ユーザーは、例外をスローするを指定できます。  
  
 ユーザーを使用して、 <xref:System.Web.Security.MembershipValidatePasswordEventHandler> のハンドラーを指定するイベント ハンドラー、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントです。 プロバイダーの実装側が使用できる、 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> を発生させるための仮想メソッド、 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> イベントです。  
  
   
  
## 例  
 例については、 <xref:System.Web.Security.MembershipProvider> 実装を参照してください [Implementing a Membership Provider](http://msdn.microsoft.com/ja-jp/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>メンバーシップのユーザーのデータ ソースから情報を取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>