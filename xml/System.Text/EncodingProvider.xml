<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>特定のプラットフォームで利用できないエンコードを提供する、エンコーディング プロバイダーの基底クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンコーディング プロバイダーは、それ以外の場合は、特定のターゲット プラットフォームで利用できないエンコードを提供します。  
  
 Windows デスクトップ上の .NET Framework には、文字エンコーディング、およびコード ページの数が多いがサポートしています。 呼び出して、Windows デスクトップで、.NET Framework で利用可能なエンコーディングの完全な一覧を取得することができます、<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName>メソッドです。[!INCLUDE[net_core](~/includes/net-core-md.md)]、その一方で、既定では、次のエンコーディングのみをサポートしています。  
  
-   ASCII \(コード ページ 20127\) によって返される、<xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName>プロパティです。  
  
-   ISO 8859\-1 \(コード ページ 28591\)。  
  
-   Utf\-7 \(コード ページ 65000\) によって返される、<xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName>プロパティです。  
  
-   Utf\-8 \(コード ページ 65001\) によって返される、<xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>プロパティです。  
  
-   Utf\-16 と UTF 16LE \(コード ページ 1200\) によって返される、<xref:System.Text.Encoding.Unicode%2A>プロパティです。  
  
-   UTF\-16BE \(コード ページ 1201\) が呼び出すことによってインスタンス化する、<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName>または<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName>を持つコンス トラクター、`bigEndian`値`true`です。  
  
-   Utf\-32 および UTF\-32LE \(コード ページ 12000\) によって返される、<xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName>プロパティです。  
  
-   UTF\-32BE \(コード ページ 12001\) が呼び出すことによってインスタンス化する、<xref:System.Text.UTF32Encoding>コンス トラクターを持つ、`bigEndian`パラメーター値を指定するの`true`メソッドの呼び出しで。  
  
 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]、<xref:System.Text.EncodingProvider>使用できなくなりますそれ以外の場合の基本クラスは、.NET Framework に利用可能なエンコーディング。 これには、次の手順が含まれます。  
  
1.  サブクラスを定義する<xref:System.Text.EncodingProvider>、2 つの抽象オーバーライド<xref:System.Text.EncodingProvider.GetEncoding%2A>オーバー ロード、<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>と<xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>です。 これらのオーバー ロードでは、それ以外の場合、サポートされていないコード ページ id と名前によるのエンコーディングを返します。  
  
2.  必要に応じてオーバーライドできます仮想<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>と<xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>メソッドです。 ほとんどの場合、この必要はありません、基本クラスは、既定の実装を提供するためです。  
  
3.  渡す、<xref:System.Text.EncodingProvider>インスタンスを<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName>で指定されたエンコーディングを作成するメソッド、<xref:System.Text.EncodingProvider>共通言語ランタイムを使用できるオブジェクト。  
  
4.  呼び出す、<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName>エンコーディングを取得するオーバー ロードします。<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> 、対応するメソッドの呼び出しが<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName>かどうかを指定する必要が要求されたエンコーディングを決定します。  
  
 .NET Framework クラス ライブラリには、1 つの静的プロパティ<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName>を返す、<xref:System.Text.EncodingProvider>エンコーディングの完全なセットを提供するデスクトップの .NET Framework クラス ライブラリで使用できるオブジェクト[!INCLUDE[net_core](~/includes/net-core-md.md)]アプリケーションです。 さらから派生することができます、<xref:System.Text.EncodingProvider>独自のエンコードを使用できるようにするクラス。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Text.EncodingProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">要求されたエンコーディングのコード ページ ID。</param>
        <summary>指定したコード ページ ID に関連付けられたエンコーディングを返します。</summary>
        <returns>指定されたコード ページに関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="codepage" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</para>
        </block>
        <block subset="none" type="usage">
          <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method. You should not call it directly from user code.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要求されたエンコーディングの名前。</param>
        <summary>指定した名前のエンコーディングを返します。</summary>
        <returns>指定された名前に関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="name" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />. Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />. The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method. You should not call it directly from user code.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">要求されたエンコーディングのコード ページ ID。</param>
        <param name="encoderFallback">このエンコーディングで文字をエンコードできないときに、エラー処理プロシージャを提供するオブジェクト。</param>
        <param name="decoderFallback">このエンコーディングでバイト シーケンスをデコードできないときに、エラー処理プロシージャを提供するオブジェクト。</param>
        <summary>指定したコード ページ ID に関連付けられたエンコーディングを返します。 パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</summary>
        <returns>指定されたコード ページに関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="codepage" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `encoderFallback` と `decoderFallback` パラメーターは、エンコーダーが文字をバイト シーケンスに変換できない、またはデコーダーがバイトのシーケンスを文字に変換できないことを使用されるフォールバック ストラテジを定義するオブジェクト。 .NET Framework には、次のフォールバック メカニズムが用意されています。  
  
-   例外フォールバックします。 場合、 `encoderFallback` 引数のインスタンスには、 <xref:System.Text.EncoderExceptionFallback>, 、または `decoderExceptionFallback` 引数のインスタンスには、 <xref:System.Text.DecoderExceptionFallback>, 、エンコード方式は、文字をエンコードすることはできませんし、デコード メソッドは、バイト シーケンスをデコードできない場合に例外をスローする場合に例外をスローします。  
  
-   置換フォールバックします。 場合、 `encoderFallback` 引数のインスタンスには、 <xref:System.Text.EncoderReplacementFallback>, 、または `decoderExceptionFallback` 引数のインスタンスには、 <xref:System.Text.DecoderReplacementFallback>, 、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスをデコードすることはできません。 置換文字は、既定のコンス トラクターを呼び出すことによって、置換フォールバック オブジェクトをインスタンス化した場合、"?"。 呼び出した場合、 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> または <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> コンス トラクター、置換文字列を指定することができます。  
  
-   最適フォールバックします。 派生することができます、 <xref:System.Text.EncoderFallback> または <xref:System.Text.DecoderFallback> 最適交換機構を実装するクラス。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</para>
        </block>
        <block subset="none" type="usage">
          <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method. You should not call it directly from user code.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">最適なエンコーディングの名前。</param>
        <param name="encoderFallback">このエンコーディングで文字をエンコードできないときに、エラー処理プロシージャを提供するオブジェクト。</param>
        <param name="decoderFallback">現在のエンコーディングでバイト シーケンスをデコードできない場合にエラー処理プロシージャを提供するオブジェクト。</param>
        <summary>指定した名前に関連付けられたエンコーディングを返します。 パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</summary>
        <returns>指定された名前に関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="name" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `encoderFallback` と `decoderFallback` パラメーターは、エンコーダーが文字をバイト シーケンスに変換できない、またはデコーダーがバイトのシーケンスを文字に変換できないことを使用されるフォールバック ストラテジを定義するオブジェクト。 .NET Framework には、次のフォールバック メカニズムが用意されています。  
  
-   例外フォールバックします。 場合、 `encoderFallback` 引数のインスタンスには、 <xref:System.Text.EncoderExceptionFallback>, 、または `decoderExceptionFallback` 引数のインスタンスには、 <xref:System.Text.DecoderExceptionFallback>, 、エンコード方式は、文字をエンコードすることはできませんし、デコード メソッドは、バイト シーケンスをデコードできない場合に例外をスローする場合に例外をスローします。  
  
-   置換フォールバックします。 場合、 `encoderFallback` 引数のインスタンスには、 <xref:System.Text.EncoderReplacementFallback>, 、または `decoderExceptionFallback` 引数のインスタンスには、 <xref:System.Text.DecoderReplacementFallback>, 、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスをデコードすることはできません。 置換文字は、既定のコンス トラクターを呼び出すことによって、置換フォールバック オブジェクトをインスタンス化した場合、"?"。 呼び出した場合、 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> または <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> コンス トラクター、置換文字列を指定することができます。  
  
-   最適フォールバックします。 派生することができます、 <xref:System.Text.EncoderFallback> または <xref:System.Text.DecoderFallback> 最適交換機構を実装するクラス。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it. When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding. If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />. Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</para>
        </block>
        <block subset="none" type="usage">
          <para>This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method. You should not call it directly from user code.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>エンコーディングを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>