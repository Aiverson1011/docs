<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>入力バイト シーケンスをデコードできない場合に、フォールバック ハンドラーがデコーダーに代替文字列を返すことを可能にするためのバッファーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンコーディングは、Unicode 文字およびエンコード済みバイト シーケンスの間のマッピングを定義します。 特定のバイト シーケンスのマッピングが定義されていない場合、入力バイト シーケンスを出力文字に変換、デコードの処理が失敗します。  
  
 .NET Framework では、エラー処理、変換を実行できない場合に、フォールバックと呼ばれる機構を提供します。 すべてのデコーダー フォールバック ハンドラーを次に実装する必要があります。  
  
-   派生したクラスによって表されるデコーダー フォールバックにおいて、 <xref:System.Text.DecoderFallback> クラスです。  
  
-   派生した型によって表される、デコーダー フォールバック バッファー、 <xref:System.Text.DecoderFallbackBuffer> 変換演算に文字列を返すことができるクラスです。  
  
 フォールバックは、3 つの戦略を使用して、変換エラーを処理できます。  
  
-   最適マッピングします。 デコーダー フォールバック バッファーには、入力バイト シーケンスに近い概数を表す文字列を返すことができます。 .NET Framework では、最適のパブリック達しません <xref:System.Text.DecoderFallbackBuffer> 実装します。  
  
-   置換します。 デコーダー フォールバック バッファーが疑問符 \(\) などの文字列を返すことができます \("?"\) を示すバイト シーケンスをデコードできませんでした。 .NET Framework で、 <xref:System.Text.DecoderReplacementFallback> と <xref:System.Text.DecoderReplacementFallbackBuffer> クラス パブリック置換フォールバック バッファーの実装を提供します。 コンス トラクター、 <xref:System.Text.DecoderReplacementFallback> クラスでは、置換文字列を定義することができます。  
  
-   例外。<xref:System.Text.DecoderFallbackBuffer> 実装をバイト シーケンスをデコードできないし、デコード操作の終了を示す例外をスローします。 この場合、フォールバックのハンドラーを提供する必要があります、 <xref:System.Text.DecoderFallbackBuffer> 実装が、デコーダーに文字列を返すことはできません。 .NET Framework で、 <xref:System.Text.DecoderExceptionFallback> と <xref:System.Text.DecoderExceptionFallbackBuffer> クラスをスローするパブリック例外フォールバックの実装を提供する、 <xref:System.Text.DecoderFallbackException> バイト シーケンスをデコードできない場合。  
  
 内のバッファー、 <xref:System.Text.DecoderFallbackBuffer> 実装は、フォールバック デコーダーに応えてデコーダーに返される文字列全体を表します。 一般に、実装には、返されるには、デコーダーと残りの文字数に戻るには次の文字のインデックスなどの状態情報も含まれます。<xref:System.Text.DecoderFallbackBuffer> 抽象クラスでは、派生クラスには、少なくとも次のメンバーを実装する必要があります。  
  
-   <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> バイト シーケンスをデコードできないときに、デコーダーによって呼び出されるメソッド。 デコーダー フォールバック バッファーの実装に 2 つの情報を渡します。 デコードできないバイトを格納する配列と、入力バイト配列の最初のバイトのインデックス。 デコーダー フォールバック例外ハンドラーでは、このメソッドで例外がスローされます。 それ以外の場合、メソッドが返す `true` 、フォールバックを提供する場合または `false` そうでない場合。  
  
-   <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> 場合デコーダーによって繰り返し呼び出されるメソッド、 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> メソッドが返す `true`します。 ハンドラーは、連続呼び出しで、バッファー内の各文字を返すはずです。 これには、すべての文字が返されて、u\+0000 を返す必要があります。 例外フォールバック ハンドラーは、u\+0000 を常に返します。  
  
-   <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> メソッドでは、バッファー内の前の位置にポインターを移動しようとして、移動が成功したかどうかを示します。 例外ハンドラーが常に返します `false`します。  
  
-   <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> デコーダーに返される残りの文字の数を示すプロパティです。 例外フォールバック ハンドラーは、常に 0 を返します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Text.DecoderFallbackBuffer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">入力バイト配列。</param>
        <param name="index">内のバイトのインデックス位置 <c>bytesUnknown</c>します。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定した入力バイト シーケンスを処理するためのフォールバック バッファーを準備します。</summary>
        <returns>
          <see langword="true" /> フォールバック バッファーを処理できる場合 <paramref name="bytesUnknown" />; <see langword="false" /> フォールバック バッファーを無視する場合 <paramref name="bytesUnknown" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [Fallback メソッド \(Byte\<xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName>, 、[Fallback メソッド \(Byte\<xref:System.Text.Encoding.GetString%2A?displayProperty=fullName>, 、および [Fallback メソッド \(Byte\<xref:System.Text.Decoder.Convert%2A?displayProperty=fullName> メソッドを呼び出す [Fallback メソッド \(Byte\<xref:System.Text.DecoderFallbackBuffer.Fallback%2A> デコードできない入力バイトが不明なシーケンスが発生した場合。 戻り値 `true` フォールバック バッファーが呼び出し元のメソッドを呼び出すと、入力バイト シーケンスを処理できることを示します、 [Fallback メソッド \(Byte\<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> フォールバック バッファーの各文字を取得します。 個々 のバイトを処理できないため、 [Fallback メソッド \(Byte\<xref:System.Text.DecoderFallbackBuffer.Fallback%2A> 例外フォールバック ハンドラーのメソッドは例外をスローします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、フォールバック バッファー内の次の文字を取得します。</summary>
        <returns>フォールバック バッファー内の次の文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デコード操作は、 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> メソッド操作には、入力で未知のバイト シーケンスが発生するとします。 場合、 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> メソッドが返す `true`, 、代替文字列が存在する不明な入力をデコードしないで出力に挿入することができます。 デコード操作の呼び出し、 <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> メソッド繰り返しし、一度に置換文字列の 1 つの文字を取得します。 フォールバック バッファー内のすべての文字は、デコーダーに戻されている、このメソッドは u\+0000 を返す必要があります。  
  
 例外フォールバック ハンドラーで、 <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> メソッドは u\+0000 を返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、原因を次に呼び出した、 <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> メソッドは現在の文字位置の前に、データ バッファーの文字位置にアクセスします。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> 操作が成功した以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外フォールバック ハンドラーが返す必要があります `false`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、現在の文字数を取得 <see cref="T:System.Text.DecoderFallbackBuffer" /> 処理するための残存オブジェクトです。</summary>
        <value>まだ処理されていない現在のフォールバック バッファー内の文字の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> メソッドが返す `true` 場合 <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> は 0 以外の値。  
  
 例外フォールバック ハンドラーで、 <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> メソッドは、0 を返す必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このフォールバック バッファーに関連するすべてのデータと状態情報を初期化します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>After calling the <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>