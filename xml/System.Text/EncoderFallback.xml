<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>入力文字をエンコードされた出力バイト シーケンスに変換できないため、フォールバックと呼ばれるエラー処理機構を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンコーディングされた Unicode 文字をエンコード済みバイト シーケンスにマップします。 派生した型によって表される特定のエンコーディング、 <xref:System.Text.Encoding> クラスです。 エンコードの種類を呼び出すことにより、文字をバイト シーケンスにエンコードが具体的には、 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> を呼び出して、メソッド、および、バイト シーケンスを文字配列または文字列にデコードされたが、 <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> または <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> メソッドです。  
  
 エンコード操作は、エンコーディングが、入力文字を表すことができない場合に失敗します。 たとえば、 <xref:System.Text.ASCIIEncoding> オブジェクトは、Unicode コード ポイント値が範囲外 u\+0000 ~ 007F U \+ 文字をエンコードできません。  
  
 エンコーディングの変換を実行できない場合、.NET Framework は、フォールバックと呼ばれるエラー処理機構を提供します。 アプリケーションで使用できる定義済みの .NET Framework のエンコーダー フォールバック、またはから派生したカスタムのエンコーダー フォールバックを作成できる、 <xref:System.Text.EncoderFallback> と <xref:System.Text.EncoderFallbackBuffer> クラスです。  
  
 <xref:System.Text.EncoderFallback> <xref:System.Text.EncoderFallbackBuffer> すべての基本クラスは、.NET Framework でのフォールバックのハンドラーをエンコードします。 次の 3 種類フォールバック処理のメカニズムのサポートします。  
  
-   最適フォールバック、エンコードできない有効な Unicode 文字をほぼ同等のものにマップします。 たとえば、最適フォールバックのハンドラーを <xref:System.Text.ASCIIEncoding> クラスは、AE \(u\+0041 \+ u\+0045\) に Æ \(U \+\) を対応付けられます。 最適フォールバック ハンドラー可能性がありますもを実装する 1 つの文字 \(キリル文字\) などのある別 \(ラテン、ローマなど\)。 .NET Framework では、すべてのパブリック最適フォールバック実装は提供されません。  
  
-   置換フォールバック、どの置換は各文字に対しては、定義済みの文字列でエンコードされることはできません。 .NET Framework では、定義済みの置換フォールバック ハンドラーを提供します。<xref:System.Text.EncoderReplacementFallback> クラスは、疑問符 \(\) 文字で各デコードできないバイト シーケンスを置き換えます \("?"、または U \+ 003F\) または REPLACEMENT CHARACTER \(U\+FFFD\)。 置換文字列をカスタマイズするには、呼び出しでは、代替を指定する、 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> コンス トラクターです。 代替文字列が生成されると、残りの入力を変換する、エンコード処理が続行されます。  
  
-   例外フォールバックにおいて、文字をエンコードできないときに例外をスローします。 .NET Framework では、事前定義の例外フォールバック ハンドラーを提供します。<xref:System.Text.EncoderExceptionFallback> クラスをスロー、 <xref:System.Text.EncoderFallbackException> に無効な文字が検出され、エンコードの処理を終了します。  
  
 カスタム ソリューションを実装することを選択した場合は、抽象メンバーをオーバーライドする必要があります、 <xref:System.Text.EncoderFallback> クラス。  
  
-   <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> から派生したクラスのインスタンスを返すメソッドを <xref:System.Text.EncoderFallbackBuffer>します。 開発すると、フォールバックのハンドラーの種類に応じて、 <xref:System.Text.EncoderFallbackBuffer> 実装はマッピングや置換を実行するため、または例外をスローするためです。  
  
-   <xref:System.Text.EncoderFallback.MaxCharCount%2A> プロパティで、フォールバックの実装を返すことができる文字の最大数を返します。 例外フォールバック ハンドラーでその値は 0 にする必要があります。  
  
 エンコード、デコード、およびフォールバック ストラテジの詳細については、次を参照してください。 [Character Encoding in the .NET Framework](http://msdn.microsoft.com/ja-jp/bf6d9823-4c2d-48af-b280-919c5af66ae9)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Text.EncoderFallback" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合の新しいインスタンスを初期化、 <see cref="T:System.Text.EncoderFallbackBuffer" /> クラスです。</summary>
        <returns>エンコーダー フォールバック バッファーを提供するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドから派生したオブジェクトを返します <xref:System.Text.EncoderFallbackBuffer> はフォールバック操作を実行します。 たとえば、定義済みの <xref:System.Text.EncoderFallback> で .NET Framework の実装、 <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> メソッドを返します。、 <xref:System.Text.EncoderReplacementFallbackBuffer> オブジェクト、および <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> メソッドを返します。、 <xref:System.Text.EncoderExceptionFallbackBuffer> オブジェクトです。  
  
 <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> エンコードできない最初の文字に到達したときに、エンコーダーでメソッドが呼び出されます。<xref:System.Text.EncoderFallbackBuffer> このメソッドによって返されるオブジェクト フォールバックの実装を提供し、文字またはエンコードできない文字を置き換えるバイト配列を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力文字をエンコードできないときに例外をスローするオブジェクトを取得します。</summary>
        <value>派生した種類の <see cref="T:System.Text.EncoderFallback" /> クラスです。 既定値は、 <see cref="T:System.Text.EncoderExceptionFallback" /> オブジェクトです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、最大文字数を取得現在 <see cref="T:System.Text.EncoderFallback" /> オブジェクトを返すことができます。</summary>
        <value>現在の文字の最大数 <see cref="T:System.Text.EncoderFallback" /> オブジェクトを返すことができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外フォールバック ハンドラーの場合、このプロパティは 0 を返すはずです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンコードできない入力文字の代わりに、代替文字列を出力するオブジェクトを取得します。</summary>
        <value>派生した種類の <see cref="T:System.Text.EncoderFallback" /> クラスです。 既定値は、 <see cref="T:System.Text.EncoderReplacementFallback" /> を疑問符 \(\) 文字で不明な入力文字を置き換えるオブジェクト \("?"、U \+ 003F\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>