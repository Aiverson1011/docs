<Type Name="ListBoxArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray">
  <TypeSignature Language="C#" Value="public class ListBoxArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListBoxArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.ListBox))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロール配列を提供 <see cref="T:System.Windows.Forms.ListBox" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 `ListBoxArray` クラスでは、Visual Basic 6.0 の実行時機能の同等な `ListBox` 配列。 Visual Basic 6.0 のコントロール配列のデザイン時機能は行いません。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス化するときに、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray>, も呼び出す必要があります、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SetIndex%2A> 配列の最初の要素を作成します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">
          <see cref="T:System.ComponentModel.IContainer" /> コントロール配列をホストします。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> コンテナーを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス化するときに、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray>, も呼び出す必要があります、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SetIndex%2A> 配列の最初の要素を作成します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BackColorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.BackColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.BackColor%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトと重複して機能の他の名前空間に見つけることができる[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.BindingContext" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.BindingContext%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CanExtend(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Windows.Forms.ListBox" /> コントロール。</param>
        <summary>コントロールのメンバーであるかどうかを決定する値を取得、<see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />です。</summary>
        <returns>
          <see langword="true" />場合<paramref name="target" />コントロール配列のメンバーである、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `CanExtend`を特定するかどうかを判断するメソッドを使用できます<xref:System.Windows.Forms.ListBox>コントロールは、他の要素が複製元となるコントロール配列の基本要素です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CausesValidationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.CausesValidation" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.CausesValidation%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ChangeUICues" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスまたはキーボードのユーザー インターフェイス \(UI\) キューが変更されるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトと重複して機能の他の名前空間に見つけることができる[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、<see cref="T:System.Windows.Forms.ListBox" />で、<see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />がクリックされました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Click`イベントが渡されます、<xref:System.EventArgs>をイベント ハンドラー。 そのため、クリックが発生したことをのみを示します。 具体的なマウス情報 \(ボタンのクリック、ホイールを回転、または場所の数\) を必要がある場合、<xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick>イベント。 ただし、<xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick>クリックが ENTER キーを押すなど、マウスの以外のアクションによって発生した場合、イベントは発生しません。  
  
 ダブルクリックは、ユーザーのオペレーティング システムのマウス設定によって決まります。 ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。`Click`イベントは、コントロールをダブルクリックするたびに発生します。 などのイベント ハンドラーがある場合、`Click`と<xref:System.Windows.Forms.Control.DoubleClick>イベントの[control](ms-help://MS.VSCC.v90/MS.MSDNQTR.v90.en/fxref_system.windows.forms/html/6569d671-0a28-7b3f-dbb8-90c3d272b6e2.htm)、`Click`と<xref:System.Windows.Forms.Control.DoubleClick>コントロールがダブルクリックされたときと、両方のメソッドが呼び出されるときにイベントが発生します。 コントロールがダブルクリックされたかどうか、コントロールがサポートされていないこと、<xref:System.Windows.Forms.Control.DoubleClick>イベント、`Click`イベントを 2 回発生する可能性があります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ClientSizeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.ClientSize" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.ClientSize%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.ContextMenu" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.ContextMenu%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクト機能と重複して内の他の名前空間内にあることができます、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuStripChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクト機能と重複して内の他の名前空間内にあることができます、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlAdded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいコントロールが <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> に追加されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlRemoved" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> からコントロールが削除されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CursorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Cursor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、<xref:System.Windows.Forms.Control.Cursor%2A>プロパティは、プログラムによる変更、またはユーザーの操作のいずれかで変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DataSourceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.DataSource" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is raised if the <xref:System.Windows.Forms.ListControl.DataSource%2A> property is changed by either a programmatic modification or user interaction.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DisplayMemberChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is raised if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is changed by either a programmatic modification or user interaction.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DockChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Dock" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.ListBox" /> の制御、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> がダブルクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragDrop" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ アンド ドロップ操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragEnter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトがコントロールの境界内にドラッグされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **languageKeyword tag is not supported!!!!**  
 event is raised when the user first drags the mouse cursor over the control during a drag\-and\-drop operation.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragLeave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトがコントロールの境界外にドラッグされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **languageKeyword tag is not supported!!!!**  
 event is raised when the user drags the cursor out of the control or the user cancels the current drag\-and\-drop operation.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragOver" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトがコントロールの境界を越えてドラッグされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **languageKeyword tag is not supported!!!!**  
 event is raised when the mouse cursor moves within the bounds of the control during a drag\-and\-drop operation.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DrawItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーナー描画 <see cref="T:System.Windows.Forms.ListBox" /> のビジュアルな部分を変更すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is used by an owner\-drawn <xref:System.Windows.Forms.ListBox>.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.EnabledChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Enabled" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが入力されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you change the focus by using the keyboard \(TAB, SHIFT\+TAB, and so on\), or by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> method, focus events occur in the following order:  
  
 `Enter`  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.Leave>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  
  
 `Enter`  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <xref:System.Windows.Forms.Control.Leave>  
  
 For more information about how to handle events, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
> [!NOTE]
>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FontChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Font" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Font%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ForeColorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.ForeColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.ForeColor%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListControlConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListControlConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Format" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListControlConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがデータ値にバインドされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Format` に表示される各項目の前にイベントが発生した、 <xref:System.Windows.Forms.ListControl> の形式を示します。 このイベントの処理にアクセスできる、文字列をこの一覧項目に表示される、 `Value` のプロパティ、 <xref:System.Windows.Forms.ListControlConvertEventArgs>です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatStringChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatStringChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatStringChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormatStringChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.FormatString" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.ListControl.FormatString%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormattingEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormattingEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormattingEnabledChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetControlInstanceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>上書き <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />します。</summary>
        <returns>コントロール配列内のコントロールの型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーションのコードから呼び出すことはできません。 代わりに、<xref:System.Object.GetType%2A> メソッドを使用してください。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.ListBox o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.ListBox o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetIndex(System.Windows.Forms.ListBox)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> コントロール配列内です。</param>
        <summary>インデックスを取得、 <see cref="T:System.Windows.Forms.ListBox" /> で、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />です。</summary>
        <returns>A <see langword="Short" /> の指定したインデックスを表す <see cref="T:System.Windows.Forms.ListBox" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したインデックスを取得するこのメソッドを使用できます <xref:System.Windows.Forms.ListBox>します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GiveFeedback" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ操作中に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `GiveFeedback` イベントは、ドラッグ アンド ドロップ操作が始まると発生します。 使用して、 `GiveFeedback` イベント、ドラッグ イベントのソースことができます、ドラッグ アンド ドロップ操作中にユーザーに視覚的フィードバックを提供するためにマウス ポインターの外観を変更しています。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HelpRequested" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロールのヘルプを要求すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `HelpRequested`通常イベントは、ユーザーが F1 キーを押すか、関連付けられている状況依存のヘルプ ボタンがクリックされたを押すとします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトの機能と重複を見つけることができる他の名前空間で、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HookUpControlEvents(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Object" />。</param>
        <summary>オーバーライド<see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーションのコードから呼び出すことはできません。 使用して`AddHandler`を使用して追加される、コントロールのイベントをフックするために、<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>メソッドです。  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクト機能と重複して内の他の名前空間内にあることができます、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ImeModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.ImeMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.ImeMode%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListBox this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListBox Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Item(System.Int16)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">A <see langword="Short" /> コントロール配列の要素の位置を指定します。</param>
        <summary>特定の要素を取得、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> インデックス。 読み取り専用です。</summary>
        <value>A <see cref="T:System.Windows.Forms.ListBox" /> 指定した <paramref name="Index" /> コントロール配列内です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Item` プロパティがコントロール配列の既定のプロパティです。 そのため、次のコード行は等価です。  
  
```vb  
MsgBox(CStr(ListBoxArray.Item(1).Text))  
MsgBox(CStr(ListBoxArray(1).Text))  
```  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 重要なイベントは、次の順序で発生します。  
  
 `KeyDown`  
  
 <xref:System.Windows.Forms.Control.KeyPress>  
  
 <xref:System.Windows.Forms.Control.KeyUp>  
  
 フォーム レベルでのみキーボード イベントを処理し、キーボード イベントを受信するコントロールを有効に、設定、 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> フォームのプロパティ <xref:System.Windows.Forms.Control.KeyPress> イベント処理メソッドを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 重要なイベントは、次の順序で発生します。  
  
 <xref:System.Windows.Forms.Control.KeyDown>  
  
 `KeyPress`  
  
 <xref:System.Windows.Forms.Control.KeyUp>  
  
 `KeyPress` 以外の文字キーを使用してイベントは発生しません。 ただし、非文字キーも発生、 <xref:System.Windows.Forms.Control.KeyDown> と <xref:System.Windows.Forms.Control.KeyUp> イベントです。  
  
 使用して、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> プロパティ実行時に、使用するか、一般的なキーボード操作のサブセットを変更するサンプルのキーボード操作をします。  
  
 フォーム レベルでのみキーボード イベントを処理し、キーボード イベントを受信するコントロールを有効に、設定、 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> フォームのプロパティ <xref:System.Windows.Forms.Control.KeyPress> イベント処理メソッドを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールにフォーカスがあるときにキーが離されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 重要なイベントは、次の順序で発生します。  
  
 <xref:System.Windows.Forms.Control.KeyDown>  
  
 <xref:System.Windows.Forms.Control.KeyPress>  
  
 `KeyUp`  
  
 フォーム レベルでのみキーボード イベントを処理し、キーボード イベントを受信するコントロールを有効に、設定、 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> フォームのプロパティ <xref:System.Windows.Forms.Control.KeyPress> イベント処理メソッドを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Layout" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの子コントロールの位置を変更する必要があるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `Layout` イベントの子コントロールが追加または削除、およびその他の変更が発生すると、コントロールの変更の範囲は、コントロールのレイアウトに影響を受ける場合があるときに発生します。 使用して、レイアウト イベントを抑制することができます、 <xref:System.Windows.Forms.Control.SuspendLayout%2A> と <xref:System.Windows.Forms.Control.ResumeLayout%2A> メソッドです。 レイアウトを中断するには、コントロールでの変更のレイアウトを実行することがなく複数のアクションを実行することができます。 たとえば、サイズを変更するコントロールを移動する場合は、各操作が発生する `Layout` イベントです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力フォーカスがコントロールを離れると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 \(タブ、shift キーを押しながら TAB となど\) のキーボードを使用して、またはを呼び出して、フォーカスを変更した場合、 <xref:System.Windows.Forms.Control.Select%2A> または <xref:System.Windows.Forms.Control.SelectNextControl%2A> メソッドでは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:System.Windows.Forms.Control.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 `Leave`  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 フォーカスを変更すると、マウスを使用するか、呼び出すことによって、 <xref:System.Windows.Forms.Control.Focus%2A> メソッドでは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:System.Windows.Forms.Control.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 `Leave`  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.LocationChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Location" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Location%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MarginChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Margin" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Margin%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MeasureItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オーナー描画 <see cref="T:System.Windows.Forms.ListBox" /> の項目を描画する必要があるたびに発生し、また、リスト項目のサイズが判別された時点でも発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 描画する前に、アイテムの切り替えは、サイズを指定するには、このイベントのイベント ハンドラーを作成することができます、 <xref:System.Windows.Forms.ListBox.DrawItem> イベントです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseCaptureChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールでマウスのキャプチャを失ったか取得したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseCaptureChanged" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウスでコントロールをクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポインターが通常が図形の上にマウス ボタンをクリックすると、次の一連のコントロールからイベントを発生させます。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click>  
  
 `MouseClick`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 2 回クリックすると閉じるには、十分なユーザーのオペレーティング システムのマウス設定によって決定されるが生成されます、 <xref:System.Windows.Forms.Control.MouseDoubleClick> 、2 つ目ではなくイベント `MouseClick` イベントです。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.Click> イベントは、コントロールの論理的な上位レベルのイベントです。 このイベントは、コントロールにフォーカスがある場合は、ENTER キーを押すなどその他のアクションによって発生する多くの場合は。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがダブルクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポインターが通常が図形の上にマウス ボタンをクリックすると、次の一連のコントロールからイベントを発生させます。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 2 回クリックすると閉じるには、十分なユーザーのオペレーティング システムのマウス設定によって決定されるが生成されます、 `DoubleClick` 、2 つ目ではなくイベント <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick> イベントです。  
  
> [!NOTE]
>  <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click> イベントは、図形の論理的な上位レベルのイベントです。 このイベントは、図形にフォーカスがある場合は、ENTER キーを押すなどその他のアクションによって発生する多くの場合は。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがコントロール上にあり、マウス ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス イベントは次の順序で発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover>  
  
 `MouseDown`  
  
 <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave>  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターによってコントロールが入力されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス イベントは次の順序で発生します。  
  
 `MouseEnter`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover> \/ <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown> \/ <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave>  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターをコントロールの上に重ねると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般的な使用 `MouseHover` コントロール \(「静止領域」\) を囲む指定された領域内のコントロールでマウスを置いたときに、ツール ヒントを表示することです。 このイベントが発生するのに必要な一時停止が、ミリ秒単位で指定されている、 <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> プロパティです。  
  
 `MouseHover` イベントが定義され、検出に関連して、 <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> と <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> プロパティです。  
  
 マウス イベントは次の順序で発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove>  
  
 `MouseHover`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown> \/ <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave>  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがコントロールを離れると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス イベントは次の順序で発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover> \/ <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown> \/ <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 `MouseLeave`  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがコントロール上を移動すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス イベントは次の順序で発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter>  
  
 `MouseMove`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover> \/ <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown> \/ <xref:System.Windows.Forms.Control.MouseWheel>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave>  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがコントロール上にあり、マウス ボタンが離されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マウス イベントは次の順序で発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover> \/ <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown> \/ <xref:System.Windows.Forms.Control.MouseWheel>  
  
 `MouseUp`  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave>  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Move" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが移動されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.PaddingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、コントロールの <see cref="P:System.Windows.Forms.Control.Padding" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Padding%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ParentChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、コントロールの <see cref="P:System.Windows.Forms.Control.Parent" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Parent%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryAccessibilityHelp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Forms.AccessibleObject" /> ユーザー補助アプリケーションにヘルプを提供することができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する必要があります、 <xref:System.Windows.Forms.HelpProvider> F1 キーを押すと、ユーザー補助オブジェクトのヘルプを起動するユーザーを有効にするクラス。<xref:System.Windows.Forms.HelpProvider> 完全な情報を提供、 <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>です。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryContinueDrag" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ アンド ドロップ操作中に発生し、ドラッグ ソースがドラッグ アンド ドロップ操作をキャンセルする必要があるかどうかを決定できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `QueryContinueDrag` イベントは、ドラッグ アンド ドロップ操作中にキーボードまたはマウス ボタンの状態に変更があると発生します。`QueryContinueDrag` イベントにより、ドラッグ ソースがドラッグ アンド ドロップ操作をキャンセルする必要があるかどうかを決定します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RegionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Region" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Region%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.ListBox o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.ListBox o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ResetIndex(System.Windows.Forms.ListBox)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Forms.Control" />
        </param>
        <summary>
          <see langword="ResetIndex" /> でメソッドがサポートされていません、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはサポートされていませんし、呼び出すことでは、例外は発生しません。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Resize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのサイズが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 決定する、 <xref:System.Windows.Forms.Control.Size%2A> キャストできるサイズが変更されたコントロールの `sender` のパラメーター、 <xref:System.EventArgs> データを <xref:System.Windows.Forms.Control> を取得し、 <xref:System.Windows.Forms.Control.Size%2A> プロパティ \(または <xref:System.Windows.Forms.Control.Height%2A> と <xref:System.Windows.Forms.Control.Width%2A> プロパティ個別に\)。  
  
 カスタム レイアウトを処理する、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Layout> イベントの代わりに、 `Resize` イベントです。<xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Layout> への応答でイベントが発生、 `Resize` イベント、その他のコントロールのレイアウトに影響する変更への応答で読むことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.RightToLeft%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedValueChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedValueChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.ListBox o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.ListBox o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SetIndex(System.Windows.Forms.ListBox,System.Int16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> コントロール配列内です。</param>
        <param name="Index">A <see langword="Short" /> の指定したインデックスを表す <see cref="T:System.Windows.Forms.ListBox" />します。</param>
        <summary>最初のインデックスを設定 <see cref="T:System.Windows.Forms.ListBox" /> で、 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `SetIndex` メソッドは、コントロール配列内の最初の要素を作成するときにのみ呼び出す必要があります。 後続の要素を追加するには、呼び出し、 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> メソッドを指定し、 `Index`です。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.ListBox o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.ListBox o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ShouldSerializeIndex(System.Windows.Forms.ListBox)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> コントロール配列内です。</param>
        <summary>示す値を返すかどうか、 <see cref="T:System.Windows.Forms.ListBox" /> これのメンバーである <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />です。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="o" /> このコントロール配列のメンバーである。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、指定した <xref:System.Windows.Forms.ListBox> 、別のメンバーである <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray>, 、`ShouldSerializeIndex` 返します `false`します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SizeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Size" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Size%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.StyleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール スタイルが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `StyleChanged` イベントが発生したときに <xref:System.Windows.Forms.ControlStyles> フラグが追加または変更されました。  
  
 コントロールのスタイルは、プログラムの変更やユーザー操作によって変更された場合、このイベントが発生します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SystemColorsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>システム カラーが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Drawing.SystemColors> プログラムの変更やユーザー操作によって変更されました。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.TabIndex" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.TabIndex%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabStopChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.TabStop" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.TabStop%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの検証が終了すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出して \(タブ、shift キーを押しながら TAB となど\) のキーボードを使用して、フォーカスを変更すると、 <xref:System.Windows.Forms.Control.Select%2A> または <xref:System.Windows.Forms.Control.SelectNextControl%2A> メソッドを設定したり、 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> プロパティを現在のフォームは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating>  
  
 `Validated`  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 フォーカスを変更すると、マウスを使用するか、呼び出すことによって、 <xref:System.Windows.Forms.Control.Focus%2A> メソッドでは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating>  
  
 `Validated`  
  
 場合、 <xref:System.Windows.Forms.Control.CausesValidation%2A> にプロパティが設定されている `false`, 、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> と `Validated` イベントが抑制されます。  
  
 場合、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.ComponentModel.CancelEventArgs> に設定されている `true` で、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> イベント デリゲート、後に通常発生するすべてのイベント、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> イベントが抑制されます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが検証しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出して \(タブ、shift キーを押しながら TAB となど\) のキーボードを使用して、フォーカスを変更すると、 <xref:System.Windows.Forms.Control.Select%2A> または <xref:System.Windows.Forms.Control.SelectNextControl%2A> メソッドを設定したり、 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> プロパティを現在のフォームは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 フォーカスを変更すると、マウスを使用するか、呼び出すことによって、 <xref:System.Windows.Forms.Control.Focus%2A> メソッドでは、次の順序でのフォーカス イベントが発生します。  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter>  
  
 <xref:System.Windows.Forms.Control.GotFocus>  
  
 <xref:System.Windows.Forms.Control.LostFocus>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating>  
  
 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated>  
  
 場合、 <xref:System.Windows.Forms.Control.CausesValidation%2A> にプロパティが設定されている `false`, 、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> と <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated> イベントが抑制されます。  
  
 場合、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.ComponentModel.CancelEventArgs> に設定されている `true` で、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> イベント デリゲート、後に通常発生するすべてのイベント、 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating> イベントが抑制されます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ValueMemberChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.ListControl.ValueMember%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.VisibleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.Control.Visible" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、 <xref:System.Windows.Forms.Control.Visible%2A> プロパティがプログラムの変更やユーザー操作によって変更します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>