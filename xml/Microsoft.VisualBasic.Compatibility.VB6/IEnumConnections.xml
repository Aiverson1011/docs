<Type Name="IEnumConnections" FullName="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections">
  <TypeSignature Language="C#" Value="public interface IEnumConnections" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumConnections" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("B196B287-BAB4-101A-B69C-00AA00341D07")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義を管理、 <see langword="IEnumConnections" /> インターフェイスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しい開発を使用して <xref:System.Runtime.InteropServices.ComTypes.IEnumConnections>します。  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections ec);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Clone(class Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ec">このメソッドが戻るときに、新しく作成された列挙子への参照が含まれています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>現在のものと同じ列挙の状態を含む新しい列挙子を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  関数し、オブジェクト、<xref:Microsoft.VisualBasic.Compatibility.VB6>名前空間が使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]です。 ほとんどの場合、これらの関数とオブジェクトと重複して機能の他の名前空間に見つけることができる[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public void Next (int cConnections, out Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[] cd, out int cFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Next(int32 cConnections, valuetype Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[] cd, int32 cFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
        <Parameter Name="cd" Type="Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]&amp;" RefType="out" />
        <Parameter Name="cFetched" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cConnections">数 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> で返される構造体 <c>cd</c>します。</param>
        <param name="cd">このメソッドが戻るときに、列挙された接続への参照が含まれています。 このパラメーターは初期化せずに渡されます。</param>
        <param name="cFetched">このメソッドが戻るときに列挙された接続の実際の数への参照が含まれています。 <c>cd</c>します。</param>
        <summary>指定した列挙のシーケンス内の項目数を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  関数し、オブジェクト、 [Next メソッド \(Int32, CONNECTDATA\<xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開始するには、列挙のシーケンスをリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public void Skip (int cConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Skip(int32 cConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Skip(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cConnections">列挙体でスキップする要素の数。</param>
        <summary>指定した列挙のシーケンス内の項目数をスキップします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  関数し、オブジェクト、 <xref:Microsoft.VisualBasic.Compatibility.VB6> 名前空間は、使用するために Visual Basic 6.0 からアップグレードするためのツールによって提供されます [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]します。 ほとんどの場合、これらの関数およびオブジェクトの機能を複製を他の名前空間内で検索する、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。 必要とされるだけと Visual Basic 6.0 のコード モデルと大きく異なる、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 実装します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>