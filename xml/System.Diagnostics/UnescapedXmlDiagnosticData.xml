<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザーが指定したトレース データのログ記録のエスケープ解除された XML データを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは使用、 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> メソッドです。 XML データの送信先にも使用できる、 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> メソッドです。  
  
> [!NOTE]
>  ユーザーが指定したデータは、スキーマの有効性はチェックされません。  
  
   
  
## 例  
 次のコード例では、使用して <xref:System.Diagnostics.UnescapedXmlDiagnosticData> クラスです。 このコード例はに対して提供されているサンプルが大きく、 <xref:System.Diagnostics.EventSchemaTraceListener> クラスです。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener\#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener\#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">XML データを記録する、 <see langword="UserData" /> イベント スキーマのノードです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> 指定された XML データ文字列を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンド ツー エンドのあるコードを作成するかどうかはスキーマに準拠、 `xmlPayload` パラメーターは、エンドツー エンド イベント スキーマに対して検証できる XML フラグメントである必要があります。 場合 `xmlPayload` は `null`, 、 <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> プロパティが空の文字列です。  
  
> [!NOTE]
>  `xmlPayload` XML の有効性はチェックされません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A> コンス トラクターです。 このコード例はに対して提供されているサンプルが大きく、 <xref:System.Diagnostics.EventSchemaTraceListener> クラスです。  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener\#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener\#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列表現を返す、 <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> オブジェクトです。</summary>
        <returns>文字列表現、 <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> オブジェクトです。 オブジェクトがある場合 <see langword="null" />, 、このメソッドは、空の文字列を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエスケープされていない XML データ文字列を設定します。</summary>
        <value>エスケープ解除された XML 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンド ツー エンドのあるコードを作成するかどうかはスキーマに準拠、 <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> プロパティの値は、エンドツー エンド イベント スキーマに対して検証できる XML フラグメントである必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>