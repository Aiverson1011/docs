<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>これは順序付けられたコレクションを 1 つ以上のスタック フレームのスタック トレースを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> 情報はデバッグ ビルドの構成に最もわかりやすくなります。 既定では、デバッグ ビルドには、リリース ビルドでないにデバッグ シンボルが含まれます。 デバッグ シンボルには、ほとんどファイル、メソッド名、行番号、および構築する際に使用する列情報にはが含まれます。 <xref:System.Diagnostics.StackFrame> と <xref:System.Diagnostics.StackTrace> オブジェクトです。  
  
 <xref:System.Diagnostics.StackTrace> 多くのメソッド呼び出しの最適化時に実行されたコード変換が、期待どおりをレポートしない可能性があります。  
  
   
  
## 例  
 次のコンソール アプリケーションは、単純なを作成する方法を示します <xref:System.Diagnostics.StackTrace> デバッグと診断情報を取得するには、そのフレームを反復処理します。  
  
 [!code-cpp[StackTraceSample1\#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1\#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">for the ability of inheritors to access unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />. This class cannot be inherited by partially trusted code.</permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> 、呼び出し元のフレームからのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> は呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません。  
  
 完全な呼び出し履歴に関するメソッドの概要情報のみをトレースする場合は、この既定のコンス トラクターを使用します。  
  
   
  
## 例  
 次のコード例では、スタック トレースの最初と最後の関数呼び出しが表示されます。  
  
 [!code-cpp[StackFrameSample1\#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1\#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo">
          <see langword="true" /> ファイル名、行番号および列番号をキャプチャするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスから呼び出し元のフレーム、オプションでソース情報をキャプチャします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> は呼び出し元の現在のスレッドで作成されます。  
  
   
  
## 例  
 次のコード例では、さまざまなを示しています <xref:System.Diagnostics.StackTrace> コンス トラクター メソッドです。  
  
 [!code-cpp[StackFrameSample1\#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1\#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">フレームを <see cref="T:System.Diagnostics.StackTrace" /> オブジェクトを含める必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> を 1 つのフレームを含むクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 完全なスタック トレースのオーバーヘッドしたくない場合は、このコンス トラクターを使用します。  
  
   
  
## 例  
 次のコード例の書き込みスタック トレース情報イベント ログ エントリにします。  
  
 [!code-cpp[StackTraceSample3\#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3\#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">スタック トレースを構築する例外オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスの指定された例外オブジェクトを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> は呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません。  
  
 結果として得られるスタック トレースでは、例外発生時にスタックについて説明します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">パラメーター <paramref name="e" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames">トレースを開始するスタック上のフレームの数。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスから呼び出し元のフレームを指定したフレーム数をスキップしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> は呼び出し元の現在のスレッドで作成され、ファイル名、行番号、または列の情報が含まれていません。  
  
 スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、 <xref:System.Diagnostics.StackTrace> フレームが含まれません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="skipFrames" /> パラメーターが負の値。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">スタック トレースを構築する例外オブジェクト。</param>
        <param name="fNeedFileInfo">
          <see langword="true" /> ファイル名、行番号および列番号をキャプチャするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラス、指定された例外オブジェクトを使用して、オプションでソース情報をキャプチャします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果として得られるスタック トレースでは、例外発生時にスタックについて説明します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">パラメーター <paramref name="e" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">スタック トレースを構築する例外オブジェクト。</param>
        <param name="skipFrames">トレースを開始するスタック上のフレームの数。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスの例外オブジェクトを使用して、指定したフレーム数をスキップしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.StackTrace> ファイル名、行番号、または列の情報が含まれていません。  
  
 結果として得られるスタック トレースでは、例外発生時にスタックについて説明します。  
  
 スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、 <xref:System.Diagnostics.StackTrace> フレームが含まれません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">パラメーター <paramref name="e" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="skipFrames" /> パラメーターが負の値。</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames">トレースを開始するスタック上のフレームの数。</param>
        <param name="fNeedFileInfo">
          <see langword="true" /> ファイル名、行番号および列番号をキャプチャするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスから呼び出し元のフレームを指定したフレーム数をスキップし、オプションでソース情報をキャプチャします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、 <xref:System.Diagnostics.StackTrace> フレームが含まれません。  
  
   
  
## 例  
 次のコード例では、さまざまなを示しています <xref:System.Diagnostics.StackTrace> コンス トラクター メソッドです。  
  
 [!code-cpp[StackFrameSample1\#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1\#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="skipFrames" /> パラメーターが負の値。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread">スタック トレースが要求されたスレッドです。</param>
        <param name="needFileInfo">
          <see langword="true" /> ファイル名、行番号および列番号をキャプチャするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラスが特定のスレッドでは、オプションでソース情報をキャプチャします。  
  
 このコンス トラクターのオーバー ロードを使用しないでください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  このコンストラクターは使用しないでください。 これは、古いものと、推奨される代替手段はありません。 スレッドを中断する場合があるなしを非常に簡単にどのようなコードを実行することや、デッドロックが発生することが把握する方法です。 たとえば、セキュリティ アクセス許可の評価中にロックが保持している間にスレッドを中断した場合その他のスレッドで、 <xref:System.AppDomain> されない可能性があります。 その他のスレッドでのクラスのコンス トラクターの実行中に、スレッドを中断した場合、 <xref:System.AppDomain> クラスがブロックされていることを使用しようとします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">スレッド <paramref name="targetThread" /> は中断されません。</exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">スタック トレースを構築する例外オブジェクト。</param>
        <param name="skipFrames">トレースを開始するスタック上のフレームの数。</param>
        <param name="fNeedFileInfo">
          <see langword="true" /> ファイル名、行番号および列番号をキャプチャするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.StackTrace" /> クラス例外オブジェクトを使用して、指定したフレーム数をスキップする、およびオプションでソース情報をキャプチャします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果として得られるスタック トレースでは、例外発生時にスタックについて説明します。  
  
 スキップするフレームの数を超える値や、インスタンスの作成時に呼び出し履歴上のフレームの合計数と等しく場合、 <xref:System.Diagnostics.StackTrace> フレームが含まれません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">パラメーター <paramref name="e" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="skipFrames" /> パラメーターが負の値。</exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタック トレース内のフレームの数を取得します。</summary>
        <value>スタック トレースのフレームの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、スタック トレースの最初と最後の関数呼び出しが表示されます。  
  
 [!code-cpp[StackFrameSample1\#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1\#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要求されるスタック フレームのインデックス。</param>
        <summary>指定したスタック フレームを取得します。</summary>
        <returns>指定したスタック フレーム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタック フレームは、最後にプッシュされるスタック フレームは、0 から始まる番号が付けられます。  
  
   
  
## 例  
 次のコード例では、スタック トレースの最初と最後の関数呼び出しが表示されます。  
  
 [!code-cpp[StackFrameSample1\#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1\#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のスタック トレース内のすべてのスタック フレームのコピーを返します。</summary>
        <returns>型の配列 <see cref="T:System.Diagnostics.StackFrame" /> 、関数呼び出しにスタック トレースを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返された使用 <xref:System.Diagnostics.StackFrame> で列挙し、関数を確認する配列を呼び出し、 <xref:System.Diagnostics.StackTrace>です。 返される配列の長さに等しい、 <xref:System.Diagnostics.StackTrace.FrameCount%2A> プロパティの値。  
  
 <xref:System.Diagnostics.StackFrame> 配列の要素が、逆順に並べられます。<xref:System.Diagnostics.StackFrame> 配列のインデックス 0 はスタック トレースと呼び出しスタックにプッシュされた最後のフレームで、最新の関数呼び出しを表します。<xref:System.Diagnostics.StackFrame> 配列インデックスを <xref:System.Diagnostics.StackTrace.FrameCount%2A> から 1 を引いたスタック トレースと呼び出しスタックにプッシュされた最初のフレームに最も古い関数呼び出しを表します。  
  
 使用して、 <xref:System.Diagnostics.StackTrace.GetFrames%2A> スタック トレース; 内のすべてのスタック フレームを取得するメソッドを使用して、 <xref:System.Diagnostics.StackTrace.GetFrame%2A> スタック トレース内の特定のスタック フレームを取得します。<xref:System.Diagnostics.StackFrame> 2 つの方法でインデックスが同じ順序付けします。 たとえば、 <xref:System.Diagnostics.StackFrame> インデックス 0 位置によって返される配列に <xref:System.Diagnostics.StackTrace.GetFrames%2A> と同じです、 <xref:System.Diagnostics.StackFrame> によって返される <xref:System.Diagnostics.StackTrace.GetFrame%2A> の指数が 0 を入力します。  
  
   
  
## 例  
 次のコード例に示します内のフレームを列挙する、 <xref:System.Diagnostics.StackTrace>です。  
  
 [!code-cpp[StackTraceSample2\#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2\#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>スタック トレースから除外する方法の数の既定値を定義します。 このフィールドは定数です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタック トレースの開始時にスキップする方法の数の既定値。 この定数の値は 0 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>スタック トレースの読み取り可能な形式を構築します。</summary>
        <returns>スタック トレースの読み取り可能な形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の書き込みスタック トレース情報イベント ログ エントリにします。  
  
 [!code-cpp[StackTraceSample3\#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3\#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.StackTrace" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>