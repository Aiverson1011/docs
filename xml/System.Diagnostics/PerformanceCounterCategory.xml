<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パフォーマンス カウンターのカテゴリを定義するパフォーマンス オブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  パフォーマンス カウンターを作成、削除する名前付きミュー テックスを使用して、基になるコードの同期が必要です。 高い特権を持つアプリケーションには、名前付きミュー テックスがロックを作成またはパフォーマンス カウンターを削除する試行は、ロックが解除されるまでの応答を停止するアプリケーションを引き起こします。 この問題を回避するために、付与しないで <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 信頼されていないコードにアクセス許可。 さらに、 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> アクセス許可は、可能性のあるにより、他のアクセス許可をバイパスすることし、信頼性の高いコードにのみ付与する必要があります。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> インスタンスの <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> パフォーマンス ビューアー アプリケーションのカウンターの追加\] ダイアログ ボックスの \[パフォーマンス オブジェクト\] フィールドにプロパティが表示されます。  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> クラス カウンターと、コンピューター上のカテゴリと対話するためのいくつかのメソッドを提供します。<xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドを使用すると、カスタム カテゴリを定義します。<xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> メソッドは、コンピューターからカテゴリを削除する方法を提供します。<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> メソッドを使用すると、カテゴリの一覧を表示中に <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> 1 つのカテゴリに関連付けられているすべてのカウンターとインスタンス データを取得します。  
  
 パフォーマンス カウンターは、アプリケーションに関するパフォーマンス データを公開します。 カテゴリには、\(プロセッサ、ディスク、およびメモリ\) などの物理コンポーネントとプロセスとスレッド\) などのシステム オブジェクトが含まれます。 同じパフォーマンス オブジェクトに関連付けられているシステム カウンターは、共通のフォーカスを示すカテゴリにグループ化されます。 インスタンスを作成する場合、 <xref:System.Diagnostics.PerformanceCounter> クラス、まずを指定するカテゴリをコンポーネントが対話して、そのカテゴリからカウンターを選択します。  
  
 たとえば、1 つの Windows カウンター カテゴリには、メモリ カテゴリです。 このカテゴリ内でのシステム カウンターは、使用できるバイト数とキャッシュされているバイト数などのメモリ データを追跡します。 インスタンスを作成すると、アプリケーションにキャッシュされているバイトを操作する場合、 <xref:System.Diagnostics.PerformanceCounter> コンポーネント、Memory カテゴリに接続し、そのカテゴリから \(この場合、キャッシュされたバイト数\) を該当するカウンターを選択します。  
  
 システム、多くカウンターその他のカテゴリで使用できるが、おそらくにやり取りする最も頻繁にカテゴリは、キャッシュ、メモリ、オブジェクト、PhysicalDisk、プロセス、プロセッサ、サーバー、システム、およびスレッドのカテゴリをされます。  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> メソッドで、 <xref:System.Diagnostics.PerformanceCounter> クラスは、カウンターを解放し、カウンターのインスタンスを再利用されます再利用するオプションがそのカテゴリの選択されている場合。 別のプロセスまたはコードの別の部分が \[カウンターのインスタンスへの書き込みを試みると、競合状態が発生する可能性があります。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録されているパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムの時間です。 リストが更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターのカテゴリと共にインストールされる、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 個々 の共有メモリを使用して、独自のメモリが各パフォーマンス カウンター カテゴリを使用します。 HKEY\_LOCAL\_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ のレジストリ キーに FileMappingSize をという名前の DWORD を作成して個々 の共有メモリのサイズを指定できる*\< 項目名 \>*\\Performance します。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは、131, 072 10 進数です。 FileMappingSize 値が存在しない場合、 `fileMappingSize` 属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理のオーバーヘッドが増加の原因です。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実感できます。 ファイル マップのサイズの詳細については、次を参照してください。 [\<performanceCounters\> Element](http://msdn.microsoft.com/ja-jp/a71f605b-c7d9-4501-a5c3-abcbb964a43f)します。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounter> とその <xref:System.Diagnostics.PerformanceCounterCategory> 、ローカル コンピューターまたは別のコンピューター上に存在します。 これらのオブジェクトが、ローカル コンピューター上に存在しない場合は、例では、必要に応じてそれらを作成します。 使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> メソッドを呼び出せば確認するかどうか、 <xref:System.Diagnostics.PerformanceCounterCategory> が存在します。  場合、 <xref:System.Diagnostics.PerformanceCounterCategory> が存在しないと、カウンター名が指定されていないまたは例では、コンピューターがリモート コンピューターの場合は、終了します。  
  
 場合、 <xref:System.Diagnostics.PerformanceCounter> 名が指定されて、例では、 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッド、ユーザーに結果を表示します。 場合、 <xref:System.Diagnostics.PerformanceCounter> が存在しないユーザーが削除して再作成、 <xref:System.Diagnostics.PerformanceCounterCategory> で新しい <xref:System.Diagnostics.PerformanceCounter>します。 使用して、カテゴリを削除する場合は、ユーザーは、 <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> メソッドです。  
  
 要求された場合例では、ここで新たに作成、 <xref:System.Diagnostics.PerformanceCounterCategory> と <xref:System.Diagnostics.PerformanceCounter> を使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドです。 この例を使用してインスタンス名が指定されている場合、 <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> メソッドし、結果を表示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class\#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class\#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラス、リーフ、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが空で、セット、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティは、これを関連付ける前に設定する必要があります <xref:System.Diagnostics.PerformanceCounterCategory> インスタンスとサーバーのパフォーマンス オブジェクトです。 それ以外の場合は、例外がスローされます。  
  
   
  
## 例  
 次のコード例を受け入れる、 <xref:System.Diagnostics.PerformanceCounterCategory> 名と、コマンドラインからコンピューター名。  作成、 <xref:System.Diagnostics.PerformanceCounterCategory> そのプロパティを表示し、指定されたパラメーターの数の適切なコンス トラクターのオーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、またはこれを関連付けられるのパフォーマンス オブジェクトの名前 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスのセット、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティ セットを指定した値に、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティをローカル コンピューターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を受け入れる、 <xref:System.Diagnostics.PerformanceCounterCategory> 名と、コマンドラインからコンピューター名。 作成、 <xref:System.Diagnostics.PerformanceCounterCategory> そのプロパティを表示し、指定されたパラメーターの数に適したコンス トラクター オーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> 空の文字列 \(""\) です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading category information, such as the category name. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、またはこれを関連付けられるのパフォーマンス オブジェクトの名前 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンス。</param>
        <param name="machineName">パフォーマンス カウンターのカテゴリと関連するカウンターが存在するコンピューター。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスとセット、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> と <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティを指定した値にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を受け入れる、 <xref:System.Diagnostics.PerformanceCounterCategory> 名と、コマンドラインからコンピューター名。 作成、 <xref:System.Diagnostics.PerformanceCounterCategory> そのプロパティを表示し、指定されたパラメーターの数に適したコンス トラクター オーバー ロードを使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> 空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="machineName" /> 構文が無効です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading category information, such as the computer and category name. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カテゴリのヘルプ テキストを取得します。</summary>
        <value>このカテゴリを測定するパフォーマンス オブジェクトの説明です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterCategory> で、 <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>です。 ユーザーを要求、 <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名を設定し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> 入力された値からのプロパティです。 これは、後の値を表示して、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, 、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティ、またはその場合はエラー メッセージが表示、 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 カテゴリ名は、カテゴリ ヘルプを取得する前に設定する必要があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このカテゴリを定義するパフォーマンス オブジェクトの名前を設定します。</summary>
        <value>パフォーマンス カウンターのカテゴリ、またはこれを関連付けられるのパフォーマンス オブジェクトの名前 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterCategory> で、 <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>です。 ユーザーを要求、 <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名を設定し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> 入力された値からのプロパティです。 これは、後の値を表示して、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, 、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティ、またはその場合はエラー メッセージが表示、 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 空の文字列 \(""\) です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パフォーマンス カウンター カテゴリの種類を取得します。</summary>
        <value>
          <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> プロパティを示すかどうか、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトは、複数のインスタンスを持つことができます。 指定できる値は <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, 、<xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, 、または <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>です。  
  
 パフォーマンス カウンター カテゴリの 2 種類があります。 単一インスタンスと複数インスタンス。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定は、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework バージョン 1.0 および 1.1 がパフォーマンス カウンター カテゴリが複数のインスタンスであるかどうかを把握するために必要なまたは単一インスタンス。[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], 、 <xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙体は、パフォーマンス カウンターが複数のインスタンスを持つかどうかを示すために使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <summary>指定したカウンターが示されている、このカテゴリに登録されているかどうかを判断、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> と <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティです。</summary>
        <returns>
          <see langword="true" /> 指定されたカテゴリに、カウンターが登録されているかどうか、 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> と <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> プロパティ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定する必要があります、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> このメソッドを呼び出す前に、プロパティです。 それ以外の場合は、例外がスローされます。  
  
 設定していない場合、 <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> プロパティには、このメソッドは、ローカル コンピューターを使用して \("です。"\) です。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounter> が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 作成、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクト、適切なを使用して <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>します。 使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> メソッドを呼び出せば確認するかどうか、指定した <xref:System.Diagnostics.PerformanceCounter> が存在し、ユーザーに通知します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが設定されていません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、または指定されたパフォーマンス カウンターが関連付けられているパフォーマンス オブジェクトの名前。</param>
        <summary>指定したカウンターが、ローカル コンピューター上の指定したカテゴリに登録されているかどうかを決定します。</summary>
        <returns>
          <see langword="true" />, 、、カウンターがローカル コンピューター上の指定したカテゴリに登録されている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounter> が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 静的なオーバー ロードを使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッドを呼び出せば確認するかどうか、指定した <xref:System.Diagnostics.PerformanceCounter> 名に存在する、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 オーバー ロードは、コンピューター名が提供されるかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。  
  
 または  
  
 <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> 空の文字列 \(""\) です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">検索するパフォーマンス カウンターの名前。</param>
        <param name="categoryName">パフォーマンス カウンターのカテゴリ、または指定されたパフォーマンス カウンターが関連付けられているパフォーマンス オブジェクトの名前。</param>
        <param name="machineName">パフォーマンス カウンターのカテゴリと関連するカウンターが存在するコンピューターの名前。</param>
        <summary>指定したカウンターがリモート コンピューター上の指定したカテゴリに登録されているかどうかを決定します。</summary>
        <returns>
          <see langword="true" />, 、、カウンターが指定したコンピューター上の指定したカテゴリに登録されている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounter> が存在します。 与えられた場合、コマンドラインからカテゴリ名、カウンター名、およびコンピューター名を取得とします。 静的なオーバー ロードを使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> メソッドを呼び出せば確認するかどうか、指定した <xref:System.Diagnostics.PerformanceCounter> 名に存在する、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 オーバー ロードは、コンピューター名が提供されるかどうかに基づいて選択されます。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> が <see langword="null" /> です。  
  
 または  
  
 <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> 空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="machineName" /> が無効です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリ名が存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">システムで作成して登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明です。</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 新しいカテゴリの一部として作成するためのカウンターを指定します。</param>
        <summary>ローカル コンピューター上の指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリを登録します。</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 新しいカスタムのカテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounterCategory> "orders"という名前のオブジェクトが存在します。 作成する場合、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを使用して、 <xref:System.Diagnostics.CounterCreationDataCollection> を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter\_ccd\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter\_ccd\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter\_ccd\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内で指定されているカウンターの名前、 <paramref name="counterData" /> コレクションが <see langword="null" /> または空の文字列 \(""\) です。  
  
 または  
  
 内で指定されているカウンター、 <paramref name="counterData" /> コレクションは既に存在します。  
  
 または  
  
 <paramref name="counterName" /> パラメーターは構文が無効です。 円記号 \(「\\」\) を含めるか、長さが 80 文字を超えること可能性があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。  
  
 または  
  
 レイアウト、 <paramref name="counterData" /> コレクションは、基本カウンターに対して正しくありません。 型のカウンター <see langword="AverageCount64" />, 、<see langword="AverageTimer32" />, 、<see langword="CounterMultiTimer" />, 、<see langword="CounterMultiTimerInverse" />, 、<see langword="CounterMultiTimer100Ns" />, 、<see langword="CounterMultiTimer100NsInverse" />, 、<see langword="RawFraction" />, 、<see langword="SampleFraction" /> または <see langword="SampleCounter" /> 基本カウンターの種類のいずれかがすぐに従うが \(<see langword="AverageBase" />, 、<see langword="MultiBase" />, 、<see langword="RawBase" />, 、または <see langword="SampleBase" />\)。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for performing administrative tasks on performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">システムで作成して登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明です。</param>
        <param name="categoryType">
          <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 値のいずれか。</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 新しいカテゴリの一部として作成するためのカウンターを指定します。</param>
        <summary>ローカル コンピューター上の指定したカウンターが含まれているカスタム パフォーマンス カウンター カテゴリを登録します。</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 新しいカスタムのカテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `categoryType` パラメーターは、パフォーマンス カウンター カテゴリの単一インスタンスがあるかまたは複数のインスタンスを指定します。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定は、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework バージョン 1.0 および 1.1 がパフォーマンス カウンター カテゴリが複数のインスタンスであるかどうかを把握するために必要なまたは単一インスタンス。[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], 、 <xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙体は、パフォーマンス カウンターが複数のインスタンスを持つかどうかを示すために使用します。  
  
 パフォーマンス カウンターのカテゴリと共にインストールされる、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 個々 の共有メモリを使用して、独自のメモリが各パフォーマンス カウンター カテゴリを使用します。  HKEY\_LOCAL\_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ のレジストリ キーに FileMappingSize をという名前の DWORD を作成して個々 の共有メモリのサイズを指定できる*\< 項目名 \>*\\Performance します。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは、131, 072 10 進数です。 FileMappingSize 値が存在しない場合、 `fileMappingSize` 属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理のオーバーヘッドが増加の原因です。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実感できます。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録されているパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムの時間です。 リストが更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドです。 この例では、ユーザー設定の 1 秒あたりの注文の数のマルチ インスタンス パフォーマンス カウンター カテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内で指定されているカウンターの名前、 <paramref name="counterData" /> コレクションが <see langword="null" /> または空の文字列 \(""\) です。  
  
 または  
  
 内で指定されているカウンター、 <paramref name="counterData" /> コレクションは既に存在します。  
  
 または  
  
 <paramref name="counterName" /> 無効な構文があります。 円記号 \(「\\」\) を含めるか、長さが 80 文字を超えること可能性があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="counterData" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="categoryType" /> 値が次の値の範囲外です: <see langword="MultiInstance" />, 、<see langword="SingleInstance" />, 、または <see langword="Unknown" />です。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。  
  
 または  
  
 レイアウト、 <paramref name="counterData" /> コレクションは、基本カウンターに対して正しくありません。 型のカウンター <see langword="AverageCount64" />, 、<see langword="AverageTimer32" />, 、<see langword="CounterMultiTimer" />, 、<see langword="CounterMultiTimerInverse" />, 、<see langword="CounterMultiTimer100Ns" />, 、<see langword="CounterMultiTimer100NsInverse" />, 、<see langword="RawFraction" />, 、<see langword="SampleFraction" />, 、または <see langword="SampleCounter" /> 基本カウンターの種類のいずれかによって直後にする必要があります \(<see langword="AverageBase" />, 、<see langword="MultiBase" />, 、<see langword="RawBase" />, 、または <see langword="SampleBase" />\)。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for performing administrative tasks on performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">システムで作成して登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明です。</param>
        <param name="counterName">型の新しいカウンターの名前 <see langword="NumberOfItems32" />, 、新しいカテゴリの一部として作成します。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けられているカウンターの説明です。</param>
        <summary>型の 1 つのカウンターを含むカスタム パフォーマンス カウンター カテゴリを登録 <see langword="NumberOfItems32" /> ローカル コンピューターにします。</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 新しいシステム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterCategory> および単一 <xref:System.Diagnostics.PerformanceCounter> ごとに、ヘルプ テキストを使用すると、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> メソッドです。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> <see langword="null" /> または空の文字列 \(""\) です。  
  
 または  
  
 指定されたカウンター <paramref name="counterName" /> は既に存在します。  
  
 または  
  
 <paramref name="counterName" /> 無効な構文があります。 円記号 \(「\\」\) を含めるか、長さが 80 文字を超えること可能性があります。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for performing administrative tasks on performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">システムで作成して登録するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <param name="categoryHelp">カスタムのカテゴリの説明です。</param>
        <param name="categoryType">いずれか、 <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> カテゴリではあるかどうかを指定する値 <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, 、<see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" />, 、または <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />です。</param>
        <param name="counterName">新しいカテゴリの一部として作成する新しいカウンターの名前。</param>
        <param name="counterHelp">新しいカスタム カテゴリに関連付けられているカウンターの説明です。</param>
        <summary>型の 1 つのカウンターを含むカスタム パフォーマンス カウンター カテゴリを登録 <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> ローカル コンピューターにします。</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 新しいシステム カテゴリ、またはパフォーマンス オブジェクトに関連付けられています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `categoryType` パラメーターは、パフォーマンス カウンター カテゴリの単一インスタンスがあるかまたは複数のインスタンスを指定します。 作成され、別のインスタンスが追加されると複数インスタンスになりますが、既定は、カテゴリ、単一インスタンスです。 カテゴリは、アプリケーションがセットアップされ、実行時にインスタンスが追加されるときに作成されます。 .NET Framework バージョン 1.0 および 1.1 がパフォーマンス カウンター カテゴリが複数のインスタンスであるかどうかを把握するために必要なまたは単一インスタンス。[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], 、 <xref:System.Diagnostics.PerformanceCounterCategoryType> 列挙体は、パフォーマンス カウンターが複数のインスタンスを持つかどうかを示すために使用します。  
  
 パフォーマンス カウンターのカテゴリと共にインストールされる、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 個々 の共有メモリを使用して、独自のメモリが各パフォーマンス カウンター カテゴリを使用します。 HKEY\_LOCAL\_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ のレジストリ キーに FileMappingSize をという名前の DWORD を作成して個々 の共有メモリのサイズを指定できる*\< 項目名 \>*\\Performance します。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは、131, 072 10 進数です。 FileMappingSize 値が存在しない場合、 `fileMappingSize` 属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理のオーバーヘッドが増加の原因です。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実感できます。  
  
> [!NOTE]
>  アプリケーションのインストール中に、アプリケーションの実行中ではなく新しいパフォーマンス カウンター カテゴリを作成することを強くお勧めします。 これにより、登録されているパフォーマンス カウンター カテゴリの一覧を更新するオペレーティング システムの時間です。 リストが更新されていない場合、カテゴリを使用する試行は失敗します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> メソッドです。 例では、カスタムの 1 つのインスタンスのパフォーマンス カウンター カテゴリを作成する方法を示します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> <see langword="null" /> または空の文字列 \(""\) です。  
  
 または  
  
 指定されたカウンター <paramref name="counterName" /> は既に存在します。  
  
 または  
  
 <paramref name="counterName" /> 無効な構文があります。 円記号 \(「\\」\) を含めるか、長さが 80 文字を超えること可能性があります。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリは、ローカル コンピューターに既に存在します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="counterHelp" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for performing administrative tasks on performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">削除するカスタム パフォーマンス カウンター カテゴリの名前。</param>
        <summary>ローカル コンピューターから、カテゴリと関連するカウンターを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 システムからカスタム パフォーマンス カウンターのカテゴリのみを削除することができます。 カテゴリからカウンターを削除することはできません。 カテゴリを削除し、保持するカウンターのカテゴリを再作成します。 例外を避けるためには、それを削除しようとする前に、カテゴリが存在することを確認します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> を削除する方法、 <xref:System.Diagnostics.PerformanceCounterCategory> と <xref:System.Diagnostics.PerformanceCounter> が含まれているオブジェクト。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターは構文が無効です。 円記号 \(「\\」\) を含めるか、長さが 80 文字を超えること可能性があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カスタムのカテゴリではないために、カテゴリを削除できません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <summary>ローカル コンピューターで、カテゴリが登録されているかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> カテゴリは、登録されている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用、 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> 可用性のマシン上のすべてのパフォーマンス カウンターをチェックするときに実行され、パフォーマンスが大幅に低下メソッドが発生します。 パフォーマンス カウンターに記述する場合は、アプリケーションがインストールされているし、カウンターにアクセスするときに存在するカテゴリと仮定した場合は、パフォーマンス カウンターを作成することでパフォーマンス カウンターのグローバル検索を回避できます。 パフォーマンス カウンターから読み取るときに、パフォーマンス カウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounterCategory> "orders"という名前のオブジェクトが存在します。 作成する場合、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを使用して、 <xref:System.Diagnostics.CounterCreationDataCollection> を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter\_ccd\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter\_ccd\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter\_ccd\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 \(""\) です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリの名前。</param>
        <param name="machineName">カテゴリをチェックするコンピューターの名前。</param>
        <summary>指定したコンピューター上のカテゴリが登録されているかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> カテゴリは、登録されている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用、 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> 可用性のマシン上のすべてのパフォーマンス カウンターをチェックするときに実行され、パフォーマンスが大幅に低下メソッドが発生します。 パフォーマンス カウンターに記述する場合は、アプリケーションがインストールされているし、カウンターにアクセスするときに存在するカテゴリと仮定した場合は、パフォーマンス カウンターを作成することでパフォーマンス カウンターのグローバル検索を回避できます。 パフォーマンス カウンターから読み取るときに、パフォーマンス カウンターの検索を回避する方法はありません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次の例を確認するかどうか、 <xref:System.Diagnostics.PerformanceCounterCategory> という名前のオブジェクト `Orders` が存在します。 存在しない場合、例、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを使用して、 <xref:System.Diagnostics.CounterCreationDataCollection> を 2 つのパフォーマンス カウンターを含むオブジェクト。  
  
 [!code-cpp[PerfCounter\_ccd\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter\_ccd\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter\_ccd\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="machineName" /> パラメーターが無効です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.IO.IOException">ネットワーク パスが見つかりません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。  
  
 または  
  
 管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ローカル コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>配列 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> ローカル コンピューターに登録されているカテゴリを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> の配列を返すメソッド <xref:System.Diagnostics.PerformanceCounterCategory> 、ローカル コンピューターまたは指定したコンピューターからのオブジェクト。 変換して、 <xref:System.Diagnostics.PerformanceCounterCategory> を次に、ユーザーの表示カテゴリ名の配列の配列。<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> コンピューター名が指定されたかどうかに基づいてオーバー ロードを選択します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">検索対象のコンピューターです。</param>
        <summary>指定したコンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
        <returns>配列 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 指定したコンピューターに登録されているカテゴリを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ローカル コンピューター上のカテゴリを取得するには、別のオーバー ロードを使用または渡す"です。"として、 `machineName` パラメーター。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> の配列を返すメソッド <xref:System.Diagnostics.PerformanceCounterCategory> 、ローカル コンピューターまたは指定したコンピューターからのオブジェクト。 変換して、 <xref:System.Diagnostics.PerformanceCounterCategory> を次に、ユーザーの表示カテゴリ名の配列の配列。<xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> コンピューター名が指定されたかどうかに基づいてオーバー ロードを選択します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> パラメーターが無効です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>1 つのインスタンスを含むパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>配列 <see cref="T:System.Diagnostics.PerformanceCounter" /> この単一インスタンスのパフォーマンス カウンター カテゴリに関連付けられているカウンターを示すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パフォーマンス オブジェクトのインスタンスの詳細については、次を参照してください。、 <xref:System.Diagnostics.PerformanceCounter> クラスの概要です。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の一覧を取得する、 <xref:System.Diagnostics.PerformanceCounter> 内のオブジェクト、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 最初に作成、 <xref:System.Diagnostics.PerformanceCounterCategory> の適切なコンス トラクターでは、コンピューター名が指定されているかどうかに基づいています。 次を使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> の配列を返すメソッド <xref:System.Diagnostics.PerformanceCounter> を選択すると、オブジェクト、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> オーバー ロードが、インスタンス名が指定されているかどうかに基づいています。  
  
 これは、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> 単独のカテゴリを使用している場合を除き、オーバー ロードが失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">カテゴリは、1 つのインスタンスではありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.InvalidOperationException">カテゴリには、関連付けられたインスタンスがありません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">関連付けられているカウンターの一覧を取得する対象のパフォーマンス オブジェクトのインスタンス。</param>
        <summary>1 つまたは複数のインスタンスを含むパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
        <returns>配列 <see cref="T:System.Diagnostics.PerformanceCounter" /> を示すパフォーマンス カウンター カテゴリの指定したオブジェクトのインスタンスに関連付けられているカウンターのオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 単一インスタンスのカテゴリを表すためには、空の文字列を渡します \(""\) の `instanceName` パラメーター。  
  
 パフォーマンス オブジェクトのインスタンスの詳細については、次を参照してください。、 <xref:System.Diagnostics.PerformanceCounter> クラスの概要です。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の一覧を取得する、 <xref:System.Diagnostics.PerformanceCounter> 内のオブジェクト、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 最初に作成、 <xref:System.Diagnostics.PerformanceCounterCategory> の適切なコンス トラクターでは、コンピューター名が指定されているかどうかに基づいています。 次を使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> の配列を返すメソッド <xref:System.Diagnostics.PerformanceCounter> を選択すると、オブジェクト、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> オーバー ロードが、インスタンス名が指定されているかどうかに基づいています。  
  
 これは、 <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> インスタンスを含むカテゴリを使用している場合を除き、オーバー ロードが失敗します。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティをこの <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> インスタンスが設定されていません。  
  
 または  
  
 指定されたインスタンスが、カテゴリに含まれていない、 <paramref name="instanceName" /> パラメーター。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このカテゴリに関連付けられているパフォーマンス オブジェクトのインスタンスの一覧を取得します。</summary>
        <returns>このカテゴリに関連付けられているパフォーマンス オブジェクトのインスタンス名を表す文字列の配列、または 1 つのエントリの配列をカテゴリに 1 つだけのパフォーマンス オブジェクトのインスタンスが含まれている場合、空の文字列が含まれています \(""\) です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の一覧を取得する、 <xref:System.Diagnostics.PerformanceCounter> 内のオブジェクト、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 まず、作成、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクト、コンピューター名が指定されたかどうかに基づいて適切なコンス トラクターを使用します。 使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> にインスタンス名の配列として返されます <xref:System.String>, 、次に表示されます。  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。  
  
 または  
  
 カテゴリには、関連付けられたインスタンスがありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">このパフォーマンス カウンターのカテゴリを検索するパフォーマンス オブジェクトのインスタンス。</param>
        <summary>これによって識別されるカテゴリで、指定されたパフォーマンス オブジェクトのインスタンスが存在するかどうかを判断 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> オブジェクトの <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティです。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクトのインスタンスが含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このオーバー ロード <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> は `static`です。 作成する必要があります、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクトを設定して、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティです。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を決定するかどうか、 <xref:System.Diagnostics.PerformanceCounter> 内インスタンスに存在する、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 まず、作成、 <xref:System.Diagnostics.PerformanceCounterCategory> オブジェクト、コンピューター名が指定されたかどうかに基づいて適切なコンス トラクターを使用します。 使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> を指定したインスタンスが存在する場合、ユーザーに知らせるかどうかを判断します。 インスタンス名が指定されていない場合は、既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクトのインスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
        <summary>ローカル コンピューター上の指定のカテゴリが指定されたパフォーマンス オブジェクトのインスタンスを含むかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクトのインスタンスが含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パフォーマンス オブジェクトのインスタンスがファイルの場所を特定のカテゴリを指定せず、コンピューターに存在するかどうかを判断することはできません。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の静的なオーバー ロードを使用して <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> を判断するかどうか、指定された <xref:System.Diagnostics.PerformanceCounter> にインスタンスが存在する、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 オーバー ロードは、コンピューター名を指定するかどうかに基づいて選択されます。 インスタンス名が指定されていない場合は、既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 \(""\) です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">検索するパフォーマンス オブジェクトのインスタンス。</param>
        <param name="categoryName">検索するパフォーマンス カウンター カテゴリ。</param>
        <param name="machineName">カテゴリ インスタンスのペアの検索対象のコンピューターの名前。</param>
        <summary>指定したコンピューター上の指定のカテゴリが指定されたパフォーマンス オブジェクトのインスタンスを含むかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> カテゴリには、指定されたパフォーマンス オブジェクトのインスタンスが含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パフォーマンス オブジェクトのインスタンスがファイルの場所を特定のカテゴリを指定せず、コンピューターに存在するかどうかを判断することはできません。  
  
 使用することができます"です。"ローカル コンピューターを指定します。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例の静的なオーバー ロードを使用して <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> を判断するかどうか、指定された <xref:System.Diagnostics.PerformanceCounter> にインスタンスが存在する、 <xref:System.Diagnostics.PerformanceCounterCategory>です。 オーバー ロードは、コンピューター名を指定するかどうかに基づいて選択されます。 インスタンス名が指定されていない場合は、既定の単一インスタンス名を使用します。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers\#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="categoryName" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> パラメーターが空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="machineName" /> パラメーターが無効です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定がこのカテゴリが存在するコンピューターの名前。</summary>
        <value>パフォーマンス カウンターのカテゴリと関連するカウンターが存在するコンピューターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterCategory> で、 <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> コンス トラクターです。 ユーザーを要求、 <xref:System.Diagnostics.PerformanceCounterCategory> とコンピューター名を設定し、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> 入力された値からのプロパティです。 これは、後の値を表示して、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, 、および <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> プロパティ、またはその場合はエラー メッセージが表示、 <xref:System.Diagnostics.PerformanceCounterCategory> にアクセスできません。  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 構文が無効です。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading performance counter categories. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのカウンターとパフォーマンス オブジェクトのインスタンス データこのパフォーマンス カウンター カテゴリに関連付けられているを読み取ります。</summary>
        <returns>
          <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> カテゴリのカウンターとパフォーマンス オブジェクトのインスタンス データが含まれています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定する必要があります、 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> プロパティを呼び出す前に <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>します。  
  
 カテゴリ全体を一度に読み取る、システムがデータを提供する方法により 1 つのカウンターを読み取り中として効率的になることができます。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取る Windows Vista 以降では、Windows XP Professional x64 Edition、または Windows Server 2003 をするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista 以降のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista 以降では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterCategory> 、指定された <xref:System.Diagnostics.PerformanceCounterCategory> 名。 使用して、 <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> を返す、 <xref:System.Diagnostics.InstanceDataCollectionCollection> インスタンス データのすべてのインスタンスを格納する、 <xref:System.Diagnostics.PerformanceCounter> 内のオブジェクトは、 <xref:System.Diagnostics.PerformanceCounterCategory>です。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> プロパティが <see langword="null" /> です。 プロパティが設定されていない可能性があります。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">基になるシステム API の呼び出しに失敗しました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コンピューターに登録されているパフォーマンス カウンター カテゴリの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このパフォーマンス カウンター カテゴリのカウンターの一覧を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>システムでカスタム パフォーマンス カウンター カテゴリと 1 つまたは複数のカウンターを登録します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したカウンターが特定のカテゴリに登録されているかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>カテゴリが、システムに登録されているかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>カテゴリが指定されたパフォーマンス オブジェクトのインスタンスを含むかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>