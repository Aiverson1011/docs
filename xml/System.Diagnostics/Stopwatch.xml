<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>経過時間を正確に計測するために使用できる一連のメソッドとプロパティを提供します。  
  
 この型の .NET Framework ソース コードを参照するを参照してください。、 [Reference Source](http://referencesource.microsoft.com/#System/services/monitoring/system/diagnosticts/Stopwatch.cs#ceb0ba9cc88de82e)します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  この型の .NET Framework ソース コードを参照してください、 [Reference Source](http://referencesource.microsoft.com/#System/services/monitoring/system/diagnosticts/Stopwatch.cs#ceb0ba9cc88de82e)します。 ソース コードをオンラインで参照、オフライン表示のリファレンスをダウンロードおよびデバッグ中にソース \(パッチや更新を含む\) をステップsee [instructions](http://referencesource.microsoft.com/).  
  
 A <xref:System.Diagnostics.Stopwatch> インスタンスは複数の間隔の間で 2 つの間隔の経過時間の合計経過時間を測定することができます。 一般的な <xref:System.Diagnostics.Stopwatch> シナリオを呼び出す、 <xref:System.Diagnostics.Stopwatch.Start%2A> メソッド、最終的に呼び出す、 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッド、および、確認の経過時間を使用して、 <xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティです。  
  
 A <xref:System.Diagnostics.Stopwatch> インスタンスは実行中または停止。 使用 <xref:System.Diagnostics.Stopwatch.IsRunning%2A> の現在の状態を判断する <xref:System.Diagnostics.Stopwatch>です。 使用して <xref:System.Diagnostics.Stopwatch.Start%2A> ; の経過時間の測定を開始する使用 <xref:System.Diagnostics.Stopwatch.Stop%2A> 経過時間の計測を停止します。 プロパティを使用した経過時間の値をクエリ <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, 、<xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, 、または <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>です。 インスタンスが実行中または停止時に、経過時間のプロパティを照会できます。 プロパティが順調に増加する経過時間中に、 <xref:System.Diagnostics.Stopwatch> が実行されている一定に保たれるインスタンスを停止します。  
  
 既定では、経過時間の値、 <xref:System.Diagnostics.Stopwatch> のインスタンスが等しいすべての測定された時間間隔の合計です。 各呼び出し <xref:System.Diagnostics.Stopwatch.Start%2A> 累積の経過時間でのカウントを開始の各呼び出し <xref:System.Diagnostics.Stopwatch.Stop%2A> 現在の間隔の計測を終了し、経過時間の累積値を固定します。 使用して、 <xref:System.Diagnostics.Stopwatch.Reset%2A> 、既存の累積的な経過時間を消去するメソッドを <xref:System.Diagnostics.Stopwatch> インスタンス。  
  
 <xref:System.Diagnostics.Stopwatch> 基になるタイマー機構のタイマー刻みをカウントして、経過時間を測定します。 インストールされているハードウェアとオペレーティング システム、高解像度のパフォーマンス カウンターをサポートする場合、 <xref:System.Diagnostics.Stopwatch> クラスでは、そのカウンターを使用して、経過時間の測定をします。 それ以外の場合、 <xref:System.Diagnostics.Stopwatch> クラスでは、システムのタイマーを使用して、経過時間を測定します。 使用して、 <xref:System.Diagnostics.Stopwatch.Frequency> と <xref:System.Diagnostics.Stopwatch.IsHighResolution> 、有効桁数と解決策を決定するフィールド、 <xref:System.Diagnostics.Stopwatch> タイミング実装します。  
  
 <xref:System.Diagnostics.Stopwatch> クラスのマネージ コード内でのタイミングに関連するパフォーマンス カウンターの操作を支援します。 具体的には、 <xref:System.Diagnostics.Stopwatch.Frequency> フィールドと <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> メソッドは、アンマネージ Win32 Api の代わりに使用できる `QueryPerformanceFrequency` と `QueryPerformanceCounter`です。  
  
> [!NOTE]
>  マルチプロセッサ コンピューターで必要に、スレッドが実行されているプロセッサはありません。 ただし、BIOS でハードウェア アブストラクション レイヤー \(HAL\) のバグのためには、各プロセッサにさまざまなタイミングの結果を取得できます。 スレッドのプロセッサ アフィニティを指定するには、使用、 <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Diagnostics.Stopwatch> クラスをアプリケーションの実行時間を決定します。  
  
 [!code-csharp[System.Diagnostics.Stopwatch\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 次の例では、使用、 <xref:System.Diagnostics.Stopwatch> パフォーマンス データを計算するクラス。  
  
 [!code-cpp[StopWatchPerfSample\#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample\#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.Stopwatch" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返された <xref:System.Diagnostics.Stopwatch> インスタンスが停止し、インスタンスの経過時間のプロパティが 0 です。  
  
 使用して、 <xref:System.Diagnostics.Stopwatch.Start%2A> メソッドで新しい経過時間の計測を開始する <xref:System.Diagnostics.Stopwatch> インスタンス。 使用して、 <xref:System.Diagnostics.Stopwatch.StartNew%2A> 新しい初期化するメソッドを <xref:System.Diagnostics.Stopwatch> をインスタンス化し、すぐに開始します。  
  
   
  
## 例  
 次の例では初期化、 <xref:System.Diagnostics.Stopwatch> インスタンスが単純なクラスのコンス トラクターを使用します。  
  
 [!code-csharp[System.Diagnostics.Stopwatch\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します。</summary>
        <value>現在のインスタンスで計測された経過時間の合計を表す読み取り専用の <see cref="T:System.TimeSpan" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.  
  
 Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties. For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.  
  
 You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped. The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.  
  
 By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals. Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value. Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.  
  
   
  
## 例  
 The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.  
  
 [!code-csharp[System.Diagnostics.Stopwatch\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します \(ミリ秒単位\)。</summary>
        <value>現在のインスタンスで計測されたミリ秒の合計を表す読み取り専用の長整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property represents elapsed time rounded down to the nearest whole millisecond value. For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.  
  
 You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped. The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.  
  
 By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals. Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value. Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.  
  
   
  
## 例  
 The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string. This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.  
  
 [!code-cpp[StopWatchPerfSample\#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample\#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスで計測された経過時間の合計を取得します \(タイマー刻み\)。</summary>
        <value>現在のインスタンスで計測されたタイマー刻みの合計を表す読み取り専用の長整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property represents the number of elapsed ticks in the underlying timer mechanism. A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure. Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.  
  
 You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped. The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.  
  
 By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals. Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value. Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.  
  
> [!NOTE]
>  <xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=fullName>. Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=fullName> value represents one 100\-nanosecond interval. Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.  
  
   
  
## 例  
 The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string. This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.  
  
 [!code-cpp[StopWatchPerfSample\#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample\#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 秒あたりのタイマー刻みの数として、タイマーの頻度を取得します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイマーの頻度は、タイマーの精度と解像度を示します。 たとえば、200万のタイマーの頻度のティックあたり 2 つ目の equals ティックあたり 500 ナノ秒のタイマーの解決。 つまり、1 秒に等しいため 10億ナノ秒、1 秒あたりの 200万タイマー刻みのタイマーの頻度は 500 ナノ秒あたり 1 ティックをさらに簡略化 10億ナノ秒あたり 200万のタイマー刻み等価です。  
  
 <xref:System.Diagnostics.Stopwatch.Frequency> 値が基になる時間調整メカニズムの分解能に依存します。 インストールされているハードウェアとオペレーティング システム、高解像度のパフォーマンス カウンターをサポートする場合、 <xref:System.Diagnostics.Stopwatch.Frequency> 値には、そのカウンターの頻度が反映されます。 それ以外の場合、 <xref:System.Diagnostics.Stopwatch.Frequency> 値のシステム タイマーの頻度に基づきます。  
  
 <xref:System.Diagnostics.Stopwatch> 頻度は、インストールされているハードウェアとオペレーティング システムによります、 <xref:System.Diagnostics.Stopwatch.Frequency> 、システムが実行されている間、値が一定です。  
  
   
  
## 例  
 次の例が、頻度と解決策を表示、 <xref:System.Diagnostics.Stopwatch> タイマーです。 このコード例が示されている例の一部は、 <xref:System.Diagnostics.Stopwatch> クラスです。  
  
 [!code-cpp[StopWatchPerfSample\#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample\#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>タイマー機構の現在のタイマー刻み数を取得します。</summary>
        <returns>基になるタイマー機構のタイマー刻みカウンター値を表す長整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Diagnostics.Stopwatch> クラスは、高解像度のパフォーマンス カウンターを使用して <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> そのカウンターの現在の値を返します。 場合、 <xref:System.Diagnostics.Stopwatch> クラスは、システムのタイマーを使用して <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> 指定 <xref:System.DateTime.Ticks%2A?displayProperty=fullName> のプロパティ、 <xref:System.DateTime.Now%2A?displayProperty=fullName> インスタンス。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> パフォーマンス カウンターを更新する方法です。  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイマーが高解像力のパフォーマンス カウンターに基づいているかどうかを示します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用されるタイマー、 <xref:System.Diagnostics.Stopwatch> クラスは、システムのハードウェアとオペレーティング システムによって異なります。<xref:System.Diagnostics.Stopwatch.IsHighResolution>`true` 場合、 <xref:System.Diagnostics.Stopwatch> タイマーが高解像度のパフォーマンス カウンターに基づいています。 それ以外の場合、 <xref:System.Diagnostics.Stopwatch.IsHighResolution> は `false`, 、ことを示します、 <xref:System.Diagnostics.Stopwatch> タイマーがシステム タイマーに基づいています。  
  
   
  
## 例  
 次の例が、頻度と解決策を表示、 <xref:System.Diagnostics.Stopwatch> タイマーです。 このコード例が示されている例の一部は、 <xref:System.Diagnostics.Stopwatch> クラスです。  
  
 [!code-cpp[StopWatchPerfSample\#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample\#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.Stopwatch" /> タイマーが実行中かどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Diagnostics.Stopwatch" /> インスタンスが現在実行中で、間隔の経過時間を計測中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Diagnostics.Stopwatch> インスタンスへの呼び出しでの実行が開始 <xref:System.Diagnostics.Stopwatch.Start%2A> または <xref:System.Diagnostics.Stopwatch.StartNew%2A>です。 呼び出しで実行されているインスタンスが停止 <xref:System.Diagnostics.Stopwatch.Stop%2A> または <xref:System.Diagnostics.Stopwatch.Reset%2A>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>タイマー間隔の計測を停止して、経過時間をゼロにリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Diagnostics.Stopwatch> インスタンスを計算し、インスタンスがリセットされるまで、複数の期間にわたって累積的な経過時間を保持します。 使用 <xref:System.Diagnostics.Stopwatch.Stop%2A> を現在の間隔の計測を停止し、経過時間の累積値を保持します。 使用 <xref:System.Diagnostics.Stopwatch.Reset%2A> を実行中の間隔の計測を停止し、経過時間の値を消去します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>時間間隔の計測を停止し、経過時間をゼロにリセットして、経過時間の計測を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Diagnostics.Stopwatch> インスタンスを計算し、インスタンスのリセットまたは再起動時まで、複数の期間にわたって累積的な経過時間を保持します。 使用 <xref:System.Diagnostics.Stopwatch.Stop%2A> を現在の間隔の計測を停止し、経過時間の累積値を保持します。 使用 <xref:System.Diagnostics.Stopwatch.Reset%2A> を実行中の間隔の計測を停止し、経過時間の値を消去します。 使用 <xref:System.Diagnostics.Stopwatch.Restart%2A> を現在の間隔の計測を停止し、新しい間隔の計測を開始します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>間隔の経過時間の計測を開始または再開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般的な <xref:System.Diagnostics.Stopwatch> シナリオを呼び出す、 <xref:System.Diagnostics.Stopwatch.Start%2A> メソッド、最終的に呼び出す、 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッド、および、確認の経過時間を使用して、 <xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティです。  
  
 起動されたら、 <xref:System.Diagnostics.Stopwatch> インスタンスが停止しているか、リセットされるまで、タイマーが経過したタイマーのティック単位で、現在の期間を測定します。 以降、 <xref:System.Diagnostics.Stopwatch> つまりいないタイマーの状態を変更または経過時間のプロパティをリセットは既に実行されています。  
  
 ときに、 <xref:System.Diagnostics.Stopwatch> インスタンスが 1 つ以上の間隔を測定、 <xref:System.Diagnostics.Stopwatch.Start%2A> メソッドでは、現在の経過時間の値から時間を測定するが再開されます。 A <xref:System.Diagnostics.Stopwatch> インスタンスを計算し、インスタンスがリセットされるまで、複数の期間にわたって累積的な経過時間を保持します。 使用して、 <xref:System.Diagnostics.Stopwatch.Reset%2A> メソッドを呼び出す前に <xref:System.Diagnostics.Stopwatch.Start%2A> の累積的な経過時間をクリアする、 <xref:System.Diagnostics.Stopwatch> インスタンス。 使用して、 <xref:System.Diagnostics.Stopwatch.Restart%2A> メソッドを <xref:System.Diagnostics.Stopwatch.Reset%2A> と <xref:System.Diagnostics.Stopwatch.Start%2A> 、 <xref:System.Diagnostics.Stopwatch> 1 つのコマンドを使用します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Diagnostics.Stopwatch.Start%2A> アプリケーションの実行時間を測定するタイマーを開始する方法です。  
  
 [!code-csharp[System.Diagnostics.Stopwatch\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Diagnostics.Stopwatch" /> インスタンスを初期化して、経過時間のプロパティをゼロに設定し、経過時間の計測を開始します。</summary>
        <returns>経過時間の計測を開始した <see cref="T:System.Diagnostics.Stopwatch" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出すことは、 <xref:System.Diagnostics.Stopwatch> コンス トラクターし、呼び出す <xref:System.Diagnostics.Stopwatch.Start%2A> の新しいインスタンス。  
  
   
  
## 例  
 次の例では、 <xref:System.Diagnostics.Stopwatch> クラスは、文字列から整数を解析するための 4 つの異なる実装のパフォーマンスを測定します。 このコード例が示されている例の一部は、 <xref:System.Diagnostics.Stopwatch> クラスです。  
  
 [!code-cpp[StopWatchPerfSample\#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample\#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>間隔の経過時間の計測を停止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般的な <xref:System.Diagnostics.Stopwatch> シナリオを呼び出す、 <xref:System.Diagnostics.Stopwatch.Start%2A> メソッド、最終的に呼び出す、 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッド、および、確認の経過時間を使用して、 <xref:System.Diagnostics.Stopwatch.Elapsed%2A> プロパティです。  
  
 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは現在の時間間隔の計測を終了します。 停止、 <xref:System.Diagnostics.Stopwatch> は実行されていないがタイマーの状態を変更または経過時間のプロパティをリセットしません。  
  
 ときに、 <xref:System.Diagnostics.Stopwatch> インスタンスが 1 つ以上の間隔を測定、 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドは、経過時間を計測を一時停止します。 後続の呼び出しに <xref:System.Diagnostics.Stopwatch.Start%2A> 現在の経過時間の値からの時間の計測を再開します。 使用して、 <xref:System.Diagnostics.Stopwatch.Reset%2A> の累積的な経過時間をオフにする方法、 <xref:System.Diagnostics.Stopwatch> インスタンス。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Diagnostics.Stopwatch.Stop%2A> メソッドをアプリケーションの実行時間を測定するタイマーを停止します。  
  
 [!code-csharp[System.Diagnostics.Stopwatch\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>