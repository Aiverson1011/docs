<Type Name="InstanceDataCollection" FullName="System.Diagnostics.InstanceDataCollection">
  <TypeSignature Language="C#" Value="public class InstanceDataCollection : System.Collections.DictionaryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstanceDataCollection extends System.Collections.DictionaryBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.InstanceDataCollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.DictionaryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>厳密に型指定された <see cref="T:System.Diagnostics.InstanceData" /> オブジェクトのコレクションを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.InstanceDataCollection> クラス カウンターのすべてのインスタンス データを含むコレクションを表します。 このコレクションは、 <xref:System.Diagnostics.InstanceDataCollectionCollection> を使用する場合、 <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> メソッドです。  
  
   
  
## 例  
 次のコード例には、特定のインスタンス データが表示されます。 <xref:System.Diagnostics.PerformanceCounterCategory> ローカル コンピューターにします。 最初の番号付きリストが表示されます <xref:System.Diagnostics.PerformanceCounterCategory> の名前。 例では取得、カテゴリのいずれかの数を入力すると、後に、 <xref:System.Diagnostics.InstanceDataCollectionCollection> その <xref:System.Diagnostics.PerformanceCounterCategory>します。 によって返されるコレクションに変換し、 <xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A> 型の配列を <xref:System.Diagnostics.InstanceDataCollection> オブジェクトです。 また、それぞれに関連付けられているインスタンス データを表示 <xref:System.Diagnostics.InstanceData> それぞれの <xref:System.Diagnostics.InstanceDataCollection>です。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#1)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
    <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
    <altmember cref="T:System.Diagnostics.InstanceData" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstanceDataCollection (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceDataCollectionCollection indexer instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">多くの場合、カウントされる数量を記述すると、カウンターの名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.InstanceDataCollection" /> クラスを定義するパフォーマンスのインスタンス\)、指定されたパフォーマンス カウンターを使用します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="counterName" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">このコレクション内を検索するインスタンスの名前。</param>
        <summary>指定した名前を持つパフォーマンス インスタンスかどうかを決定 \(インデックス付きのいずれかで識別される <see cref="T:System.Diagnostics.InstanceData" /> オブジェクト\)、コレクション内に存在します。</summary>
        <returns>
          <see langword="true" /> コレクション内のインスタンスが存在する場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `instanceName` パラメーターは大文字です。  
  
   
  
## 例  
 次のコード例を受け入れる、 <xref:System.Diagnostics.PerformanceCounter> カテゴリ名、カウンター名、およびインスタンス名を使用しています。 取得、 <xref:System.Diagnostics.InstanceDataCollectionCollection> の集合であるカテゴリに属している <xref:System.Diagnostics.InstanceDataCollection> オブジェクトです。 特定が取得される <xref:System.Diagnostics.InstanceDataCollection> カウンターの指定します。 次を使用して、 <xref:System.Diagnostics.InstanceDataCollection.Contains%2A> 指定されたインスタンスが存在するかどうか、\[なし\] を入力した場合、既定の単一インスタンス名を使用するかを決定する方法です。  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.InstanceData[] instances, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.InstanceData[] instances, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instances" Type="System.Diagnostics.InstanceData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instances">1 次元 <see cref="T:System.Array" /> 、コレクションからコピーされた値のコピー先であります。</param>
        <param name="index">新しいインスタンスを追加する位置を示す 0 から始まるインデックス値。</param>
        <summary>指定したインデックス位置の指定した 1 次元配列にコレクション内の項目をコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 [CopyTo メソッド \(InstanceData\<xref:System.Diagnostics.InstanceDataCollection.CopyTo%2A> に変換する方法、 [CopyTo メソッド \(InstanceData\<xref:System.Diagnostics.InstanceDataCollection> の配列を [CopyTo メソッド \(InstanceData\<xref:System.Diagnostics.InstanceData> オブジェクトです。 値、 [CopyTo メソッド \(InstanceData\<xref:System.Diagnostics.InstanceData.InstanceName%2A> と [CopyTo メソッド \(InstanceData\<xref:System.Diagnostics.InstanceData.Sample%2A> 、配列の各要素のプロパティは、さらに処理関数に渡されます。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インスタンス データを取得するパフォーマンス カウンターの名前を取得します。</summary>
        <value>パフォーマンス カウンターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を表示、 <xref:System.Diagnostics.InstanceDataCollection.CounterName%2A> のプロパティ、 <xref:System.Diagnostics.InstanceDataCollection>です。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceData this[string instanceName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.InstanceData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスまたは空の文字列の名前 \(""\)、カテゴリには、1 つのインスタンスが含まれている場合。</param>
        <summary>このカウンターに関連付けられているインスタンス データを取得します。 これは、通常、生のカウンター値のセットです。</summary>
        <value>
          <see cref="T:System.Diagnostics.InstanceData" /> での項目、 <see cref="T:System.Diagnostics.InstanceDataCollection" /> オブジェクトのインデックスを作成します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `instanceName` パラメーターは大文字です。  
  
   
  
## 例  
 次のコード例を受け入れる、 <xref:System.Diagnostics.PerformanceCounter> カテゴリ名、カウンター名、およびインスタンス名を使用しています。 取得、 <xref:System.Diagnostics.InstanceDataCollectionCollection> の集合であるカテゴリに属している <xref:System.Diagnostics.InstanceDataCollection> オブジェクトです。 特定が取得される <xref:System.Diagnostics.InstanceDataCollection> カウンターの指定します。 次に、インスタンスが存在する場合の例を使用して、 <xref:System.Diagnostics.InstanceDataCollection.Item%2A> プロパティ \(インデクサーとして参照されます\) を取得、関連付けられている <xref:System.Diagnostics.InstanceData> オブジェクトです。  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスのデータに関連付けられているオブジェクトのオブジェクトおよびカウンターのレジストリ キーを取得します。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> オブジェクト固有のレジストリ キーのセットを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各ソフトウェア コンポーネントはインストールされが実行中に、カウンター データを書き込むときに、そのオブジェクトとカウンターのキーを作成します。 その他のレジストリ データにアクセスすると、このデータを表示できます。 ただし、パフォーマンス データを収集するレジストリを使用していますが、データはレジストリ データベースに格納されません。 代わりに、システムは、適切なシステム オブジェクト マネージャーから、データを収集します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> のプロパティ、 <xref:System.Diagnostics.InstanceDataCollection> の配列に変換するインスタンス名のコレクションを返す <xref:System.String>します。 配列を生成 <xref:System.Diagnostics.InstanceData> オブジェクトを使用して、 <xref:System.Diagnostics.InstanceDataCollection.Values%2A> プロパティです。 インスタンス名の配列内の各要素の名前を表示し、関連する処理関数を呼び出す <xref:System.Diagnostics.InstanceData> オブジェクトです。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カウンターのインスタンス データを構成する生のカウンター値を取得します。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> カウンターの生データの値を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Diagnostics.InstanceDataCollection.Values%2A> のプロパティ、 <xref:System.Diagnostics.InstanceDataCollection> のコレクションを返す <xref:System.Diagnostics.InstanceData> オブジェクト、配列に変換します。 使用してインスタンス名の配列を生成して、 <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> プロパティです。 配列の各要素に対して <xref:System.Diagnostics.InstanceData> オブジェクト、関連付けられたインスタンス名を表示し、処理する関数を呼び出す、 <xref:System.Diagnostics.InstanceData> オブジェクトです。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>