<Type Name="DebuggerStepperBoundaryAttribute" FullName="System.Diagnostics.DebuggerStepperBoundaryAttribute">
  <TypeSignature Language="C#" Value="public sealed class DebuggerStepperBoundaryAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DebuggerStepperBoundaryAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>属性を次のコードは、実行、ステップではなくモードで実行されることを示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.DebuggerStepperBoundaryAttribute> による効果のエスケープとして属性を使用する <xref:System.Diagnostics.DebuggerNonUserCodeAttribute>です。 境界内で実行するときに、 <xref:System.Diagnostics.DebuggerNonUserCodeAttribute>, 、ステップ実行による次のユーザーが指定したコードになるまでが発生した時点で、デザイナーのコードは実行されています。 スレッドでは、コンテキストの切り替えが行われると、次のコードのユーザーが指定したモジュールにステップ インがデバッグ対象プロセス内のコードに関連しない可能性があります。 これを回避するデバッグ機能を使用して、 <xref:System.Diagnostics.DebuggerStepperBoundaryAttribute> エスケープからコードを実行するコードをステップ実行します。 たとえば、 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], が発生して、 <xref:System.Diagnostics.DebuggerStepperBoundaryAttribute> F10 キーを使用してコードをステップ実行中に \(または **ステップ オーバー** コマンド\) F5 キーを押すかを使用して同じ効果があります、 **\[デバッグ開始\]** コマンドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DebuggerStepperBoundaryAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For a description of the purpose of this constructor, see the <xref:System.Diagnostics.DebuggerStepperBoundaryAttribute> class.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>