<Type Name="PerformanceCounter" FullName="System.Diagnostics.PerformanceCounter">
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounter extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.PerformanceCounterInstaller))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows NT パフォーマンス カウンター コンポーネントを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.PerformanceCounter> 定義済みの既存またはカスタムのカウンターを読み取ると公開 \(書き込み\) のパフォーマンスの両方のコンポーネントを使用できるデータのカスタム カウンターをします。  
  
 Windows パフォーマンス モニターに示されている多数の定義済みのカウンターが [Add Counters dialog box](http://go.microsoft.com/fwlink/p/?LinkId=257854)します。 .NET Framework のパフォーマンス カウンターの詳細については、次を参照してください。 [Performance Counters in the .NET Framework](http://msdn.microsoft.com/ja-jp/06a4ae8c-eeb2-4d5a-817e-b1b95c0653e1)します。  
  
 この型は、 <xref:System.IDisposable> インターフェイスです。 型の使用が完了したらを直接または間接的にその破棄する必要があります。 型の直接 dispose を呼び出してその <xref:System.IDisposable.Dispose%2A> メソッドで、 `try`\/`catch` ブロックします。 直接ことのない破棄する場合など言語構成要素を使用して `using` \(c\#\) のまたは `Using` \(Visual Basic で\)。 詳細については、"を使用して、オブジェクトを実装して IDisposable"」セクションを参照してください、 <xref:System.IDisposable> インターフェイスに関するトピック。  
  
> [!IMPORTANT]
>  1.0 および 1.1 の .NET Framework のバージョンでは、このクラスには、完全に信頼できる直前の呼び出し元が必要です。 以降、.NET Framework version 2.0 では、このクラスを必要と <xref:System.Diagnostics.PerformanceCounterPermission> に対する具体的な操作です。 強くお勧めする <xref:System.Diagnostics.PerformanceCounterPermission> 部分的に信頼されたコードに付与されません。  読み取りし、書き込みのパフォーマンス カウンターにできる機能は、実行中のプロセスと情報の取得の列挙などの操作を実行するためのコードをできます。  
>   
>  さらを渡す、 <xref:System.Diagnostics.PerformanceCounter> 信頼性の低いコードにオブジェクトがセキュリティ上の問題を作成できます。 渡さないようにパフォーマンス カウンター オブジェクトなど、 <xref:System.Diagnostics.PerformanceCounterCategory> または <xref:System.Diagnostics.PerformanceCounter>, 、信頼性の低いコードです。  
  
 パフォーマンス カウンターから読み取れませんのインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> 設定、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、し、必要に応じて、 <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> または <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、および、呼び出し、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> パフォーマンス カウンタの読み取りを実行するメソッドです。  
  
 パフォーマンス カウンター データを発行するには、1 つまたは複数のカスタム カウンターを使用してを使用してを作成、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> メソッドのインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> 設定、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A> と、必要に応じて、 <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> または <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、および \[呼び出し、 <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、<xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、または <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッド、またはセット、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> カスタム カウンターの値を変更するプロパティです。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッドでは、インタロックを使用して、カウンターの値を更新します。 これにより、マルチ スレッドまたはマルチ プロセスのシナリオもパフォーマンスが大幅に低下の結果で、このカウンターの値を正確に維持できます。 インター ロック精度が不要な場合の操作を指定、更新することができます、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 、5 までのプロパティを直接倍パフォーマンスが向上します。  ただし、マルチ スレッドのシナリオでカウンターの値に更新プログラムによって無視される場合が、データが不正確になります。  
  
 カウンターは、パフォーマンスでデータを収集するメカニズムです。 レジストリでは、それぞれのシステムの機能の特定の領域に関連するすべてのカウンターの名前を格納します。 例には、プロセッサのビジー時間、メモリ使用量、またはネットワーク接続経由で受信したバイト数が含まれます。  
  
 各カウンターは、その名前と場所を一意に識別します。 カウンター情報をファイルのパスには、ドライブ、ディレクトリ、1 つ以上のサブディレクトリおよびファイル名が含まれている、同じ方法では、4 つの要素で構成されます。 コンピューター、カテゴリ、カテゴリ インスタンスおよびカウンターの名前。  
  
 カウンター情報は、カテゴリ、またはカウンターのデータを測定するパフォーマンス オブジェクトを含める必要があります。 コンピューターのカテゴリには、プロセッサ、ディスク、およびメモリなどの物理的なコンポーネントが含まれます。 プロセスやスレッドなどのシステム カテゴリもあります。 各カテゴリは、コンピューター内の機能の要素に関連して一連の標準カウンターが割り当てられています。 これらのオブジェクトは Windows 2000 のシステム モニター カウンターの追加\] ダイアログ ボックスのパフォーマンス オブジェクトのドロップダウン リストに一覧表示され、カウンター パスに含める必要があります。 パフォーマンス データがによってグループ化するカテゴリを使用して、関連します。  
  
 場合によっては、同じカテゴリの複数のコピーが存在できます。 たとえば、いくつかのプロセスとスレッドを同時に実行し、一部のコンピューターを含む 1 つ以上のプロセッサします。 カテゴリのコピーには、カテゴリ インスタンスと呼ばれ、各インスタンスに割り当てられている標準のカウンターのセットがあります。 カテゴリには複数のインスタンスを設定できる場合は、カウンター情報の 1 つのインスタンスの指定を含める必要があります。  
  
 必要な計算を実行するための最初または前の値を必要とするカウンターのパフォーマンス データを取得する呼び出し、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドを 2 回と使用のアプリケーションで必要な情報が返されます。  
  
> [!NOTE]
>  パフォーマンス カウンターのカテゴリと共にインストールされる、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 個々 の共有メモリを使用して、独自のメモリが各パフォーマンス カウンター カテゴリを使用します。 HKEY\_LOCAL\_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ のレジストリ キーに FileMappingSize をという名前の DWORD を作成して個々 の共有メモリのサイズを指定できる*\< 項目名 \>*\\Performance します。 FileMappingSize 値は、カテゴリの共有メモリのサイズに設定されます。 既定のサイズは、131, 072 10 進数です。 FileMappingSize 値が存在しない場合、 `fileMappingSize` 属性の値、 `performanceCounters` Machine.config ファイルで指定された要素を使用すると、構成ファイルの処理のオーバーヘッドが増加の原因です。 レジストリでファイル マップのサイズを設定して、アプリケーションの起動時のパフォーマンスの向上を実感できます。 ファイル マップのサイズの詳細については、次を参照してください。 [\<performanceCounters\> Element](http://msdn.microsoft.com/ja-jp/a71f605b-c7d9-4501-a5c3-abcbb964a43f)します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Diagnostics.PerformanceCounter> クラスを作成および使用して、 <xref:System.Diagnostics.PerformanceCounterType.AverageCount64> カウンターの種類。 例では、カテゴリを作成、カウンターの設定、カウンター、および呼び出しからデータを収集、 <xref:System.Diagnostics.CounterSampleCalculator> パフォーマンス カウンター データを解釈するクラス。 中間および最終結果は、コンソール ウィンドウに表示されます。 その他のパフォーマンス カウンターの種類の他の例を参照してください、 <xref:System.Diagnostics.PerformanceCounterType> 列挙します。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
    <altmember cref="T:System.Diagnostics.CounterCreationData" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
    <altmember cref="T:System.Diagnostics.CounterSampleCalculator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>読み取り専用の新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounter" /> システムやカスタム パフォーマンス カウンターとインスタンスを関連付けることがなく、クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンス トラクターのセットのこのオーバー ロード、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティを空の文字列 \(""\)、設定と、 <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティをローカル コンピューター \("です。"\) です。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化しないため、ローカル コンピューターの既存のカウンターに、インスタンスは関連付けられません。 特定のパフォーマンス カウンターを指すように、次のように設定します。、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、し、必要に応じて、 <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> と <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> 前にその他のプロパティを読み取りまたはカウンターから読み取ろうとするプロパティです。 パフォーマンス カウンターに書き込むには、設定、 <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> プロパティを `false`します。  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute> このメンバーに適用される属性が次 <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> プロパティ値: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.SharedState>します。<xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション \(通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます\) には影響しません。 詳細については、<xref:System.Security.Permissions.HostProtectionAttribute> クラスのトピックまたは「[SQL Server Programming and Host Protection Attributes](http://msdn.microsoft.com/ja-jp/7dfa36b4-e773-4c75-a3ff-ff1af3ce4c4f)」を参照してください。  
  
   
  
## 例  
 次のコード例は、の既定のインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> クラスです。 インスタンスを作成した後、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティの値は、セット、およびへの呼び出しの結果、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドが表示されます。  
  
 [!code-cpp[PerfCounter\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <summary>読み取り専用の新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスし、指定したシステムまたはローカル コンピューターでカスタム パフォーマンス カウンターに関連付けます。 このコンス トラクターでは、カテゴリの 1 つのインスタンスである必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター文字列は区別されません。  
  
 このオーバー ロードを使用すると、1 つのパフォーマンス カウンター カテゴリ インスタンスが含まれるカテゴリに属するローカル コンピューターのカウンターにアクセスします。 これをポイントするこのコンス トラクターを使用しようとするかどうかは <xref:System.Diagnostics.PerformanceCounter> インスタンス カテゴリに複数のインスタンスでは、例外のスローのコンス トラクターが含まれています。 このオーバー ロードは、読み取り専用アクセスまたは読み取り\/書き込みカウンターが読み取り専用モードではこれです。 A <xref:System.Diagnostics.PerformanceCounter> カウンター自体が読み取り\/書き込みである場合でもこのオーバー ロードを使用して作成されたインスタンスが、カウンターに書き込むことはできません。  
  
 このオーバー ロード コンス トラクターのセットの <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティに値を渡す、設定、 <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、ローカル コンピューターを"です。"、および設定、 <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティを空の文字列に \(""\) です。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化し、インスタンスをローカル コンピューターの既存のカウンター \(システムまたはカスタムのカウンター\) に関連付けます。 指定した値、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティは、ローカル コンピューター上の既存のパフォーマンス カウンターを指す必要があります。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="counterName" /> が空の文字列 \(""\) です。  
  
 または  
  
 指定されたカテゴリが存在しません。  
  
 または  
  
 指定したカテゴリは、マルチ インスタンスとしてマークされ、パフォーマンス カウンター インスタンス名で作成する必要があります。  
  
 または  
  
 <paramref name="categoryName" /> <paramref name="counterName" /> さまざまな言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="readOnly">
          <see langword="true" /> 読み取り専用モードでカウンターにアクセス \(がカウンター自身は、読み取り\/書き込みをする可能性があります\) にします。 <see langword="false" /> カウンターにアクセスして読み取り\/書き込みモードにします。</param>
        <summary>初期化の新しい読み取り専用または読み取り\/書き込みのインスタンスの <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスし、指定したシステムまたはローカル コンピューターでカスタム パフォーマンス カウンターに関連付けます。 このコンス トラクターは、カテゴリには、1 つのインスタンスが含まれる必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター文字列は区別されません。  
  
 読み取り専用アクセスまたは読み取り\/書き込みの 1 つのパフォーマンス カウンター カテゴリ インスタンスが含まれるカテゴリに属するローカル コンピューターのカウンターには、このオーバー ロードを使用します。 これをポイントするこのコンス トラクターを使用しようとするかどうかは <xref:System.Diagnostics.PerformanceCounter> インスタンス カテゴリに複数のインスタンスでは、例外のスローのコンス トラクターが含まれています。  
  
 このオーバー ロード コンス トラクターのセットの <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, と <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> プロパティに値を渡す、設定、 <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、ローカル コンピューターを"です。"、および設定、 <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティを空の文字列に \(""\) です。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化し、インスタンスをローカル コンピューターの既存のカウンター \(システムまたはカスタムのカウンター\) に関連付けます。 指定した値、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> と <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティは、ローカル コンピューター上の既存のパフォーマンス カウンターを指す必要があります。 ポイントするパフォーマンス カウンターのインスタンスが有効でない場合は、コンス トラクターを呼び出すと例外がスローします。  
  
> [!NOTE]
>  このオーバー ロードを使用するには、システムのカウンタへの接続には、システムのカウンタを記述することはできません。 このため、設定 `readOnly` に `false` 例外をスローするコンス トラクターによって、システムのカウンタに接続される場合。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例は、のインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> クラスです。 この例は、カテゴリ名、カウンター名、およびカウンターが読み取り専用ではないことを示すフラグ値で渡します。 このコード例のサンプルが大きく、 <xref:System.Diagnostics.PerformanceCounter> クラスです。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64\#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageCounter64\#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageCounter64\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> 空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="counterName" /> 空の文字列 \(""\) です。  
  
 または  
  
 指定されたカテゴリが存在しません。 \(if <paramref name="readOnly" /> is <see langword="true" />\).  
  
 または  
  
 指定したカテゴリは、.NET Framework のカスタム カテゴリではない \(場合 <paramref name="readOnly" /> は <see langword="false" />\)。  
  
 または  
  
 指定したカテゴリは、マルチ インスタンスとしてマークされ、パフォーマンス カウンター インスタンス名で作成する必要があります。  
  
 または  
  
 <paramref name="categoryName" /> <paramref name="counterName" /> さまざまな言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスまたは空の文字列の名前 \(""\)、カテゴリには、1 つのインスタンスが含まれている場合。</param>
        <summary>読み取り専用の新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスし、指定したシステムまたはローカル コンピューター上のカスタム パフォーマンス カウンターと、カテゴリ インスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター文字列は区別されません。  
  
 このオーバー ロード コンス トラクターのセットの <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティに値を渡す、および設定、 <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、ローカル コンピューターを"です。"です。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化し、インスタンスをローカル コンピューターの既存のカウンター \(システムまたはカスタムのカウンター\) に関連付けます。 指定した値、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティは、ローカル コンピューター上の既存のパフォーマンス カウンターを指す必要があります。 をポイントするパフォーマンス カウンター インスタンスが有効でない場合は、コンス トラクターを呼び出すと例外がスローします。  
  
 このオーバー ロードは、読み取り専用アクセスまたは読み取り\/書き込みカウンターが読み取り専用モードではこれです。 A <xref:System.Diagnostics.PerformanceCounter> カウンター自体が読み取り\/書き込みである場合でもこのオーバー ロードを使用して作成されたインスタンスが、カウンターに書き込むことはできません。  
  
 パフォーマンス カテゴリのインスタンスを作成するには、指定、 `instanceName` 上、 <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンス トラクターです。 指定されたカテゴリ インスタンスの場合 `instanceName` 既に存在する新しいオブジェクトは既存のカテゴリ インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="counterName" /> が空の文字列 \(""\) です。  
  
 または  
  
 指定されたカテゴリが正しくありません。  
  
 または  
  
 指定したカテゴリは、マルチ インスタンスとしてマークされ、パフォーマンス カウンター インスタンス名で作成する必要があります。  
  
 または  
  
 <paramref name="instanceName" /> 127 文字を超えています。  
  
 または  
  
 <paramref name="categoryName" /> <paramref name="counterName" /> さまざまな言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスまたは空の文字列の名前 \(""\)、カテゴリには、1 つのインスタンスが含まれている場合。</param>
        <param name="readOnly">
          <see langword="true" /> 読み取り専用モードでのカウンターにアクセスするには <see langword="false" /> 読み取り\/書き込みモードでのカウンターにアクセスします。</param>
        <summary>初期化の新しい読み取り専用または読み取り\/書き込みのインスタンスの <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスし、指定したシステムまたはローカル コンピューター上のカスタム パフォーマンス カウンターと、カテゴリ インスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター文字列は区別されません。  
  
 このオーバー ロードを使用してでのパフォーマンス カウンターにアクセスする読み取り専用または読み取り\/書き込みモードです。  
  
 このオーバー ロード コンス トラクターのセットの <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> し、セットに渡すプロパティの値を <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティ、ローカル コンピューターを"です。"です。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化し、インスタンスをローカル コンピューターの既存のカウンター \(システムまたはカスタムのカウンター\) に関連付けます。 指定した値、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティは、ローカル コンピューター上の既存のパフォーマンス カウンターを指す必要があります。 ポイントするパフォーマンス カウンターのインスタンスが有効でない場合は、コンス トラクターを呼び出すと例外がスローします。  
  
> [!NOTE]
>  このオーバー ロードを使用するには、システムのカウンタへの接続には、システムのカウンタを記述することはできません。 このため、設定 `readOnly` に `false` 例外をスローするコンス トラクターによって、システムのカウンタに接続される場合。  
  
 パフォーマンス カテゴリのインスタンスを作成するには、指定、 `instanceName` 上、 <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンス トラクターです。 指定されたカテゴリ インスタンスの場合 `instanceName` 既に存在する新しいオブジェクトは既存のカテゴリ インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="counterName" /> が空の文字列 \(""\) です。  
  
 または  
  
 このカウンターの設定が要求されました \[読み取り\/書き込みアクセス許可が正しくありません。  
  
 または  
  
 指定されたカテゴリが存在しません \(場合 <paramref name="readOnly" /> は <see langword="true" />\)。  
  
 または  
  
 指定したカテゴリは、.NET Framework のカスタム カテゴリではない \(場合 <paramref name="readOnly" /> は <see langword="false" />\)。  
  
 または  
  
 指定したカテゴリは、マルチ インスタンスとしてマークされ、パフォーマンス カウンター インスタンス名で作成する必要があります。  
  
 または  
  
 <paramref name="instanceName" /> 127 文字を超えています。  
  
 または  
  
 <paramref name="categoryName" /> <paramref name="counterName" /> さまざまな言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</param>
        <param name="counterName">パフォーマンス カウンターの名前。</param>
        <param name="instanceName">パフォーマンス カウンター カテゴリ インスタンスまたは空の文字列の名前 \(""\)、カテゴリには、1 つのインスタンスが含まれている場合。</param>
        <param name="machineName">パフォーマンス カウンターとそれに関連付けられているカテゴリが存在するコンピューター。</param>
        <summary>読み取り専用の新しいインスタンスを初期化、 <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスし、指定したシステムまたは指定したコンピューター上でカスタム パフォーマンス カウンターと、カテゴリのインスタンスに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター文字列は区別されません。  
  
 このオーバー ロード コンス トラクターのセットの <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティに渡す値にします。  
  
 このコンス トラクターは、パフォーマンス カウンターを初期化し、インスタンスを指定したコンピューターの既存のカウンター \(システムまたはカスタムのカウンター\) に関連付けます。 指定した値、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> と <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティは、既存のパフォーマンス カウンターを指す必要があります。 をポイントするパフォーマンス カウンター インスタンスが有効でない場合は、コンス トラクターを呼び出すと例外がスローします。 このオーバー ロードは、読み取り専用アクセスまたは読み取り\/書き込みカウンターが読み取り専用モードではこれです。 A <xref:System.Diagnostics.PerformanceCounter> カウンター自体が読み取り\/書き込みである場合でもこのオーバー ロードを使用して作成されたインスタンスが、カウンターに書き込むことはできません。  
  
> [!NOTE]
>  リモートのパフォーマンス カウンターを記述することはできません。 読み取り\/書き込みのインスタンスを指定できるオーバー ロードはありません、 <xref:System.Diagnostics.PerformanceCounter> リモート コンピューターに接続します。  
  
 パフォーマンス カテゴリのインスタンスを作成するには、指定、 `instanceName` 上、 <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンス トラクターです。 指定されたカテゴリ インスタンスの場合 `instanceName` 既に存在する新しいオブジェクトは既存のカテゴリ インスタンスを参照します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
> [!NOTE]
>  Windows Vista でリモート コンピューターでは、ワークグループのメンバーであるときにする必要があります UAC を無効にできるように、ローカル ユーザー アカウントは、フィルターがないと、管理者アカウントに昇格されることができます。 セキュリティ上の理由は、UAC を無効にするとは、最後の手段にする必要があります。 UAC を無効にする方法については、次を参照してください。 [User Account Control and WMI](http://go.microsoft.com/fwlink/?LinkId=91617)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> が空の文字列 \(""\) です。  
  
 または  
  
 <paramref name="counterName" /> が空の文字列 \(""\) です。  
  
 または  
  
 このカウンターの設定が要求されました \[読み取り\/書き込みアクセス許可が正しくありません。  
  
 または  
  
 このカウンターは、指定したコンピューターには存在しません。  
  
 または  
  
 指定したカテゴリは、マルチ インスタンスとしてマークされ、パフォーマンス カウンター インスタンス名で作成する必要があります。  
  
 または  
  
 <paramref name="instanceName" /> 127 文字を超えています。  
  
 または  
  
 <paramref name="categoryName" /> <paramref name="counterName" /> さまざまな言語にローカライズされています。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> パラメーターが無効です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> または <paramref name="counterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化を開始、 <see cref="T:System.Diagnostics.PerformanceCounter" /> フォームまたは別のコンポーネントで使用されるインスタンスです。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を開始します。<xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドが初期化を終了します。 使用して、 <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> と <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドによってコンポーネントが、完全に初期化される前に使用されないようにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このパフォーマンス カウンタのパフォーマンス カウンター カテゴリの名前を設定します。</summary>
        <value>このパフォーマンス カウンターが関連付けられているパフォーマンス カウンター カテゴリ \(パフォーマンス オブジェクト\) の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> に表示される、 `Performance Object` パフォーマンス カウンター マネージャー MMC スナップインのフィールドに `Add Counter` \] ダイアログ ボックス。  
  
 パフォーマンス カウンターは、カテゴリ、またはコンピューター上のパフォーマンス オブジェクトの動作を監視します。 カテゴリには、\(プロセッサ、ディスク、およびメモリ\) などの物理コンポーネントとプロセスとスレッド\) などのシステム オブジェクトが含まれます。 同じパフォーマンス オブジェクトに関連付けられているシステム カウンターは、共通のフォーカスを示すカテゴリにグループ化されます。 インスタンスを作成する場合、 <xref:System.Diagnostics.PerformanceCounter> クラス、まずを指定するカテゴリをコンポーネントが対話して、そのカテゴリからカウンターを選択します。  
  
 たとえば、1 つの Windows カウンター カテゴリには、メモリ カテゴリです。 このカテゴリ内でのシステム カウンターは、使用できるバイト数とキャッシュされているバイト数などのメモリ データを追跡します。 インスタンスを作成すると、アプリケーションにキャッシュされているバイトを操作する場合、 <xref:System.Diagnostics.PerformanceCounter> コンポーネント、Memory カテゴリに接続し、そのカテゴリから \(この場合、キャッシュされたバイト数\) を該当するカウンターを選択します。  
  
 システム、多くカウンターその他のカテゴリで使用できるが、おそらくにやり取りする最も頻繁にカテゴリは、キャッシュ、メモリ、オブジェクト、PhysicalDisk、プロセス、プロセッサ、サーバー、システム、およびスレッドのカテゴリをされます。  
  
   
  
## 例  
 次のコード例は、の既定のインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> クラスです。 インスタンスを作成した後、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティの値は、セット、およびへの呼び出しの結果、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドが表示されます。  
  
 [!code-cpp[PerfCounter\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パフォーマンス カウンターを閉じるし、このパフォーマンス カウンターのインスタンスによって割り当てられたすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 関連付けると、この <xref:System.Diagnostics.PerformanceCounter> 、サーバーは、システムに置かれているパフォーマンス カウンター インスタンスが、インスタンスを初期化し、カウンター サンプルの情報を格納するメモリを割り当てます。<xref:System.Diagnostics.PerformanceCounter.Close%2A> メソッドは、オブジェクトによって割り当てられたリソースを解放します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSharedResources">
      <MemberSignature Language="C#" Value="public static void CloseSharedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseSharedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンターによって割り当てられているパフォーマンス カウンター ライブラリ共有の状態を解放します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterHelp">
      <MemberSignature Language="C#" Value="public string CounterHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("A description describing the counter.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターの説明を取得します。</summary>
        <value>項目またはこのパフォーマンス カウンターを測定する量の説明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示のパフォーマンス カウンター マネージャー MMC スナップインの \[カウンターの追加\] ダイアログ ボックス、 <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> テキスト ユーザー カウンターの一覧からカウンターを選択し、\[説明\] ボタンをクリックします。  
  
 新しいカウンターを作成するときに使用して、 <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> カウンターの監視対象を説明するテキストは、ユーザーは、システム モニターのディスプレイにカウンターを追加するかどうかを特定できるようにします。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスは、パフォーマンス カウンターに関連付けられていません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これに関連付けられているパフォーマンス カウンターの名前を取得または <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンス。</summary>
        <value>カウントされる数量を大まかに説明すると、カウンターの名前。 この名前が表示されるパフォーマンス カウンターのマネージャー MMC のカウンターの一覧で、スナップインの \[カウンターの追加\] ダイアログ ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用可能な既存のカウンターの一覧を取得すると、Windows パフォーマンス マネージャーからの [Add Counters dialog box](http://go.microsoft.com/fwlink/p/?LinkId=257854)します。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> プロパティを標準的なカウンターの名前にします。  
  
 [!code-cpp[PerfCounter\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連するパフォーマンス カウンターのカウンターの種類を取得します。</summary>
        <value>A <see cref="T:System.Diagnostics.PerformanceCounterType" /> 両方について説明するカウンターが、監視用のアプリケーション、および含まれる値の種類と対話する方法 \(たとえば、計算された、または計算されない\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Diagnostics.PerformanceCounterType> 列挙型にはと対話可能なパフォーマンス カウンターの種類が含まれています。 カウンターの種類のシステムが取得したカウンターの測定値の平均値などの計算値が表示されます。 その他の種類は、基本、または計算されない値を表します。 次の表は、頻繁にやり取りするカウンターの種類を示します。  
  
|カウンターの役割|PerformanceCounterType 値|例|  
|--------------|------------------------------|-------|  
|項目または操作の単純なカウントを維持します。|`NumberOfItems32`|32 ビット整数として受信した注文の数を追跡します。|  
|容量の大きい単純なカウントを維持します。|`NumberOfItems64`|サイトでは、大量の注文の数を追跡するは、64 ビット整数として格納されます。|  
|項目または 1 秒あたりの操作の数を追跡します。|`RateOfCountsPerSecond32`|サイトで 1 秒あたりに受信した命令を追跡します。|  
|項目または 1 秒あたりの操作の容量の大きい数を追跡します。|`RateOfCountsPerSecond64`|非常に高いボリュームを持つサイトでの 1 秒あたり受信した注文を追跡します。|  
|プロセスを実行するか、項目を処理する平均時間を計算します。|`AverageTimer32`|注文の処理にかかる平均時間を計算します。|  
  
 対応するベース カウンターの使用が必要なタイプのカウンターを作成するときに、カウンターとでベースを宣言する必要があります、 <xref:System.Diagnostics.CounterCreationDataCollection> に渡す、 <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> メソッドです。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public long Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Decrement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デクリメント効率的な分割不可能な操作を使用して関連するパフォーマンス カウンターです。</summary>
        <returns>デクリメントされたカウンターの値です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム カウンターにのみ作成できます。 すべてのシステム カウンターとは、読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッドでは、インタロックを使用して、カウンターの値を更新します。 これにより、マルチ スレッドまたはマルチ プロセスのシナリオもパフォーマンスが大幅に低下の結果で、このカウンターの値を正確に維持できます。 インター ロック精度が不要な場合の操作を指定、更新することができます、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 、5 までのプロパティを直接倍パフォーマンスが向上します。  ただし、マルチ スレッドのシナリオでカウンターの値に更新プログラムによって無視される場合が、データが不正確になります。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは、アプリケーションがデクリメントことはできませんのでは読み取り専用です。  
  
 または  
  
 インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>このメソッドは、スレッド セーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileMappingSize">
      <MemberSignature Language="C#" Value="public static int DefaultFileMappingSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DefaultFileMappingSize" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パフォーマンス カウンターが共有するグローバル メモリのバイト単位のサイズを指定します。 既定のサイズは 524, 288 バイトです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化を終了、 <see cref="T:System.Diagnostics.PerformanceCounter" /> フォームまたは別のコンポーネントで使用されるインスタンスです。 初期化は実行時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] デザイン環境では、このメソッドを使用して、フォームまたは別のコンポーネントで使用されるコンポーネントの初期化を終了します。<xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> メソッドが初期化を開始します。 使用して、 <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> と <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> メソッドによってコンポーネントが、完全に初期化される前に使用されないようにします。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public long Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Increment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>効率的な分割不可能な操作を使用して、関連するパフォーマンス カウンターをインクリメントします。</summary>
        <returns>インクリメントされたカウンターの値です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム カウンターにのみ作成できます。 すべてのシステム カウンターとは、読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッドでは、インタロックを使用して、カウンターの値を更新します。 これにより、マルチ スレッドまたはマルチ プロセスのシナリオもパフォーマンスが大幅に低下の結果で、このカウンターの値を正確に維持できます。 インター ロック精度が不要な場合の操作を指定、更新することができます、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 、5 までのプロパティを直接倍パフォーマンスが向上します。  ただし、マルチ スレッドのシナリオでカウンターの値に更新プログラムによって無視される場合が、データが不正確になります。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは、アプリケーションが増分できませんのでは読み取り専用です。  
  
 または  
  
 インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>このメソッドは、スレッド セーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public long IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">増分に使用する値。 負の値をデクリメント カウンターです。\)</param>
        <summary>ずつインクリメントまたはデクリメント効率的なアトミック操作で指定した量によって関連するパフォーマンス カウンターの値。</summary>
        <returns>新しいカウンター値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム カウンターにのみ作成できます。 すべてのシステム カウンターとは、読み取り専用です。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッドでは、インタロックを使用して、カウンターの値を更新します。 これにより、マルチ スレッドまたはマルチ プロセスのシナリオもパフォーマンスが大幅に低下の結果で、このカウンターの値を正確に維持できます。 インター ロック精度が不要な場合の操作を指定、更新することができます、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 、5 までのプロパティを直接倍パフォーマンスが向上します。  ただし、マルチ スレッドのシナリオでカウンターの値に更新プログラムによって無視される場合が、データが不正確になります。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> カウンターに単位を追加します。 このコード例のサンプルが大きく、 <xref:System.Diagnostics.PerformanceCounter> クラスです。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターは、アプリケーションが増分できませんのでは読み取り専用です。  
  
 または  
  
 インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category if the <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> property is **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>このメソッドは、スレッド セーフです。</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="InstanceLifetime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterInstanceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプロセスの有効期間を設定します。</summary>
        <value>
          <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 値のいずれか。 既定値は、<see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 グローバル共有メモリ、およびの値を使用してそれをパフォーマンス カウンター カテゴリを .NET Framework version 1.0 または 1.1 で作成すると、場合 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.CounterType%2A> プロパティは、 <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, 、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> 値のパフォーマンス カウンターである必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定されている値がのメンバーではない、 <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 列挙します。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 後に設定されている、 <see cref="T:System.Diagnostics.PerformanceCounter" /> が初期化されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このパフォーマンス カウンターのインスタンス名を設定します。</summary>
        <value>パフォーマンス カウンター カテゴリ インスタンスまたは空の文字列の名前 \(""\)、カウンターが単一インスタンスのカウンターである場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  インスタンス名は、長さは 128 文字未満である必要があります。  
  
 場合によっては、カテゴリが複数回出現するカテゴリに関連するオブジェクトに関するデータを追跡するインスタンスに分割されています。 インスタンスは、個々 のカウンターではなく、カテゴリ全体に適用されます。 カテゴリ内の各カウンターには、カテゴリに対して定義されている各インスタンスがあります。 たとえば、プロセスのカテゴリには、アイドル状態とシステムという名前のインスタンスが含まれています。 プロセス カテゴリ内の各カウンターには、そのため、アイドル プロセスまたはシステム プロセスに関する情報を表示し、インスタンスごとにデータが含まれています。  
  
 多くのカテゴリは、複数のインスタンスを含まないため、このプロパティをインスタンスが、カテゴリに関連付けられていないことを示すには、空のままにすることができます。  
  
 この場合 <xref:System.Diagnostics.PerformanceCounter> カスタムのカテゴリへのポインターをインスタンス化から既存のカテゴリ インスタンスのみを選択できます。 必要に応じて、インスタンスを多くのカウンターとカテゴリとして定義するためのカスタムのカテゴリでのみ、カテゴリの新しいインスタンスを作成できます。  
  
 パフォーマンス カテゴリのインスタンスを作成するには、指定、 `instanceName` 上、 <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンス トラクターです。 指定されたカテゴリ インスタンスの場合 `instanceName` 既に存在する新しいオブジェクトは既存のカテゴリ インスタンスを参照します。  
  
> [!NOTE]
>  文字は使用できません「\(",」\)"、「\#」、「\\」、または、インスタンス名に「\/」です。 パフォーマンス コンソールの次の文字を使用する場合 \(を参照してください [Runtime Profiling](http://msdn.microsoft.com/ja-jp/ccd68284-f3a8-47b8-bc3f-92e5fe3a1640)\) は、インスタンスの値を正しく表示されません。  
  
 かどうか、インスタンス名が自動的に生成し、文字を含めることがあります「\(",」\)"、「\#」、「\\」、またはスラッシュ \(\/\)、次の表で文字マッピングを使用します。  
  
|文字|マップされている文字|  
|--------|----------------|  
|\(|\[|  
|\)|\]|  
|\#|\_|  
|\\|\_|  
|\/|\_|  
  
 <xref:System.AppDomain.FriendlyName%2A> のプロパティ、 <xref:System.AppDomain> から取得したオブジェクト、 <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> プロパティは無効な文字を含めることができるインスタンス名の一般的な原因です。  
  
   
  
## 例  
 次のコード例は、の既定のインスタンスを作成、 <xref:System.Diagnostics.PerformanceCounter> クラスです。 インスタンスを作成した後、 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, 、<xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> プロパティの値は、セット、およびへの呼び出しの結果、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドが表示されます。  
  
 [!code-cpp[PerfCounter\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("What's the machine name format?")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパフォーマンス カウンターのコンピューター名を取得または</summary>
        <value>パフォーマンス カウンターとそれに関連付けられているカテゴリが存在するサーバー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ローカル コンピューター上にあるカウンターのみ値を記述できます。 ただし、アクセス特権があるエンタープライズ内のコンピューターとカウンターの値を読み取ることができます。  
  
 設定すると、 <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> プロパティにリモート コンピューターへのパス、 <xref:System.Diagnostics.PerformanceCounter> インスタンスがそのコンピューターのカウンターを開こうとします。 カウンターが存在しない場合は、例外をスローこのプロパティを設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> 形式が無効です。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.CounterSample NextSample ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.CounterSample NextSample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextSample" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンターのサンプルを取得し、基本、または計算されない値を返します。</summary>
        <returns>A <see cref="T:System.Diagnostics.CounterSample" /> このカウンターのシステムを取得する次の生の値を表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは通常、計算されない値が含まれているカウンターの使用します。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> カウンターの次の計算されない値を取得します。 このコード例のサンプルが大きく、 <xref:System.Diagnostics.PerformanceCounter> クラスです。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="public float NextValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 NextValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カウンターのサンプルを取得し、計算される値を返します。</summary>
        <returns>このカウンターのシステムを取得する次の計算される値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  カウンターの計算値が 2 つのカウンターの読み取りに依存している場合、最初の読み取り操作には、0.0 が返されます。 新しいパフォーマンス カウンターを作成するのには、他のカウンターを指定するパフォーマンス カウンターのプロパティをリセットして新しいプロパティを使用して最初の読み取り操作には、0.0 が返されます。 呼び出しの間で推奨される遅延時間、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> メソッドでは、1 秒間を次の増分読み込みを実行するカウンターをできるようにします。  
  
> [!NOTE]
>  パフォーマンス カウンターを読み取るには、管理者特権が必要です。 Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Diagnostics.PerformanceCounterType.ElapsedTime> カウンターと使用法、 <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> 期間にわたってカウンターの値を表示するメソッドです。  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for reading the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The raw value of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このカウンターの raw、または計算されない値を設定します。</summary>
        <value>カウンターの生の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カウンターの種類は、32 ビットのサイズが大きすぎる値にこのプロパティを設定しようとする場合は、プロパティには、32 ビット値が切り捨てられます。 使用して、ローカル コンピューター上のカスタム カウンターを読み取るときに、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 計算値ではなく、プロパティは、生の値が十分であるシナリオでパフォーマンスが著しく向上を生成できます。  
  
 表示されているカウンターが読み取り専用の場合は、取得、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> プロパティがプロパティの名前は時に、カウンターをサンプリングします。 このアクションは、最初の呼び出しを行うことに相当、 <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> メソッドです。 その後を呼び出す場合 <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, 、両方の呼び出しが返される値に対して計算を実行することができます。  
  
 システム カウンターは読み取り専用であるためには取得できますが、生の値を設定してください。  
  
> [!NOTE]
>  <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, 、<xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, 、および <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> メソッドでは、インタロックを使用して、カウンターの値を更新します。 これにより、マルチ スレッドまたはマルチ プロセスのシナリオもパフォーマンスが大幅に低下の結果で、このカウンターの値を正確に維持できます。 インター ロック精度が不要な場合の操作を指定、更新することができます、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> 、5 までのプロパティを直接倍パフォーマンスが向上します。  ただし、マルチ スレッドのシナリオでカウンターの値に更新プログラムによって無視される場合が、データが不正確になります。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
> [!NOTE]
>  Windows Vista、Windows XP Professional x64 Edition、または Windows Server 2003 でのパフォーマンス カウンターを読み取りするには、Performance Monitor Users グループのメンバーであるか、管理者特権を持っている必要があります。  
>   
>  Windows Vista のパフォーマンス カウンターにアクセスする権限を昇格させることを避けるためには、Performance Monitor Users グループに自分を追加します。  
>   
>  Windows Vista では、ユーザー アカウント制御 \(UAC: User Account Control\) でユーザーの権限が決定されます。 ユーザーが組み込みの Administrators グループのメンバーである場合、そのユーザーには標準ユーザー アクセス トークンおよび管理者アクセス トークンの 2 つのランタイム アクセス トークンが割り当てられています。 既定では、ユーザーは標準ユーザー ロールに所属します。 パフォーマンス カウンターにアクセスするコードを実行するには、最初に、ユーザーの権限を標準ユーザーから管理者に昇格させる必要があります。 この操作は、アプリケーションの起動時にアプリケーション アイコンを右クリックし、管理者として実行することを指定して行うことができます。  
  
   
  
## 例  
 次の例では、 <xref:System.Diagnostics.CounterSample> の値を表示するクラス、 <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> カウンターのプロパティです。  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">カウンターの生の値を設定しようとして、カウンターが読み取り専用です。  
  
 または  
  
 インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理者特権なしで実行されるコードは、パフォーマンス カウンターを読み取ろうとしました。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The accessability level of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかこの <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードです。</summary>
        <value>
          <see langword="true" />, 、場合、 <see cref="T:System.Diagnostics.PerformanceCounter" /> インスタンスが読み取り専用モードで \(カウンター自身がカスタム .NET Framework カウンターの場合でも\) <see langword="false" /> 読み取り\/書き込みモードにある場合。 既定では、コンス トラクターによって設定された値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 システム カウンター <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> 常に `true`します。 システムのカウンタを記述することはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInstance">
      <MemberSignature Language="C#" Value="public void RemoveInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたカテゴリ インスタンスの削除、 <see cref="T:System.Diagnostics.PerformanceCounter" /> オブジェクト <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム カウンターのみのインスタンスを削除することができます。 すべてのシステム カウンターは、例外をスローうちの 1 つを削除しようとしたためは読み取り専用です。  
  
> [!NOTE]
>  競合状態を避けるためには、パフォーマンス カウンターの共有メモリが解放されるときに、そのことを勧め、 <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> からメソッドを呼び出す、 <xref:System.AppDomain.DomainUnload> イベント ハンドラーです。  
  
 パフォーマンス カテゴリのインスタンスを作成するには、指定、 `instanceName` 上、 <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> コンス トラクターです。 指定されたカテゴリ インスタンスの場合 `instanceName` 既に存在する新しいオブジェクトは既存のカテゴリ インスタンスを参照します。  
  
> [!NOTE]
>  場合の値、 <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> プロパティは <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> し、.NET framework version 1.0 または 1.1 では、パフォーマンス カウンター カテゴリが作成された、 <xref:System.InvalidOperationException> がスローされます。 パフォーマンス カウンターのカテゴリが以前のバージョンで作成されたグローバル共有メモリ、およびの値を使用して <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> する必要があります <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>します。 1.0 または 1.1 の .NET Framework のバージョンで実行されるアプリケーション カテゴリを使用しない場合は、削除し、カテゴリを再作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このカウンターは、カテゴリに関連付けられている任意のインスタンスを削除することはできませんのでは読み取り専用です。  
  
 または  
  
 インスタンスは、パフォーマンス カウンターを正しく関連付けではありません。  
  
 または  
  
 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> にプロパティが設定されている <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> 共有メモリがグローバルを使用するとします。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">システム API にアクセス中にエラーが発生しました。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このプラットフォームは Windows 98 または Windows me、パフォーマンス カウンターをサポートしていません。</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">for writing the performance counter category. Associated enumeration: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">for full trust for the immediate caller. This class cannot be used by partially trusted code.</permission>
        <summary>
          <see cref="T:System.Diagnostics.PerformanceCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>