<Type Name="DataObject" FullName="System.Security.Cryptography.Xml.DataObject">
  <TypeSignature Language="C#" Value="public class DataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.DataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>署名されるデータを保持する XML 署名のオブジェクトの要素を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Security.Cryptography.Xml.DataObject> XML 署名に直接情報やメタデータを格納するクラス。  署名を格納するなどの作成日時または署名者の id。<xref:System.Security.Cryptography.Xml.DataObject> クラスの可能性がありますか、XML 署名で説明されていない可能性があります。  
  
 対応して、クラス、 `<Object>` XML 署名の World Wide Web Consortium \(W3C\) の仕様の要素。 W3C の仕様の詳細については、次を参照してください。 [http:\/\/www.w3.org\/TR\/xmldsig\-core\/](http://www.w3.org/TR/xmldsig-core/)します。  
  
   
  
## 例  
 次のコード例では、XML 署名エンベロープを生成する方法を示します。  
  
 [!code-cpp[XMLDSIG Signing\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Signing/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Signing\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Signing/CS/source.cs#1)]
 [!code-vb[XMLDSIG Signing\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Signing/VB/source.vb#1)]  
  
 次のコード例では、XML 署名を確認する方法を示します。  
  
 [!code-cpp[XMLDSIG Verification\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Verification/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Verification\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Verification/CS/source.cs#1)]
 [!code-vb[XMLDSIG Verification\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Verification/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.DataObject.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Security.Cryptography.Xml.DataObject> class is used with XML signatures. After you have initialized the <xref:System.Security.Cryptography.Xml.DataObject>, you can assign the <xref:System.Security.Cryptography.Xml.DataObject.Data%2A> and <xref:System.Security.Cryptography.Xml.DataObject.Id%2A> properties.  
  
   
  
## 例  
 The following code example demonstrates how to generate an enveloping XML signature.  
  
 [!code-cpp[XMLDSIG Signing\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Signing/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Signing\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Signing/CS/source.cs#1)]
 [!code-vb[XMLDSIG Signing\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Signing/VB/source.vb#1)]  
  
 The following code example demonstrates how to check an XML signature.  
  
 [!code-cpp[XMLDSIG Verification\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Verification/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Verification\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Verification/CS/source.cs#1)]
 [!code-vb[XMLDSIG Verification\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Verification/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string id, string mimeType, string encoding, System.Xml.XmlElement data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string mimeType, string encoding, class System.Xml.XmlElement data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="data" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="id">新しいインスタンスを初期化する識別 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> とします。</param>
        <param name="mimeType">新しいインスタンスを初期化するために使用されるデータの MIME の種類 <see cref="T:System.Security.Cryptography.Xml.DataObject" />します。</param>
        <param name="encoding">新しいインスタンスを初期化するために使用されるデータのエンコード <see cref="T:System.Security.Cryptography.Xml.DataObject" />します。</param>
        <param name="data">新しいインスタンスを初期化するデータ <see cref="T:System.Security.Cryptography.Xml.DataObject" /> とします。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> クラスが指定された id、MIME の種類、エンコーディング、およびデータを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.DataObject> クラスは、XML 署名を使用します。`id` パラメーターは使用するデータが含まれる要素の名前を表します。`data` パラメーターを含む XML ノードのリストを参照、 `id` パラメーター要素です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList Data" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.DataObject.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のデータ値の設定を取得または <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</summary>
        <value>現在のデータ <see cref="T:System.Security.Cryptography.Xml.DataObject" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティで説明する要素を含む XML ノードのリスト、 <xref:System.Security.Cryptography.Xml.DataObject.Id%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、XML 署名エンベロープを生成する方法を示します。  
  
 [!code-cpp[XMLDSIG Signing\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Signing/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Signing\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Signing/CS/source.cs#1)]
 [!code-vb[XMLDSIG Signing\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Signing/VB/source.vb#1)]  
  
 次のコード例では、XML 署名を確認する方法を示します。  
  
 [!code-cpp[XMLDSIG Verification\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Verification/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Verification\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Verification/CS/source.cs#1)]
 [!code-vb[XMLDSIG Verification\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Verification/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティを設定するのに使用される値は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.DataObject.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のエンコーディング取得または設定 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</summary>
        <value>現在のエンコードの種類 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は `null`, 、エンコーディングがないことを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.DataObject.GetXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML 表現を返す、 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</summary>
        <returns>XML 表現、 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML を出力するには、このメソッドを使用して、 <xref:System.Security.Cryptography.Xml.DataObject>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.DataObject.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の id を取得または <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</summary>
        <value>使用するデータを含む要素の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Id が使用される参照を <xref:System.Security.Cryptography.Xml.DataObject> 別の場所からです。 このプロパティの既定値は `null`, 、識別情報が存在しないことを意味します。 このプロパティは一般的で参照されている、 <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、XML 署名エンベロープを生成する方法を示します。  
  
 [!code-cpp[XMLDSIG Signing\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Signing/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Signing\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Signing/CS/source.cs#1)]
 [!code-vb[XMLDSIG Signing\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Signing/VB/source.vb#1)]  
  
 次のコード例では、XML 署名を確認する方法を示します。  
  
 [!code-cpp[XMLDSIG Verification\#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG Verification/CPP/source.cpp#1)]
 [!code-csharp[XMLDSIG Verification\#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG Verification/CS/source.cs#1)]
 [!code-vb[XMLDSIG Verification\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG Verification/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">XML 要素を読み込む、 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 状態からです。</param>
        <summary>読み込み、 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 状態の XML 要素からです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加の XML 要素を追加するこのメソッドを使用できます、 <xref:System.Security.Cryptography.Xml.DataObject> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">XML 要素の値は、 <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.DataObject.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の MIME の種類を取得または <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。</summary>
        <value>現在の MIME の種類 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> オブジェクトです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 MIME の種類の説明内のデータ、 <xref:System.Security.Cryptography.Xml.DataObject>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>