<Type Name="KeyInfoName" FullName="System.Security.Cryptography.Xml.KeyInfoName">
  <TypeSignature Language="C#" Value="public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyInfoName extends System.Security.Cryptography.Xml.KeyInfoClause" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.KeyInfoName" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.KeyInfoClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表す、 <see langword="&lt;KeyName&gt;" /> XMLDSIG や XML 暗号化のサブ要素 <see langword="&lt;KeyInfo&gt;" /> 要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 `<KeyName>` 要素に対応するキーを識別するために、パーティの検証または XML ドキュメントを復号化を使用している文字列識別子が含まれています。  たとえば、暗号化または署名を XML ドキュメントが表示された場合、 `<KeyName>` 要素の値とセンダを持つという名前のキーを使用する"AsymmetricKey1"を復号化またはドキュメントを確認するには、"AsymmetricKey1"です。  前もってキー名マップの双方が合意する必要があります。  実際のキーは、XML ドキュメントに埋め込まれないことに注意してください。  
  
 詳細については、 `<KeyName>` 要素、www.w3.org\/TR\/xmldsig\-core\/ で World Wide Web Consortium \(W3C\) から利用できる XMLDSIG 仕様のセクション 4.4.1 を参照するかは www.w3.org\/TR\/xmlenc\-core\/ で W3C XML 暗号化の仕様を参照しています。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfoName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfoName (string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyName">値である文字列の識別子、 <see langword="&lt;KeyName&gt;" /> 要素。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> クラスの値である文字列識別子を指定して、 <see langword="&lt;KeyName&gt;" /> 要素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `keyName` パラメーターは、任意の文字列を含めることができます。 文字列の解釈は、アプリケーションに固有です。 空白文字は、文字列値に重要です。  
  
 `keyName` パラメーターの値を指定する、 <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.GetXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML 表現を返す、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> オブジェクトです。</summary>
        <returns>XML 表現、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.XmlElement> このメソッドによって返されるオブジェクトは XMLDSIG や XML 暗号化のサブ要素としての使用に適した `<KeyInfo>` 要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> オブジェクトの状態を示す、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> オブジェクトです。</param>
        <summary>入力を解析して <see cref="T:System.Xml.XmlElement" /> オブジェクトの内部状態を有効にして、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> と一致するオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.KeyInfoName.LoadXml%2A> メソッドが使用される通常のプロセスに、 `<KeyName>` のサブ要素、 `<KeyInfo>` 要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.KeyInfoName.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に含まれている文字列識別子、 <see langword="&lt;KeyName&gt;" /> 要素。</summary>
        <value>値である文字列の識別子、 <see langword="&lt;KeyName&gt;" /> 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A> プロパティは、任意の文字列を含めることができます。 文字列の解釈は、アプリケーションに固有です。 空白文字は、文字列値に重要です。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfoName> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>