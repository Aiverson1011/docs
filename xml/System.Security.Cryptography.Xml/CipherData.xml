<Type Name="CipherData" FullName="System.Security.Cryptography.Xml.CipherData">
  <TypeSignature Language="C#" Value="public sealed class CipherData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherData" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表す、 <see langword="&lt;CipherData&gt;" /> に XML 暗号化要素です。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.CipherData> クラスを表す、 `<CipherData>` に XML 暗号化要素です。 これは、暗号化されたデータを提供する必要な要素です。 Base64 でエンコードされたテキストとして、暗号化されたデータを含める必要がありますか、その、 `<CipherValue>` 要素、またはを使用して暗号化されたデータを格納している外部の場所への参照を提供する、 `<CipherReference>` 要素。  
  
 多くの場合は直接の新しいインスタンスを作成する必要はありません、 <xref:System.Security.Cryptography.Xml.CipherData> クラスです。<xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>, 、<xref:System.Security.Cryptography.Xml.EncryptedData>, 、および <xref:System.Security.Cryptography.Xml.EncryptedKey> クラスのインスタンスを作成します。  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトは、いずれかを持つことが、 <xref:System.Security.Cryptography.Xml.CipherReference> プロパティまたは <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> プロパティには、両方ではないです。 A <xref:System.Security.Cryptography.CryptographicException> に両方割り当てられている場合にスローされますが、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.EncryptedData> を作成するクラス、\<`EncryptedData`\> を含む要素、\<`CipherData`\> 要素、および、XML ファイルに XML の書き込みです。  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData\#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#1)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData\#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#1)]
 [!code-vb[cryptgraphy.Xml.EncryptedData\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.CipherData" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This constructor creates a <xref:System.Security.Cryptography.Xml.CipherData> object that represents the **languageKeyword tag is not supported!!!!**  
 element in XML encryption. The **languageKeyword tag is not supported!!!!**  
 element is a required element in XML encryption.  
  
   
  
## 例  
 The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class. The entire sample can be found in the <xref:System.Security.Cryptography.Xml.CipherData> class topic.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (byte[] cipherValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cipherValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cipherValue">使用する暗号化されたデータ、 <see langword="&lt;CipherValue&gt;" /> 要素。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> クラスとしてのバイト配列を使用して、 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.Security.Cryptography.Xml.CipherData> を表すオブジェクト、 `<CipherData>` に XML 暗号化要素です。 コンス トラクターは、割り当て、 `cipherValue` 値を <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> として、実際のプロパティがデータを暗号化します。  
  
> [!NOTE]
>  `<CipherData>` 要素は、いずれかを付与できます、 <xref:System.Security.Cryptography.Xml.CipherReference> または <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 子要素が、どちらかです。 A <xref:System.Security.Cryptography.CryptographicException> に両方割り当てられている場合にスローされますが、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 <xref:System.Security.Cryptography.Xml.CipherData> クラスの新規インスタンスを作成する方法を、次のコード例に示します。  
  
 [!code-cpp[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cipherValue" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティは既に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Xml.CipherReference cipherReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherReference" Type="System.Security.Cryptography.Xml.CipherReference" />
      </Parameters>
      <Docs>
        <param name="cipherReference">使用する <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> オブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> クラスを使用して、 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.Security.Cryptography.Xml.CipherData> を表すオブジェクト、 `<CipherData>` 要素に XML 暗号化し、代入、 `cipherReference` 値を <xref:System.Security.Cryptography.Xml.CipherReference> プロパティです。<xref:System.Security.Cryptography.Xml.CipherReference> オブジェクトが表す、 `<CipherReference>` 要素は、暗号化されたデータの場所を指定します。  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトは、いずれかを持つことが、 <xref:System.Security.Cryptography.Xml.CipherReference> プロパティまたは <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> プロパティには、両方ではないです。 A <xref:System.Security.Cryptography.CryptographicException> に両方割り当てられている場合にスローされますが、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 次のコード例の新しいインスタンスを作成する方法を示しています、 <xref:System.Security.Cryptography.Xml.CipherData> クラスを使用して <xref:System.Security.Cryptography.Xml.CipherReference> 情報。  
  
 [!code-cpp[cryptography.Xml.CipherReference\#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference\#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cipherValue" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティは既に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherReference">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherReference CipherReference" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see langword="&lt;CipherReference&gt;" /> 要素。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `<CipherReference>` 要素は、送信元を識別するには、処理されると、暗号化されたデータが得られます。 この要素の詳細については、次を参照してください。 <xref:System.Security.Cryptography.Xml.CipherReference>します。  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトは、いずれかを持つことが、 <xref:System.Security.Cryptography.Xml.CipherReference> プロパティまたは <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> プロパティには、両方ではないです。 A <xref:System.Security.Cryptography.CryptographicException> に両方割り当てられている場合にスローされますが、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 次のコード例の新しいインスタンスを作成する方法を示しています、 <xref:System.Security.Cryptography.Xml.CipherData> クラスを使用して <xref:System.Security.Cryptography.Xml.CipherReference> 情報。  
  
 [!code-cpp[cryptography.Xml.CipherReference\#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference\#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> プロパティに設定されました <see langword="null" />します。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> プロパティが複数回設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherValue">
      <MemberSignature Language="C#" Value="public byte[] CipherValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CipherValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see langword="&lt;CipherValue&gt;" /> 要素。</summary>
        <value>表すバイト配列、 <see langword="&lt;CipherValue&gt;" /> 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値は、暗号化されたデータです。  
  
> [!NOTE]
>  `<CipherData>` 要素は、いずれかを付与できます、 <xref:System.Security.Cryptography.Xml.CipherReference> または <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 子要素が、どちらかです。 A <xref:System.Security.Cryptography.CryptographicException> に両方割り当てられている場合にスローされますが、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 <xref:System.Security.Cryptography.Xml.CipherData> クラスの新規インスタンスを作成する方法を、次のコード例に示します。  
  
 [!code-cpp[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティに設定されました <see langword="null" />します。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティが複数回設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.GetXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML 値を取得、 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Xml.XmlElement" /> の XML 情報を表すオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML を出力するには、このメソッドを使用して、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、新しいインスタンスを作成、 <xref:System.Security.Cryptography.Xml.CipherData> オブジェクトです。  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティおよび <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> プロパティは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> を表す XML データをロードします。</param>
        <summary>XML データを読み込み、 <see cref="T:System.Xml.XmlElement" /> に、 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.CipherData.LoadXml%2A> メソッドで既存の XML 要素を上書きする、 `value` パラメーター。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> プロパティおよび <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> プロパティは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.CipherData" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>