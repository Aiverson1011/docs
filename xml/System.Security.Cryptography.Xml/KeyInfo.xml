<Type Name="KeyInfo" FullName="System.Security.Cryptography.Xml.KeyInfo">
  <TypeSignature Language="C#" Value="public class KeyInfo : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyInfo extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.KeyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>XML デジタル署名や XML 暗号化を表す <see langword="&lt;KeyInfo&gt;" /> 要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.KeyInfo> クラスは、XML デジタル署名と暗号化キーの情報を表します。  
  
 <xref:System.Security.Cryptography.Xml.KeyInfo> クラスを検証または XML ドキュメントを復号化に必要なキーの識別に役立ちますキーに関連する情報を埋め込むために使用します。 複数の種類のキーに関連する情報は内の 1 つ含まれます <xref:System.Security.Cryptography.Xml.KeyInfo>; キーに関連する情報の種類によっても、関連付けられているクラスから派生した <xref:System.Security.Cryptography.Xml.KeyInfoClause>します。  
  
 詳細については、 `<KeyInfo>` 要素、www.w3.org\/TR\/xmldsig\-core\/ に W3C から利用できる XMLDSIG 仕様を参照または www.w3.org\/TR\/xmlenc\-core\/ に W3C から利用できる XML 暗号化の仕様を参照してください。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClause">
      <MemberSignature Language="C#" Value="public void AddClause (System.Security.Cryptography.Xml.KeyInfoClause clause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClause(class System.Security.Cryptography.Xml.KeyInfoClause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.AddClause(System.Security.Cryptography.Xml.KeyInfoClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clause" Type="System.Security.Cryptography.Xml.KeyInfoClause" />
      </Parameters>
      <Docs>
        <param name="clause">
          <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> に追加する、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</param>
        <summary>追加、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> の特定の型を表す <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> に情報を <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> ユニバーサル リソース識別子 \(URI\) で表されるリソースに署名するときのオブジェクトします。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigDetached\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトを XML ドキュメントに署名します。  この例では、新しいファイルに署名を保存します。  
  
 [!code-cpp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML\-XMLDsigEnvelope\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、暗号化された XML ドキュメント内での暗号化されたキーが埋め込まれます。  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 次のコード例では、 <xref:System.Security.Cryptography.Xml.KeyInfo> オブジェクトの XML ドキュメントを暗号化するときにします。 この例では、名前を復号化メソッドを識別するために対称キーにマップします。  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.KeyInfo.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>数を取得 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> に含まれるオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
        <value>数 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> に含まれるオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を返します、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 内のオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
        <returns>列挙子のサブ要素の <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> コレクションを反復処理に使用できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 同時に同じコレクションから取得した 2 つの列挙子が同一の繰り返し処理を返すに必ずしも必要はありません。  
  
 最初に、列挙子はコレクションの最初の要素の前に配置する必要があり、使用する前に、実装の呼び出し元によって詳細に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator (Type requestedObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator(class System.Type requestedObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedObjectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedObjectType">列挙するオブジェクトの型。</param>
        <summary>列挙子を返します、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> で指定した型のオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
        <returns>列挙子のサブ要素の <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> コレクションを反復処理に使用できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 同時に同じコレクションから取得した 2 つの列挙子が同一の繰り返し処理を返すに必ずしも必要はありません。  
  
 最初に、列挙子はコレクションの最初の要素の前に配置する必要があり、使用する前に、実装の呼び出し元によって詳細に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.GetXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML 表現を返す、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
        <returns>XML 表現、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.KeyInfo.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または重要な情報の id を設定します。</summary>
        <value>重要な情報の id。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.KeyInfo.LoadXml(System.Xml.XmlElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">読み込み元の XML 要素、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 状態です。</param>
        <summary>読み込み、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 状態の XML 要素からです。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>列挙子を返します、 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 内のオブジェクト、 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> オブジェクトです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>