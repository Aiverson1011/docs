<Type Name="Transform" FullName="System.Security.Cryptography.Xml.Transform">
  <TypeSignature Language="C#" Value="public abstract class Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定したすべての抽象基本クラスを表す <see langword="&lt;Transform&gt;" /> XML デジタル署名で使用できる要素が派生します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML 署名と検証を実行するときに、\<`Transform`\> 要素は、署名者が署名されたデータ オブジェクトを変換する方法について説明します。  ドキュメントの検証を使用して、\<`Transform`\> 同様に、署名付きデータを変換する要素。  検証ツールは、同様に、署名付きデータを変換することはできない場合に、ドキュメントを確認することはできません。  
  
 派生したクラスを使用して、 <xref:System.Security.Cryptography.Xml.Transform> クラスのたびに、暗号化された XML ドキュメントまたは署名付きの XML ドキュメントには、1 つまたは複数のオブジェクトの変形を追加する必要があります。  
  
 詳細については、 `<Transform>` 要素、www.w3.org\/TR\/xmldsig\-core\/ で World Wide Web Consortium \(W3C\) から利用できる XMLDSIG 仕様または www.w3.org\/TR\/xmlenc\-core\/ に W3C から利用できる XML 暗号化の仕様を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Xml.Transform" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、統一リソース識別子 \(URI\) を現在の変換で実行されるアルゴリズムを識別します。</summary>
        <value>現在の実行アルゴリズムを識別する URI <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに対応して、 <xref:System.Security.Cryptography.Xml.Transform.Algorithm%2A> の属性、 `<Transform>` XMLDSIG シグネチャ内の要素。 たとえば、URI Base64 デコード変換用のアルゴリズムは、XMLDSIG 仕様 \(6.6.2\] セクション\) で http:\/\/www.w3.org\/2000\/09\/xmldsig\#base64 として定義されます。  
  
 関連付けられている静的フィールドのいずれかを使用してこの値を設定することができます便利なことに、 <xref:System.Security.Cryptography.Xml.SignedXml> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Context" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Xml.XmlElement" /> するドキュメントのコンテキストを表すオブジェクト、現在 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトが実行されています。</summary>
        <value>
          <see cref="T:System.Xml.XmlElement" /> するドキュメントのコンテキストを表すオブジェクト、現在 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトが実行されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ドキュメントに署名するとき、 <xref:System.Security.Cryptography.Xml.Transform.Context%2A> プロパティに渡される値を表す、 <xref:System.Security.Cryptography.Xml.SignedXml> コンス トラクターです。  ドキュメントを検証するときに、 <xref:System.Security.Cryptography.Xml.Transform.Context%2A> プロパティを表す <xref:System.Security.Cryptography.Xml.Signature> オブジェクトです。  
  
 <xref:System.Security.Cryptography.Xml.Transform.Context%2A> 変換が呼び出される前に署名の計算やチェック中、プロパティが自動的に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">
          <see cref="T:System.Security.Cryptography.HashAlgorithm" /> ダイジェストを作成するために使用します。</param>
        <summary>派生クラスでオーバーライドされた場合に関連付けられているダイジェストを返す、 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <returns>関連付けられているダイジェスト、 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetInnerXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合のパラメーターの XML 表現を返します、 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 、XMLDSIG のサブ要素として含められるに適したオブジェクト <see langword="&lt;Transform&gt;" /> 要素。</summary>
        <returns>現在の記述に必要な変換に固有のコンテンツを表す XML ノードの一覧 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 、XMLDSIG 内のオブジェクト <see langword="&lt;Transform&gt;" /> 要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 場合、 <xref:System.Security.Cryptography.Xml.Transform> オブジェクトを表す XPath 式を使用して XPath 変換 `self::text()`,への呼び出し <xref:System.Security.Cryptography.Xml.Transform.GetInnerXml%2A> の結果、 <xref:System.Xml.XmlNodeList> を次の XML 要素を表すオブジェクト。  
  
```  
<XPath>   
  self::text()   
</XPath>  
```  
  
 この要素の変換に固有のコンテンツに対応、 `<Transform>` XMLDSIG 仕様のセクション 4.3.3.4 に定義されています。 上記の XPath 変換全体を `<Transform>` 要素は、次のようにします。  
  
```  
<Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">   
  <XPath>   
    self::text()   
  </XPath>   
</Transform>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、返される出力は、現在の <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <returns>現在の出力 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">返される出力の型。 必ずで型の 1 つ、 <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> プロパティです。</param>
        <summary>派生クラスでオーバーライドされると、返される出力は、現在の <see cref="T:System.Security.Cryptography.Xml.Transform" /> 指定した型のオブジェクト。</summary>
        <returns>現在の出力 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトとして指定した型のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Xml.Transform.GetOutput%2A> 返りますは以前の呼び出しで設定された値、実行した後、現在の変換の出力、 <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A> メソッドです。  
  
 返されたオブジェクトの種類は、型のオブジェクトのいずれかを指定する必要があります、 <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の XML 表現を返します <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <returns>現在の XML 表現 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.XmlElement> の XML スキーマに準拠しているこのメソッドによって返されるオブジェクト、 `<Transform>` XMLDSIG 仕様のセクション 4.3.3.4 で定義された要素です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合に有効な入力値のある型の配列を取得、 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 、現在のメソッド <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <value>現在の有効な入力の型の配列 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。 これらの種類のいずれかのオブジェクトのみを渡すことができます、 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 、現在のメソッド <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される配列、 <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A> プロパティは、少なくとも 1 つの要素を含める必要がありますのですべて <xref:System.Security.Cryptography.Xml.Transform> オブジェクトは、少なくとも 1 つの型として有効な入力を受け入れる必要があります。  
  
 A <xref:System.Security.Cryptography.Xml.Transform> オブジェクト通常、次の種類の 1 つ以上の入力として受け取ります。 <xref:System.IO.Stream>, 、<xref:System.Xml.XmlDocument>, 、または <xref:System.Xml.XmlNodeList>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> 現在の変換に固有のコンテンツを指定するオブジェクト <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定した解析 <see cref="T:System.Xml.XmlNodeList" /> オブジェクトの変換に固有のコンテンツとして、 <see langword="&lt;Transform&gt;" /> 要素、現在の内部状態を有効にして <see cref="T:System.Security.Cryptography.Xml.Transform" /> と一致するオブジェクト、 <see langword="&lt;Transform&gt;" /> 要素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して処理のサブ要素を `<Transform>` 要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public abstract void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在に読み込む、入力 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</param>
        <summary>派生クラスでオーバーライドされた場合は、現在に指定された入力を読み込みます <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 入力オブジェクトの種類は内の型のいずれかを指定する必要があります、 <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合から可能な出力をある型の配列を取得、 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 、現在のメソッド <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
        <value>現在の有効な出力型の配列 <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトは次のいずれかのオブジェクトのみから型が返される、 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 、現在のメソッド <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される配列、 <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A> すべて変換が出力として少なくとも 1 つの型を生成する必要がありますので、プロパティは、少なくとも 1 つの要素を含める必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropagatedNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable PropagatedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable PropagatedNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Collections.Hashtable" /> 、シグネチャに反映される名前空間を含むオブジェクト。</summary>
        <value>A <see cref="T:System.Collections.Hashtable" /> 署名に反映される名前空間を含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML 名前空間を使用して、同じ名前を持つドキュメント内の別の要素を区別できます。  
  
 <xref:System.Collections.Hashtable> のキー、 <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A> プロパティは名前空間プレフィックス、および <xref:System.Collections.Hashtable> 値は、名前空間の Uniform Resource Identifier \(Uri\)。  
  
 <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A> 変換が呼び出される前に署名の計算やチェック中、プロパティが自動的に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> プロパティに設定されました <see langword="null" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の設定 <see cref="T:System.Xml.XmlResolver" /> オブジェクトです。</summary>
        <value>現在の <see cref="T:System.Xml.XmlResolver" /> オブジェクト。 このプロパティの既定値、 <see cref="T:System.Xml.XmlSecureResolver" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xml.XmlResolver> クラスは、外部の XML リソースを統一リソース識別子 \(URI\) という名前を解決します。 XML ファイルの作成元を信頼していない場合、URI によってという名前のコンピューター リソースにアクセスする XML ファイルを許可することがないできます。<xref:System.Security.Cryptography.Xml.Transform.Resolver%2A> プロパティでは、XML ファイルが異なるを指定しているコンピューター リソースへのアクセスのレベルを制御できます。 <xref:System.Xml.XmlResolver> オブジェクトです。 任意のアクセスを許可しないようにする場合このプロパティを設定することができます `null` \(`Nothing` Visual Basic で\)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返される出力は、現在の <see cref="T:System.Security.Cryptography.Xml.Transform" /> オブジェクトです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>