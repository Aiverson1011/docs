<Type Name="ScrollBar" FullName="System.Windows.Controls.Primitives.ScrollBar">
  <TypeSignature Language="C#" Value="public class ScrollBar : System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ScrollBar extends System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ScrollBar" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.RangeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Track", Type=typeof(System.Windows.Controls.Primitives.Track))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スライド式 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> \(位置は値に対応\) を備えたスクロール バーを提供するコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の図は、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールです。  
  
 b3af6b28-a89a-4bdf-a697-fd6cad42ca61  
  
 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールに含まれる、 <xref:System.Windows.Controls.Primitives.Track> コントロールです。<xref:System.Windows.Controls.Primitives.Track> コントロールでは、 <xref:System.Windows.Controls.Primitives.Thumb> コントロールと 2 つ <xref:System.Windows.Controls.Primitives.RepeatButton> コントロールです。 大きくなり、低下、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロール キーを押して、 <xref:System.Windows.Controls.Primitives.RepeatButton> を制御または移動して、 <xref:System.Windows.Controls.Primitives.Thumb>です。 既定の値の範囲、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> プロパティは、0 から 1 です。<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の直線距離を表す、 <xref:System.Windows.Controls.Primitives.Thumb> のエンドポイント間で、 <xref:System.Windows.Controls.Primitives.ScrollBar>です。 設定して、既定値の範囲を変更することができます、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> と <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティです。<xref:System.Windows.Controls.Primitives.ScrollBar.Orientation%2A> プロパティを決定するかどうか、 <xref:System.Windows.Controls.Primitives.ScrollBar> 縦または横に表示される、に対してこのプロパティを定義する必要があります、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールを表示します。  
  
 <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> 垂直方向の一番下に上からの値が高くなるよう向きが <xref:System.Windows.Controls.Primitives.ScrollBar> または左から右の水平方向に <xref:System.Windows.Controls.Primitives.ScrollBar>します。  
  
 <xref:System.Windows.Controls.Primitives.Track> 次の表のプロパティは、対応するバインドのターゲットを <xref:System.Windows.Controls.Primitives.ScrollBar> プロパティと、 <xref:System.Windows.Controls.Primitives.ScrollBar.Track%2A> プロパティが明示的に定義されていません。 明示的に定義する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar.Track%2A> プロパティには、バインディングは発生しません。  
  
|<xref:System.Windows.Controls.Primitives.Track> プロパティ|<xref:System.Windows.Controls.Primitives.ScrollBar> プロパティ|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.Primitives.Track.Maximum%2A?displayProperty=fullName>|<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A?displayProperty=fullName>|  
|<xref:System.Windows.Controls.Primitives.Track.Minimum%2A?displayProperty=fullName>|<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A?displayProperty=fullName>|  
|<xref:System.Windows.Controls.Primitives.Track.Value%2A?displayProperty=fullName>|<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A?displayProperty=fullName>|  
  
 アクセスできる、 <xref:System.Windows.Controls.Primitives.Track> の制御、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールを使用して、 <xref:System.Windows.Controls.Primitives.ScrollBar.Track%2A> プロパティです。  
  
 表示する <xref:System.Windows.UIElement> スクロール バーのあるボックス内のコンテンツを使用して、 <xref:System.Windows.Controls.ScrollViewer> コントロールです。  
  
## スクロール バー コントロールのカスタマイズ  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.Primitives.ScrollBar>, を参照してください [スクロール バーのスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/066ea45a-e27d-43b0-adfe-cce6934c22f5)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 次の例は、水平方向を作成する方法を示しています。 <xref:System.Windows.Controls.Primitives.ScrollBar> 値は 0 ~ 100 の範囲を持ちます。  
  
 [!code-xml[ScrollBarSnips\#ScrollBar](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml#scrollbar)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.RangeBase" />
    <altmember cref="T:System.Windows.Controls.Primitives.Track" />
    <altmember cref="T:System.Windows.Controls.Primitives.Thumb" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScrollBar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferScrollToHorizontalOffsetCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand DeferScrollToHorizontalOffsetCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand DeferScrollToHorizontalOffsetCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドに通知する、 <see cref="T:System.Windows.Controls.ScrollViewer" /> ユーザーがドラッグされる、 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 水平方向の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で提供されている値に <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがの親指をドラッグすると、 <xref:System.Windows.Controls.Primitives.ScrollBar>, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> 呼び出し <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand>です。 場合 <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> 返します `true`, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> そのコマンドを実行します。  場合 <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> 返します `false`, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> 実行、 <xref:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand>です。  
  
 <xref:System.Windows.Controls.ScrollViewer> このコマンドを使用して遅延スクロールできるようにします。<xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A?displayProperty=fullName> は `true` をドラッグして、 <xref:System.Windows.Controls.Primitives.Thumb> の <xref:System.Windows.Controls.Primitives.ScrollBar>, のコンテンツ、 <xref:System.Windows.Controls.ScrollViewer> を離すまで変更されない、 <xref:System.Windows.Controls.Primitives.Thumb>です。 遅延スクロールが有効になっている場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> 実行、 <xref:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand> の水平方向の <xref:System.Windows.Controls.Primitives.ScrollBar> ユーザーがドラッグしたときに、 <xref:System.Windows.Controls.Primitives.Thumb>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferScrollToVerticalOffsetCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand DeferScrollToVerticalOffsetCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand DeferScrollToVerticalOffsetCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドに通知する、 <see cref="T:System.Windows.Controls.ScrollViewer" /> ユーザーがドラッグされる、 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 垂直の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で提供されている値に <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがの親指をドラッグすると、 <xref:System.Windows.Controls.Primitives.ScrollBar>, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> 呼び出し <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand>です。 場合 <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> 返します `true`, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> そのコマンドを実行します。  場合 <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> 返します `false`, 、 <xref:System.Windows.Controls.Primitives.ScrollBar> 実行、 <xref:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand>です。  
  
 <xref:System.Windows.Controls.ScrollViewer> このコマンドを使用して遅延スクロールできるようにします。<xref:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled%2A?displayProperty=fullName> は `true` をドラッグして、 <xref:System.Windows.Controls.Primitives.Thumb> の <xref:System.Windows.Controls.Primitives.ScrollBar>, のコンテンツ、 <xref:System.Windows.Controls.ScrollViewer> を離すまで変更されない、 <xref:System.Windows.Controls.Primitives.Thumb>です。 遅延スクロールが有効になっている場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> 実行、 <xref:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand> 垂直方向の <xref:System.Windows.Controls.Primitives.ScrollBar> ユーザーがドラッグしたときに、 <xref:System.Windows.Controls.Primitives.Thumb>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が有効になっています。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で無効になって、 <see cref="T:System.Windows.Controls.ScrollViewer" /> 、表示領域よりも大きい以外の場合、コンテンツのサイズ <see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装ではこの設定 <xref:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore%2A> に `true` 場合にのみ、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> の値、 <xref:System.Windows.Controls.Primitives.ScrollBar> よりも大きい、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> 値と <xref:System.Windows.Controls.Primitives.ScrollBar> が有効になっています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDownCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand LineDownCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand LineDownCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を増やすことの垂直方向の値がわずかにその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> プロパティです。  
  
 このコマンドは、ユーザーは、下方向キーを押したときに発生します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_LineDownCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.LineDownCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#LineDownCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#linedowncommand)]
 [!code-xml[ScrollBarTemplateExample\#LineDownCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#linedowncommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />
      </Docs>
    </Member>
    <Member MemberName="LineLeftCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand LineLeftCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand LineLeftCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を小さくの水平方向にわずかな量の <see cref="T:System.Windows.Controls.Primitives.Track" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> プロパティです。  
  
 このコマンドは、ユーザーが左 <xref:System.Windows.Controls.Primitives.RepeatButton>します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_LineLeftCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.LineLeftCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#LineLeftCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#lineleftcommand)]
 [!code-xml[ScrollBarTemplateExample\#LineLeftCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#lineleftcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />
      </Docs>
    </Member>
    <Member MemberName="LineRightCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand LineRightCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand LineRightCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を増やすことの水平方向にわずかな量の <see cref="T:System.Windows.Controls.Primitives.Track" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> プロパティです。  
  
 このコマンドは、ユーザーが右 <xref:System.Windows.Controls.Primitives.RepeatButton>します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_LineRightCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.LineRightCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#LineRightCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#linerightcommand)]
 [!code-xml[ScrollBarTemplateExample\#LineRightCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#linerightcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />
      </Docs>
    </Member>
    <Member MemberName="LineUpCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand LineUpCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand LineUpCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を小さくの垂直方向の値がわずかにその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドの削減、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> プロパティです。  
  
 このコマンドは、ユーザーは、上方向キーを押したときに発生します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_LineUpCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.LineUpCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#LineUpCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#lineupcommand)]
 [!code-xml[ScrollBarTemplateExample\#LineUpCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#lineupcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> のビジュアル ツリーを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装でも設定、 <xref:System.Windows.Controls.Primitives.ScrollBar.Track%2A> プロパティを <xref:System.Windows.Controls.Primitives.Track> で定義されている、 <xref:System.Windows.Controls.Primitives.ScrollBar> テンプレートです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosing">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuClosing(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> に発生するイベントと、 <see cref="T:System.Windows.Controls.ContextMenu" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ContextMenu> の <xref:System.Windows.Controls.Primitives.ScrollBar> を変更するためのオプションを提供、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> に発生するイベントと、 <see cref="T:System.Windows.Controls.ContextMenu" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が開きます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ContextMenu> の <xref:System.Windows.Controls.Primitives.ScrollBar> を変更するためのオプションを提供、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> この <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装を変更、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar> の場所を <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> SHIFT キーを押したときに発生するイベントです。 イベントの処理を設定して <xref:System.Windows.RoutedEventArgs.Handled%2A> イベント データの `e` に `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装は、マウスのクリックの位置を保存できるように、 <xref:System.Windows.Controls.Primitives.ScrollBar> をスクロールして、位置への応答にある、 <xref:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand>です。  
  
   
  
## 例  
 A <xref:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand> ユーザーが選択したときに発生 **スクロールここ** 、ユーザーが上でマウスの右ボタンを押したときに表示されるメニューから、 <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 水平または垂直に表示されます。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Orientation" /> 列挙値を定義するかどうか、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 水平または垂直に表示されます。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Vertical" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.Orientation%2A> プロパティを <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールです。  
  
 [!code-csharp[ScrollBarSnips\#Orientation](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml.cs#orientation)]
 [!code-vb[ScrollBarSnips\#Orientation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ScrollBarSnips/visualbasic/window1.xaml.vb#orientation)]
 [!code-xml[ScrollBarSnips\#Orientation](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml#orientation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageDownCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand PageDownCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand PageDownCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を増加させる縦方向に膨大な量でその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> プロパティです。  
  
 このコマンドは、ユーザーは、PAGE DOWN キーを押したときに発生します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_PageDownCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.PageDownCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#PageDownCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#pagedowncommand)]
 [!code-xml[ScrollBarTemplateExample\#PageDownCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#pagedowncommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />
      </Docs>
    </Member>
    <Member MemberName="PageLeftCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand PageLeftCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand PageLeftCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を小さくの水平方向の消費量がその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> プロパティです。  
  
 このコマンドは、ユーザーの左側に表示されるページのボタンを押したときに、 <xref:System.Windows.Controls.Primitives.Thumb>です。 次の図に、ページのボタン、 <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 613646a0-edd4-40fd-aaee-dd9ad1b9f0a6  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_PageLeftCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.PageLeftCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#PageLeftCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#pageleftcommand)]
 [!code-xml[ScrollBarTemplateExample\#PageLeftCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#pageleftcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />
      </Docs>
    </Member>
    <Member MemberName="PageRightCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand PageRightCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand PageRightCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を増やすことの水平方向の消費量がその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンド、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> プロパティです。  
  
 このコマンドは、ユーザーの右側に表示されるページのボタンを押したときに、 <xref:System.Windows.Controls.Primitives.Thumb>です。 次の図に、ページのボタン、 <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 613646a0-edd4-40fd-aaee-dd9ad1b9f0a6  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_PageRightCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.PageRightCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#PageRightCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#pagerightcommand)]
 [!code-xml[ScrollBarTemplateExample\#PageRightCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#pagerightcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />
      </Docs>
    </Member>
    <Member MemberName="PageUpCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand PageUpCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand PageUpCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の値を小さくの垂直方向の消費量がその <see cref="T:System.Windows.Controls.Primitives.Track" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドの削減、 <xref:System.Windows.Controls.Primitives.Track.Value%2A> の <xref:System.Windows.Controls.Primitives.Track> で、 <xref:System.Windows.Controls.Primitives.ScrollBar> の値によって、 <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> プロパティです。  
  
 このコマンドは、ユーザーは、PAGEUP キーを押したときに発生します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_PageUpCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.PageUpCommand**`"/>`  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand> カスタム <xref:System.Windows.Controls.Primitives.ScrollBar> スタイル テンプレートです。  
  
 [!code-xml[ScrollBarTemplateExample\#PageUpCommand](~/samples/snippets/xaml/VS_Snippets_Wpf/ScrollBarTemplateExample/XAML/Window1.xaml#pageupcommand)]
 [!code-xml[ScrollBarTemplateExample\#PageUpCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarTemplateExample/CS/Window1.xaml#pageupcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />
        <altmember cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.Primitives.ScrollEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.Primitives.ScrollEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.ScrollEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>いずれかが発生したか、他にもコンテンツがスクロールで、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 、ユーザーが移動すると、 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> マウスを使用しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベント通常数回発生する場合、ユーザーが変更されたとき、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar> をドラッグして、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A>です。 としてこのイベントが発生した回数に制限はありません、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 位置をドラッグします。  
  
 このイベントは、いつ発生するか、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Primitives.ScrollBar> コードでコントロールが変更されました。  
  
<a name="routedEventInfo_Scroll"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.Controls.Primitives.ScrollEventHandler>|  
  
   
  
## 例  
 例を次のイベント ハンドラーを割り当てる方法、 <xref:System.Windows.Controls.Primitives.ScrollBar.Scroll> イベントを <xref:System.Windows.Controls.Primitives.ScrollBar> コントロール、およびコードで、イベント ハンドラーを定義する方法です。  
  
 [!code-xml[ScrollBarSnips\#Scroll](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml#scroll)]  
  
 [!code-csharp[ScrollBarSnips\#ScrollHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml.cs#scrollhandler)]
 [!code-vb[ScrollBarSnips\#ScrollHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ScrollBarSnips/visualbasic/window1.xaml.vb#scrollhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ScrollEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ScrollEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ScrollEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollHereCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollHereCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollHereCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 開かれたマウス クリックのポイントに、 <see cref="T:System.Windows.Controls.ContextMenu" /> で、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、ユーザーが選択した **スクロールここ** から、 <xref:System.Windows.Controls.ContextMenu> オプション。<xref:System.Windows.Controls.ContextMenu> の <xref:System.Windows.Controls.Primitives.ScrollBar> 上にマウス ポインターを置くと表示されます、 <xref:System.Windows.Controls.Primitives.ScrollBar> がマウスの右ボタンを押したとします。 このメニューにはスクロールするためのオプション、 <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 このコマンドでは、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部には、 <xref:System.Windows.Controls.ScrollViewer> を制御して、によって実行される、 <xref:System.Windows.Controls.ScrollViewer>です。  
  
<a name="xamlTextUsage_ScrollHereCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="` **ScrollBar.ScrollHereCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToBottomCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToBottomCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToBottomCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に、 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 垂直方向の <xref:System.Windows.Controls.Primitives.ScrollBar>, 、ctrl キーを押しながら END キーを押したときに、この移動が発生します。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_ScrollToBottomCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToBottomCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToEndCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToEndCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToEndCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツの右下へスクロールするコマンド、 <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドでのみ使用、 <xref:System.Windows.Controls.ScrollViewer> コントロールです。  
  
<a name="xamlTextUsage_ScrollToEndCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToEndCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToHomeCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToHomeCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToHomeCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツの左上隅をコマンド、 <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドでのみ使用、 <xref:System.Windows.Controls.ScrollViewer> コントロールです。  
  
<a name="xamlTextUsage_ScrollToHomeCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToHomeCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffsetCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToHorizontalOffsetCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToHorizontalOffsetCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平方向にスクロール コマンド <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で、 <see cref="T:System.Windows.Controls.ScrollViewer" /> で提供されている値に <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドでのみ使用、 <xref:System.Windows.Controls.ScrollViewer> コントロールです。  
  
<a name="xamlTextUsage_ScrollToHorizontalOffsetCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToHorizontalOffsetCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToLeftEndCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToLeftEndCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToLeftEndCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に、 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> の水平方向の値 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、ユーザーが水平方向の ctrl キーを押しながら HOME キーを押すと <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_ScrollToLeftEndCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="` **ScrollBar.ScrollToLeftEndCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToRightEndCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToRightEndCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToRightEndCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に、 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> の水平方向の値 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、ユーザーが水平方向の ctrl キーを押しながら END キーを押すと <xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_ScrollToRightEndCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="` **ScrollBar.ScrollToRightEndCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToTopCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToTopCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToTopCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スクロール コマンド、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に、 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 垂直方向の値 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 垂直方向の <xref:System.Windows.Controls.Primitives.ScrollBar>, 、ctrl キーを押しながら HOME キーを押したときに、この移動が発生しました。  
  
 実装する場合、 <xref:System.Windows.Controls.Primitives.ScrollBar> の一部として、 <xref:System.Windows.Controls.ScrollViewer> コントロール、 <xref:System.Windows.Controls.ScrollViewer> このコマンドを実行します。  
  
<a name="xamlTextUsage_ScrollToTopCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToTopCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffsetCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand ScrollToVerticalOffsetCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand ScrollToVerticalOffsetCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>垂直方向にスクロール コマンド <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> で、 <see cref="T:System.Windows.Controls.ScrollViewer" /> で提供されている値に <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドでのみ使用、 <xref:System.Windows.Controls.ScrollViewer> コントロールです。  
  
<a name="xamlTextUsage_ScrollToVerticalOffsetCommand"></a>   
## XAML テキストの使用方法  
 `<` *オブジェクト* *プロパティ*`="`**ScrollBar.ScrollToVerticalOffsetCommand**`"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.Track Track { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.Track Track" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ScrollBar.Track" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.Track</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Controls.Primitives.Track" /> の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Track" /> と共に使用される、 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般的なスタイルのテンプレート、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールには、 <xref:System.Windows.Controls.Primitives.Track> で 2 つのいずれかの側に囲まれているコントロール <xref:System.Windows.Controls.Button> コントロールです。  
  
   
  
## 例  
 次の例にアクセスする方法、 <xref:System.Windows.Controls.Primitives.Track> と共に使用されるコントロール、 <xref:System.Windows.Controls.Primitives.ScrollBar> コントロールです。  
  
 [!code-csharp[ScrollBarSnips\#Track](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml.cs#track)]
 [!code-vb[ScrollBarSnips\#Track](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ScrollBarSnips/visualbasic/window1.xaml.vb#track)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportSize">
      <MemberSignature Language="C#" Value="public double ViewportSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在表示されているスクロール可能な内容の量を取得または設定します。</summary>
        <value>現在表示されているスクロール可能なコンテンツの量。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用される単位<xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSize%2A>コンテンツの長さの記述に使用される同じ単位です。 いくつかの例には、テキストの行またはページのテキストが含まれます。  
  
 値、<xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSize%2A>のサイズを計算するプロパティが使用される、<xref:System.Windows.Controls.Primitives.Thumb>スライド式の値インジケーターのとして表示されるコントロールを<xref:System.Windows.Controls.Primitives.ScrollBar>コントロール。<xref:System.Windows.Controls.Primitives.Thumb>コントロールのサイズの量を表す、<xref:System.Windows.Controls.ScrollViewer>表示されているコントロールのコンテンツ。  場合の 25%、<xref:System.Windows.Controls.ScrollViewer>コントロールのコンテンツが表示されて、<xref:System.Windows.Controls.Primitives.Thumb>のトラックの 25% を占める、<xref:System.Windows.Controls.Primitives.ScrollBar>です。  
  
 どの単位を決定できます<xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSize%2A>使用します。  このプロパティを設定するときに、以下のことを確認、 <xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSize%2A>、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>、および<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>プロパティが同じ単位を使用します。  
  
 次の図は、どのように<xref:System.Windows.Controls.Primitives.Thumb>サイズが表示されているコンテンツの量を反映します。  
  
 0f2f259e-27a9-4984-afe0-b6cf8b4b72df  
  
<a name="dependencyPropertyInfo_ViewportSize"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
   
  
## 例  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.Primitives.ScrollBar.ViewportSize%2A>上、<xref:System.Windows.Controls.Primitives.ScrollBar>コントロール。  
  
 [!code-csharp[ScrollBarSnips\#Viewport](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml.cs#viewport)]
 [!code-vb[ScrollBarSnips\#Viewport](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ScrollBarSnips/visualbasic/window1.xaml.vb#viewport)]
 [!code-xml[ScrollBarSnips\#Viewport](~/samples/snippets/csharp/VS_Snippets_Wpf/ScrollBarSnips/CSharp/Window1.xaml#viewport)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewportSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewportSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>