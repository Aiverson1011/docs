<Type Name="Popup" FullName="System.Windows.Controls.Primitives.Popup">
  <TypeSignature Language="C#" Value="public class Popup : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Popup extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.Popup" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Child")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コンテンツを含むポップアップ ウィンドウを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 **コンテンツ モデル**:  <xref:System.Windows.Controls.Primitives.Popup> は 1 つのコンテンツ プロパティがあります: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>です。 A <xref:System.Windows.Controls.Primitives.Popup> いずれか 1 つの子の最大文字数は、 <xref:System.Windows.UIElement>です。  
  
 次の図は、 <xref:System.Windows.Controls.Primitives.Popup> を持つコントロール、 <xref:System.Windows.Controls.Button> の上位にします。  
  
 03cf4041-d86c-411a-87a2-d2b8670434f6  
  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。<xref:System.Windows.Controls.Primitives.Popup> が表示される画面で、それが再配置されない場合は、親の位置を変更します。  
  
 A <xref:System.Windows.Controls.Primitives.Popup> 画面に独自のウィンドウにそのコンテンツを表示します。 A <xref:System.Windows.Controls.Primitives.Popup> コントロールは、アニメーションをサポートしているときに、 <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> にプロパティが設定されている `true` と、完全信頼でアプリケーションを実行します。 完全信頼で実行されているアプリケーションは、システム リソースへの完全なアクセスし、通常は、ユーザーのシステムにインストールします。 詳細については、次を参照してください。[セキュリティ \(WPF\)](http://msdn.microsoft.com/ja-jp/ee1baea0-3611-4e36-9ad6-fcd5205376fb)します。  
  
 ビットマップと不透明度の効果の内容を <xref:System.Windows.Controls.Primitives.Popup>, に直接影響を設定する必要があります、 <xref:System.Windows.Controls.Primitives.Popup> コンテンツです。 内容、 <xref:System.Windows.Controls.Primitives.Popup> に設定されている効果を継承しない、 <xref:System.Windows.Controls.Primitives.Popup> または他の要素の上にある親ウィンドウを制御します。  
  
 A <xref:System.Windows.Controls.Primitives.Popup> 既定でそのコンテンツにサイズが調整されます。 これが発生すると、適用、 <xref:System.Windows.UIElement.RenderTransform%2A> ビットマップ効果がありますか、 <xref:System.Windows.Controls.Primitives.Popup> 表示されていませんでした。 これは、コンテンツの既定のサイズが効果を表示するのに十分な領域を提供しないために発生します。 多くの領域が必要な場合は、周囲に余白を定義することができます、 <xref:System.Windows.Controls.Primitives.Popup> コンテンツは、コントロールで使用できる領域を増やします。  
  
 <xref:System.Windows.FrameworkElement.Parent%2A> プロパティを設定する必要があります、 <xref:System.Windows.Controls.Primitives.Popup> で使用する場合、 [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)]です。  
  
 ツールヒントを作成するには、使用、 <xref:System.Windows.Controls.ToolTip> と <xref:System.Windows.Controls.ToolTipService> クラスです。 詳細については、次を参照してください。 [ToolTip の概要](http://msdn.microsoft.com/ja-jp/f06c1603-e9cb-4809-8a62-234607fc52f7)します。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Controls.Primitives.Popup> コントロールです。  
  
 [!code-xml[PopupSimple\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml#2)]  
  
 [!code-csharp[PopupSimple\#CreatePopup](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#createpopup)]
 [!code-vb[PopupSimple\#CreatePopup](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSimple/VisualBasic/Window1.xaml.vb#createpopup)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
    <altmember cref="T:System.Windows.Controls.ToolTip" />
    <altmember cref="T:System.Windows.Controls.ToolTipService" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Popup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに透過的なコンテンツを含めることができるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールに透過的なコンテンツを含めることができル場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust. An application that runs with full trust has complete access to system resources and is typically installed on the local system. For more information, see[Security \(WPF\)](http://msdn.microsoft.com/ja-jp/ee1baea0-3611-4e36-9ad6-fcd5205376fb).  
  
 This property cannot be set to **languageKeyword tag is not supported!!!!**  
 when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].  
  
 If the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to **languageKeyword tag is not supported!!!!**  
 in an application that does not run in full trust, the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property value is changed to **languageKeyword tag is not supported!!!!**  
. An application that is hosted in a browser is an example of an application that does not run in full trust.  
  
<a name="dependencyPropertyInfo_AllowsTransparency"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property on a <xref:System.Windows.Controls.Primitives.Popup> control.  
  
 [!code-csharp[PopupSnips\#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips\#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xml[PopupSnips\#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for setting this property to **languageKeyword tag is not supported!!!!**  
. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Windows.Window.AllowsTransparency" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> 依存関係プロパティ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> 依存関係プロパティ。  
  
   
  
## 例  
 [依存関係プロパティの概要](http://msdn.microsoft.com/ja-jp/d119d00c-3afb-48d6-87a0-c4da4f83dee5)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールのコンテンツを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの <see cref="T:System.Windows.UIElement" /> コンテンツ。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **Content Model**: The <xref:System.Windows.Controls.Primitives.Popup.Child%2A> property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control. A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content. For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.  
  
 When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to **languageKeyword tag is not supported!!!!**  
.  
  
<a name="dependencyPropertyInfo_Child"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 The following example shows how to add content to a <xref:System.Windows.Controls.Primitives.Popup> control.  
  
 [!code-csharp[PopupSnips\#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#child)]
 [!code-vb[PopupSnips\#Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#child)]
 [!code-xml[PopupSnips\#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ChildProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ChildProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.ChildProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Closed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティに対する変更を <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.Primitives.Popup> が開いたときおよび閉じたを切り替えることにより、 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> プロパティです。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを定義する方法、 <xref:System.Windows.Controls.Primitives.Popup.Closed> イベントです。  
  
 [!code-csharp[PopupSnips\#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#closed)]
 [!code-vb[PopupSnips\#Closed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#closed)]
 [!code-xml[PopupSnips\#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#closed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Opened" />
      </Docs>
    </Member>
    <Member MemberName="CreateRootPopup">
      <MemberSignature Language="C#" Value="public static void CreateRootPopup (System.Windows.Controls.Primitives.Popup popup, System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateRootPopup(class System.Windows.Controls.Primitives.Popup popup, class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="popup" Type="System.Windows.Controls.Primitives.Popup" />
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="popup">
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> 子コンテンツを追加します。</param>
        <param name="child">
          <see cref="T:System.Windows.UIElement" /> 子コンテンツです。</param>
        <summary>子要素をアタッチ、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既存のコントロールと同じ機能を備えも、動作のカスタム コントロールを作成する、 <xref:System.Windows.Controls.Primitives.Popup>です。  コントロールと同様に動作を行うことができます、 <xref:System.Windows.Controls.Primitives.Popup> 追加することで、 <xref:System.Windows.Controls.Primitives.Popup> コントロールと呼び出しを <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A> メソッドです。  
  
 このメソッドは割り当てます `child` 子プロパティにし、次のプロパティをバインド `child`します。  
  
-   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>  
  
 するために、コントロールでの依存関係プロパティと同じ方法を使用するこれら実装する必要があります、 <xref:System.Windows.Controls.Primitives.Popup>です。 詳細については、次を参照してください。 [カスタム依存関係プロパティ](http://msdn.microsoft.com/ja-jp/e6bfcfac-b10d-4f58-9f77-a864c2a2938f)します。  
  
 呼び出すと <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A>, 、`child` の子にすることはできません、 <xref:System.Windows.UIElement>です。 また、 `PlacementTarget` このメソッドを呼び出す前に、コントロールに設定する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを配置する代理ハンドラーのメソッドを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの配置情報を提供する <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> デリゲート メソッド。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 The following example shows how to set a <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A> delegate.  
  
 [!code-csharp[PopupCustomPlacement\#DelegateDefinition](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegatedefinition)]
 [!code-vb[PopupCustomPlacement\#DelegateDefinition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegatedefinition)]  
  
 [!code-csharp[PopupCustomPlacement\#DelegateInstance](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegateinstance)]
 [!code-vb[PopupCustomPlacement\#DelegateInstance](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegateinstance)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>論理上の親を返す、 <see cref="T:System.Windows.Controls.Primitives.Popup" />です。</summary>
        <returns>場合、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 定義されている親を持たないと <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> は <see langword="null" />, 、 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> が返されます。 それ以外の場合、戻り値と同じ <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> ドロップ シャドウ効果が表示されます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が影付きで表示されているそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ドロップ シャドウ効果が表示される、 <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> プロパティおよび <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName> にプロパティが設定されて `true`します。  
  
<a name="dependencyPropertyInfo_HasDropShadow"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例の値を取得する方法を示しています、 <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> プロパティです。  
  
 [!code-csharp[PopupSnips\#HasDropShadow](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#hasdropshadow)]
 [!code-vb[PopupSnips\#HasDropShadow](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#hasdropshadow)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 [依存関係プロパティの概要](http://msdn.microsoft.com/ja-jp/d119d00c-3afb-48d6-87a0-c4da4f83dee5)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポイントを取得またはターゲットの基点とポップアップの配置の水平方向の距離。</summary>
        <value>ターゲットの基準とポップアップ配置ポイント間の水平方向の距離。 ターゲットの基準とポップアップ配置ポイントについては、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## XAML 属性の使用方法  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontallOffset"></a>   
## XAML 値  
 `double`  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値。 これは、 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 測定します。 文字列を明示的に小数点を含める必要はありません。 値など `1` は許容されます。  
  
 同じ <xref:System.Double> 範囲の制限がこのトピックのプロパティの値」に記載されているものとします。  
  
 `qualifiedDouble`  
 A `double` 値では、次の表では、前述したよう後に 1 つの単位の次の宣言文字列: `px`, 、`in`, 、`cm`, 、または `pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 \= 96px で  
  
 `cm` センチメートルを表します。1cm\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\(96\/72\) px  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.Primitives.Popup> し、設定、 <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> と <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> プロパティを 20 にします。<xref:System.Windows.Controls.Primitives.Popup.Placement%2A> にプロパティが設定されている <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> \(既定値は\)、ターゲットの基準は、対象となる領域の左下隅、ポップアップ配置ポイントの左上隅では、 <xref:System.Windows.Controls.Primitives.Popup>です。  
  
 [!code-xml[PopupPositionSnippets\#5](~/samples/snippets/xaml/VS_Snippets_Wpf/PopupPositionSnippets/XAML/Window1.xaml#5)]
 [!code-xml[PopupPositionSnippets\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が表示されます。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールで使用する場合、 <xref:System.Windows.Controls.Primitives.Popup> の既定のスタイルの一部として、バインド、 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.Popup> コントロールのプロパティをします。 たとえば、 <xref:System.Windows.Controls.ComboBox> バインドできる、 <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> プロパティを <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.Popup>です。 これにより、タイミングを制御するためのロジックが簡略化、 <xref:System.Windows.Controls.Primitives.Popup> が表示されます。  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[PopupSnips\#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#isopen)]
 [!code-vb[PopupSnips\#IsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#isopen)]
 [!code-xml[PopupSnips\#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#isopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>論理上の子要素にアクセスするのに使用できる列挙子を取得、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> の論理上の子要素にアクセスするように使用できる、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテンツを追加すると、 <xref:System.Windows.Controls.Primitives.Popup> コントロール、 <xref:System.Windows.Controls.Primitives.Popup> コントロールがコンテンツに論理上の親になります。 同様に、 <xref:System.Windows.Controls.Primitives.Popup> コンテンツがの論理の子であると見なされる、 <xref:System.Windows.Controls.Primitives.Popup>です。 子コンテンツが格納しているビジュアル ツリーに追加されません、 <xref:System.Windows.Controls.Primitives.Popup> コントロールです。 独自のビジュアルを持つ別のウィンドウで、子コンテンツをレンダリングする代わりに、ツリーの場合、 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> にプロパティが設定されている `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">この要素は、子プロセスに与えることが利用可能なサイズです。 要素のサイズはどのようなコンテンツを利用するのにことができますを示すために、値として infinity を使用できます。</param>
        <summary>必要なサイズの決定、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 論理上の親のビジュアル ツリー内でコンテンツです。</summary>
        <returns>A <see cref="T:System.Windows.Size" /> を持つ構造体、 <see cref="P:System.Windows.Size.Height" /> と <see cref="P:System.Windows.Size.Width" /> ゼロ \(0\) に一致する両方のプロパティです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは常に返します、 <xref:System.Windows.Size> ため幅と高さは 0 \(ゼロ\) を持つ <xref:System.Windows.Controls.Primitives.Popup> 論理親のビジュアル ツリー内のコンテンツが配置されていないか、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>です。 子コンテンツは、ビジュアル ツリーを持つ別のウィンドウで作成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>応答時の値、 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティから変更 <see langword="true" /> に <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント引数。</param>
        <summary>条件に応答の値、 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> からプロパティが変更された <see langword="false" /> に <see langword="true" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装によって、 <xref:System.Windows.Controls.Primitives.Popup> 外部マウス イベントが発生したときに閉じ、 <xref:System.Windows.Controls.Primitives.Popup> ときに、 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> プロパティに設定されて `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装によって、 <xref:System.Windows.Controls.Primitives.Popup> 外部マウス イベントが発生したときに閉じ、 <xref:System.Windows.Controls.Primitives.Popup> ときに、 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> プロパティに設定されて `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装によって、 <xref:System.Windows.Controls.Primitives.Popup> 外部マウス イベントが発生したときに閉じ、 <xref:System.Windows.Controls.Primitives.Popup> ときに、 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> プロパティに設定されて `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装によって、 <xref:System.Windows.Controls.Primitives.Popup> 外部マウス イベントが発生したときに閉じ、 <xref:System.Windows.Controls.Primitives.Popup> ときに、 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> プロパティに設定されて `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Opened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティに対する変更を <see langword="true" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.Primitives.Popup> が開いたときおよび閉じたを切り替えることにより、 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> プロパティです。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを定義する方法、 <xref:System.Windows.Controls.Primitives.Popup.Opened> イベントです。  
  
 [!code-csharp[PopupSnips\#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#opened)]
 [!code-vb[PopupSnips\#Opened](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#opened)]
 [!code-xml[PopupSnips\#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#opened)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Closed" />
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の向き、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールが開きとき、に、コントロールの動作を指定し、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> と画面の境界を重複を制御します。</summary>
        <value>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> の向きを決定する列挙値、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 制御とコントロールが開き、コントロールが画面の境界と対話する方法を指定します。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。  
  
 場合、 <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> プロパティは `true`, で、設定 <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> に <xref:System.Windows.Controls.Primitives.PlacementMode.Left> または <xref:System.Windows.Controls.Primitives.PlacementMode.Right> の位置を反転させます、 <xref:System.Windows.Controls.Primitives.Popup>。 つまり、 <xref:System.Windows.Controls.Primitives.Popup> と <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> に設定 <xref:System.Windows.Controls.Primitives.PlacementMode.Left> の右端に揃える <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> と <xref:System.Windows.Controls.Primitives.Popup> と <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> に設定 <xref:System.Windows.Controls.Primitives.PlacementMode.Right> の左端と右端に揃えて配置 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>します。  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例は、4 つ作成 <xref:System.Windows.Controls.Primitives.Popup> イメージに対して相対的な制御をします。 各 <xref:System.Windows.Controls.Primitives.Popup> が配置プロパティの値が異なる。  
  
 [!code-xml[PopupPositionSnippets\#3](~/samples/snippets/xaml/VS_Snippets_Wpf/PopupPositionSnippets/XAML/Window1.xaml#3)]
 [!code-xml[PopupPositionSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定基準となる四角形、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> が開くと、コントロールを配置します。</summary>
        <value>配置に使用する四角形、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例のセット、 <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.Popup>です。<xref:System.Windows.Rect.X%2A>, 、<xref:System.Windows.Rect.Y%2A>, 、<xref:System.Windows.Rect.Width%2A>, 、および <xref:System.Windows.Rect.Height%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> 50 件、50、50 と 100 の場合は、それぞれします。<xref:System.Windows.Controls.Primitives.Popup> の境界を基準とは、 <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> プロパティです。<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> プロパティでは、アプリケーションで表示されている要素が作成されません。 例を作成し、 <xref:System.Windows.Shapes.Rectangle> を表す同じ境界内で、 <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>です。  
  
 [!code-xml[PopupPositionSnippets\#6](~/samples/snippets/xaml/VS_Snippets_Wpf/PopupPositionSnippets/XAML/Window1.xaml#6)]
 [!code-xml[PopupPositionSnippets\#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippets/CS/Window1.xaml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基準となる要素取得または設定、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 開くときに配置します。</summary>
        <value>
          <see cref="T:System.Windows.UIElement" /> の論理親である、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.Primitives.Popup> の子は、 <xref:System.Windows.Controls.Canvas>, 、設定と <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> に `ellipse1`, ポップアップに相対的であるため、 <xref:System.Windows.Shapes.Ellipse>です。  
  
 [!code-xml[PopupPositionSnippets\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/PopupPositionSnippets/XAML/Window1.xaml#2)]
 [!code-xml[PopupPositionSnippets\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippets/CS/Window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupAnimation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PopupAnimation PopupAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PopupAnimation PopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを開く場合と、閉じる場合に使用するアニメーションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを開く場合と、閉じる場合に使用するアニメーションを定義する <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> 列挙値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.Primitives.Popup> ことのみをアニメーション化するときに、 <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> にプロパティが設定されている `true`します。 アプリケーションを作成する必要があります、 <xref:System.Windows.Controls.Primitives.Popup> コントロールを完全信頼で実行します。  
  
 場合、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> がアニメーション化、 <xref:System.Windows.Controls.Primitives.Popup> アニメーションで表示されません。  
  
<a name="dependencyPropertyInfo_PopupAnimation"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[PopupSnips\#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips\#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xml[PopupSnips\#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 [!code-csharp[PopupSnips\#Animation](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#animation)]
 [!code-vb[PopupSnips\#Animation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#animation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
      </Docs>
    </Member>
    <Member MemberName="PopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールのフォーカスが不要になったときに、コントロールが閉じます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを閉じるときに <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> にプロパティが設定されている <see langword="false" />; <see langword="false" /> 場合、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを閉じるときに、マウスまたはキーボード イベントを別に行われます、 <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールです。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> にプロパティが設定されている `true`, 、<xref:System.Windows.Controls.Primitives.Popup> が確立するには明示的に閉じられるまで、 <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> プロパティを `false`します。<xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> は `false`, 、 <xref:System.Windows.Controls.Primitives.Popup> コントロールは外側のこれらのイベントのいずれかの発生を確認するすべてのマウスとキーボード イベントをインターセプト、 <xref:System.Windows.Controls.Primitives.Popup> コントロールです。  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[PopupSnips\#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#staysopen)]
 [!code-vb[PopupSnips\#StaysOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#staysopen)]
 [!code-xml[PopupSnips\#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#staysopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">子として追加するオブジェクト。</param>
        <summary>このメンバーは、WPF インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加する文字列。</param>
        <summary>このメンバーをサポートしています、 WPF インフラストラクチャ コードから直接使用するものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはターゲットの基準とポップアップ配置ポイント間の垂直方向の距離を設定します。</summary>
        <value>ターゲットの基点とポップアップ配置ポイント間の垂直距離です。 ターゲットの基準とポップアップ配置ポイントについては、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ポップアップを配置するには、設定、 <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, 、<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, 、および <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> プロパティです。 詳細については、次を参照してください。 [ポップアップの配置動作](http://msdn.microsoft.com/ja-jp/fbf642e9-f670-4efd-a7af-a67468a1c8e1)します。  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## XAML 属性の使用方法  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## XAML 値  
 `double`  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値。 これは、 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 測定します。 文字列を明示的に小数点を含める必要はありません。 値など `1` は許容されます。  
  
 同じ <xref:System.Double> 範囲の制限がこのトピックのプロパティの値」に記載されているものとします。  
  
 `qualifiedDouble`  
 A `double` 値では、次の表では、前述したよう後に 1 つの単位の次の宣言文字列: `px`, 、`in`, 、`cm`, 、または `pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 \= 96px で  
  
 `cm` センチメートルを表します。1cm\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.Primitives.Popup> し、設定、 <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> と <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> プロパティを 20 にします。<xref:System.Windows.Controls.Primitives.Popup.Placement%2A> にプロパティが設定されている <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> \(既定値は\)、ターゲットの基準は、対象領域の左下隅、ポップアップ配置ポイントの左上隅では、 <xref:System.Windows.Controls.Primitives.Popup>です。  
  
 [!code-xml[PopupPositionSnippets\#5](~/samples/snippets/xaml/VS_Snippets_Wpf/PopupPositionSnippets/XAML/Window1.xaml#5)]
 [!code-xml[PopupPositionSnippets\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>