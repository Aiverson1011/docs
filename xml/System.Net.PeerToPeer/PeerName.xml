<Type Name="PeerName" FullName="System.Net.PeerToPeer.PeerName">
  <TypeSignature Language="C#" Value="public class PeerName : IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerName extends System.Object implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.PeerName&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerName" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ピア ツー ピアを定義する値を指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトです。 ピア名は、通常、ピア リソースを識別するために使用される文字列です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.PeerToPeer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string remotePeerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string remotePeerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remotePeerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="remotePeerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> インスタンスとしてエンコードするためのピア名を含みます。</param>
        <summary>型 <see cref="T:System.Net.PeerToPeer.PeerName" /> の新しいオブジェクトを、指定された完全修飾のピア名 <see cref="T:System.String" /> 値で初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">指定された <see cref="T:System.String" /> は有効な <see cref="T:System.Net.PeerToPeer.PeerName" /> ではありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="remotePeerName" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">このインスタンスの逆シリアル化に必要なデータを格納するオブジェクトへの参照。</param>
        <param name="context">データを逆シリアル化するための手段を提供するコンテキスト。 シリアル化されたデータのソースとも呼ばれます。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、<see cref="T:System.Net.PeerToPeer.PeerName" /> をシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This constructor is required for deserialization of this type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">1 つ以上のパラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classifier, valuetype System.Net.PeerToPeer.PeerNameType peerNameType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classifier" Type="System.String" />
        <Parameter Name="peerNameType" Type="System.Net.PeerToPeer.PeerNameType" />
      </Parameters>
      <Docs>
        <param name="classifier">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> としてエンコードするためのピア名を含む <see cref="T:System.String" />。</param>
        <param name="peerNameType">作成するピア名の種類を指定する <see cref="T:System.Net.PeerToPeer.PeerNameType" /> 列挙値。</param>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerName" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer. It also specifies whether the peer name is secured or unsecured.  
  
 This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> には 1 つまたは複数の無効な文字が含まれています。</exception>
        <exception cref="T:System.ArgumentNullException">1 つ以上のパラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.PeerName" /> の基礎として使用される既定の ID を取得できませんでした。  
  
-   <see cref="T:System.Net.PeerToPeer.PeerName" /> は作成できませんでした。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定する文字列を返す、 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> で使用される <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトです。</summary>
        <value>指定した認証の部分を含んでいる文字列 <see cref="T:System.Net.PeerToPeer.PeerName" />します。 セキュリティで保護されたピア名は、このプロパティは、40 文字の 16 進数文字列としての公開キーを表します。 セキュリティ保護されていないピア名は、このプロパティはゼロ \(0\) に設定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 所有者、またはピアのホストには、セキュリティで保護されたピア名を登録できます。 ピア名は、自己署名証明書によって保証されている場合は、セキュリティで保護されたと見なされます。  
  
 ピア名は大文字小文字を区別し、ピア名の形式: *区別*します。 たとえば、"0.MyPeerName"は、整形式のピア名です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Using a secured peer name does not ensure the overall security of the networking application. Security of the application is implementation-dependent.</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="Classifier">
      <MemberSignature Language="C#" Value="public string Classifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Classifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Classifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピア ツー ピアの分類子を含む文字列を返す <see cref="T:System.Net.PeerToPeer.PeerName" />します。</summary>
        <value>ピア名を識別するために使用される分類子の部分を含んでいる文字列 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> または解像度、PNRP 内 <see cref="T:System.Net.PeerToPeer.Cloud" />します。  
  
 すべてのプロパティの既定値は、明示的に指定されない限り、参照型では <see langword="null" />、<see langword="int" /> 型のプロパティではゼロ \(0\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピア名の形式: *区別*します。 ピア名 *分類器* 149 以内の Unicode 文字を含む任意の文字列にコンポーネントを設定することができます、 `null` \(\\0\) の終端記号です。 ピア名の文字列は大文字小文字を区別します。  
  
 セキュリティで保護されたピア名の場合は、分類子と、証明機関の後にドット \(ピリオド\) は省略可能です。 セキュリティ保護されていないピア名は、分類子は省略できません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPeerHostName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateFromPeerHostName(string peerHostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHostName">DNS 修飾ホスト名を含む文字列です。</param>
        <summary>指定したの新しいインスタンスを作成 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 指定したピアのホスト名を持つオブジェクト。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.PeerName" /> を指定したピアのホスト名を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピア ツー ピアのホストが「シード ノード」ピア ツー ピア ネットワーク セッションを開始し、この種類のネットワーク接続がチャット グループやゲーム セッションなどの通信に最も適しているアプリケーションに参加するようピアを招待します。  
  
 このメソッドは、作成に使用できる、 <xref:System.Net.PeerToPeer.PeerName> オブジェクトに基づいて、 <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> プロパティです。 このピア名は、呼び出し元のノードの id に関連付けられていません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.String" /> 提供される有効なピアのホスト名の文字列ではありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> <see langword="null" />です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">A <see cref="T:System.Net.PeerToPeer.PeerName" /> を作成できませんでしたから、指定されました。 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelativePeerName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateRelativePeerName(class System.Net.PeerToPeer.PeerName peerName, string classifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="classifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> 新しい分類子の文字列値を設定する対象のオブジェクト。</param>
        <param name="classifier">
          <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 返されたに設定する <see cref="T:System.Net.PeerToPeer.PeerName" />です。</param>
        <summary>新たに作成 <see cref="T:System.Net.PeerToPeer.PeerName" /> 置き換えることで、 <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> フィールドを指定されたで定義されている <see cref="T:System.Net.PeerToPeer.PeerName" /> 分類子の指定した文字列値を持つオブジェクト。</summary>
        <returns>新しい <see cref="T:System.Net.PeerToPeer.PeerName" /> 更新の分類子を含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> は既存に追加されます <xref:System.Net.PeerToPeer.PeerName.Authority%2A> の部分、 <xref:System.Net.PeerToPeer.PeerName>です。 この文字列は 149 個の文字も含めて、 `null` ターミネータです。 指定 `null` id のピア名を取得します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.String" /> 提供される、有効なピア名の分類モデルではありません。</exception>
        <exception cref="T:System.ArgumentNullException">1 つまたは複数のパラメーターは、 <see langword="null" />です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">A <see cref="T:System.Net.PeerToPeer.PeerName" /> を作成できませんでしたから、指定されました。 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>決定するかどうかのこのコンテンツ <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトが別のオブジェクトの内容に相当します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Equals の実装は、IEquatable \< T \> で定義されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.PeerName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.PeerName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="other">これと比較するピア名 <see cref="T:System.Net.PeerToPeer.PeerName" />します。</param>
        <summary>現在の小文字 <see cref="T:System.Net.PeerToPeer.PeerName" /> と指定したピアの名前。</summary>
        <returns>返します <see langword="True" /> 場合は、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> が現在のピア名オブジェクトと同じリソースを識別するそれ以外の場合、このメソッドが戻る <see langword="False" />します。  
  
 このメソッドが戻るも <see langword="False" /> 場合 <paramref name="other" /> に設定されている <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのピア名と見なされるのと同じ文字が含まれている場合、 <xref:System.Net.PeerToPeer.PeerName.Authority%2A> と <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> コンポーネントです。  
  
 比較の前に文字列の正規化は行われません。  正規化はすべてに作成したとき、およびピア名オブジェクトを作成する前にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <summary>決定するかどうかのこのコンテンツ <see cref="T:System.Net.PeerToPeer.PeerName" /> が別のオブジェクトのコンテンツと等しい。</summary>
        <returns>
          <see langword="True" /> 場合、 <see cref="T:System.Net.PeerToPeer.PeerName" /> および比較オブジェクトには、同じ情報が含まれます。 そうしないと <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、既定の署名とから動作を継承 <xref:System.Object>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Object.GetHashCode" /> メソッドをオーバーライドします。</summary>
        <returns>現在のハッシュ コード <see cref="T:System.Object" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのオブジェクトは、このメソッドは、それらの両方に対して同じハッシュ コードを返した場合は、等しいと見なされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化データを保持します。</param>
        <param name="context">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>シリアル化情報オブジェクトを、<see cref="T:System.Net.PeerToPeer.PeerName" /> のシリアル化に必要なデータで事前設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これは、セキュリティで保護されたピア名であるかどうかを指定するブール値を取得します。</summary>
        <value>場合 <see langword="true" />, 、このピア名をキーと公開キーのペアの秘密を使用して保護します。 その名前には、そのピア コンピューターのユーザー証明書の公開キーのセキュリティで保護されたハッシュ アルゴリズム \(SHA\) のハッシュが含まれています。 それ以外の場合 <see langword="false" />, 、ピア名に関連付けられた id がありません。  
  
 すべてのプロパティの既定値は、明示的に指定されない限り、参照型では <see langword="null" />、<see langword="int" /> 型のプロパティではゼロ \(0\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピア名は、自己署名証明書によって保証されている場合は、セキュリティで保護されたと見なされます。  
  
 所有者だけでは、PNRP をセキュリティで保護されたピア名を登録できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Using a secured peer name does not ensure the overall security of the networking application. Security of the application is implementation-dependent.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="PeerHostName">
      <MemberSignature Language="C#" Value="public string PeerHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PeerHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピア ツー ピアのホストの名前を取得します。 これは DNS でエンコードされたバージョンの <see cref="T:System.Net.PeerToPeer.PeerName" /> と等価である、 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 、両方の識別子。  2 つの違いは、視覚的表現です。</summary>
        <value>A <see cref="T:System.String" /> ピア ツー ピアのホストの名前を指定する値。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピア ツー ピアのホストが「シード ノード」ピア ツー ピア ネットワーク セッションを開始し、この種類のネットワーク接続がチャット グループやゲーム セッションなどの通信に最も適しているアプリケーションに参加するようピアを招待します。  
  
 <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> プロパティは、ピア ツー ピア ネットワーク セッションを作成して、セッションのホストと見なされますピアの名前を指定します。  ピア ツー ピア ネットワーク セッションのホストを 1 つ以上のピア収集 <xref:System.Net.PeerToPeer.Cloud>します。 また、ピアであり、同時に複数のピアのホストでホストする可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化データを保持します。</param>
        <param name="context">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.PeerName" /> インスタンスをシリアル化するために必要なデータを返します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の文字列表現を返します <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトです。</summary>
        <returns>現在を表す文字列 <see cref="T:System.Net.PeerToPeer.PeerName" />, と次の形式で指定した: *区別*します。 たとえば、"0.MyInternetPeer"とします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、既定の署名とから動作を継承 <xref:System.Object>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerName" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>