<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>登録、 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> で、 <see cref="T:System.Net.PeerToPeer.Cloud" /> またはクラウドのセットです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 登録を作成 \(または更新\) に関連付けられているすべての情報、 <xref:System.Net.PeerToPeer.PeerName> ピア クラウドまたはクラウドにします。  
  
 複数存在することは <xref:System.Net.PeerToPeer.PeerNameRegistration> ピア同名のオブジェクト。 このような場合は、ピア名は、セキュリティ保護されている場合は、各インスタンスを表します <xref:System.Net.PeerToPeer.PeerNameRegistration> 別のクラウドでします。 ただし場合、ピア名は保護されていない、そのことができます登録する同じクラウド内、複数回各登録とは別のプロセスからです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しい既定のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>. It does not perform peer name registration during construction.  
  
 After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</param>
        <param name="port">登録するポート番号を指定する整数値。</param>
        <summary>指定した名前とポート番号を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling this constructor creates an instance that will be used to register all source addresses \(both IPv6and IPv4\) and the provided port for all clouds in which the peer is currently participating.  If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.  
  
 If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.  
  
 This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration. After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポート番号が 0 未満です。  ポート番号は 0 以上、65,535 \(0xFFFF\) 未満である必要があります。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> は既にこのホストから登録されています。  
  
-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">このインスタンスの逆シリアル化に必要なデータを格納するオブジェクトへの参照。</param>
        <param name="context">データを逆シリアル化するための手段を提供するコンテキスト。 シリアル化されたデータのソースとも呼ばれます。</param>
        <summary>新しくシリアル化可能な <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</param>
        <param name="port">登録するポート番号を指定する整数値。</param>
        <param name="cloud">ピア名を登録する <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <summary>指定したピア名、ポート番号、<see cref="T:System.Net.PeerToPeer.Cloud" /> を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling this constructor creates an instance that will be used to register all source addresses \(both IPv6 and IPv4\), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 If the cloud parameter is **languageKeyword tag is not supported!!!!**  
, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポート番号が 0 未満です。  ポート番号は 0 以上、65,535 \(0xFFFF\) 未満である必要があります。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> は既にこのホストから登録されています。  
  
-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定については、 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> にこの <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> オブジェクトが登録されています。</summary>
        <value>型のオブジェクト <see cref="T:System.Net.PeerToPeer.Cloud" /> この登録が定義されているピア クラウドを指定します。 このプロパティが <see langword="null" /> 既定です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または追加情報を設定、 <see cref="T:System.Net.PeerToPeer.PeerName" /> に登録するオブジェクト、 <see cref="T:System.Net.PeerToPeer.Cloud" />です。</summary>
        <value>追加情報について説明するコメント、 <see cref="T:System.Net.PeerToPeer.PeerName" /> に関連付ける、 <see cref="T:System.Net.PeerToPeer.Cloud" />です。 このプロパティが <see langword="null" /> 既定です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定した文字列値は、39 の Unicode 文字を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のバイナリ データをアプリケーションで定義された、 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトです。</summary>
        <value>エントリに関連付けられているバイナリ データを保持するバイト配列。 このプロパティが <see langword="null" /> 既定です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最大限の <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> を提供することができます 4,096 バイトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> が 4096 バイトを超えています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.  Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer. If there are any other endpoint\(s\) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.  
  
 If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>lways call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="True" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>アンマネージ リソースを解放します。オプションで <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているマネージ リソースも解放できます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたピア名が登録されたネットワーク エンドポイントのコレクションを取得します。</summary>
        <value>
          <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> を関連付けられたピア名が登録されているネットワーク エンドポイントを格納しているオブジェクト。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net> 名前空間、 <xref:System.Net.IPEndPoint> IP アドレスとポート番号としてネットワーク エンドポイントを表します。  PNRP では、各エンドポイントの IP アドレスとポート値を指定する必要があります。  提供されるエンドポイントの最大数は、10 個です。 このパラメーターは、ときに、アドレスの自動選択が使用される `null`します。  
  
 登録するアドレスを自動的に選択の登録方法を使用する場合、ピア名が登録されているアドレスを確認する方法はありません。  つまり、 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティは選択されているアドレスを反映するように更新されません。  
  
 複数のノードのピア名が登録されているときに各 <xref:System.Net.PeerToPeer.PeerNameRegistration> とは別と <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 異なる各登録インスタンスで定義されたプロパティになります。 また、 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> が 1 つ以上登録されている <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, 各登録が一意で、エンドポイントのコレクションをインスタンスごとに異なるにする、通常は。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化データを保持します。</param>
        <param name="context">
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>シリアル化情報オブジェクトを、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスのシリアル化に必要なデータで事前設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得または設定のピア名が指定されているかどうか、 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは、特定の登録 <see cref="T:System.Net.PeerToPeer.Cloud" /> ホストにします。</summary>
        <returns>場合 <see langword="true" />, 、ピア名に登録されている、 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> ピアのホスト用です。 場合 <see langword="false" />, で登録プロセスを開始し、 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">既に破棄されているオブジェクトを登録することはできません。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはピア クラウドに登録するピアの名前を設定します。</summary>
        <value>型のオブジェクト <see cref="T:System.Net.PeerToPeer.PeerName" /> これに関連付けられている値が含まれる <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトです。 すべてのプロパティの既定値は、明示的に指定しない限り、 <see langword="null" /> 参照型です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ピア名は、複数のノードに登録できます。各 <xref:System.Net.PeerToPeer.PeerNameRegistration> インスタンスとは別です。<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> にそれぞれ対応する関連付けられたプロパティ <xref:System.Net.PeerToPeer.PeerName> インスタンスが異なる。 また、ノードが; に接続されている 1 つ以上のクラウドのピア名を登録することもこれらの登録の各は別です。 ピア名の <xref:System.Net.IPEndPointCollection> されるこれらのインスタンスそれぞれで異なります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 [TCP\/IP](http://go.microsoft.com/fwlink?LinkID=98458) ポート番号に登録されているピアで使用される、 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトです。</summary>
        <value>TCP を示す整数値のポート番号、 <see cref="T:System.Net.IPEndPoint" />です。 明示的に指定しない限り、このプロパティの既定値はゼロ \(0\) にします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のポートは使用、 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> メソッド エンドポイントが指定されていない場合にのみです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したポートの値が 0 未満です。  ポート番号は、0 以上 65535 \(0 xffff\) 未満にする必要があります。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> を <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> に登録します。<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> がまったく指定されないと、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> プロパティで指定したポート値を使用して、自動アドレス選択が使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor. The default port is used by this method only when no endpoints are specified.  
  
 If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is **languageKeyword tag is not supported!!!!**  
, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.  
  
 To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.  
  
   
  
## 例  
 The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  
  
 [!code-csharp[NCLPNRPRegisterPeerName\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</exception>
        <exception cref="T:System.ObjectDisposedException">このオブジェクトでは、Dispose\(\) が既に呼び出されました。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> は既に登録されています。 登録更新には <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> メソッドを使用する必要があります。  
  
-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> に対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。  
  
-   <see cref="T:System.Net.PeerToPeer.PeerName" /> または <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> が指定されていません。少なくとも 1 つは指定する必要があります。  
  
-   メッセージ要素またはデータ要素が無効です。 または、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> が設定されておらず、データ BLOB または <see cref="T:System.Net.IPEndPoint" /> が指定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名の登録を、登録されていたすべてのクラウドから解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor. In this state, all of its properties are assumed to have no value. The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.  
  
 It is possible to have multiple registration objects for the same peer name.  In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.  However, if the peer name is not secured, it can be registered in the same cloud multiple times.  
  
 If this instance is already stopped, calling this method has no effect.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは登録されていません。 空のコンストラクターを使用して <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトを構築したときに、これが発生します。<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> を呼び出す前に、このインスタンスに読み込まれる必要があります。</exception>
        <exception cref="T:System.ObjectDisposedException">このオブジェクトでは、Dispose\(\) が既に呼び出されました。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けるシリアル化データを保持します。</param>
        <param name="context">
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けられたシリアル化ストリームの転送先を格納します。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスをシリアル化するために必要なデータを返します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>特定の <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録されたノードの <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> を更新します。 プロパティで指定された情報を使用して更新が実行されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 All information registered in cloud\(s\) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.  The new data is not combined with the existing registration.  To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.  
  
 After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.  All other fields in the record may be updated.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</exception>
        <exception cref="T:System.ObjectDisposedException">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは登録されていません。<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名が 1 つ以上のクラウドに登録されるまで、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> メソッドを呼び出すことはできません。  
  
-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名が、対応する <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> の登録以降に変更されています。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">既に破棄されているオブジェクトは登録できません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> プロパティが <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはピアのメッシュを通過するときに、エンドポイントの自動選択を使用するかどうかを指定する値を設定または <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />です。</summary>
        <value>
          <see langword="True" /> エンドポイントの自動選択するために使用する場合は <see langword="false" /> でエンドポイントを決定するその他の方法を使用する場合。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 自動エンドポイントの選択を使用する場合 \(このプロパティに設定 `true`\) エンドポイント情報が指定の開始前に、 <xref:System.Net.PeerToPeer.PeerNameRegistration>, 、システムは、個々 のエンドポイントを選択し、使用可能なすべてのクラウドに関連付けられているピア名には発行します。  ポートが指定されていない場合は 0 としての自動選択が選択した、 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>です。  
  
 設定すると `false`, 、前述のように自動選択は実行されません。  これにより、データ blob と共にピア名を公開する、登録プロセス \(指定されたとおり、 <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> プロパティ\)。 エンドポイントは、名前に関連付けではありません。  
  
 登録するアドレスを自動的に選択の登録方法を使用する場合をどのようなアドレスを決定する方法はありません、 <xref:System.Net.PeerToPeer.PeerName> オブジェクトが登録されています。  つまり、 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティは選択されているアドレスを反映するように更新されません。  
  
 ピア名の登録が開始された後に、このプロパティを更新しても効果はありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>