<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>解決するには値を指定します、 <see cref="T:System.Net.PeerToPeer.PeerName" /> に、 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> PNRP 名前空間のプロバイダーの API のプロトコルを使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Net.PeerToPeer.PeerNameRecord> のすべての情報を含む、 <xref:System.Net.PeerToPeer.PeerName> で発行された、 <xref:System.Net.PeerToPeer.Cloud> または解決プロセス中にクエリを実行するクラウドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> クラスの新しい既定のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud\(s\) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> イベントによって返されたデータを格納している <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> イベントが発生した後、ピアの解像度のデータを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.  
  
 Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> イベントによって返されたピア名前解決の進行状況情報を含む <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> イベントが発生する場合は、ピアの解像度の進行状況データを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.  
  
 Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>解決、 <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトを <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> PNRP プロトコルを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、クラウドにピア名を関連付けます。 呼び出す、 <xref:System.Net.PeerToPeer.PeerNameResolver> メソッドの呼び出しに似ていますが、 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッド内の各ピア名前レコード、 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>です。 ピア名レコードの解決方法を使用しても、複数のピア名の解決は無効に注意してください。  
  
 各 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> メソッドです。  これらの ResolveAsync メソッドには、非同期イベント処理のためのパラメーター リストのシステム トークンが含まれていますがメソッドに渡されるパラメーターのと同じです。  
  
 場合、 <xref:System.Net.PeerToPeer.Cloud> 値が指定されていない、メソッドを使用して、 <xref:System.Net.PeerToPeer.Cloud.Available> クラウド パラメーターにへのショートカットです。  場合、 `maxRecords` パラメーターがありません、ゼロの原因の既定値、 <xref:System.ArgumentOutOfRangeException> 例外がスローされます。  
  
 このイベントが、解決操作のエラーで終了したかが取り消される場合にも生成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> を解決します。</param>
        <summary>指定した解決 <see cref="T:System.Net.PeerToPeer.PeerName" /> 呼び出し元のピアに既知のすべてのクラウドにします。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> ピア名のすべてのレコードを格納している \(として表される <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクト\)、指定したピア名に関連付けられています。 セキュリティ保護されていないピア名が、同じ <see cref="T:System.Net.PeerToPeer.PeerName" /> 同じのさまざまなユーザーを登録する <see cref="T:System.Net.PeerToPeer.Cloud" />, 、さまざまなエンドポイントに関連付けられているとします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、クラウドにピア名を関連付けます。 すべてのクラウドが照会、 <xref:System.Net.PeerToPeer.PeerName>です。 ピア名解決できない場合は `null`, 、 <xref:System.Net.PeerToPeer.PeerToPeerException> がスローされます。  
  
 セキュリティ保護されていないピア名の場合は、同じ名前を登録 \(してさまざまなエンドポイントに関連付けられている\)、同じクラウド内の別のピアができます。  
  
 呼び出す、 <xref:System.Net.PeerToPeer.PeerNameResolver> メソッドの呼び出しに似ていますが、 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッド内の各ピア名前レコード、 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>です。 ピア名レコードの解決方法を使用しても、複数のピア名の解決は無効に注意してください。  
  
 各 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> メソッドです。  パラメーター リストは同じですが、ただし ResolveAsync メソッドには、非同期イベント処理のためのシステム トークンが含まれています。 します。  
  
 場合、 <xref:System.Net.PeerToPeer.Cloud> 値が指定されていない、メソッドを使用して、 <xref:System.Net.PeerToPeer.Cloud.Available> クラウド パラメーターにへのショートカットです。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 解決操作のエラーで終了したかが取り消される場合、イベントが生成されます。  
  
   
  
## 例  
 次のコード例は、解決する方法を示しています、 <xref:System.Net.PeerToPeer.PeerName> いずれかで公開 <xref:System.Net.PeerToPeer.Cloud>します。  
  
 [!code-csharp[NCLPNRPPeerNameResolver\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> パラメーターを <see langword="null" /> に設定します。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定したピア名を解決することはできません。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> を解決します。</param>
        <param name="maxRecords">最大数 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> からすべて取得するオブジェクト <see cref="T:System.Net.PeerToPeer.Cloud" /> 指定されたオブジェクト <c>peerName</c>します。</param>
        <summary>指定した数を超えないを返す、呼び出し元のピアに既知のすべてのクラウドで指定したピア名解決 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> サイズが小さいか等しい <paramref name="maxRecords" /> エントリです。 このコレクションに関連付けられたピア名のレコードが含まれています、 <see cref="T:System.Net.PeerToPeer.PeerName" /> が解決されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、クラウドにピア名を関連付けます。 すべてのクラウドは、ピア名の照会されます。 セキュリティ保護されていないピア名の場合は、同じピア名を登録して、同じ複数のユーザーによって <xref:System.Net.PeerToPeer.Cloud>, 、さまざまなエンドポイントに関連付けられているとします。 場合、 <xref:System.Net.PeerToPeer.PeerName> 解決できない \(たとえば、ピア名が発行されません\)、 <xref:System.Net.PeerToPeer.PeerToPeerException> がスローされます。  
  
 各 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> メソッドです。  パラメーター リストは同じですが、ただし ResolveAsync メソッドには、非同期イベント処理のためのシステム トークンが含まれています。 します。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 解決操作のエラーで終了したかが取り消される場合、イベントが生成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> パラメーターを <see langword="null" /> に設定します。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> パラメーターが 0 未満です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定したピア名を解決できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> を解決します。</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> ピア名を解決するためのです。</param>
        <summary>指定した解決 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 、指定した <see cref="T:System.Net.PeerToPeer.Cloud" />します。</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> ピア名のすべてのレコードを格納している \(として表される <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクト\)、指定したピア名に関連付けられています。 セキュリティ保護されていないピア名が、同じ <see cref="T:System.Net.PeerToPeer.PeerName" /> 同じのさまざまなユーザーを登録する <see cref="T:System.Net.PeerToPeer.Cloud" />, 、さまざまなエンドポイントに関連付けられているとします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Net.PeerToPeer.PeerName> 解決できない \(つまり、ピア名が発行されません\)、 <xref:System.Net.PeerToPeer.PeerToPeerException> がスローされます。  
  
 セキュリティ保護されていないピア名の場合は、同じ名前を登録 \(してさまざまなエンドポイントに関連付けられている\)、同じクラウド内の別のピアができます。  
  
 各 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> メソッドです。  パラメーター リストは同じですが、ただし ResolveAsync メソッドには、非同期イベント処理のためのシステム トークンが含まれています。 します。  
  
 場合、 <xref:System.Net.PeerToPeer.Cloud> パラメーターは `null`, 、 <xref:System.Net.PeerToPeer.PeerNameResolver> を使用して、 <xref:System.Net.PeerToPeer.Cloud.Available> ショートカットを埋めるために、 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, 、<xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 、および <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>です。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 解決操作のエラーで終了したかが取り消される場合、イベントが生成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> パラメーターを <see langword="null" /> に設定します。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定したピア名を解決できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="T:System.Net.PeerToPeer.PeerName" /> を解決します。</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> を解決するために、 <c>peerName</c>です。</param>
        <param name="maxRecords">ピア名の指定された、指定されたクラウドから取得するレコード オブジェクトの最大数 <c>peerName</c>します。</param>
        <summary>指定した解決 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 、指定した <see cref="T:System.Net.PeerToPeer.Cloud" />, 、指定した数を超えないを返す <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> サイズが小さいか等しい <paramref name="maxRecords" /> エントリです。 このコレクションに関連付けられたピア名のレコードが含まれています、 <see cref="T:System.Net.PeerToPeer.PeerName" /> が解決されたことです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セキュリティ保護されていないピア名の場合は、同じ名前を登録 \(してさまざまなエンドポイントに関連付けられている\)、同じクラウド内の別のピアができます。 ピア名が解決できない場合、 <xref:System.Net.PeerToPeer.PeerToPeerException> がスローされます。  
  
 各 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> メソッドです。  パラメーター リストは同じですが、ただし ResolveAsync メソッドには、非同期イベント処理のためのシステム トークンが含まれています。 します。  
  
 場合、 <xref:System.Net.PeerToPeer.Cloud> パラメーターは `null`, 、 <xref:System.Net.PeerToPeer.PeerNameResolver> を使用して、 <xref:System.Net.PeerToPeer.Cloud.Available> ショートカットを埋めるために、 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, 、<xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 、および <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>です。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 解決操作のエラーで終了したかが取り消される場合、イベントが生成されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> パラメーターを <see langword="null" /> に設定します。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> パラメーターが 0 未満です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定したピア名を解決できません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>これらのメソッドは、指定された非同期解決操作を開始する <see cref="T:System.Net.PeerToPeer.PeerName" /> 呼び出し元のピアに既知のすべてのクラウドにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべて <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> メソッドに相当するものは <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 非同期処理が必要なときに使用されるメソッドです。  これらは同じメソッドに渡されるパラメーターの点を除いて ResolveAsync イベント処理のためのパラメーター リストのシステム トークンが含まします。  
  
 Resolve メソッドと ResolveAsync メソッドのパラメーターの不一致が発生した場合、 <xref:System.Net.PeerToPeer.Cloud> 値が指定されていない、メソッドを使用して、 <xref:System.Net.PeerToPeer.Cloud.Available> クラウド パラメーターにへのショートカットです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">解決する <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="userState">ピア名解決操作に関する状態情報を格納するユーザー定義のオブジェクト。</param>
        <summary>呼び出し元のピアに既知のすべてのクラウドで、指定された <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> の非同期のピア名解決操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method asynchronously associates a peer name to clouds. All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>. It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method. Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.  
  
 If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.  
  
 For unsecured peer names, the same name can be registered \(and associated with different endpoints\) by different peers within the same cloud.  
  
 Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.  
  
 For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.  Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.  
  
 All asynchronous references to the resolver object are coordinated with a unique identifier token. This **parameterReference tag is not supported!!!!**  
 token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.  
  
 The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> と <paramref name="userState" /> のパラメーターの一方または両方が <see langword="null" /> に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">解決する <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="maxRecords">ピア名を取得するレコードの最大数。</param>
        <param name="userState">解決操作に関する情報を格納するユーザー定義のオブジェクト。</param>
        <summary>
          <paramref name="maxRecords" /> 未満のピア名エントリを返して、呼び出し元のピアに既知のすべてのクラウドで、指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> の非同期のピア名解決操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method asynchronously associates a peer name to clouds. All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>. For unsecured peer names, the same name can be registered \(and associated with different endpoints\) by different peers within the same cloud. If the peer name cannot be resolved or is **languageKeyword tag is not supported!!!!**  
, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.  
  
 This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method. Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.  
  
 For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.  Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.  
  
 All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>. This **parameterReference tag is not supported!!!!**  
 token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.  
  
 The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> と <paramref name="userState" /> のパラメーターの一方または両方が <see langword="null" /> に設定されます。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> パラメーターが 0 以下です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">解決する <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">
          <c>peerName</c> を解決する対象の <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <param name="userState">ピア名解決操作に関する情報を格納するユーザー定義の <see cref="T:System.Object" />。</param>
        <summary>指定された <see cref="T:System.Net.PeerToPeer.Cloud" /> で、指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> の非同期のピア名解決操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method. Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.  
  
 For unsecured peer names, the same name can be registered \(and associated with different endpoints\) by different peers within the same cloud.  
  
 If the <xref:System.Net.PeerToPeer.Cloud> parameter is **languageKeyword tag is not supported!!!!**  
, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.  
  
 For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.  Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.  
  
 All asynchronous references to the resolver object are coordinated with a unique identifier token. This **parameterReference tag is not supported!!!!**  
 token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.  
  
 The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> と <paramref name="userState" /> のパラメーターの一方または両方が <see langword="null" /> に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">解決する <c>peerName</c>。</param>
        <param name="cloud">
          <c>peerName</c> を解決する対象の <c>cloud</c>。</param>
        <param name="maxRecords">
          <c>peerName</c> に対して <c>cloud</c> から取得するレコードの最大数。</param>
        <param name="userState">ピア名解決操作に関する情報を格納するユーザー定義のオブジェクト。</param>
        <summary>指定された <see cref="T:System.Net.PeerToPeer.Cloud" /> で、指定された <see cref="T:System.Net.PeerToPeer.PeerName" /> の非同期のピア名解決操作を開始します。  この解決操作では、指定したピア名に対し <paramref name="maxRecords" /> エントリ以下の解決が行われます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For unsecured peer names, the same name can be registered \(and associated with different endpoints\) by different peers within the same cloud.  
  
 This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method. Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.  
  
 If the <xref:System.Net.PeerToPeer.Cloud> parameter is **languageKeyword tag is not supported!!!!**  
, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.  
  
 For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.  Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.  
  
 All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>. This **parameterReference tag is not supported!!!!**  
 token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.  
  
 The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerName" /> と <paramref name="userState" /> のパラメーターの一方または両方が <see langword="null" /> に設定されます。</exception>
        <exception cref="T:System.ArgumentException">指定された 1 つ以上のパラメーターが無効です。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">この操作を正常に完了するには、少なくとも 1 つのイベント ハンドラーが必要です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxRecords" /> パラメーターが 0 以下です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">解決操作を開始した <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> メソッド インスタンスに提供されるオブジェクト。</param>
        <summary>指定された非同期ピアの名前解決要求をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.  If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" \(NO OP\).  
  
 The **parameterReference tag is not supported!!!!**  
 object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress. This caller\-supplied object is unique for each peer name resolution request.  
  
 This method will return immediately, but the operation may or may not immediately cancel. The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.  
  
 Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to **languageKeyword tag is not supported!!!!**  
.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userState" /> パラメーターとして <see langword="null" /> を使用することはできません。</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> のピア名解決要求が完了したときに <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> イベントが通知されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.  
  
 This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントは、<see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクトが特定の <see cref="T:System.Net.PeerToPeer.PeerName" /> の <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作に対する応答で検索されるたびにシグナル状態に設定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud\(s\) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>