<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>UI オートメーション ツリー内の UI オートメーション 要素を表します。この要素には、UI オートメーション クライアント アプリケーションによって識別子として使用される値が格納されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement> の部分に対応する [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], 基になる実装に関係なく、\(よう [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] または [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]\)。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーはで同等の識別子を使用する必要があります<xref:System.Windows.Automation.AutomationElementIdentifiers>です。  
  
 このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティです。  
  
 アクセラレータ キーの組み合わせでは、アクションを呼び出します。 CTRL \+ O が多くの場合、呼び出しに使用など、**開く**ファイル コモン ダイアログ ボックス。<xref:System.Windows.Automation.AutomationElement>がアクセラレータ キーのプロパティ設定いる常に実装して、<xref:System.Windows.Automation.InvokePattern>クラスです。  
  
 プロパティの値の種類は返す<xref:System.String>です。 プロパティの既定値は、空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提示しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient\_snip\#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 次の例は、プロパティの現在の値が取得されますが、要素自体は、プロパティの値を指定しない場合は、ことを指定<xref:System.Windows.Automation.AutomationElement.NotSupported>が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient\_snip\#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 This property can also be retrieved from the <xref:System.Windows.Automation.AutomationElement.Current%2A> or <xref:System.Windows.Automation.AutomationElement.Cached%2A> properties.  
  
 An access key is a character in the text of a menu, menu item, or label of a control such as a button that activates the attached menu function. For example, the letter "O" is often used to invoke the **ui tag is not supported!!!!**  
 common dialog box from a **ui tag is not supported!!!!**  
 menu.  
  
 Access key values are of type <xref:System.String> and contain the character registered as the access key for the element. The default value for the string is an empty string.  
  
   
  
## 例  
 The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  
  
 [!code-csharp[UIAClient\_snip\#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient\_snip\#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  
  
 [!code-csharp[UIAClient\_snip\#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient\_snip\#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期でコンテンツを読み込んでいる間に発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このイベントは、非同期でコンテンツを読み込んでイベントが発生したことを示すためにプロバイダーによって主に使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォーカスが変更されたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素を識別するために使用される <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 This property can also be retrieved from the <xref:System.Windows.Automation.AutomationElement.Current%2A> or <xref:System.Windows.Automation.AutomationElement.Cached%2A> properties.  
  
 Return values of the property are of type <xref:System.String>. The default value for the property is an empty string.  
  
 When it is available the <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> of an element is expected to always be the same in any instance of the application regardless of the local language. The value should be unique among sibling elements but not necessarily unique across the entire desktop. For example, multiple instances of an application, or multiple folder views in Microsoft Windows Explorer, may contain elements with the same <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, such as "SystemMenuBar".  
  
 While support of an <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> is always recommended for better testability, this property is not mandatory. Where it is supported, an <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> is useful for creating test automation scripts that run regardless of UI language. Clients should make no assumptions regarding the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s exposed by other applications. An <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> is not necessarily guaranteed to be stable across different releases or builds of an application.  
  
 Instances of [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements are uniquely identified on the desktop by their <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> properties.  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> is supported by all UI Automation elements in the control view except top\-level application windows, UI Automation elements derived from [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] controls that do not have an ID or x:Uid, and UI Automation elements derived from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] controls that do not have a control ID.  
  
   
  
## 例  
 The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  
  
 [!code-csharp[UIAClient\_snip\#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient\_snip\#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  
  
 [!code-csharp[UIAClient\_snip\#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient\_snip\#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ変更イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 This property can also be retrieved from the <xref:System.Windows.Automation.AutomationElement.Current%2A> or <xref:System.Windows.Automation.AutomationElement.Cached%2A> properties.  
  
 Bounding rectangles are of type <xref:System.Windows.Rect>. The returned rectangle is in physical screen coordinates. The default value is <xref:System.Windows.Rect.Empty%2A>. <xref:System.Windows.Rect.Empty%2A> is returned if the item is not currently displaying a [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 The returned rectangle can contain points that are not clickable. Instances where this could happen include when the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] item has an irregular shape or clickable region, or it is obscured by other [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements.  
  
   
  
## 例  
 The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  
  
 [!code-csharp[UIAClient\_snip\#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient\_snip\#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  
  
 [!code-csharp[UIAClient\_snip\#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient\_snip\#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトのキャッシュされた UI オートメーション プロパティ値を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされたプロパティ値を格納する構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセサーを [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] プロパティがによって返される構造のプロパティとして表されます <xref:System.Windows.Automation.AutomationElement.Cached%2A>します。 構造体を取得する必要はありません。そのメンバーは、次の例のように、直接アクセスできます。 特定の詳細については、使用可能なプロパティとその使用法では、次を参照してください。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>します。  
  
 現在の値を取得する [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素を使用するこのプロパティ、 <xref:System.Windows.Automation.AutomationElement.Current%2A> プロパティです。  
  
   
  
## 例  
 例を次に、どのように <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> プロパティをキャッシュしを使用して取得し、 <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 [!code-csharp[UIAClient\_snip\#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient\_snip\#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">キャッシュされたプロパティはありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた子要素を取得します。</summary>
        <value>子要素のコレクション。 要素に子がない場合、このコレクションは空になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるコレクションのビューが決まります、 <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> の状態、 <xref:System.Windows.Automation.CacheRequest> がアクティブであった場合にこの <xref:System.Windows.Automation.AutomationElement> オブジェクトを取得します。  
  
 場合にのみ、子はキャッシュのスコープ、 <xref:System.Windows.Automation.CacheRequest> 含まれている <xref:System.Windows.Automation.TreeScope.Subtree>, 、<xref:System.Windows.Automation.TreeScope.Children>, 、または <xref:System.Windows.Automation.TreeScope.Descendants>です。  
  
 場合、 <xref:System.Windows.Automation.CacheRequest> ことの子がこのレベルでキャッシュされるが、子が存在しない場合、このプロパティの値は 0 を指定します。 ただし、このレベルの子をキャッシュする要求が行われていない場合、プロパティを取得しようとすると、例外を発生させます。  
  
   
  
## 例  
 次の例では、リスト ボックスの要素が中に、親ウィンドウの要素から取得した、 <xref:System.Windows.Automation.CacheRequest> がアクティブと <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> は <xref:System.Windows.Automation.TreeScope.Children>です。 子要素 \(つまり、リスト項目\) の指定したプロパティがキャッシュに格納しから取得できます、 <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> 、リスト ボックスのです。  
  
 [!code-csharp[UIAClient\_snip\#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient\_snip\#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <exception cref="T:System.InvalidOperationException">要求は、この要素の子をキャッシュするされませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュされた親を取得します。</summary>
        <value>親要素。 指定した要素に親がない場合 \(その要素がルート ノードの場合など\) は戻り値が <see langword="null" /> になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> リスト ボックスとそのリスト項目のプロパティをキャッシュします。 リスト ボックスの要素が含まれている、 <xref:System.Windows.Automation.AutomationElement.CachedParent%2A> 各リスト項目要素のプロパティです。  
  
 [!code-csharp[UIAClient\_snip\#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient\_snip\#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">親要素はキャッシュされません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 クラス名は、UI オートメーション プロバイダーの実装に依存あり、そのため、標準形式である時にカウントされることはできません。 ただし、クラス名がわかっている場合、使用できます、期待されると、アプリケーションが動作していることを確認する [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素。  
  
 プロパティの値の種類は返す <xref:System.String>します。 既定値は空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient\_snip\#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient\_snip\#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クリック可能なポイントのプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 An <xref:System.Windows.Automation.AutomationElement> is not clickable if it is completely obscured by another window.  
  
 Return values of the property are of type <xref:System.Windows.Point>. The default value is **languageKeyword tag is not supported!!!!**  
.  
  
 The value returned is in physical screen coordinates.  
  
   
  
## 例  
 The following example retrieves the current value of the property.  
  
 [!code-csharp[UIAClient\_snip\#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient\_snip\#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  
  
 [!code-csharp[UIAClient\_snip\#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient\_snip\#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの既定値は <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient\_snip\#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient\_snip\#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カルチャ プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Within the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework, the default value reported will always be `en-US` because the [!INCLUDE[TLA#tla_winfx](~/includes/tlasharptla-winfx-md.md)] framework automatically defaults to English. For other [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] frameworks this property must be explicitly set or it will not be exposed.  
  
 This property can exist on a per\-control basis, but typically is only available on an application level.  
  
 Return values of the property are of type <xref:System.Globalization.CultureInfo>.  
  
   
  
## 例  
 The following example retrieves the current value of the property.  
  
 [!code-csharp[UIAClient\_snip\#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient\_snip\#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Automation.AutomationElement" /> の現在のプロパティ値を取得します。</summary>
        <value>現在のプロパティ値を格納する構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The accessors for [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] properties are represented as properties of the structure returned by <xref:System.Windows.Automation.AutomationElement.Current%2A>. You do not need to retrieve the structure; you can access its members directly, as in the example below. For specific information on the properties available and their use, see <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 To get the cached value of [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] properties on this element, use the <xref:System.Windows.Automation.AutomationElement.Cached%2A> property.  
  
   
  
## 例  
 The following example shows how the <xref:System.Windows.Automation.AutomationElement.Current%2A> property is used to retrieve the name of an item that has been selected in a list.  
  
 [!code-csharp[UIAClient\_snip\#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient\_snip\#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較対象の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> の値が、この <see cref="T:System.Windows.Automation.AutomationElement" /> の値と同一かどうかを判断します。</summary>
        <returns>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> が、この <see cref="T:System.Windows.Automation.AutomationElement" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Two elements that compare as equal may contain different cached information from different points in time. The equality check only tests that the <xref:System.Windows.Automation.AutomationElement> objects refer to the same underlying user interface element; that is, that they have the same run\-time identifier.  
  
 This method is equivalent to the equality operator, which also compare run\-time identifiers.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
        <param name="condition">照合する検索条件を格納するオブジェクト。</param>
        <summary>指定した条件を満たすすべての <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを返します。</summary>
        <returns>指定した条件を満たすオブジェクトのコレクション。 一致がない場合は、空のコレクションが返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検索のスコープは、このメソッドと呼ばれる要素に相対的なです。 要素は、ツリーで検出された順序で返されます。  
  
 デスクトップ上のトップレベル ウィンドウを検索する場合は必ず指定して <xref:System.Windows.Automation.TreeScope.Children> で `scope`, ではなく、 <xref:System.Windows.Automation.TreeScope.Descendants>です。 デスクトップのサブツリー全体を検索は、何千という項目を反復処理し、スタック オーバーフローが発生する可能性可能性があります。  
  
 場合は、クライアント アプリケーションは、ユーザー インターフェイスで要素を検索しようとする可能性があります、行う必要がありますすべて [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 別のスレッドでを呼び出します。  
  
   
  
## 例  
 次の例は、使用する方法を示しています。 <xref:System.Windows.Automation.AutomationElement.FindAll%2A> すべてを検索するには、ウィンドウのボタンを有効にします。  
  
 [!code-csharp[UIAClient\_snip\#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient\_snip\#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">検索のスコープを指定する、値のビットごとの組み合わせ。</param>
        <param name="condition">照合する検索条件を格納するオブジェクト。</param>
        <summary>指定した条件と一致する最初の子要素または子孫要素を返します。</summary>
        <returns>条件を満たす最初の要素。一致が見つからなかった場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検索のスコープは、このメソッドと呼ばれる要素に相対的なです。  
  
 デスクトップ上のトップレベル ウィンドウを検索するときは必ず指定して <xref:System.Windows.Automation.TreeScope.Children> で `scope`, ではなく、 <xref:System.Windows.Automation.TreeScope.Descendants>です。 デスクトップのサブツリー全体を検索は、何千という項目を反復処理し、スタック オーバーフローが発生する可能性可能性があります。  
  
 場合は、クライアント アプリケーションは、ユーザー インターフェイスで要素を検索しようとする可能性があります、行う必要がありますすべて [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 別のスレッドでを呼び出します。  
  
   
  
## 例  
 次の例では、その識別子から子ウィンドウを検索する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient\_snip\#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在フォーカスがある <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <value>フォーカスがある UI 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、クライアント アプリケーションは、ユーザー インターフェイスで要素を検索しようとする可能性があります、行う必要がありますすべて [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 別のスレッドでを呼び出します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.String>します。 既定値は空の文字列です。  
  
 このプロパティは、特殊なケースを UI フレームワーク全体に適用するアプリケーションを使用します。 プロパティの値には、"Win32"、"WinForm"および"DirectUI"があります。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient\_snip\#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient\_snip\#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">UI 要素のハンドル。</param>
        <summary>指定したウィンドウ ハンドルによって参照される ユーザー インターフェイス (UI) 項目の新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
        <returns>
          <paramref name="hwnd" /> によって識別される UI 項目の <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">プロバイダー オブジェクト。</param>
        <summary>ローカル <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 実装から新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
        <returns>プロバイダー オブジェクトによって提供される要素を表す <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、独自のネイティブの要素型にアクセスする、呼び出し元を有効にするクライアント ヘルパー ライブラリで使用可能性があります。 たとえば、 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] を返せるようには、このメソッドを内部的に使用して、 <xref:System.Windows.Automation.AutomationElement> を取得するクライアントに、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素から直接、 <xref:System.Windows.UIElement>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">UI 要素があるデスクトップ上の物理的な画面座標。</param>
        <summary>デスクトップ上の指定したポイントにある ユーザー インターフェイス (UI) 項目の新しい <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトを取得します。</summary>
        <returns>指定したポイントにある UI 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A>ルート要素に最も近い論理ツリー内の要素を返します。  
  
 場合は、クライアント アプリケーションは、ユーザー インターフェイスで要素を検索しようとする可能性があります、行う必要がありますすべて [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 別のスレッドでを呼び出します。  
  
 ポイントは、返された外接する四角形が <xref:System.Windows.Automation.AutomationElement>, は必ずしも上にないコントロールのクリック可能な部分です。 たとえば、丸いボタンは、いずれかの外接する四角形の角に丸みの近くクリック可能でない可能性があります。  
  
   
  
## 例  
 次の例では取得、 <xref:System.Windows.Automation.AutomationElement> システムのカーソル位置にします。  
  
 [!code-csharp[UIAClient\_snip\#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient\_snip\#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するパターンの識別子。</param>
        <summary>指定したパターンをこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。</summary>
        <returns>指定したパターンを表すオブジェクト。 一致するパターンがない場合は、<see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> キャッシュから指定したパターンを取得します。 指定したパターンの現在のオブジェクトを取得する <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>です。  
  
 このメソッドは、要求したパターンがあらかじめキャッシュされていない場合に例外をスローします。  
  
   
  
## 例  
 次の例では、キャッシュしてパターンを取得する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient\_snip\#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求されたパターンでは、キャッシュされていないと、要素でサポートされていないです。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したプロパティのキャッシュされた値を <see cref="T:System.Windows.Automation.AutomationElement" /> から取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 指定したプロパティのキャッシュから取得、 <xref:System.Windows.Automation.AutomationElement>です。 現在のプロパティを取得する <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティの識別子。</param>
        <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。 ターゲットユーザー インターフェイス (UI) 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
        <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素自体の UI オートメーション プロバイダーでは、プロパティをサポートする場合は、プロパティの値が返されます。 既定のプロパティが指定された場合は、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください。 <xref:System.Windows.Automation.AutomationElement>, 、など <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>します。  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 指定したプロパティを取得、 <xref:System.Windows.Automation.AutomationElement>をキャッシュします。 指定したプロパティの呼び出しの現在のオブジェクトを取得する <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>です。  
  
 このメソッドは、要求されたプロパティが既にキャッシュされていない場合に例外をスローします。  
  
   
  
## 例  
 このメソッドを使用して、キャッシュされたプロパティを取得する方法を次に示します。  
  
 [!code-csharp[UIAClient\_snip\#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient\_snip\#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求されたプロパティがキャッシュ内にありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> 用の ユーザー インターフェイス (UI) は存在しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティの識別子。</param>
        <param name="ignoreDefaultValue">指定したプロパティがサポートされていない場合に、既定値を無視するかどうかを指定する値。</param>
        <summary>指定したプロパティの値をこの <see cref="T:System.Windows.Automation.AutomationElement" /> のキャッシュから取得します。既定のプロパティを無視するように指定することもできます。</summary>
        <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 指定したプロパティのキャッシュから取得、 <xref:System.Windows.Automation.AutomationElement>です。 現在のプロパティを取得する <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>です。  
  
 渡す `false` で `ignoreDefaultValue` は呼び出すことと同じ <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>します。  
  
 要素自体の UI オートメーション プロバイダーでは、プロパティをサポートする場合は、プロパティの値が返されます。 それ以外の場合 `ignoreDefaultValue` は `false`, 、既定のプロパティで指定された [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください。 <xref:System.Windows.Automation.AutomationElement>, 、など <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>します。  
  
 このメソッドは、要求されたプロパティが既にキャッシュされていない場合に例外をスローします。  
  
   
  
## 例  
 次の例では、このメソッドを使用して、キャッシュされたプロパティを取得する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient\_snip\#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求されたプロパティはキャッシュされていません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Automation.AutomationElement" /> のクリック可能なポイントを取得します。</summary>
        <returns>クライアントがこの要素をクリックするために使用できるポイントの物理的な画面座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement> が、別のウィンドウによって完全に隠される場合します。  
  
 <xref:System.Windows.Automation.AutomationElement> クリック可能なは、次のすべての条件を満たしている場合。  
  
-   プログラムで表示されで使用できる、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリーです。  
  
-   これがスクロールされる基準完全に、親コンテナー内に存在する場合。 要素がクリップされた場合、クリック可能なである保証はありません。  
  
-   その他の UI 要素によっては、要素がわかりにくくなっていません。 場合は、要素は、その先祖以外の UI 要素によって部分的に隠されて、クリック可能なできない可能性があります。  
  
-   要素を含むウィンドウ自体もクリック可能です。 たとえば、外側のウィンドウが完全に透過的な場合、ウィンドウはクリック可能なできません。 マウスのクリックはクリックして、その下のウィンドウのため、透明なウィンドウ内のコントロールには、クリック可能なポイントは返しません。 します。  
  
-   要素がリストまたはツリー ビュー\) などのコンテナーの場合、ポイントが必要する場合は、クリック注力するコントロールの背景が発生します。 コンテナー コントロールのすべての部分が、子要素で使用されている場合は、クリック可能なことはできません。  
  
 保証はありません、コントロールで定義される時点でクリックされたときに何らかの処理をクリック可能な UI オートメーション プロバイダーでします。 コントロール操作を実行する代わりにコントロール パターンを使用してください。  
  
   
  
## 例  
 次のコードでは、コントロールのクリック可能なポイントを取得し、その時点にシステム カーソルを移動します。  
  
 [!code-csharp[UIAClient\_snip\#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient\_snip\#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">クリック可能なポイントはありません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するパターンの識別子。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したパターン オブジェクトを取得します。</summary>
        <returns>パターン オブジェクト \(指定したパターンが現在 <see cref="T:System.Windows.Automation.AutomationElement" /> でサポートされている場合\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 呼び出し時に空き領域に基づいて、指定したパターンを取得します。  
  
 形式によって [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], 、このメソッドではプロセス間のパフォーマンス オーバーヘッドが発生します。 アプリケーションは、パターンをキャッシュしを使用して取得する方法によってオーバーヘッドが集中できる <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>です。  
  
   
  
## 例  
 次の例では、このメソッドを使用して取得する方法、 <xref:System.Windows.Automation.SelectionItemPattern>, 、リスト ボックスで項目を選択に使用されます。  
  
 [!code-csharp[UIAClient\_snip\#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient\_snip\#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  例では 1 などのタスクを頻繁に繰り返されるパターンをキャッシュして使用する方が効率的でしょう <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要素では、パターンがサポートされていません。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したプロパティの現在の値を <see cref="T:System.Windows.Automation.AutomationElement" /> から取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される値、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドは、呼び出されたときに最新です。 他のアプリケーションとの対話によって、値を変更できます、 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]です。  
  
 形式によって [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], 、このメソッドではプロセス間のパフォーマンス オーバーヘッドが発生します。 プロパティをキャッシュしを使用して取得する方法によってオーバーヘッドがアプリケーションに集中できる <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティを指定する UI オートメーション プロパティ識別子。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したプロパティの値を取得します。 ターゲットユーザー インターフェイス (UI) 要素で明示的にサポートされていないプロパティに対しては、そのプロパティ型の適切な既定値が返されます。</summary>
        <returns>指定したプロパティの値が格納されているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される値、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドは、呼び出されたときに最新です。 他のアプリケーションとの対話によって、値を変更できます、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
 要素自体の UI オートメーション プロバイダーでは、プロパティをサポートする場合は、プロパティの値が返されます。 既定のプロパティが指定された場合は、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください。 <xref:System.Windows.Automation.AutomationElement>, 、など <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>します。  
  
 形式によって [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], 、このメソッドではプロセス間のパフォーマンス オーバーヘッドが発生します。 プロパティをキャッシュしを使用して取得する方法によってオーバーヘッドが集中 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>します。  
  
   
  
## 例  
 次の例の現在の値を取得する、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> プロパティです。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient\_snip\#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">取得するプロパティを指定する UI オートメーション プロパティ識別子。</param>
        <param name="ignoreDefaultValue">指定したプロパティがサポートされている場合に、既定値を無視するかどうかを指定する値。</param>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> の指定したプロパティの値を取得します。既定のプロパティを無視するように指定することもできます。</summary>
        <returns>指定したプロパティの値を格納するオブジェクト。または、要素が値を提供せず、<paramref name="ignoreDefaultValue" /> が <see langword="true" /> である場合は <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 渡す `false` で `ignoreDefaultValue` は呼び出すことと同じ <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>します。  
  
 要素自体の UI オートメーション プロバイダーでは、プロパティをサポートする場合は、プロパティの値が返されます。 それ以外の場合 `ignoreDefaultValue` は `false`, 、既定のプロパティで指定された [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください。 <xref:System.Windows.Automation.AutomationElement>, 、など <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>します。  
  
 によって返される値、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> メソッドは、呼び出されたときに最新です。 他のアプリケーションとの対話によって、値を変更できます、 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]です。  
  
 形式によって [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], 、このメソッドではプロセス間のパフォーマンス オーバーヘッドが発生します。 プロパティをキャッシュしを使用して取得する方法によってオーバーヘッドがアプリケーションに集中できる <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>です。  
  
   
  
## 例  
 次の例の現在の値を取得する、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> プロパティが指定される要素自体が、プロパティの値を指定しない場合 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient\_snip\#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> のハッシュ コードを取得します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー インターフェイス (UI) 項目に割り当てられた一意の識別子を取得します。</summary>
        <returns>ランタイム識別子を表す整数の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子は一意である保証はのみ、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] が生成されたデスクトップのです。 識別子は、時間の経過と共に再利用できます。  
  
 実行時の識別子の形式は、将来のリリースで変更があります。 返される識別子を非透過の値として扱われ、比較に対してのみ使用する必要があります。例についてを判断するかどうか、 <xref:System.Windows.Automation.AutomationElement> がキャッシュにします。  
  
   
  
## 例  
 次の例を実行時の識別子を取得する方法を示しています、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient\_snip\#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> がサポートするコントロール パターンを取得します。</summary>
        <returns>サポートされているコントロール パターンを表す <see cref="T:System.Windows.Automation.AutomationPattern" /> オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デバッグするために通常使用とします。 呼び出すことが必要です大量の処理を照会して、 <xref:System.Windows.Automation.AutomationElement> のすべての可能なパターンです。 使用する通常 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> から特定のコントロール パターンを取得する、 <xref:System.Windows.Automation.AutomationElement>です。 特定のパターンがサポートされているかどうかを確認するために、適切なプロパティを確認しますたとえば、 <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>です。  
  
   
  
## 例  
 次の例でサポートされているコントロール パターンを取得する方法、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient\_snip\#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要素でサポートされているプロパティの識別子を取得します。</summary>
        <returns>サポートされているプロパティの識別子の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返される配列がこの要素でサポートされるすべてのプロパティを識別します。ただしを含めることも、重複したエントリまたはプロパティを含む `null` または空の値。 ほとんどの場合は、使用する方がよい <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> プロパティは現在サポートされているかどうかを判断し、その現在の値を取得します。  
  
   
  
## 例  
 次の例でサポートされるプロパティを取得する方法、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient\_snip\#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">更新されたキャッシュに含めるパターンとプロパティ。</param>
        <summary>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <returns>更新されたキャッシュを持つ新しい <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 元の <xref:System.Windows.Automation.AutomationElement> は変更されません。<xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> 新しい返します <xref:System.Windows.Automation.AutomationElement>, を参照する同じ [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] と、同じ <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>します。  
  
   
  
## 例  
 次の例では、コンボ ボックスの選択内容が変更されるたびに、キャッシュを更新する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient\_snip\#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient\_snip\#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent identifier in <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 This property can also be retrieved from the <xref:System.Windows.Automation.AutomationElement.Current%2A> or <xref:System.Windows.Automation.AutomationElement.Cached%2A> properties.  
  
 This information is typically obtained from tooltips specified by providers.  
  
 Return values of the property are of type <xref:System.String>. The default value for the property is an empty string.  
  
   
  
## 例  
 The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  
  
 [!code-csharp[UIAClient\_snip\#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient\_snip\#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  
  
 [!code-csharp[UIAClient\_snip\#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient\_snip\#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 コンテンツ ビュー、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] ツリーのビューを提供する、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] のみ内のデータを表す要素を格納する、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
 要素は、コンテンツを保持できるコントロールである必要があります。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `true`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient\_snip\#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient\_snip\#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 コントロールは、ユーザーが対話型または親の情報として認識される要素、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `true`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient\_snip\#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient\_snip\#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.DockPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Automation.AutomationElement" /> が参照するユーザー インターフェイス (UI) 項目が有効かどうかを指定する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
 コントロールの有効な状態がある場合 `false`, 、子コントロールも無効であると見なされます。 親の状態の変更を制御する場合は、子要素のプロパティ変更イベントは期待できません。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient\_snip\#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例は指定したコントロール パターンがサポートされているかどうかを指定する値を取得、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.GridItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.GridPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ItemContainerPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティが適切に機能するために必要な情報を提供、 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> メソッドです。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient\_snip\#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.MultipleViewPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) 項目が画面に表示されているかどうかを示す <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 戻り値の型は <xref:System.Boolean>, 、既定値は、 `false`です。  
  
 詳細については、このプロパティが `true`, を参照してください <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>します。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient\_snip\#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient\_snip\#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 このプロパティの戻り値は、 <xref:System.Boolean>です。 返す `true` コンテンツが保護されている、それ以外であることを示す `false`します。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient\_snip\#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient\_snip\#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.RangeValuePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 このプロパティの戻り値が型 <xref:System.Boolean>, 、既定値は、 `false`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient\_snip\#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> に対して <see cref="T:System.Windows.Automation.ScrollItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ScrollPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SelectionItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SelectionPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TableItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TablePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TextPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TogglePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.TransformPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.ValuePattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Automation.AutomationElement" /> で <see cref="T:System.Windows.Automation.WindowPattern" /> コントロール パターンを使用できるかどうかを示すプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 プロパティの値の種類は返す <xref:System.Boolean>します。 プロパティの既定値は `false`です。  
  
   
  
## 例  
 次の例で指定されたコントロール パターンがサポートされているかどうかを突きとめます。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient\_snip\#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複雑な項目の視覚的表現のステータスを指定する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 戻り値はコントロール定義 <xref:System.String>します。 既定値は空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient\_snip\#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient\_snip\#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 戻り値はコントロール定義 <xref:System.String>します。 既定値は空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient\_snip\#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 次の例は、プロパティの現在の値を取得が、要素自体がプロパティの値を指定しない場合、アプリケーション定義の文字列が既定値の代わりに返されるを指定します。  
  
 [!code-csharp[UIAClient\_snip\#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient\_snip\#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに関連付けられたラベルを識別する <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.Windows.Automation.AutomationElement>します。 プロパティの既定値は `null`です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient\_snip\#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient\_snip\#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レイアウトが無効になったときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 多くの要素の参照可能範囲情報が変更されるたびに、要素のコンテナーがこのイベントが発生します。  このイベントは、クライアントによってを更新する必要のあるインジケーターとして使用、 <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> と <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> については、ツリー内の要素のキャッシュされている可能性があります。 このイベントをトリガーする推奨される変更の数は 25 です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカル言語で <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 適切に定義されたコントロールの種類がないカスタム コントロールを表す場合は、このプロパティを公開するには、プロバイダーが必要です。  
  
 プロパティの値の種類は返す <xref:System.String>します。 プロパティの既定値は、空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient\_snip\#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient\_snip\#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューを閉じたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューを開いたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.String>します。 プロパティの既定値は、空の文字列です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient\_snip\#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient\_snip\#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.Int32>します。 プロパティの既定値は 0 です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient\_snip\#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient\_snip\#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティがサポートされないことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 次の例のヘルプ テキストのプロパティを取得する、 <xref:System.Windows.Automation.AutomationElement>, を指定している <xref:System.Windows.Automation.AutomationElement.NotSupported> コントロールがそのプロパティをサポートしないかどうかに返される必要があります。  
  
 [!code-csharp[UIAClient\_snip\#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient\_snip\#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じユーザー インターフェイス (UI) 要素を参照しているかどうかを示す値を返します。</summary>
        <returns>2 つの <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが同じ UI 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Two <xref:System.Windows.Automation.AutomationElement> objects that compare as equal might contain different cached information from different points in time. <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> only tests that the objects refer to the same underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] element.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">比較対象となる最初の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">比較対象となる 2 番目の <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>指定した <see cref="T:System.Windows.Automation.AutomationElement" /> オブジェクトが別のユーザー インターフェイス (UI) 要素を参照しているかどうかを示す値を返します。</summary>
        <returns>2 つのオブジェクトが別の UI 要素を参照している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の型は <xref:System.Windows.Automation.OrientationType>です。 既定値は <xref:System.Windows.Automation.OrientationType.None> です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient\_snip\#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported> が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient\_snip\#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 このプロパティからも取得できます、 <xref:System.Windows.Automation.AutomationElement.Current%2A> または <xref:System.Windows.Automation.AutomationElement.Cached%2A> プロパティです。  
  
 プロパティの値の種類は返す <xref:System.Int32>します。 プロパティの既定値は 0 です。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。 要素が 1 つを提供しない場合は、既定値が返されます。  
  
 [!code-csharp[UIAClient\_snip\#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient\_snip\#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 次の例は、プロパティの現在の値を取得しますが、要素自体が、プロパティの値を指定しないことを指定 <xref:System.Windows.Automation.AutomationElement.NotSupported>が既定値の代わりに返されます。  
  
 [!code-csharp[UIAClient\_snip\#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient\_snip\#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のデスクトップのルート <see cref="T:System.Windows.Automation.AutomationElement" /> を取得します。</summary>
        <value>ルート要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素を使用して、ルートの出発点として、他の要素を検索するためを使用して、 <xref:System.Windows.Automation.AutomationElement.FindAll%2A> と <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> メソッドです。  
  
 ルート要素から検索する場合は必ず指定して <xref:System.Windows.Automation.TreeScope.Children> 、検索のスコープでない <xref:System.Windows.Automation.TreeScope.Descendants>します。 デスクトップのサブツリー全体を検索は、何千という項目を反復処理し、スタック オーバーフローが発生する可能性可能性があります。  
  
   
  
## 例  
 次のコード例では、デスクトップの直下のすべての子のコレクションを取得します。  
  
 [!code-csharp[UIAClient\_snip\#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient\_snip\#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のランタイム識別子を格納するプロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 ランタイム [!INCLUDE[TLA2#tla_id](~/includes/tla2sharptla-id-md.md)] プロパティを指定、 [!INCLUDE[TLA2#tla_id](~/includes/tla2sharptla-id-md.md)] の <xref:System.Windows.Automation.AutomationElement> 、デスクトップ上で一意です。  
  
 プロパティの戻り値型の配列は、 <xref:System.Int32>です。 既定値はありません。  
  
   
  
## 例  
 次の例では、プロパティの現在の値を取得します。  
  
 [!code-csharp[UIAClient\_snip\#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient\_snip\#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Automation.AutomationElement" /> にフォーカスを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの動作は、要素の UI オートメーション プロバイダーで実装に依存します。 フォーカスの設定は必ずしもが前面に、要素の表示または非表示です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Automation.AutomationElement" /> の UI はなくなりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI オートメーション ツリー構造が変更されたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒントが閉じたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒントが開いたときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーで同等の識別子を使用する必要があります <xref:System.Windows.Automation.AutomationElementIdentifiers>します。  
  
 ツールヒントは、デスクトップに一時的なし、クライアントがイベントを受け取った時点で、ツールヒントを閉じている可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, object patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するコントロール パターンの識別子。</param>
        <param name="patternObject">戻り時に、キャッシュ内にパターンが存在する場合はそのパターンが格納されます。それ以外の場合は <see langword="null" /> が格納されます。</param>
        <summary>キャッシュからコントロール パターンを取得します。</summary>
        <returns>キャッシュ内にパターンが存在する場合は <see langword="true" />。キャッシュ内に存在しない場合やサポートされていない場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、キャッシュしてコントロール パターンを取得する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient\_snip\#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">このメソッドが戻るときに、クリック可能なポイントの物理的な画面座標が格納されます。</param>
        <summary>要素内のクリック可能なポイントを取得します。</summary>
        <returns>クリック可能なポイントがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Automation.AutomationElement> が、別のウィンドウによって完全に隠される場合します。  
  
   
  
## 例  
 次の例ではクリック可能なポイントを取得しようとしました。、 <xref:System.Windows.Automation.AutomationElement>です。  
  
 [!code-csharp[UIAClient\_snip\#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient\_snip\#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, object patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">取得するコントロール パターンの識別子。</param>
        <param name="patternObject">戻り時に、コントロール パターンがサポートされている場合はそのパターンが格納されます。それ以外の場合は <see langword="null" /> が格納されます。</param>
        <summary>コントロール パターンを実装するオブジェクトを取得します。</summary>
        <returns>パターンがサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 形式によって [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], 、このメソッドではプロセス間のパフォーマンス オーバーヘッドが発生します。 アプリケーションは、パターンをキャッシュしを使用して取得する方法によってオーバーヘッドが集中できる <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>です。  
  
   
  
## 例  
 次の例では、このメソッドを使用して、コントロール パターンを取得する方法を示します。  
  
 [!code-csharp[UIAClient\_snip\#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient\_snip\#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
  </Members>
</Type>