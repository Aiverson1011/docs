<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>単一の明確な処理を開始または実行し、アクティブになったときに状態を保持しないコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールがサポートする <xref:System.Windows.Automation.InvokePattern> 同じ動作が別のコントロール パターンを通じて公開されない場合。 などの場合、 <xref:System.Windows.Automation.InvokePattern.Invoke%2A> コントロールのメソッドとして同じアクションを実行、 <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> または <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> メソッドでは、コントロールはサポートされない <xref:System.Windows.Automation.InvokePattern>します。  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] チェック ボックスやラジオのボタンは、状態を維持するなどのコントロールを表す要素をサポートして代わりに <xref:System.Windows.Automation.TogglePattern> または <xref:System.Windows.Automation.SelectionItemPattern>です。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求を送信してコントロールをアクティブ化し、その 1 つの明確なアクションを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Windows.Automation.InvokePattern.Invoke%2A> ブロックすることがなくすぐに返す必要があります。 ただし、この動作は完全に依存、 [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] プロバイダーの実装です。 シナリオで呼び出して、 <xref:System.Windows.Automation.InvokePattern.Invoke%2A> 、ブロッキング懸案事項 \(モーダル ダイアログ ボックス\) など、別の原因ヘルパー スレッドは、メソッドを呼び出す必要があります。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Automation.InvokePattern>コントロール パターンは、コントロールから取得し、 <xref:System.Windows.Automation.InvokePattern.Invoke%2A> メソッドが呼び出されます。  
  
 [!code-csharp[UIAInvokePattern\_snip\#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern\_snip\#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要素が <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンをサポートしていないか、非表示またはブロックされています。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">この要素は有効ではありません。 UI オートメーション プロバイダーが <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> プロパティの独自の処理を実装した場合に発生する可能性があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが呼び出されるか、アクティブ化されるときに発生するイベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーの相当するフィールドを使用する必要があります <xref:System.Windows.Automation.InvokePatternIdentifiers>します。  
  
 <xref:System.Windows.Automation.InvokePattern.InvokedEvent> へのパラメーターとして渡される識別子 <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>します。  
  
   
  
## 例  
 次の例では、イベント ハンドラー イベントを識別 Invoked イベントと比較することによって、 <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> とイベントの引数で、 <xref:System.Windows.Automation.InvokePattern.InvokedEvent> 識別子フィールドです。  
  
 [!code-csharp[UIAClient\_snip\#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient\_snip\#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Automation.InvokePattern" /> コントロール パターンを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.  
  
 The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.  
  
   
  
## 例  
 In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  
  
 [!code-csharp[UIAInvokePattern\_snip\#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern\_snip\#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>