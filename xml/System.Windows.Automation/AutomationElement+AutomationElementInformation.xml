<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用されるプロパティのアクセサーを含む、 <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> または <see cref="P:System.Windows.Automation.AutomationElement.Current" /> プロパティです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロパティから直接アクセスできます <xref:System.Windows.Automation.AutomationElement.Cached%2A> と <xref:System.Windows.Automation.AutomationElement.Current%2A>; を取得する必要はありません、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> 自体を構成します。  
  
 この構造体のプロパティを使用しても取得できます <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> と <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>, から対応する識別子を使用して <xref:System.Windows.Automation.AutomationElement>します。 たとえば、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=fullName> プロパティがで識別される、 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=fullName> フィールドです。 個々 のプロパティの詳細については、それぞれの識別子のリファレンス ページでご確認いただけます各リファレンス トピックの「解説」セクションのリンクを参照してください。  
  
   
  
## 例  
 例を次に、どのように <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> プロパティがこの構造体から取得します。  
  
 [!code-csharp[UIAClient\_snip\#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient\_snip\#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のアクセラレータ キーの組み合わせを含む文字列を取得します。</summary>
        <value>要素に関連付けられているアクションを呼び出すキーの組み合わせのシーケンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセラレータ キーの組み合わせは、アクションを呼び出します。 たとえば、ctrl キーを押しながら O は、多くの場合、使用を呼び出す、 **ファイルを開く** \] ダイアログ ボックス。[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] アクセラレータ キー プロパティが常に設定されている要素を実装、 <xref:System.Windows.Automation.InvokePattern> クラスです。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のアクセス キーの文字を含む文字列を取得します。</summary>
        <value>その要素をアクティブ化に使用される要素に関連付けられている文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス キーは、メニューのメニュー項目、または接続されているメニュー機能を有効にするボタンなどのコントロールのラベルのテキスト内の文字です。 たとえば、文字"O"を多くの場合、使用を呼び出します、 **開く** からファイル コモン ダイアログ ボックス、 **ファイル** メニュー。[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] アクセス キー プロパティが常に設定されている要素を実装、 <xref:System.Windows.Automation.InvokePattern> クラスです。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>含む文字列を取得、 UI オートメーション 識別子 \(ID\) 要素。</summary>
        <value>ID コンテナー内の兄弟間で一意である要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用される、 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> 常にローカルの言語に関係なく、アプリケーションの任意のインスタンスで同じ値に要素が必要です。 値は、デスクトップ全体で、兄弟要素間で一意であるが、必ずしも一意ではありませんをする必要があります。 など、アプリケーションの複数のインスタンスまたは Microsoft Windows エクスプ ローラーで、複数のフォルダー ビューでは、同じ要素に含まれる <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, 、や"です。  
  
 一方のサポート、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> を推奨、テストを容易にこのプロパティは必須ではありません。 サポートされている場合、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> は UI の言語に関係なく実行されるスクリプトのテスト自動化を作成するに便利です。 クライアントでは何も想定しないように注意してに関する、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>他のアプリケーションによって公開されます。<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 他のリリースで安定しているは必ずしも保証されませんやアプリケーションのビルドします。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>完全に要素を囲む四角形の座標を取得します。</summary>
        <value>外側の四角形の座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返された四角形は、クリック可能なポイントを含めることができます。 インスタンスが、これが発生いるときに、 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目は、不規則な形状またはクリック可能な領域、または他の隠されて [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 要素。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの開発者によって割り当てられた要素のクラス名を含む文字列を取得します。</summary>
        <value>コントロールの開発者によって割り当てられているクラス名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値は、実装によって異なります。 プロパティは、テスト環境で役立ちます。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.ClassNameProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素の <see cref="T:System.Windows.Automation.ControlType" /> を取得します。</summary>
        <value>この要素の相互作用モデル。 既定値は <see cref="F:System.Windows.Automation.ControlType.Custom" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Control type describes a known interaction model for arbitrary [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elements without relying on a localized control type or combination of complex logic rules.  
  
 The only case where this property can change at run time is for a control that supports <xref:System.Windows.Automation.MultipleViewPattern>. An example is the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ListView control, which can change from <xref:System.Windows.Automation.ControlType.DataGrid> to <xref:System.Windows.Automation.ControlType.List>, depending on the current view.  
  
 For more information, see <xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になる UI フレームワークの名前を取得します。</summary>
        <value>"Win32"、"WinForm"または"DirectUI"などの UI フレームワークの名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロパティの値の種類は返す <xref:System.String>します。 既定値は空の文字列です。  
  
 このプロパティは、特殊なケースを UI フレームワーク全体に適用するアプリケーションを使用します。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素にキーボード フォーカスがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 要素にキーボード フォーカスがある場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテナー内の要素がフォーカス <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A> は、コンテナー要素にも当てはまります。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素に関連付けられているヘルプ テキストを取得します。</summary>
        <value>要素のツールヒント ヘルプ テキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.HelpTextProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素は、コンテンツの要素であるかどうかを指定する値を取得します。</summary>
        <value>
          <see langword="true" /> 要素がコンテンツの要素である場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテンツの要素には、ユーザーに表示されるデータが含まれています。 コンテンツの要素の例は、リスト ボックスまたはダイアログ ボックスのボタン内のアイテムです。 周辺の要素とも呼ばれます。 非コンテンツ要素は通常、複合コントロールのコンテンツの操作に使用します。たとえば、ドロップダウン コントロールにボタンをクリックします。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素がコントロールとして表示されるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 要素はコントロールとして表示される場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 ユーザー インターフェイス (UI) によって参照される項目、 UI オートメーション 要素が有効にします。</summary>
        <value>
          <see langword="true" /> コントロールが有効の場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> プロパティを変更することができますので、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] の相互作用します。 呼び出して更新されたキャッシュを取得する必要があります <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> 場合の値、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> プロパティは、キャッシュ要求を発行した後に、変更された可能性があります。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 UI オートメーション 要素がキーボード フォーカスを受け取ることができます。</summary>
        <value>
          <see langword="true" /> コントロールがキーボード フォーカスを受け取る場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 UI オートメーション 要素が画面に表示します。</summary>
        <value>
          <see langword="true" /> 場合は、コントロールが非表示です。それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素が完全にスクロールされる基準かどうかを示すブール値 \(たとえば、リスト ボックス内のアイテムはコンテナー オブジェクトのビューポートの外側\) 見えない \(たとえば、ツリー ビュー、メニューのまたは最小化されたウィンドウ内の項目\) 折りたたまれているか。  
  
 要素に注力することを引き起こす可能性のあるクリック可能なポイントがある場合は、要素の一部が画面外にある場合でも、画面上と見なされます。  
  
 プロパティの値は閉じても、他のウィンドウで、要素が特定のモニターに表示されているかどうかの影響を受けません。  
  
 IsOffscreen がある場合 `true,` 要素がスクロールされる基準またはアウトする、折りたたまれているではまだ、UI のエンドユーザーの知覚の一部を戻すことのできるビューにスクロールし、ドロップダウン コントロールをクリックするとなどの簡単な操作でします。  
  
 要素が、エンドユーザーが認識するいないと、「プログラムを使用して非表示」\(たとえば、ダイアログ ボックスが閉じられたが、基礎となるオブジェクトが、アプリケーションでキャッシュされている\) と呼びますに入らなかった機能である場合、そのから削除するか、要素ツリーに IsOffscreen の値を設定するのではなく `true`です。  
  
 値が `true` コンテナーの場合も `true` のコンテナー要素の子孫です。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 UI オートメーション 要素には、保護されたコンテンツが含まれています。</summary>
        <value>
          <see langword="true" /> 要素には、保護されたコンテンツが含まれている場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、コントロールのテキストの内容を読み上げる読み取る必要があるかどうかを確認するスクリーン リーダーなどのアプリケーションを使用します。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 UI オートメーション 要素がフォーム上の入力は必須です。</summary>
        <value>
          <see langword="true" /> 要素が必要な場合に記入します。それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素内の項目の状態の説明を取得します。</summary>
        <value>状態の説明です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、要素が、その項目に関する状態を伝達するかどうかを確認するためにクライアントを使用します。 たとえば、メッセージング アプリケーションであれば、連絡先に関連付けられている項目には、「ビジー状態」または「接続済み」があります。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アイテムの種類の説明を取得します。</summary>
        <value>項目を説明するローカライズされた文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、リスト、ツリー ビュー、またはデータ グリッド内の項目に関する情報を取得します。 たとえば、ファイルのディレクトリ ビュー内のアイテムには、「ドキュメント ファイル」または「フォルダー」があります。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この要素のテキスト ラベルを格納する要素を取得します。</summary>
        <value>この要素のラベルとなる要素です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、たとえば、コンボ ボックスの静的テキスト ラベルを取得する使用可能性があります。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.LabeledByProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール型の説明を取得します。</summary>
        <value>"ボタン" など、コントロール型のローカライズされた説明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素の名前を取得します。</summary>
        <value>名前、 ユーザー インターフェイス (UI) 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素を検索する要素の名前を使用できる、 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 要素ツリーの場合、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 要素のプロパティがサポートされていません。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.NameProperty>」を参照してください。  
  
   
  
## 例  
 例を次に、どのように <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> プロパティを取得します。  
  
 [!code-csharp[UIAClient\_snip\#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient\_snip\#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のウィンドウのハンドルを取得します。</summary>
        <value>いずれかが存在する場合は、ウィンドウのハンドルです。それ以外の場合 0 を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの方向を取得します。</summary>
        <value>方向です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スクロール バーと垂直方向または水平方向のいずれかを持てるスライダーなどのコントロールでは、このプロパティがサポートされています。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.OrientationProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスを取得 識別子 \(ID\) この要素のです。</summary>
        <value>ID の要素をホストするプロセスです。 プロパティの既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロセス [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] はオペレーティング システムによって割り当てられます。 確認できるように、 **PID** の列、 **プロセス** タスク マネージャーでのタブをクリックします。  
  
 詳細については、「<xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>