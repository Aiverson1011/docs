<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>アクセス制御を表す監査ファイルまたはディレクトリのセキュリティとします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity> クラスの基本クラスは、 <xref:System.Security.AccessControl.FileSecurity> と <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  これらのクラスは、システム ファイルまたはディレクトリのアクセス権をすべて表すし、アクセス試行を監査する方法を定義します。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> クラスは、ルールのセットとしてアクセスおよび監査の権限を表します。 各アクセス規則がによって表される、 <xref:System.Security.AccessControl.FileSystemAccessRule> オブジェクト、各監査規則がによって表されるときに、 <xref:System.Security.AccessControl.FileSystemAuditRule> オブジェクトです。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> クラスは、基になる Microsoft Windows ファイルのセキュリティ システムの抽象化します。 このシステムは、各ファイルまたはディレクトリにファイルまたはディレクトリへのアクセスを制御するには、随意アクセス制御リスト \(DACL\) とシステム アクセス制御リスト \(SACL\) を監査するアクセス制御の試行を指定します。<xref:System.Security.AccessControl.FileSystemAccessRule> と <xref:System.Security.AccessControl.FileSystemAuditRule> クラスは、Dacl と Sacl を構成するアクセス制御エントリ \(Ace\) の抽象化します。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> クラスには、Dacl と Sacl の詳細の多くが非表示には、ACE の順序や null DACL について心配する必要はありません。  
  
 ファイルへの新しいまたは変更されたアクセス制御リスト \(ACL\) の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSecurity> クラスを追加し、ファイルからのアクセス制御リスト \(ACL\) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙体を取得、 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> クラスのアクセス権を表現するために使用します。</summary>
        <value>A <see cref="T:System.Type" /> を表すオブジェクト、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 列挙します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生するクラス、 <xref:System.Security.AccessControl.FileSystemSecurity> クラスのオーバーライド、 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> プロパティと戻り値を使用してアクセス権を表す型。 配列または複数のセキュリティ オブジェクトの種類が含まれているコレクションを使用する場合は、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> ユーザー アカウントを表すオブジェクト。</param>
        <param name="accessMask">アクセスの種類を指定する整数。</param>
        <param name="isInherited">
          <see langword="true" /> アクセス規則が継承されている場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="inheritanceFlags">いずれか、 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 子オブジェクトへのアクセス マスクを反映する方法を指定する値。</param>
        <param name="propagationFlags">いずれか、 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 子オブジェクトへのアクセス制御エントリ \(Ace\) を反映する方法を指定する値。</param>
        <param name="type">いずれか、 <see cref="T:System.Security.AccessControl.AccessControlType" /> アクセスが許可または拒否するかどうかを指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> を指定したアクセス権、アクセス制御、およびフラグで指定されたユーザーの新しいアクセス制御規則を表すクラス。</summary>
        <returns>新しい <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> を指定したアクセス権、アクセス制御、およびフラグで指定されたユーザーの新しいアクセス制御規則を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス制御規則を作成することをお勧めのコンス トラクターを使用して、 <xref:System.Security.AccessControl.FileSystemAccessRule> クラスです。  
  
 戻り値の型、 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> メソッドは、基本クラス <xref:System.Security.AccessControl.AccessRule>, 、戻り値は、派生クラスを安全にキャストすることができますが、します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, 、<paramref name="inheritanceFlags" />, 、<paramref name="propagationFlags" />, 、または <paramref name="type" /> パラメーターが無効な値を指定します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> パラメーターが <see langword="null" /> です。  
  
 または  
  
 <paramref name="accessMask" /> パラメーターが 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> パラメーターは、型のどちらも <see cref="T:System.Security.Principal.SecurityIdentifier" />, 、やなどの型の <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙体を取得、 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> クラスのアクセス ルールを表現するために使用します。</summary>
        <value>A <see cref="T:System.Type" /> を表すオブジェクト、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生するクラス、 <xref:System.Security.AccessControl.FileSystemSecurity> クラスのオーバーライド、 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> プロパティと戻り値を使用して、アクセス ルールを表す型。 配列または複数のセキュリティ オブジェクトの種類が含まれているコレクションを使用する場合は、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切なアクセス規則の種類を決定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリに追加するアクセス制御リスト \(ACL\) アクセス許可を表すオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリには、指定のアクセス制御リスト \(ACL\) のアクセス許可を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> メソッド内に含まれるルールの一覧に新しいルールを追加する、 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  
  
 指定したルールのアクセス制御リスト \(ACL\) が既に存在する場合、 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> メソッドは例外が 1 つのルールを追加しても: <xref:System.Security.AccessControl.FileSystemAccessRule> を使用して作成されたオブジェクト、 <xref:System.Security.AccessControl.AccessControlType.Deny> 列挙値を使用して作成されたオブジェクトを置き換える、 <xref:System.Security.AccessControl.AccessControlType.Allow> 列挙値。  
  
 ファイルに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
 設定されていないアクセス規則を追加すると、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグは、ルールに自動的に追加されます。  指定せず、ルールを後で削除する場合、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、フラグは自動的に削除されます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSecurity> クラスを追加し、ファイルからのアクセス制御リスト \(ACL\) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> ファイルまたはディレクトリに追加する監査規則を表すオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリには、指定した監査規則を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> メソッド内に含まれるルールの一覧に新しい監査規則を追加する、 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  
  
 指定したルールの監査規則が既に存在する場合、 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> メソッドは、ルールを追加します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 監査規則を使用して、ファイルに追加する方法、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> ファイルから監査規則を削除する方法です。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule\#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> ユーザー アカウントを表すオブジェクト。</param>
        <param name="accessMask">アクセスの種類を指定する整数。</param>
        <param name="isInherited">
          <see langword="true" /> アクセス規則が継承されている場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="inheritanceFlags">いずれか、 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 子オブジェクトへのアクセス マスクを反映する方法を指定する値。</param>
        <param name="propagationFlags">いずれか、 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 子オブジェクトへのアクセス制御エントリ \(Ace\) を反映する方法を指定する値。</param>
        <param name="flags">いずれか、 <see cref="T:System.Security.AccessControl.AuditFlags" /> を実行する監査の種類を指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 指定されたユーザーの指定した監査規則を表すクラス。</summary>
        <returns>新しい <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 指定されたユーザーの指定した監査規則を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 監査規則を作成することをお勧めのコンス トラクターを使用して、 <xref:System.Security.AccessControl.FileSystemAuditRule> クラスです。  
  
 戻り値の型、 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> メソッドは、基本クラス <xref:System.Security.AccessControl.AuditRule>, 、戻り値は、派生クラスを安全にキャストすることができますが、します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" />, 、<paramref name="inheritanceFlags" />, 、<paramref name="propagationFlags" />, 、または <paramref name="flags" /> プロパティが無効な値を指定します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> プロパティが <see langword="null" /> です。  
  
 または  
  
 <paramref name="accessMask" /> プロパティが 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> プロパティは、型のどちらも <see cref="T:System.Security.Principal.SecurityIdentifier" />, 、やなどの型の <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>型を取得、 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 監査規則を表すクラスします。</summary>
        <value>A <see cref="T:System.Type" /> を表すオブジェクト、 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> クラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生するクラス、 <xref:System.Security.AccessControl.FileSystemSecurity> クラスのオーバーライド、 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> プロパティと戻り値を使用して監査権限を表す型。 配列または複数のセキュリティ オブジェクトの種類が含まれているコレクションを使用する場合は、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な監査規則の種類を決定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリから削除するアクセス制御リスト \(ACL\) アクセス許可を表すオブジェクト。</param>
        <summary>一致するすべての削除許可または拒否のアクセス制御リスト \(ACL\) から現在のファイルまたはディレクトリ。</summary>
        <returns>
          <see langword="true" /> アクセス ルールが削除された場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> メソッドはすべて一致するか、削除 <xref:System.Security.AccessControl.AccessControlType.Deny> アクセス ルールまたはすべてに一致する <xref:System.Security.AccessControl.AccessControlType.Allow> 現在からアクセス規則 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  たとえば、このメソッドを使用してすべてを削除することができます <xref:System.Security.AccessControl.AccessControlType.Deny> を渡すことによって、ユーザーのルールにアクセス、 <xref:System.Security.AccessControl.FileSystemAccessRule> を使用して作成されたオブジェクト、 <xref:System.Security.AccessControl.AccessControlType.Deny> 値、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値、およびユーザー アカウントです。  これを行うときに、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> メソッドを指定する、拒否のルールの削除、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値または <xref:System.Security.AccessControl.FileSystemRights.Write> 値。  
  
 ファイルへの新しいまたは変更されたアクセス制御リスト \(ACL\) の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
 設定されていないアクセス規則を追加すると、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグは、ルールに自動的に追加されます。  指定せず、ルールを後で削除する場合、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、フラグは自動的に削除されます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSecurity> クラスを追加し、ファイルからのアクセス制御リスト \(ACL\) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリから、ユーザーがアクセス制御リスト \(ACL\) のアクセス許可を指定するオブジェクトを削除する必要があります。</param>
        <summary>現在のファイルまたはディレクトリから指定されたユーザーのすべてのアクセス制御リスト \(ACL\) 権限を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> メソッドは、指定されたユーザーのすべてのアクセス制御リスト \(ACL\) 権限を削除します。  メソッドのすべての値が無視、 <xref:System.Security.AccessControl.FileSystemAccessRule> ユーザー アカウントを除くオブジェクトです。  
  
 ファイルに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
 設定されていないアクセス規則を追加すると、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグは、ルールに自動的に追加されます。  指定せず、ルールを後で削除する場合、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、フラグは自動的に削除されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリから、ユーザーがアクセス制御リスト \(ACL\) のアクセス許可を指定するオブジェクトを削除する必要があります。</param>
        <summary>一致する単一を許可または削除した現在のファイルまたはディレクトリからのアクセス制御リスト \(ACL\) のアクセス許可を拒否します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> メソッドは、指定された削除 <xref:System.Security.AccessControl.AccessControlType.Deny> アクセス ルールまたは指定した照合 <xref:System.Security.AccessControl.AccessControlType.Allow> アクセス規則を現在 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  このメソッドを使用して、指定された削除するなどの <xref:System.Security.AccessControl.AccessControlType.Deny> を渡すことによってユーザーのアクセス規則、 <xref:System.Security.AccessControl.FileSystemAccessRule> を使用して作成されたオブジェクト、 <xref:System.Security.AccessControl.AccessControlType.Deny> 値、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値、およびユーザー アカウントです。  これを行うときに、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> メソッドを示す拒否ルールのみを削除する、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値。  指定するすべての拒否規則は削除されません、 <xref:System.Security.AccessControl.FileSystemRights.Write> 値。  
  
 ファイルへの新しいまたは変更されたアクセス制御リスト \(ACL\) の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
 設定されていないアクセス規則を追加すると、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグは、ルールに自動的に追加されます。  指定せず、ルールを後で削除する場合、 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> フラグ、フラグは自動的に削除されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> ファイルまたはディレクトリから削除する監査規則を表すオブジェクト。</param>
        <summary>一致するすべての削除を許可または現在のファイルまたはディレクトリから監査規則を拒否します。</summary>
        <returns>
          <see langword="true" /> 監査規則が削除された場合それ以外の場合、 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> メソッドはすべて一致するか、削除 <xref:System.Security.AccessControl.AccessControlType.Deny> 監査規則またはすべてに一致する <xref:System.Security.AccessControl.AccessControlType.Allow> 監査規則を現在 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  たとえば、このメソッドを使用してすべてを削除することができます <xref:System.Security.AccessControl.AccessControlType.Deny> を渡すことによって、ユーザーのルールを監査、 <xref:System.Security.AccessControl.FileSystemAuditRule> を使用して作成されたオブジェクト、 <xref:System.Security.AccessControl.AccessControlType.Deny> 値、 <xref:System.Security.AccessControl.AuditFlags.Failure> 値、およびユーザー アカウントです。  これを行うときに、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> メソッドを指定する、拒否のルールの削除、 <xref:System.Security.AccessControl.AuditFlags.Failure> 値または <xref:System.Security.AccessControl.AuditFlags.Success> 値。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 監査規則を使用して、ファイルに追加する方法、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> ファイルから監査規則を削除する方法です。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule\#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> ファイルまたはディレクトリから監査規則を削除するか、ユーザーを指定するオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから指定されたユーザーのすべての監査規則を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> メソッドは、指定したユーザーのすべての監査規則を削除します。  すべての値を無視して、 <xref:System.Security.AccessControl.FileSystemAuditRule> ユーザー アカウントを除くオブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> ファイルまたはディレクトリから削除する監査規則を表すオブジェクト。</param>
        <summary>削除一致する単一の許可または拒否監査規則、現在のファイルまたはディレクトリ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> メソッドは、指定された対応する、削除 <xref:System.Security.AccessControl.AccessControlType.Deny> ルールと一致する指定された監査 <xref:System.Security.AccessControl.AccessControlType.Allow> 監査規則を現在 <xref:System.Security.AccessControl.FileSystemSecurity> オブジェクトです。  このメソッドを使用して、指定された削除するなどの <xref:System.Security.AccessControl.AccessControlType.Deny> を渡すことによってユーザーの監査規則、 <xref:System.Security.AccessControl.FileSystemAuditRule> を使用して作成されたオブジェクト、 <xref:System.Security.AccessControl.AccessControlType.Deny> 値、 <xref:System.Security.AccessControl.AuditFlags.Failure> 値、およびユーザー アカウントです。  これを行うときに、 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> メソッドを指定する拒否ルールのみを削除する、 <xref:System.Security.AccessControl.AuditFlags.Failure> 値。  指定するすべての拒否規則は削除されません、 <xref:System.Security.AccessControl.AuditFlags.Success> 値。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリに追加するアクセス制御リスト \(ACL\) アクセス許可を表すオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリを指定のアクセス制御リスト \(ACL\) のアクセス許可を追加し、一致するすべての ACL アクセス許可を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> メソッドを指定したアクセス制御リスト \(ACL\) ルールを追加またはに一致する同じ ACL ルールを上書き、 `rule` パラメーター。  たとえば場合、 `rule` パラメーターを指定、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値と <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> メソッドを指定するのと同じ ACL 規則の検索、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値と同じルールが上書きされます。  場合、 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> メソッドを指定するのと同じ ACL 規則の検索、 <xref:System.Security.AccessControl.FileSystemRights.Write> 値と同じルールも上書きされます。  
  
 ファイルに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> ファイルまたはディレクトリを設定するアクセス制御リスト \(ACL\) アクセス許可を表すオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリは、指定したアクセス制御リスト \(ACL\) のアクセス許可を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> メソッドを指定したアクセス制御リスト \(ACL\) ルールを追加またはに一致する同じ ACL ルールを上書き、 <xref:System.Security.AccessControl.FileSystemRights> の値、 `rule` パラメーター。  たとえば場合、 `rule` パラメーターを指定、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値と <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> メソッドを指定するのと同じ ACL 規則の検索、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値と同じルールが上書きされます。  場合、 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> メソッドを指定するのと同じ ACL 規則の検索、 <xref:System.Security.AccessControl.FileSystemRights.Write> 値と同じルールは上書きされません。  
  
 ファイルに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.File.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  ディレクトリに新しいまたは変更された ACL の情報を永続化を使用して、 <xref:System.IO.Directory.SetAccessControl%2A> または <xref:System.IO.FileInfo.SetAccessControl%2A> メソッドです。  
  
 ファイルから ACL 情報を取得するには、 <xref:System.IO.File.GetAccessControl%2A> または <xref:System.IO.FileInfo.GetAccessControl%2A> メソッドです。  ディレクトリから ACL 情報を取得するには、 <xref:System.IO.Directory.GetAccessControl%2A> または <xref:System.IO.DirectoryInfo.GetAccessControl%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">A <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> ファイルまたはディレクトリを設定する監査規則を表すオブジェクト。</param>
        <summary>現在のファイルまたはディレクトリの指定した監査規則を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> メソッドを指定した監査規則を追加またはに一致する任意のと同じ監査規則を上書き、 <xref:System.Security.AccessControl.FileSystemRights> の値、 `rule` パラメーター。  たとえば場合、 `rule` パラメーターを指定、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値、および <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> メソッドを指定するのと同じ監査規則を検索する、 <xref:System.Security.AccessControl.FileSystemRights.Read> 値と同じルールが上書きされます。  場合、 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> メソッドを指定するのと同じ監査規則の検索、 <xref:System.Security.AccessControl.FileSystemRights.Write> 値と同じルールは上書きされません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>