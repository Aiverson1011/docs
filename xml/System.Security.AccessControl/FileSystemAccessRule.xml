<Type Name="FileSystemAccessRule" FullName="System.Security.AccessControl.FileSystemAccessRule">
  <TypeSignature Language="C#" Value="public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイルまたはディレクトリのアクセス規則を定義するアクセス制御エントリ \(ACE\) の抽象化を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.AccessControl.FileSystemAccessRule> クラスを表します \(読み取り、書き込み、およびなど\) を提供するアクセスの種類のユーザー アカウントを指定する基になるアクセス制御エントリ \(ACE\) の抽象化および許可するか、その権限を拒否するかどうか。  このクラスは、子オブジェクトへのアクセス規則を反映する方法も指定できます。  
  
 使用して、 <xref:System.Security.AccessControl.FileSystemAccessRule> クラスの新しいアクセス ルールを作成します。  ルールを使用して、永続化できる、 <xref:System.Security.AccessControl.FileSecurity> または <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSecurity> クラスを追加し、ファイルからのアクセス制御エントリ \(ACE\) を削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> ユーザー アカウントへの参照をカプセル化するオブジェクト。</param>
        <param name="fileSystemRights">いずれか、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> アクセス規則に関連付けられている操作の種類を指定します。</param>
        <param name="type">いずれか、 <see cref="T:System.Security.AccessControl.AccessControlType" /> 許可するか、操作を拒否するかどうかを指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスのユーザー アカウント、アクセス ルールに関連付けられている操作の種類を指定する値を許可するか、操作を拒否するかを指定する値への参照を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用できる永続化することを使用してアクセス制御規則を作成する、 <xref:System.Security.AccessControl.FileSecurity> または <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  アクセス制御規則では、どのアクションが許可または Microsoft Windows を実行しているコンピューターでは、使用を決定するユーザー アカウントの権限を定義します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> パラメーターがない、 <see cref="T:System.Security.Principal.IdentityReference" /> オブジェクトです。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">正しくない列挙値が渡された、 <paramref name="type " />パラメーター。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">ユーザー アカウントの名前。</param>
        <param name="fileSystemRights">いずれか、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> アクセス規則に関連付けられている操作の種類を指定します。</param>
        <param name="type">いずれか、 <see cref="T:System.Security.AccessControl.AccessControlType" /> 許可するか、操作を拒否するかどうかを指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスのユーザー アカウント、アクセス ルールに関連付けられている操作の種類を指定する値を許可するか、操作を拒否するかどうかを示す値の名前を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用できる永続化することを使用してアクセス制御規則を作成する、 <xref:System.Security.AccessControl.FileSecurity> または <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  アクセス制御規則では、どのアクションが許可または Microsoft Windows を実行しているコンピューターでは、使用を決定するユーザー アカウントの権限を定義します。  
  
 `identity` パラメーターは、現在のコンピューターまたはドメインの有効なアカウントを識別する必要があります。  文字列は、次の形式では、ここで `DOMAIN` 有効なドメインまたはコンピューター名の名前を指定し、 `account` ドメインまたはコンピューター上の有効なユーザー アカウントの名前を指定します: `DOMAIN\account`です。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Security.AccessControl.FileSecurity> クラスを追加し、ファイルからのアクセス制御エントリ \(ACE\) を削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl\-SetAccessControl\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">正しくない列挙値が渡された、 <paramref name="type " />パラメーター。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> ユーザー アカウントへの参照をカプセル化するオブジェクト。</param>
        <param name="fileSystemRights">いずれか、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> アクセス規則に関連付けられている操作の種類を指定します。</param>
        <param name="inheritanceFlags">いずれか、 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 子オブジェクトにアクセス マスクを反映する方法を指定する値。</param>
        <param name="propagationFlags">いずれか、 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 子オブジェクトにアクセス制御エントリ \(Ace\) を反映する方法を指定する値。</param>
        <param name="type">いずれか、 <see cref="T:System.Security.AccessControl.AccessControlType" /> 許可するか、操作を拒否するかどうかを指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスのユーザー アカウント、アクセス規則、権限を継承する方法を決定する値、権限の反映方法を決定する値を許可するか、操作を拒否するかどうかを示す値に関連する操作の種類を指定する値への参照を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用できる永続化することを使用してアクセス制御規則を作成する、 <xref:System.Security.AccessControl.FileSecurity> または <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  アクセス制御規則では、どのアクションが許可または Microsoft Windows を実行しているコンピューターでは、使用を決定するユーザー アカウントの権限を定義します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> パラメーターがない、 <see cref="T:System.Security.Principal.IdentityReference" /> オブジェクトです。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">正しくない列挙値が渡された、 <paramref name="type " />パラメーター。  
  
 または  
  
 正しくない列挙値が渡された、 <paramref name="inheritanceFlags " />パラメーター。  
  
 または  
  
 正しくない列挙値が渡された、 <paramref name="propagationFlags " />パラメーター。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">ユーザー アカウントの名前。</param>
        <param name="fileSystemRights">いずれか、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> アクセス規則に関連付けられている操作の種類を指定します。</param>
        <param name="inheritanceFlags">いずれか、 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 子オブジェクトにアクセス マスクを反映する方法を指定する値。</param>
        <param name="propagationFlags">いずれか、 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 子オブジェクトにアクセス制御エントリ \(Ace\) を反映する方法を指定する値。</param>
        <param name="type">いずれか、 <see cref="T:System.Security.AccessControl.AccessControlType" /> 許可するか、操作を拒否するかどうかを指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスのユーザー アカウント、アクセス規則、権限を継承する方法を決定する値、権限の反映方法を決定する値を許可するか、操作を拒否するかどうかを示す値に関連する操作の種類を指定する値の名前を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用できる永続化することを使用してアクセス制御規則を作成する、 <xref:System.Security.AccessControl.FileSecurity> または <xref:System.Security.AccessControl.DirectorySecurity> クラスです。  アクセス制御規則では、どのアクションが許可または Microsoft Windows を実行しているコンピューターでは、使用を決定するユーザー アカウントの権限を定義します。  
  
 `identity` パラメーターは、現在のコンピューターまたはドメインの有効なアカウントを識別する必要があります。  文字列は、次の形式では、ここで `DOMAIN` 有効なドメインまたはコンピューター名の名前を指定し、 `account` ドメインまたはコンピューター上の有効なユーザー アカウントの名前を指定します: `DOMAIN\account`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">正しくない列挙値が渡された、 <paramref name="type " />パラメーター。  
  
 または  
  
 正しくない列挙値が渡された、 <paramref name="inheritanceFlags " />パラメーター。  
  
 または  
  
 正しくない列挙値が渡された、 <paramref name="propagationFlags " />パラメーター。</exception>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Security.AccessControl.FileSystemRights" /> に現在関連付けられたフラグ <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Security.AccessControl.FileSystemRights" /> に現在関連付けられたフラグ <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>