<Type Name="Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator">
  <TypeSignature Language="C#" Value="public struct Dictionary&lt;TKey,TValue&gt;.ValueCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Dictionary`2/ValueCollection/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> の要素を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **languageKeyword tag is not supported!!!!**  
 statement of the C\# language \(**languageKeyword tag is not supported!!!!**  
 in C\+\+, **languageKeyword tag is not supported!!!!**  
 in Visual Basic\) hides the complexity of enumerators. Therefore, using **languageKeyword tag is not supported!!!!**  
 is recommended, instead of directly manipulating the enumerator.  
  
 Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  
  
 Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.  
  
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called. <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the next element.  
  
 If <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returns **languageKeyword tag is not supported!!!!**  
. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> also return **languageKeyword tag is not supported!!!!**  
. If the last call to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned **languageKeyword tag is not supported!!!!**  
, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  
  
 An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  
  
 The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread\-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  
  
 Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public TValue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置の要素を取得します。</summary>
        <value>
          <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> のうち、列挙子の現在位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> is undefined under any of the following conditions:  
  
-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.   <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.  
  
-   The last call to <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned **languageKeyword tag is not supported!!!!**  
    , which indicates the end of the collection.  
  
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called. <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> to the next element. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  
  
> [!NOTE]
>  For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element; the value of the property is undefined.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> の次の要素に進めます。</summary>
        <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子がコレクション、および最初の呼び出しの最初の要素の前に配置されている列挙子が作成されると、 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> 列挙子をコレクションの最初の要素に進めます。  
  
 場合 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> コレクション、列挙子の末尾が、コレクション内の最後の要素の後に配置されているパスと <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> 返します `false`します。 列挙子があるときはこの位置にある場合、それ以降の呼び出しは、 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> を返すことも `false`です。  
  
 コレクションが変更されない限り、列挙子は有効です。 追加、変更、削除、要素など、コレクションに変更が加えられた場合、列挙子は無効になり回復できなくなります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置の要素を取得します。</summary>
        <value>コレクション内の、列挙子の現在位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.IEnumerator.Current%2A> 次の条件のいずれかで定義されていません。  
  
-   列挙子が作成された直後後、または後すぐに、コレクションの最初の要素の前に、列挙子が配置されている <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されます。<xref:System.Collections.IEnumerator.MoveNext%2A> 値を読み取る前にコレクションの最初の要素を列挙子を進めるに呼び出す必要があります <xref:System.Collections.IEnumerator.Current%2A>します。  
  
-   最後の呼び出しを <xref:System.Collections.IEnumerator.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
 <xref:System.Collections.IEnumerator.Current%2A> まで同じオブジェクトを返します <xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されます。<xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。 間にコレクションが変更された場合 <xref:System.Collections.IEnumerator.MoveNext%2A> と <xref:System.Collections.IEnumerator.Current%2A>, 、<xref:System.Collections.IEnumerator.Current%2A> 、列挙子が既に無効になっている場合でもに設定されている要素を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出した後 <xref:System.Collections.IEnumerator.Reset%2A>, 、呼び出す必要があります <xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進める <xref:System.Collections.IEnumerator.Current%2A>します。  
  
 コレクションが変更されない限り、列挙子は有効です。 追加、変更、削除、要素など、コレクションに変更が加えられた場合、列挙子は無効になり回復できなくなります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>