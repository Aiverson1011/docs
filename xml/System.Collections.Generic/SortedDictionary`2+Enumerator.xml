<Type Name="SortedDictionary&lt;TKey,TValue&gt;+Enumerator" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+Enumerator">
  <TypeSignature Language="C#" Value="public struct SortedDictionary&lt;TKey,TValue&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit SortedDictionary`2/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IDictionaryEnumerator, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionaryEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Collections.Generic.SortedDictionary`2" /> の要素を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 `foreach` C\# 言語のステートメント \(`for each` C\+\+ では、 `For Each` Visual basic\) 列挙子の複雑さを隠蔽します。 したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。  
  
> [!IMPORTANT]
>  この型は、 <xref:System.IDisposable> インターフェイスです。 型の使用が完了したらを直接または間接的にその破棄する必要があります。 型の直接 dispose を呼び出してその <xref:System.IDisposable.Dispose%2A> メソッドで、 `try`\/`catch` ブロックします。 直接ことのない破棄する場合など言語構成要素を使用して `using` \(c\#\) のまたは `Using` \(Visual Basic で\)。 詳細については、"を使用して、オブジェクトを実装して IDisposable"」セクションを参照してください、 <xref:System.IDisposable> インターフェイスに関するトピック。  
  
> [!IMPORTANT]
>  この型は、 <xref:System.IDisposable> インターフェイスです。 型の使用が完了したらを直接または間接的にその破棄する必要があります。 型の直接 dispose を呼び出してその <xref:System.IDisposable.Dispose%2A> メソッドで、 `try`\/`catch` ブロックします。 直接ことのない破棄する場合など言語構成要素を使用して `using` \(c\#\) のまたは `Using` \(Visual Basic で\)。 詳細については、"を使用して、オブジェクトを実装して IDisposable"」セクションを参照してください、 <xref:System.IDisposable> インターフェイスに関するトピック。  
  
 列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。  
  
 最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。 この位置では、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> プロパティが定義されています。 そのため、呼び出す必要があります、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> メソッドの値を読み取る前にコレクションの最初の要素を列挙子を進める <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>します。  
  
 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> プロパティまで同じオブジェクトを返す <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> が呼び出されます。<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> は、<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> を次の要素に設定します。  
  
 場合 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> コレクション、列挙子の末尾が、コレクション内の最後の要素の後に配置されているパスと <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> 返します `false`します。 列挙子があるときはこの位置にある場合、それ以降の呼び出しは、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> を返すことも `false`です。 最後の呼び出しの場合 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> 返される `false`, 、<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> は定義されていません。<xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> を、再度、コレクションの最初の要素に設定することはできません。列挙子の新しいインスタンスを作成する必要があります。  
  
 コレクションが変更されない限り、列挙子は有効です。 コレクションに対して変更 \(要素の追加、変更、削除など\) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。  
  
 列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。 列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。  コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。  
  
 <xref:System.Collections.Generic?displayProperty=fullName> 名前空間のコレクションの既定の実装は同期されません。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置の要素を取得します。</summary>
        <value>
          <see cref="T:System.Collections.Generic.SortedDictionary`2" /> のうち、列挙子の現在位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property is undefined under any of the following conditions:  
  
-   The enumerator is positioned before the first element in the dictionary, immediately after the enumerator is created. The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.  
  
-   The last call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returned **languageKeyword tag is not supported!!!!**  
    , which indicates the end of the collection.  
  
 The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> is called. <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the next element. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.  
  
> [!NOTE]
>  For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element. Instead, the value of the property is undefined.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を <see cref="T:System.Collections.Generic.SortedDictionary`2" /> の次の要素に進めます。</summary>
        <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子がコレクション、および最初の呼び出しの最初の要素の前に配置されている列挙子を作成した後、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> メソッドでは、列挙子をコレクションの最初の要素に進めます。  
  
 場合 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> コレクション、列挙子の末尾が、コレクション内の最後の要素の後に配置されているパスと <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> 返します `false`します。 列挙子があるときはこの位置にある場合、それ以降の呼び出しは、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> を返すことも `false`です。  
  
 コレクションが変更されない限り、列挙子は有効です。 追加、変更、削除、要素など、コレクションに変更が加えられた場合、列挙子は無効になり回復できなくなります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Entry">
      <MemberSignature Language="C#" Value="System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>として列挙子の現在位置にある要素を取得、 <see cref="T:System.Collections.DictionaryEntry" /> 構造体。</summary>
        <value>コレクション内のディクショナリの現在の位置に要素として、 <see cref="T:System.Collections.DictionaryEntry" /> 構造体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.Collections.IEnumerator.Reset%2A> メソッドが呼び出されると、 <xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進めるメソッドを呼び出す必要があります <xref:System.Collections.IDictionaryEnumerator.Entry%2A>。 そうしないと、 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> は定義されていません。  
  
 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> プロパティは、最後の呼び出しの場合も、例外をスロー <xref:System.Collections.IEnumerator.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。<xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IDictionaryEnumerator.Entry%2A> を次の要素に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Key">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionaryEnumerator.Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置にある要素のキーを取得します。</summary>
        <value>コレクション内の列挙子の現在の位置に要素のキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.Collections.IEnumerator.Reset%2A> メソッドが呼び出されると、 <xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進めるメソッドを呼び出す必要があります <xref:System.Collections.IDictionaryEnumerator.Key%2A>。 そうしないと、 <xref:System.Collections.IDictionaryEnumerator.Key%2A> は定義されていません。  
  
 <xref:System.Collections.IDictionaryEnumerator.Key%2A> プロパティは、最後の呼び出しの場合も、例外をスロー <xref:System.Collections.IEnumerator.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
 <xref:System.Collections.IDictionaryEnumerator.Key%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。<xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IDictionaryEnumerator.Key%2A> を次の要素に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionaryEnumerator.Value">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionaryEnumerator.Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置にある要素の値を取得します。</summary>
        <value>コレクション内の列挙子の現在の位置に要素の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.Collections.IEnumerator.Reset%2A> メソッドが呼び出されると、 <xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進めるメソッドを呼び出す必要があります <xref:System.Collections.IDictionaryEnumerator.Value%2A>。 そうしないと、 <xref:System.Collections.IDictionaryEnumerator.Value%2A> は定義されていません。  
  
 <xref:System.Collections.IDictionaryEnumerator.Value%2A> プロパティは、最後の呼び出しの場合も、例外をスロー <xref:System.Collections.IEnumerator.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
 <xref:System.Collections.IDictionaryEnumerator.Value%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> が呼び出されるまでは同じオブジェクトを返します。<xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IDictionaryEnumerator.Value%2A> を次の要素に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子の現在位置の要素を取得します。</summary>
        <value>コレクション内の、列挙子の現在位置にある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.IEnumerator.Current%2A> プロパティが、次の条件のいずれかで定義されていません。  
  
-   列挙子が作成された直後後、または後すぐに、コレクションの最初の要素の前に、列挙子が配置されている、 <xref:System.Collections.IEnumerator.Reset%2A> メソッドが呼び出されます。<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進めるメソッドを呼び出す必要があります <xref:System.Collections.IEnumerator.Current%2A>します。  
  
-   最後の呼び出しを <xref:System.Collections.IEnumerator.MoveNext%2A> 返される `false`, 、コレクションの末尾を示します。  
  
 <xref:System.Collections.IEnumerator.Current%2A> プロパティまで同じオブジェクトを返す <xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されます。<xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。 間にコレクションが変更された場合 <xref:System.Collections.IEnumerator.MoveNext%2A> と <xref:System.Collections.IEnumerator.Current%2A>, 、<xref:System.Collections.IEnumerator.Current%2A> 、列挙子が無効になっている場合でもに設定されている要素を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、コレクションの最初の要素の前または最後の要素の後に配置されています。</exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出した後、 <xref:System.Collections.IEnumerator.Reset%2A> メソッドを呼び出す必要があります、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> の値を読み取る前にコレクションの最初の要素を列挙子を進める方法、 <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> プロパティです。  
  
 コレクションが変更されない限り、列挙子は有効です。 追加、変更、削除、要素など、コレクションに変更が加えられた場合、列挙子は無効になり回復できなくなります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>