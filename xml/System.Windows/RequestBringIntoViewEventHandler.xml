<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーがアタッチされるオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary>
      <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> ルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントを処理して、スクロール可能な領域をサポートしたり、それ以外の場合意図的にサイズを設定、表示、子要素のコンテンツの合計の目的のサイズより小さい要素の中でのみ行われる通常は意図的に要素ツリーの上方にルーティングが、スクロール領域のサポートを提供する最初の親に達した後のイベントを処理することによってのみ行われます。 通常、ユーザー コントロールの望ましい方法でスクロール領域を処理する既存の実装は <xref:System.Windows.Controls.ScrollViewer>です。 派生する場合 <xref:System.Windows.Controls.ScrollViewer>, のクラスのハンドラーを登録する <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> し、イベントの基本クラス処理を補完します。 または、クラス定義のクラス処理を使用しても考慮する必要があります <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> の代わりにイベント <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>です。 代わりに、完全に独自のクラスから派生していないを作成するかどうか <xref:System.Windows.Controls.ScrollViewer>, 、クラスを呼び出して処理を追加することができます <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> でクラスのインスタンス化します。  クラスの処理の詳細については、「 [Handled、クラスの処理とルーティング イベントをマークする](http://msdn.microsoft.com/ja-jp/5e745508-4861-4b48-b5f6-5fc7ce5289d2)します。  
  
 コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります \(を呼び出す <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> と発生 <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> コンテンツ ホストから\)。 同様に、要求するヘルパー メソッドを使用してビュー内に収める論理ツリー要素 <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>します。  
  
 A <xref:System.Windows.Controls.ListBox> 関連するが異なるメソッドを実装する <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>です。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>