<Type Name="LostFocusEventManager" FullName="System.Windows.LostFocusEventManager">
  <TypeSignature Language="C#" Value="public class LostFocusEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LostFocusEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LostFocusEventManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供、 <see cref="T:System.Windows.WeakEventManager" /> 実装のリスナーをアタッチする、「弱いイベント リスナー」パターンを使用できるように、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このパターンでリスナーをするために、リスナー オブジェクトを実装する必要があります <xref:System.Windows.IWeakEventListener>します。 実装する必要はありません <xref:System.Windows.IWeakEventListener> クラスのイベントの原因となったのです。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データ バインディングがこれを使用して <xref:System.Windows.WeakEventManager> バインドを更新する内部クラスのリスナーをアタッチできるように、 <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> または <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> バインドの対象となっているオブジェクトのイベントです。 これは通知をサポート、 <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> データ バインドのターゲットへの参照の強力なを作成せずにデータ バインディングのモードです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">ソース オブジェクトを昇給、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</param>
        <param name="handler">処理するデリゲート、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</param>
        <summary>指定されたソースが発生したときに呼び出される指定されたイベント ハンドラーを追加、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 定期受信に使用するイベント ハンドラーを指定するには、このメソッドを使用して、 <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> または <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> イベント.  リスナー オブジェクトを実装する必要はありませんこのメソッドを使用する場合、 <xref:System.Windows.IWeakEventListener> インターフェイスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handler" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source">イベントを持つオブジェクト。</param>
        <param name="listener">リスナーとして追加するオブジェクト。</param>
        <summary>指定されたソースのリスナーのリストに指定したリスナーを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.NewListenerList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リスナーを格納する新しいオブジェクトを返す、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</summary>
        <returns>リスナーを格納する新しいオブジェクト、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">ソース オブジェクトを昇給、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</param>
        <param name="handler">処理するデリゲート、 <see cref="E:System.Windows.UIElement.LostFocus" /> または <see cref="E:System.Windows.ContentElement.LostFocus" /> イベントです。</param>
        <summary>指定されたソースから指定したイベント ハンドラーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handler" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source">リスナーを削除するオブジェクト。</param>
        <param name="listener">削除するリスナー。</param>
        <summary>指定されたソースのリスナーのリストから、指定されたリスナーを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StartListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">関連のリッスンを開始する対象となるオブジェクト <see cref="E:System.Windows.UIElement.LostFocus" /> イベントです。</param>
        <summary>リッスンを開始、 <see cref="E:System.Windows.UIElement.LostFocus" /> 内部クラス ハンドラーをアタッチする、そのソースに指定したソースのイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたソースことを確認する型をチェック <xref:System.Windows.UIElement> または <xref:System.Windows.ContentElement> , 、し、そのソースに適切なイベントのクラスのハンドラーを追加します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StopListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">リッスンを停止する対象となるソース オブジェクト <see cref="E:System.Windows.UIElement.LostFocus" />します。</param>
        <summary>リッスンが停止、 <see cref="E:System.Windows.UIElement.LostFocus" /> 指定したソースのイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>