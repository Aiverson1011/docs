<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーが添付されるオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary>すべてのルーティング イベントに共通なデータ以外の特定のイベント データを持たない、さまざまなルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.RoutedEventHandler> デリゲートがイベント データのイベント固有の情報は報告されませんが、ルーティングされたイベントに使用します。 そのような多くのルーティング イベント; があります。著名な例としては、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> と <xref:System.Windows.FrameworkElement.Loaded>です。  
  
 一般的なのではなくルーティングされたイベントのハンドラーを作成するときの最も注目すべき違い [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] イベントは、 `sender` \(ハンドラーがアタッチされ、呼び出された位置の要素\) のイベントのイベントのソースであるとは限りません見なされません。 ソースは、イベント データのプロパティとして報告 \(<xref:System.Windows.RoutedEventArgs.Source%2A>\)。 違い `sender`と <xref:System.Windows.RoutedEventArgs.Source%2A> 要素ツリーを通じてルーティングされたイベントの検査中にさまざまな要素にルーティングされるイベントの結果です。  
  
 使用するか `sender` または <xref:System.Windows.RoutedEventArgs.Source%2A> オブジェクトの参照を直接またはバブル ルーティングされたイベントのルーティングの動作に興味は意図的に処理する場合ルーティング イベント最初に発生する要素にします。 この状況では `sender` と <xref:System.Windows.RoutedEventArgs.Source%2A> 同じオブジェクトです。  
  
 イベント ハンドラーを記述するときに、イベント データの 2 つの最も重要なプロパティは、ルーティングされたイベントの固有の機能を活用し、それに応じて、ハンドラーを作成する場合は、 <xref:System.Windows.RoutedEventArgs.Source%2A> と <xref:System.Windows.RoutedEventArgs.Handled%2A>です。  
  
 入力イベントの特定の組み合わせと [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コントロール クラスでイベントを発生させる要素がそれを処理する機会を持つ最初の要素ではありません。 入力イベントがある場合、イベントの Preview バージョンからの要素ツリーのルートは、最初の機会を持つ、設定できます <xref:System.Windows.RoutedEventArgs.Handled%2A> に `true` 共有イベント データにし、そのイベントのルート上で残りの要素に入力イベントを報告する方法に影響を与えることができます。 処理の動作は、特定のルーティングされたイベントは使用されません外観を移すことができるプレビューは、想定どおりに発生します。 詳細については、次を参照してください。 [プレビュー イベント](http://msdn.microsoft.com/ja-jp/b5032308-aa9c-4d02-af11-630ecec8df7e) と [入力概要](http://msdn.microsoft.com/ja-jp/ee5258b7-6567-415a-9b1c-c0cbe46e79ef)します。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>