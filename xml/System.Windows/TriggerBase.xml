<Type Name="TriggerBase" FullName="System.Windows.TriggerBase">
  <TypeSignature Language="C#" Value="public abstract class TriggerBase : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TriggerBase extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TriggerBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>内で条件付きの値を指定する基本クラスを表す、 <see cref="T:System.Windows.Style" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] スタイルとテンプレートのモデルでは、内でトリガーを指定することができます、 <xref:System.Windows.Style>, 、<xref:System.Windows.Controls.ControlTemplate>, 、および <xref:System.Windows.DataTemplate>です。 基本的には、 <xref:System.Windows.TriggerBase> 種の変更を適用するためのオブジェクトの基本クラスは、条件 \(など、特定のプロパティの値に変わったら `true`, 、イベント発生時または\) 問題がなければします。  
  
   
  
## 例  
 いくつかの異なる種類のトリガーがある: <xref:System.Windows.Trigger>, 、<xref:System.Windows.MultiTrigger>, 、<xref:System.Windows.EventTrigger>, 、<xref:System.Windows.DataTrigger>, 、および <xref:System.Windows.MultiDataTrigger>です。  
  
 <xref:System.Windows.Trigger> クラスは、トリガーの最も単純な種類です。 A <xref:System.Windows.Trigger> オブジェクトでは、プロパティの値に基づく変更を適用することができます。 たとえば、次の例、名前付き <xref:System.Windows.Style> に利用可能な <xref:System.Windows.Controls.Button> コントロールです。<xref:System.Windows.Style> を定義、 <xref:System.Windows.Trigger> 要素を変更する、 <xref:System.Windows.Controls.Control.Foreground%2A> ボタンのプロパティと、 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> プロパティは `true`です。  
  
 [!code-xml[BtnStyles\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 複数のプロパティの状態に基づいて変更を適用する必要がある場合を使えば、 <xref:System.Windows.MultiTrigger>です。 例については、次を参照してください。、 <xref:System.Windows.MultiTrigger> ページです。  
  
 <xref:System.Windows.EventTrigger> クラスでは、イベントの発生時に変更を適用することができます。 次の例には 2 つ <xref:System.Windows.EventTrigger> オブジェクト、マウスが要素を入力し、マウスが要素を離れると発生する他のうちの 1 つが発生します。  
  
 [!code-xml[StyleEventTriggerAnimation\#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
 [!code-xml[StyleEventTriggerAnimation\#EventTriggerSnippet](~/samples/snippets/xaml/VS_Snippets_Wpf/StyleEventTriggerAnimation/XAML/Default.xaml#eventtriggersnippet)]  
  
 これらにも、 <xref:System.Windows.DataTrigger> と <xref:System.Windows.MultiDataTrigger> クラスです。 似ています <xref:System.Windows.Trigger> と <xref:System.Windows.MultiTrigger> する点を除いて、これらはデータ バインディングのプロパティ用です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnterActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection EnterActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection EnterActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.EnterActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガー オブジェクトがアクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  
  
> [!NOTE]
>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read\-only, the collection itself is read\-write.  
  
<a name="xamlPropertyElementUsage_EnterActions"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.EnterActions>  
    OneOrMoreTriggerActions  
  </object.EnterActions >  
</object>  
```  
  
<a name="xamlValues_EnterActions"></a>   
## XAML Values  
 *OneOrMoreTriggerActions*  
 One or more <xref:System.Windows.TriggerAction> objects.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection ExitActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection ExitActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.ExitActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガー オブジェクトが非アクティブになったときに適用する <see cref="T:System.Windows.TriggerAction" /> オブジェクトのコレクションを取得します。 このプロパティは <see cref="T:System.Windows.EventTrigger" /> クラスには適用されません。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  
  
> [!NOTE]
>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read\-only, the collection itself is read\-write.  
  
<a name="xamlPropertyElementUsage_ExitActions"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.ExitActions>  
    OneOrMoreTriggerActions  
  </object.ExitActions >  
</object>  
```  
  
<a name="xamlValues_ExitActions"></a>   
## XAML Values  
 *OneOrMoreTriggerActions*  
 One or more <xref:System.Windows.TriggerAction> objects.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>