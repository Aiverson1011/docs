<Type Name="DataObject" FullName="System.Windows.DataObject">
  <TypeSignature Language="C#" Value="public sealed class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>基本実装を提供、 <see cref="T:System.Windows.IDataObject" /> インターフェイスで、データを転送するための形式に依存しないメカニズムを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlTextUsage_DataObject"></a>   
## XAML テキストの使用方法  
   
  
## 例  
 このクラスを使用する方法を次の例に示します。  
  
 [!code-csharp[dragdrop\_dragdropmisccode\#\_DragDrop\_CreateDataObject\_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[dragdrop\_dragdropmisccode\#\_DragDrop\_CreateDataObject\_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.DataObject" /> を指定したデータを含むクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、新しいデータ オブジェクトを作成し、このコンス トラクターを使用して、文字列でデータ オブジェクトを初期化します。  ここでは、適切なデータ形式が格納されたデータの種類に応じて自動的に決定され、既定では、格納されたデータの自動変換します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Simple](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Simple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple)]  
  
 次の例は、前の例の縮小バージョンです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Simple\_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple_condensed)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Simple\_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="data" /> 参照、 <see cref="T:System.Windows.DataObject" /> オブジェクトです。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットを参照してください、       <see cref="T:System.Windows.DataFormats" /> クラスです。</param>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.DataObject" /> クラス、指定したデータとその関連する形式を含む; 文字列形式を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、新しいデータ オブジェクトを作成し、このコンス トラクターを使用して文字列と指定したデータ形式でデータ オブジェクトを初期化します。  データ形式が文字列で指定された場合は、 <xref:System.Windows.DataFormats> クラスの定義済みの型の文字列のセットを提供します。 既定では、格納されたデータの自動変換が許可されます。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 次の例は、前の例の縮小バージョンです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_TypeString\_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring_condensed)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_TypeString\_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Type,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> データの形式を指定します。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="data">このデータ オブジェクトに格納するデータ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.DataObject" /> クラス、指定したデータとその関連する形式を含む; でデータ形式が指定された、 <see cref="T:System.Type" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、新しいデータ オブジェクトを作成し、このコンス トラクターを使用して文字列と指定したデータ形式でデータ オブジェクトを初期化します。  この場合は、データ形式がで指定された、 <xref:System.Type> パラメーター。  既定では、格納されたデータの自動変換が許可されます。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type)]  
  
 次の例は、前の例の縮小バージョンです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Type\_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type_condensed)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_Type\_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="data">このデータ オブジェクトに格納するデータ。</param>
        <param name="autoConvert">
          <see langword="true" /> データの取得に別の形式に変換を許可するには <see langword="false" /> データの取得に別の形式に変換されることを禁止します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.DataObject" /> クラス、指定したデータとその関連する形式を含む; 文字列形式を指定します。 このオーバー ロードは、 <see langword="Boolean" /> データを取得時の別の形式に変換される場合があるかどうかを示すフラグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、新しいデータ オブジェクトを作成し、このコンス トラクターを使用して文字列と指定したデータ形式でデータ オブジェクトを初期化します。  データ形式が文字列で指定された場合は、 <xref:System.Windows.DataFormats> クラスの定義済みの型の文字列のセットを提供します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_AutoConvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_AutoConvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert)]  
  
 次の例は、前の例の縮小バージョンです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_AutoConvert\_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert_condensed)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_CreateDataObject\_AutoConvert\_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCopyingHandler">
      <MemberSignature Language="C#" Value="public static void AddCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを追加する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">追加するハンドラー メソッドを参照するデリゲート。</param>
        <summary>追加、 <see cref="E:System.Windows.DataObject.Copying" /> イベント ハンドラーを指定した従属オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.DataObject.Copying> コピー操作が完了すると、選択したコンテンツを指定したすべてのデータに変換する書式設定、関連するデータ オブジェクトにすべてのデータ形式が格納されイベントが発生、システムのクリップボードにデータ オブジェクトを配置するか、ドラッグ操作を開始する準備ができています。  
  
 検査またはコピー操作が完了後し、後続の操作を続行する前に、データ オブジェクトを変更するには、このイベントを使用します。 全体のコピー操作を呼び出すことによってキャンセル <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPastingHandler">
      <MemberSignature Language="C#" Value="public static void AddPastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを追加する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">追加するハンドラー メソッドを参照するデリゲート。</param>
        <summary>追加、 <see cref="E:System.Windows.DataObject.Pasting" /> イベント ハンドラーを指定した従属オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントを使用してデータを貼り付ける前に、場合によっては、データ オブジェクトを検査するなど、別の一連の措置を決定します。  
  
-   **貼り付けをキャンセル** \-を呼び出して、全体の貼り付け操作を取り消す、 <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> メソッドです。  
  
-   **別の形式を選択して** \-の新しい値を指定することによって選択された貼り付け形式を変更、 <xref:System.Windows.DataObjectPastingEventArgs.FormatToApply%2A> プロパティです。 貼り付けをデータ オブジェクトでは、新しく選択した形式はサポートする必要がありますで。  
  
    > [!NOTE]
    >  貼り付け形式を変更する場合は、貼り付け先が新たに指定された形式をサポートしていることを確認します。  
  
-   **新しい形式の挿入** \- 貼り付けデータ オブジェクトの目的の形式をサポートして、目的の形式でデータのバージョンを対象のデータ オブジェクトを更新はいないと判断した場合。 カスタム データ コンバーターは、このプロセスの一部としてよく使用されます。  
  
 貼り付けデータ オブジェクトの内容を変更する \(<xref:System.Windows.DataObjectPastingEventArgs.DataObject%2A>\)、システムのクリップボードに保存するデータ変更しないのは、このような変更が関連付けられている貼り付けコマンドに関連付けられたデータ オブジェクトにのみ適用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void AddSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを追加する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">追加するハンドラー メソッドを参照するデリゲート。</param>
        <summary>追加、 <see cref="E:System.Windows.DataObject.SettingData" /> イベント ハンドラーを指定した従属オブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.DataObject.SettingData> イベントが関連付けられているデータ オブジェクトに追加するデータ形式ごとに 1 回のドラッグまたはコピー コマンドの一部として発生します。 通常、このイベントは、コンテンツ コントロールに接続など <xref:System.Windows.Controls.TextBox>します。  
  
 このイベントのハンドラーは選択的に不要なデータ形式が冗長なデータ形式のデータ変換処理し、コピー操作の全体的なパフォーマンスを向上させる必要があるデータ オブジェクトに追加されないようにするためにことができます。 特定のデータ形式をスキップするには、呼び出し、 <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> メソッド内でスキップする形式を指定して、 <xref:System.Windows.DataObjectSettingDataEventArgs.Format%2A> プロパティです。 呼び出す、 <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> このイベントのメソッドが関連付けられているコピーをキャンセルまたはコマンドをドラッグしていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsAudio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のデータが存在するかどうかのデータ オブジェクト クエリを実行、 <see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式です。</summary>
        <returns>
          <see langword="true" /> データ オブジェクトには、内のデータが含まれている場合、 <see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 指定したデータ形式は、ネイティブのデータ オブジェクトに存在する場合にのみこのメソッドは自動的に変換できるデータ形式が存在するかどうかチェックしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsFileDropList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のデータが存在するかどうかのデータ オブジェクト クエリを実行、 <see cref="F:System.Windows.DataFormats.FileDrop" /> データ形式です。</summary>
        <returns>
          <see langword="true" /> データ オブジェクトには、内のデータが含まれている場合、 <see cref="F:System.Windows.DataFormats.FileDrop" /> データ形式。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 指定したデータ形式は、ネイティブのデータ オブジェクトに存在する場合にのみこのメソッドは自動的に変換できるデータ形式が存在するかどうかチェックしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsImage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のデータが存在するかどうかのデータ オブジェクト クエリを実行、 <see cref="F:System.Windows.DataFormats.Bitmap" /> データ形式です。</summary>
        <returns>
          <see langword="true" /> データ オブジェクトには、内のデータが含まれている場合、 <see cref="F:System.Windows.DataFormats.Bitmap" /> データ形式。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 指定したデータ形式は、ネイティブのデータ オブジェクトに存在する場合にのみこのメソッドは自動的に変換できるデータ形式が存在するかどうかチェックしません。  
  
 ビットマップでは、コンピューター グラフィックを表し、メモリ内のビットの配列として、これらのビットが画像内の個々 のピクセルの属性を表します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のデータが存在するかどうかのデータ オブジェクト クエリを実行、 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 形式です。</summary>
        <returns>
          <see langword="true" /> データ オブジェクトには、内のデータが含まれている場合、 <see cref="F:System.Windows.DataFormats.UnicodeText" /> データ形式。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 指定したデータ形式は、ネイティブのデータ オブジェクトに存在する場合にのみこのメソッドは自動的に変換できるデータ形式が存在するかどうかチェックしません。  
  
 <xref:System.Windows.DataFormats.UnicodeText> エンコードされた Unicode、utf\-16、および USC 2 とも呼ばれますの 16 ビット文字データ形式を示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">メンバー、 <see cref="T:System.Windows.TextDataFormat" /> のクエリのテキスト データ形式を指定する列挙体です。</param>
        <summary>テキスト データの形式でデータが存在するかどうかのデータ オブジェクトのクエリを実行します。</summary>
        <returns>
          <see langword="true" /> データ オブジェクトには、テキスト データ形式のデータが含まれている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 指定したデータ形式は、ネイティブのデータ オブジェクトに存在する場合にのみこのメソッドは自動的に変換できるデータ形式が存在するかどうかチェックしません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 有効なメンバーが指定されていない <see cref="T:System.Windows.TextDataFormat" />します。</exception>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="CopyingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CopyingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CopyingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.CopyingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.DataObject.Copying" /> 添付イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetAudioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のデータを格納しているストリームを返す、 <see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式です。</summary>
        <returns>内のデータを格納しているストリーム、 <see cref="F:System.Windows.DataFormats.WaveAudio" /> 形式、または <see langword="null" /> データがこの形式で使用できない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定した場合にのみストリームを返します形式は、ネイティブのデータ オブジェクトに存在このメソッドは、自動変換可能なデータを返しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <summary>文字列で指定された形式でデータを返します。</summary>
        <returns>指定した形式でデータを格納しているオブジェクトまたは <see langword="null" /> データが指定された形式で使用できない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 \(ネイティブまたは自動変換により\)、指定したデータ形式があるかどうか、次の例は、このメソッドを最初のチェック例を使用してデータを取得する場合は、指定した書式を使用できる、 <xref:System.Windows.DataObject.GetData%28System.String%29> メソッドです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetSpecificDataFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetSpecificDataFormat](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat)]  
  
 次のコード例を使用して、 <xref:System.Windows.DataObject.GetDataPresent%28System.String%2CSystem.Boolean%29> かどうか、指定したデータ形式は使用可能なネイティブを最初にチェックするメソッド \(自動変換可能なデータ形式はフィルターされます\)。 例では、がを使用してデータを取得する場合は、指定した書式を使用できる、 <xref:System.Windows.DataObject.GetData%28System.String%29> メソッドです。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetSpecificDataFormat\_Native](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat_native)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetSpecificDataFormat\_Native](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat_native)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> データの形式を指定します。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <summary>指定された形式でデータ オブジェクトを返す、 <see cref="T:System.Type" /> オブジェクトです。</summary>
        <returns>指定した形式でデータを含むデータ オブジェクトまたは <see langword="null" /> データが指定された形式で使用できない場合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="autoConvert">
          <see langword="true" /> 指定した形式にデータを自動的に変換しようとする <see langword="false" /> データ形式変換ではありません。</param>
        <summary>必要に応じて、データを指定された形式に変換する、指定された形式でデータ オブジェクトを返します。</summary>
        <returns>指定した形式でデータを含むデータ オブジェクトまたは <see langword="null" /> データが指定された形式で使用できない場合。  
  
 場合、 <paramref name="autoConvert" /> パラメーターは <see langword="true" /> データは、指定した形式に変換できないと自動変換が無効になっている場合、または \(を呼び出して <see cref="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" /> で、 <paramref name="autoConvert" /> パラメーターを設定する <see langword="false" />\)、このメソッドが戻る <see langword="null" />します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> が **null** です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データで使用できるか、指定した形式に変換できるかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Windows.DataObject.GetDataPresent%2A> 形式を呼び出す前にこのデータ オブジェクトで利用できるかどうかを <xref:System.Windows.DataObject.GetData%2A>します。 呼び出す <xref:System.Windows.DataObject.GetFormats%2A> データ オブジェクトで使用可能なすべての形式の一覧を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <summary>データで使用できるか、文字列で指定された形式に変換できるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> データには、または、指定した形式に変換できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Windows.DataObject.GetDataPresent%2A> 形式を呼び出す前にこのデータ オブジェクトで利用できるかどうかを <xref:System.Windows.DataObject.GetData%2A>します。 呼び出す <xref:System.Windows.DataObject.GetFormats%2A> データ オブジェクトで使用可能なすべての形式の一覧を取得します。  
  
   
  
## 例  
 次の例では、記述子文字列して、特定のデータ形式の有無を照会するには、このメソッドを使用します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_String](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_string)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_String](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_string)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> チェックするデータ形式を指定します。 F または一連の定義済みのデータ形式を参照してください、 <see cref="T:System.Windows.DataFormats" /> クラスです。</param>
        <summary>または、データが、使用可能なで指定された形式に変換できるかどうかを決定する <see cref="T:System.Type" /> オブジェクトです。</summary>
        <returns>
          <see langword="true" /> データには、または、指定した形式に変換できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Windows.DataObject.GetDataPresent%2A> 形式を呼び出す前にこのデータ オブジェクトで利用できるかどうかを <xref:System.Windows.DataObject.GetData%2A>します。 呼び出す <xref:System.Windows.DataObject.GetFormats%2A> データ オブジェクトで使用可能なすべての形式の一覧を取得します。  
  
   
  
## 例  
 次の例では、クエリには、このメソッドを使用して、型で特定のデータ形式が存在するかどうか。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_type)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_type)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">チェックするデータ形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="autoConvert">
          <see langword="false" /> 指定した形式のみを確認するには <see langword="true" /> もこのデータ オブジェクトに格納されたデータを指定した形式に変換できるかどうかを調べます。</param>
        <summary>データで使用できるか、指定した形式に変換できるかどうかを決定します。 A <see langword="Boolean" /> フラグには、その形式で使用不可である場合、データを指定した形式に変換できるかどうかをチェックするかどうかを示します。</summary>
        <returns>
          <see langword="true" /> データには、または、指定した形式に変換できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す <xref:System.Windows.DataObject.GetDataPresent%2A> 形式を呼び出す前にこのデータ オブジェクトで利用できるかどうかを <xref:System.Windows.DataObject.GetData%2A>します。 呼び出す <xref:System.Windows.DataObject.GetFormats%2A> データ オブジェクトで使用可能なすべての形式の一覧を取得します。  
  
   
  
## 例  
 次の例では、記述子文字列でデータを照会するには、このメソッドを使用し、自動変換可能なデータ形式を処理する方法を指定します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_Autoconvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_autoconvert)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_QueryDataFormats\_Autoconvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_autoconvert)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFileDropList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ドロップされたファイルの一覧を含んでいる文字列コレクションを返します。</summary>
        <returns>ここで削除されたファイルの一覧で、ファイルの名前を示す各文字列、文字列のコレクションまたは <see langword="null" /> データがこの形式で使用できない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このデータ オブジェクト内のデータが保存されているまたはに変換できる形式の一覧を返します。</summary>
        <returns>このデータ オブジェクトをサポートする形式の名前を指定する各文字列の文字列の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 定義済みのデータ形式のセットについては、<xref:System.Windows.DataFormats> クラスを参照してください。  
  
   
  
## 例  
 次の例では、このメソッドを使用して、データ オブジェクト \(ネイティブおよび自動変換可能\) で使用できるすべてのデータ形式を示す文字列の配列を取得します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetAllDataFormats](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetAllDataFormats](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> このデータ オブジェクト内のデータが保存されているまたは; に変換できるすべての形式を取得するには <see langword="false" /> データ オブジェクト内のデータが格納されている形式のみを取得します。</param>
        <summary>このデータ オブジェクト内のデータが格納されている形式の一覧を返します。 A <see langword="Boolean" /> フラグは、データを自動的に変換できる形式も含めるかどうかを示します。</summary>
        <returns>このデータ オブジェクトでサポートされる形式の名前を指定する各文字列の文字列の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 定義済みのデータ形式のセットについては、<xref:System.Windows.DataFormats> クラスを参照してください。  
  
   
  
## 例  
 次の例では、このメソッドを使用して、データ オブジェクト \(自動変換できるデータの形式はフィルター処理\) で利用可能なデータ形式だけを示す文字列の配列を取得します。  
  
 [!code-csharp[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetAllDataFormats\_NativeOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats_nativeonly)]
 [!code-vb[DragDrop\_DragDropMiscCode\#\_DragDrop\_GetAllDataFormats\_NativeOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats_nativeonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetImage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 内のデータを格納しているオブジェクト、 <see cref="F:System.Windows.DataFormats.Bitmap" /> 形式です。</summary>
        <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 内のデータを格納しているオブジェクト、 <see cref="F:System.Windows.DataFormats.Bitmap" /> 形式、または <see langword="null" /> データがこの形式で使用できない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る、 <xref:System.Windows.Media.Imaging.BitmapSource> に自動変換できるデータ オブジェクトのいずれかのデータがネイティブに利用可能な時に、または、 <xref:System.Windows.DataFormats.Bitmap> データ形式です。  
  
 ビットマップでは、コンピューター グラフィックを表し、メモリ内のビットの配列として、これらのビットが画像内の個々 のピクセルの属性を表します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>含む文字列を返す、 <see cref="F:System.Windows.DataFormats.UnicodeText" /> データ オブジェクト内のデータです。</summary>
        <returns>含む文字列、 <see cref="F:System.Windows.DataFormats.UnicodeText" /> データ、またはしない場合は空の文字列 <see cref="F:System.Windows.DataFormats.UnicodeText" /> データを利用できます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.DataFormats.UnicodeText> エンコードされた Unicode、utf\-16、および USC 2 とも呼ばれますの 16 ビット文字データ形式を示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">メンバー <see cref="T:System.Windows.TextDataFormat" /> を取得する特定のテキスト データ形式を指定します。</param>
        <summary>このデータ オブジェクトで指定した書式のテキスト データを含む文字列を返します。</summary>
        <returns>指定したデータ形式のテキスト データを含む文字列または対応するテキスト データが利用できない場合は空の文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 有効なメンバーが指定されていない <see cref="T:System.Windows.TextDataFormat" />します。</exception>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="PastingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PastingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PastingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.PastingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.DataObject.Pasting" /> 添付イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCopyingHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを削除する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">削除するハンドラー メソッドを参照するデリゲート。</param>
        <summary>指定された依存関係オブジェクトから <see cref="E:System.Windows.DataObject.Copying" /> イベント ハンドラーを削除します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePastingHandler">
      <MemberSignature Language="C#" Value="public static void RemovePastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを削除する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">削除するハンドラー メソッドを参照するデリゲート。</param>
        <summary>削除、 <see cref="E:System.Windows.DataObject.Pasting" /> イベント ハンドラーが指定した従属オブジェクト。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">イベント ハンドラーを削除する対象の依存関係オブジェクト \(<see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />\)。</param>
        <param name="handler">削除するハンドラー メソッドを参照するデリゲート。</param>
        <summary>指定された依存関係オブジェクトから <see cref="E:System.Windows.DataObject.SettingData" /> イベント ハンドラーを削除します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">データ オブジェクトに格納するオーディオ データを格納するバイト配列。</param>
        <summary>オーディオ データの格納 \(<see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式\) オブジェクトにします。 オーディオ データは、バイト配列として指定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、自動変換が無効にされたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `false`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">データ オブジェクトに格納するオーディオ データを格納するストリーム。</param>
        <summary>オーディオ データの格納 \(<see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式\) オブジェクトにします。  オーディオ データはストリームとして指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、自動変換が無効にされたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `false`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <summary>ソース オブジェクトの種類からのデータ形式を自動的に決定する、データ オブジェクトで指定されたデータを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、有効になっている自動変換されたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> は <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">for permission to transfer data to the system Clipboard.  Associated enumeration: **legacyBold tag is not supported!!!!**  
.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <summary>指定したデータを、1 つ以上の指定したデータ形式と共に、このデータ オブジェクトに格納します。データ形式は文字列で指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、有効になっている自動変換されたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">for permission to transfer data to the system Clipboard.  Associated enumeration: **legacyBold tag is not supported!!!!**  
.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.Type" /> オブジェクト データの形式を指定します。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <summary>このデータ オブジェクトは、と共に 1 つまたは複数指定したデータ形式で指定されたデータを格納します。データ形式が指定された、 <see cref="T:System.Type" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、有効になっている自動変換されたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">for permission to transfer data to the system Clipboard.  Associated enumeration: **legacyBold tag is not supported!!!!**  
.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">データの形式を指定する文字列。 定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスを参照してください。</param>
        <param name="data">このデータ オブジェクトに格納するデータを表すオブジェクト。</param>
        <param name="autoConvert">
          <see langword="true" /> データの取得に別の形式に変換を許可するには <see langword="false" /> データの取得に別の形式に変換されることを禁止します。</param>
        <summary>このデータ オブジェクトは、と共に 1 つまたは複数の指定したデータ形式で指定されたデータを格納します。 このオーバー ロードは、 <see langword="Boolean" /> の取得に別の形式にデータを変換できるかどうかを示すフラグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">for permission to transfer data to the system Clipboard.  Associated enumeration: **legacyBold tag is not supported!!!!**  
.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection fileDropList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileDropList(class System.Collections.Specialized.StringCollection fileDropList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDropList" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="fileDropList">データ オブジェクトに格納するドロップされたファイルの一覧を含む文字列コレクションです。</param>
        <summary>ストア <see cref="F:System.Windows.DataFormats.FileDrop" /> データ オブジェクト内のデータです。  削除されたファイルの一覧は、文字列コレクションとして指定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、有効になっている自動変換されたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileDropList" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileDropList" /> ゼロの文字列を含むか、一覧で指定されたファイルへの完全パスを解決することはできません。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Windows.Media.Imaging.BitmapSource image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImage(class System.Windows.Media.Imaging.BitmapSource image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Windows.Media.Imaging.BitmapSource" />
      </Parameters>
      <Docs>
        <param name="image">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> データ オブジェクトに格納するイメージ データを含むオブジェクト。</param>
        <summary>ストア <see cref="F:System.Windows.DataFormats.Bitmap" /> データ オブジェクト内のデータです。  イメージ データとして指定する <see cref="T:System.Windows.Media.Imaging.BitmapSource" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビットマップでは、コンピューター グラフィックを表し、メモリ内のビットの配列として、これらのビットが画像内の個々 のピクセルの属性を表します。  
  
 このメソッドは、有効になっている自動変換されたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">含む文字列、 <see cref="F:System.Windows.DataFormats.UnicodeText" /> データ オブジェクトに格納する文字列。</param>
        <summary>ストア <see cref="F:System.Windows.DataFormats.UnicodeText" /> データ、このデータ オブジェクトの文字列として指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このデータ形式は、エンコードされた Unicode、utf\-16、および USC 2 とも呼ばれますの 16 ビット文字を表します。  
  
 このメソッドは、自動変換が無効にされたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `false`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData, System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData, valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String,System.Windows.TextDataFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">データ オブジェクトに格納するテキスト データを含む文字列です。</param>
        <param name="format">メンバー <see cref="T:System.Windows.TextDataFormat" /> を格納するテキストのデータ形式を指定します。</param>
        <summary>このデータ オブジェクトのテキスト データを格納します。 メンバーに格納するテキスト データの形式が指定されている <see cref="T:System.Windows.TextDataFormat" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、自動変換が無効にされたデータを追加 \(呼び出した場合と同じ <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> と `autoConvert` 設定 `false`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SettingDataEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SettingDataEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SettingDataEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.SettingDataEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.DataObject.SettingData" /> 添付イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, int32 pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体、形式、対象デバイス、面、および以降の通知に使用されるメディアを定義するには、参照によって渡されます。</param>
        <param name="advf">いずれか、 <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> アドバイザリ コネクションを制御するためのフラグのグループを指定する値。</param>
        <param name="pAdvSink">ポインター、 <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> 変更通知を受信するアドバイズ シンク インターフェイスです。</param>
        <param name="pdwConnection">このメソッドから制御が戻るときに、この接続を識別する DWORD トークンへのポインターを格納します。 このトークンを後で使用するに渡して、アドバイザリ コネクションを削除する <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />です。 この値が 0 の場合、接続は確立されていません。 このパラメーターは初期化せずに渡されます。</param>
        <summary>データ オブジェクトとアドバイズ シンク間の接続を作成します。 このメソッドは、アドバイズ シンクをサポートするオブジェクトによって呼び出され、オブジェクトのデータの変更をアドバイズ シンクに通知できるようにします。</summary>
        <returns>このメソッドは、標準の戻り値である E\_INVALIDARG、E\_UNEXPECTED、および E\_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">削除する接続を指定する DWORD トークン。 接続が最初に確立されたときに、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> から返された値を使用します。</param>
        <summary>以前に確立されていた通知の接続を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.DataObject> instance is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">このメソッドが戻るとき、 <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> 新規列挙子オブジェクトへのインターフェイス ポインターを受け取る。 実装では、設定されている場合 <c>enumAdvise</c> に <see langword="null" />, 、現時点ではアドバイズ シンクへの接続はありません。 このパラメーターは初期化せずに渡されます。</param>
        <summary>現在のアドバイザリ コネクションを列挙するために使用できるオブジェクトを作成します。</summary>
        <returns>このメソッドは、標準の戻り値である E\_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> S\_OK  
  
 </term>  
<description> 列挙子オブジェクトが正常にインスタンス化されたか、接続がありません。  
  
 </description>  
</item>  
<item>  
<term> OLE\_E\_ADVISENOTSUPPORTED  
  
 </term>  
<description> このオブジェクトは、アドバイザリの通知をサポートしていません。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">いずれか、 <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> データの方向を指定する値。</param>
        <summary>列挙するオブジェクトを作成、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> データ オブジェクトの構造体。 呼び出しで使用されるこれらの構造体 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> または <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />です。</summary>
        <returns>このメソッドは、標準の戻り値である E\_INVALIDARG および E\_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> S\_OK  
  
 </term>  
<description> 列挙子オブジェクトが正常に作成されました。  
  
 </description>  
</item>  
<item>  
<term> E\_NOTIMPL  
  
 </term>  
<description> 指定された方向、 <paramref name="direction" /> パラメーターがサポートされていません。  
  
 </description>  
</item>  
<item>  
<term> OLE\_S\_USEREG  
  
 </term>  
<description> OLE がレジストリから形式を列挙するように要求します。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, valuetype System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">ポインター、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 形式、メディア、および呼び出し元がなどの後続の呼び出しでデータを取得するにはターゲット デバイスを定義するには、参照によって渡された構造 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />します。<see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、ここで重要ではありません、無視してください。</param>
        <param name="pformatetcOut">このメソッドが戻るときへのポインターを含む、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> へと規準的等価これにより、特定の表示の最も一般的な情報を格納する構造体 <c>formatetIn</c>します。 呼び出し元がこの構造体を割り当てる必要があり、 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> メソッドは、データを入力する必要があります。 などの後続の呼び出し内のデータを取得する <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, 、呼び出し元の指定された値を使用して <c>formatOut</c>, 指定された値がない限り、 <see langword="null" />です。 この値は <see langword="null" /> メソッドが返す <see langword="DATA_S_SAMEFORMATETC" />します。<see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、ここで重要ではありません、無視してください。 このパラメーターは初期化せずに渡されます。</param>
        <summary>機能では、標準 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> はより複雑な構造に論理的に相当する構造体。 2 つあるかどうかを判断するには、このメソッドを使用して異なる <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体は重複する表示にすること、同じデータを返します。</summary>
        <returns>このメソッドは、標準の戻り値である E\_INVALIDARG、E\_UNEXPECTED、および E\_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> S\_OK  
  
 </term>  
<description> 返された <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体が渡されたものと異なります。  
  
 </description>  
</item>  
<item>  
<term> DATA\_S\_SAMEFORMATETC  
  
 </term>  
<description> <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造が同じと <see langword="null" /> で返される、 <paramref name="formatOut" /> パラメーター。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_LINDEX  
  
 </term>  
<description> 無効な値がある <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />。 現在は\-1 だけがサポートされています。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_FORMATETC  
  
 </term>  
<description> 無効な値がある、 <paramref name="pFormatetc" /> パラメーター。  
  
 </description>  
</item>  
<item>  
<term> OLE\_E\_NOTRUNNING  
  
 </term>  
<description> アプリケーションが実行されていません。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">ポインター、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体、形式、メディア、およびデータを渡すときに使用するターゲット デバイスを定義するには、参照によって渡されます。 ブール型の OR 演算子を使用して複数のメディアを指定し、メソッドがそれらの指定の中から最良のメディアを選択できるようにします。</param>
        <param name="medium">このメソッドが戻るときへのポインターを含む、 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> を通じて返されたデータを格納しているストレージ メディアを示す、 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> メンバー、およびの値を通じてメディアを解放する必要の <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> メンバーです。 場合 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> は <see langword="null" />, 、メディアの受信側は解放を担当する以外の場合、 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> を指す、 <see langword="IUnknown" /> のでインターフェイスの適切なオブジェクトをその <see langword="Release" /> メソッドを呼び出すことができます。 メディアを割り当てられ、によってデータを設定する必要があります <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>ソース データ オブジェクトからデータを取得します。<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> データ コンシューマーによって呼び出される、メソッドは、指定した記述されているデータをレンダリング <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体し、指定したを通じて転送 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体。 呼び出し元に解放する必要は、その後、 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">ポインター、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体、形式、メディア、およびデータを渡すときに使用するターゲット デバイスを定義するには、参照によって渡されます。 1 つだけのメディアを指定できます <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, 、および次のオプションのみ <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 有効な値: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, 、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, 、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, 、または <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />です。</param>
        <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, 、転送されるデータを格納しているストレージ メディアを定義するには、参照によって渡されます。 メディアを呼び出し元によって割り当てられ、によってデータを設定する必要があります <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />します。 呼び出し元は、メディアを解放する必要もあります。 このメソッドの実装は、の値を指定する必要があります常に <see langword="null" /> の <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> のメンバー、 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> をこのパラメーターが指す構造体。</param>
        <summary>ソース データ オブジェクトからデータを取得します。 このメソッドは、データ コンシューマーによって呼び出されるとは異なります、 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> メソッドを呼び出し元の割り当てし、指定されたストレージ メディアを解放する必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">ポインター、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体、形式、メディア、およびクエリに使用するターゲット デバイスを定義するには、参照によって渡されます。</param>
        <summary>データ オブジェクトがで記述されているデータを描画できるかどうかを判断、 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体。 オブジェクトを呼び出す前にこのメソッドを呼び出して貼り付けまたは drop 操作を行う <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 操作が成功する可能性があるかどうかを示す値を取得します。</summary>
        <returns>このメソッドは、標準の戻り値である E\_INVALIDARG、E\_UNEXPECTED、および E\_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> S\_OK  
  
 </term>  
<description> 後続の呼び出しに <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 成功しまうでしょう。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_LINDEX  
  
 </term>  
<description> 値が無効です <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />。 現在は\-1 だけがサポートされています。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_FORMATETC  
  
 </term>  
<description> 無効な値、 <paramref name="pFormatetc" /> パラメーター。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_TYMED  
  
 </term>  
<description> 無効な <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> 値。  
  
 </description>  
</item>  
<item>  
<term> DV\_E\_DVASPECT  
  
 </term>  
<description> 無効な <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> 値。  
  
 </description>  
</item>  
<item>  
<term> OLE\_E\_NOTRUNNING  
  
 </term>  
<description> アプリケーションが実行されていません。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造、ストレージ メディアに含まれるデータを解釈するときに、データ オブジェクトで使用される書式を定義するには、参照によって渡されます。</param>
        <param name="pmedium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体、データが渡されるストレージ メディアを定義するには、参照によって渡されます。</param>
        <param name="fRelease">
          <see langword="true" /> データは、呼び出されるを実装するオブジェクトを指定する <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, の呼び出しが戻った後、ストレージ メディアを所有します。 つまり、呼び出すことによって使用された後に、データ オブジェクトが、メディアを解放する必要があります、 <see langword="ReleaseStgMedium" /> 関数です。<see langword="false" /> 呼び出し元がストレージ メディアの所有権を保持しをデータ オブジェクトと呼ばれることを指定するには、のみ呼び出しの間のストレージ メディアを使用します。</param>
        <summary>このメソッドを実装するオブジェクトにデータを転送します。 このメソッドは、データ ソースを格納しているオブジェクトから呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataObject> のインスタンスが <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このデータ オブジェクトで指定されたデータを格納します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オーディオ データの格納 \(<see cref="F:System.Windows.DataFormats.WaveAudio" /> データ形式\) オブジェクトにします。  オーディオ データには、バイト配列またはストリームを指定できます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このデータ オブジェクトを文字列として指定されたテキスト データを格納します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したデータ形式でデータを返します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>有効なテキスト データの形式でデータが存在するかどうかのデータ オブジェクトのクエリを実行します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このデータ オブジェクトのテキスト データを含む文字列を返します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このデータ オブジェクト内のデータが保存されているまたはに変換できる形式の一覧を返します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>