<Type Name="FontStyle" FullName="System.Windows.FontStyle">
  <TypeSignature Language="C#" Value="public struct FontStyle : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FontStyle extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FontStyle" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontStyleConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>標準、斜体、または斜投影としてフォント フェイスのスタイルを表す構造体を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 3 つに分類フォントの傾斜: 標準、斜体、および斜体です。  
  
|フォント スタイル|説明|  
|---------------|--------|  
|標準|通常、または roman、フォントの文字は垂直です。|  
|\[斜体\]|斜体のフォントの文字に正確に傾斜し、デザインされたとおりに表示されます。|  
|斜体 \(Oblique\)|斜体フォントの文字は人為的に傾斜されます。 傾斜は標準フォントの文字を傾斜変換を実行することによって実現されます。 真の斜体のフォントがないコンピューターやプリンター、斜投影スタイルで使用して、通常フォントから生成されることができます、斜体のフォントをシミュレートするために使用します。|  
  
 列挙の値を使用することができます、<xref:System.Windows.FontStyles>クラスを設定する、<xref:System.Windows.FontStyle>構造体。  
  
<a name="xamlAttributeUsage_FontWeight"></a>   
## XAML 属性の使用方法  
  
```  
<object fontStyleProperty="fontStylesValue"/>  
```  
  
<a name="xamlValues_FontWeight"></a>   
## XAML 値  
 *fontStylesValue*  
 A <xref:System.Windows.FontStyles> "Normal"、「斜体」または「斜投影」などの値。  
  
   
  
## 例  
 次の例のセット`"Italic"`として、<xref:System.Windows.FontStyle>です。  
  
 [!code-xml[FontSnippets\#FontStyleSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml#fontstylesnippet5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FontStretch" />
    <altmember cref="T:System.Windows.FontStyles" />
    <altmember cref="T:System.Windows.FontWeight" />
    <altmember cref="T:System.Windows.Media.FontFamily" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> を表す値、 <see cref="T:System.Windows.FontStyle" /> 等しいかどうかを比較します。</param>
        <summary>比較、 <see cref="T:System.Object" /> 、現在の <see cref="T:System.Windows.FontStyle" /> インスタンスが等しいかどうか。</summary>
        <returns>
          <see langword="true" /> 2 つのインスタンスが等しいを表示するにはそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.FontStyle obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.FontStyle obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.Equals(System.Windows.FontStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="obj">インスタンス <see cref="T:System.Windows.FontStyle" /> 等しいかどうかを比較します。</param>
        <summary>比較、 <see cref="T:System.Windows.FontStyle" /> 、現在の <see cref="T:System.Windows.FontStyle" /> インスタンスが等しいかどうか。</summary>
        <returns>
          <see langword="true" /> 2 つのインスタンスが等しいを表示するにはそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このオブジェクトのハッシュ コードを取得します。</summary>
        <returns>32 ビット ハッシュ コード \(符号付き整数\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 適した特定の型のハッシュ関数として返される値機能は、ハッシュ アルゴリズムやデータのハッシュ テーブルなどの構造を使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.FontStyle left, System.Windows.FontStyle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.FontStyle left, valuetype System.Windows.FontStyle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.FontStyle" />
        <Parameter Name="right" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="left">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 1 インスタンス。</param>
        <param name="right">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 2 インスタンス。</param>
        <summary>2 つのインスタンスを比較 <see cref="T:System.Windows.FontStyle" /> 等しいかどうか。</summary>
        <returns>
          <see langword="true" /> 指定した表示 <see cref="T:System.Windows.FontStyle" /> オブジェクトは同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.FontStyle left, System.Windows.FontStyle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.FontStyle left, valuetype System.Windows.FontStyle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.FontStyle" />
        <Parameter Name="right" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="left">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 1 インスタンス。</param>
        <param name="right">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 2 インスタンス。</param>
        <summary>2 つのインスタンスを評価 <see cref="T:System.Windows.FontStyle" /> 非等値を決定します。</summary>
        <returns>
          <see langword="false" /> 表示する <paramref name="left" /> に等しい <paramref name="right" />。 そうしないと、 <see langword="true" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.String" /> を使用する書式を指定します。  
  
 または  
  
 <see langword="null" /> 型に対して定義されている既定の形式を使用する、 <see cref="T:System.IFormattable" /> 実装します。</param>
        <param name="provider">
          <see cref="T:System.IFormatProvider" /> を使用して値の書式設定します。  
  
 または  
  
 <see langword="null" /> オペレーティング システムの現在のロケール設定から数値の書式情報を取得できます。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />」を参照してください。</summary>
        <returns>A <see cref="T:System.String" /> 指定の形式で現在のインスタンスの値を保持します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FontStyle.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.String" /> を表す現在 <see cref="T:System.Windows.FontStyle" /> オブジェクトは、基づいて、 <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> プロパティ情報。</summary>
        <returns>A <see cref="T:System.String" /> の値を表す、 <see cref="T:System.Windows.FontStyle" /> "Normal"、"Italic"または「斜投影」などのオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つのインスタンスを比較 <see cref="T:System.Windows.FontStyle" /> 等しいかどうか。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>