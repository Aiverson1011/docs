<Type Name="TextDecoration" FullName="System.Windows.TextDecoration">
  <TypeSignature Language="C#" Value="public sealed class TextDecoration : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextDecoration extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecoration" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字装飾を表しますがビジュアルの装飾 \(下線\) などのテキストに追加します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 文字の装飾の 4 種類があります。 ベースライン、下線、取り消し線、および上線。 次の例では、文字列に対する文字の装飾の位置を示します。  
  
 5f7a876d-afba-4fe3-b48d-3d053c51c810  
テキスト装飾の種類の例  
  
 次の例では、線形グラデーション ブラシと破線のペンによってスタイルが設定されているテキスト装飾を示します。  
  
 265bf108-2b1d-4182-b102-d0e33ac0773d  
線形グラデーション下線の例のスタイル設定ブラシと破線のペン  
  
 注意して <xref:System.Windows.TextDecoration> から派生した <xref:System.Windows.Media.Animation.Animatable>します。 使用して、装飾要素にアニメーション効果を適用できるようになります、 <xref:System.Windows.Media.Animation.DoubleAnimation> の <xref:System.Windows.TextDecoration.PenOffset%2A> と <xref:System.Windows.Media.Animation.ThicknessAnimation> の <xref:System.Windows.TextDecoration.Pen%2A>です。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TextDecorations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.TextDecoration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値、 <xref:System.Windows.TextDecoration.Location%2A> プロパティは <xref:System.Windows.TextDecorationLocation.Underline>です。  
  
   
  
## 例  
 次のコード例を作成する方法を示しています、 <xref:System.Windows.TextDecoration> 既定コンス トラクターを使用します。  
  
 [!code-csharp[TextDecorationSnippets\#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets2)]
 [!code-vb[TextDecorationSnippets\#TextDecorationSnippets2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets2)]
 [!code-xml[TextDecorationSnippets\#TextDecorationSnippets2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDecoration (System.Windows.TextDecorationLocation location, System.Windows.Media.Pen pen, double penOffset, System.Windows.TextDecorationUnit penOffsetUnit, System.Windows.TextDecorationUnit penThicknessUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.TextDecorationLocation location, class System.Windows.Media.Pen pen, float64 penOffset, valuetype System.Windows.TextDecorationUnit penOffsetUnit, valuetype System.Windows.TextDecorationUnit penThicknessUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.#ctor(System.Windows.TextDecorationLocation,System.Windows.Media.Pen,System.Double,System.Windows.TextDecorationUnit,System.Windows.TextDecorationUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.TextDecorationLocation" />
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="penOffset" Type="System.Double" />
        <Parameter Name="penOffsetUnit" Type="System.Windows.TextDecorationUnit" />
        <Parameter Name="penThicknessUnit" Type="System.Windows.TextDecorationUnit" />
      </Parameters>
      <Docs>
        <param name="location">文字の装飾の場所。</param>
        <param name="pen">
          <see cref="T:System.Windows.Media.Pen" /> 文字飾りを描画するために使用します。 この値は、する場合 <see langword="null" />, 文字の装飾の色に適用するテキストの色と一致する、および文字の装飾の太さに設定されているフォントのことをお勧めの太さ。</param>
        <param name="penOffset">文字の装飾の場所から垂直方向の移動距離。 負の値は、正の値が高い装飾を移動中に、以下で、装飾を移動します。</param>
        <param name="penOffsetUnit">値の解釈に使用する単位 <c>penOffset</c>します。</param>
        <param name="penThicknessUnit">値の解釈に使用する単位、 <see cref="P:System.Windows.Media.Pen.Thickness" /> の <c>pen</c>です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.TextDecoration" /> 、指定したクラス <see cref="P:System.Windows.TextDecoration.Location" />, 、<see cref="P:System.Windows.TextDecoration.Pen" />, 、<see cref="P:System.Windows.TextDecoration.PenOffset" />, 、<see cref="P:System.Windows.TextDecoration.PenOffsetUnit" />, 、および <see cref="P:System.Windows.TextDecoration.PenThicknessUnit" /> 値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例を作成する方法を示しています、 <xref:System.Windows.TextDecoration> を使用して、 `location`, 、`pen`, 、`penOffset`, 、`penOffsetUnit`, 、および `penThicknessUnit` パラメーター。  
  
 [!code-csharp[TextDecorationSnippets\#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets6)]
 [!code-vb[TextDecorationSnippets\#TextDecorationSnippets6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets6)]
 [!code-xml[TextDecorationSnippets\#TextDecorationSnippets6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.TextDecoration" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects \(or any <xref:System.Windows.Freezable> object\). For convenience, this method shadows the inherited version with a strongly typed implementation.  
  
 For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  
  
 When copying dependency properties, this method copies resource references and data bindings \(but they might no longer resolve\) but not animations or their current values.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.TextDecoration CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CloneCurrentValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.TextDecoration" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</summary>
        <returns>現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティの値が <see langword="false" /> 場合でも、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティの値が <see langword="true" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの使用の変更可能なコピーの作成をフリーズした <xref:System.Windows.Freezable> オブジェクト \(または任意 <xref:System.Windows.Freezable> オブジェクト\)。 便利な場合は、このメソッドは、厳密に型指定の実装と継承したバージョンをシャドウします。  
  
 詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>」を参照してください。  
  
 リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecoration.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationLocation Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または文字の装飾が描画される垂直方向の位置を設定します。</summary>
        <value>文字の装飾が描画される垂直方向の位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の例では、文字列に対する文字の装飾の位置を示します。  
  
 5f7a876d-afba-4fe3-b48d-3d053c51c810  
テキスト装飾の種類の例  
  
 <xref:System.Windows.TextDecoration.PenOffset%2A> プロパティを使用すると、指定された対象からの文字装飾をオフセット <xref:System.Windows.TextDecoration.Location%2A>します。  
  
<a name="dependencyPropertyInfo_Location"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.LocationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次のコード例では、純色ブラシ、ペンを使用した取り消し線付き文字の装飾が作成されます。<xref:System.Windows.TextDecoration.Location%2A> プロパティが <xref:System.Windows.TextDecorationLocation.Strikethrough> に設定されている。  
  
 [!code-csharp[textdecorationsnippets\#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets1)]
 [!code-vb[textdecorationsnippets\#TextDecorationSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets1)]
 [!code-xml[textdecorationsnippets\#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LocationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LocationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.LocationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.Location" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Pen Pen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Pen Pen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.Pen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Pen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Media.Pen" /> 文字飾りを描画するために使用します。</summary>
        <value>
          <see cref="T:System.Windows.Media.Pen" /> 文字飾りを描画するために使用します。 この値は、する場合 <c>null</c>, 、装飾の色を適用する文字列と一致して、装飾の太さに設定されているフォントのことをお勧めの太さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の例では、線形グラデーション ブラシと破線のペンによってスタイルが設定されているテキスト装飾を示します。  
  
 265bf108-2b1d-4182-b102-d0e33ac0773d  
線形グラデーション下線の例のスタイル設定ブラシと破線のペン  
  
<a name="dependencyPropertyInfo_Pen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次のコード例では、破線のペンの線形グラデーション ブラシを使用して下線の文字装飾が作成されます。  
  
 [!code-csharp[textdecorationsnippets\#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets3)]
 [!code-vb[textdecorationsnippets\#TextDecorationSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets3)]
 [!code-xml[textdecorationsnippets\#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenThicknessUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffset">
      <MemberSignature Language="C#" Value="public double PenOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PenOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字の装飾のオフセットを取得または設定の <see cref="P:System.Windows.TextDecoration.Location" />です。</summary>
        <value>文字の装飾のオフセット、 <see cref="P:System.Windows.TextDecoration.Location" />です。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 負の値は、正の値が低い文字飾りを移動中に、テキスト装飾が上を移動します。 使用して、 <xref:System.Windows.TextDecoration.PenOffsetUnit%2A> プロパティをこの値の単位を解釈する方法を指定します。  
  
<a name="dependencyPropertyInfo_PenOffset"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenOffsetProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.TextDecoration.PenOffset%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xml[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecoration.PenOffsetUnit" />
      </Docs>
    </Member>
    <Member MemberName="PenOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenOffset" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenOffsetUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenOffsetUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenOffsetUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単位を取得、 <see cref="P:System.Windows.TextDecoration.PenOffset" /> 値を表示します。</summary>
        <value>単位、 <see cref="P:System.Windows.TextDecoration.PenOffset" /> 値を表示します。 既定値は、<see cref="F:System.Windows.TextDecorationUnit.FontRecommended" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_PenOffsetUnit"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenOffsetUnitProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.TextDecoration.PenOffsetUnit%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xml[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenOffsetUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenOffsetUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenOffsetUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenOffsetUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenOffsetUnit" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.Pen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnit">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationUnit PenThicknessUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextDecorationUnit PenThicknessUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecoration.PenThicknessUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単位を取得、 <see cref="P:System.Windows.Media.Pen.Thickness" /> 文字の装飾の <see cref="P:System.Windows.TextDecoration.Pen" /> 表されます。</summary>
        <value>単位、 <see cref="P:System.Windows.Media.Pen.Thickness" /> 文字の装飾の <see cref="P:System.Windows.TextDecoration.Pen" /> 表されます。 既定値は、<see cref="F:System.Windows.TextDecorationUnit.FontRecommended" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_PenThicknessUnit"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.TextDecoration.PenThicknessUnitProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.TextDecoration.PenThicknessUnit%2A> プロパティを設定する方法を次のコード例に示します。  
  
 [!code-csharp[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets7)]
 [!code-vb[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets7)]
 [!code-xml[TextDecorationSnippets\#TextDecorationSnippets7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenThicknessUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenThicknessUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenThicknessUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextDecoration.PenThicknessUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.TextDecoration.PenThicknessUnit" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.TextDecoration" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>