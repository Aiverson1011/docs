<Type Name="Thickness" FullName="System.Windows.Thickness">
  <TypeSignature Language="C#" Value="public struct Thickness : IEquatable&lt;System.Windows.Thickness&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Thickness extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Thickness&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Thickness" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Thickness&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>四角形の枠の太さについて記述します。 4 つの <see cref="T:System.Double" /> 値は、それぞれ四角形の 4 つの辺 <see cref="P:System.Windows.Thickness.Left" />、<see cref="P:System.Windows.Thickness.Top" />、<see cref="P:System.Windows.Thickness.Right" />、および <see cref="P:System.Windows.Thickness.Bottom" /> を示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定できます <xref:System.Windows.Thickness> 方法は 2 つの値。 4 つを渡す場合 <xref:System.Double> 構造体への値を表す、 <xref:System.Windows.Thickness.Left%2A>, 、<xref:System.Windows.Thickness.Top%2A>, 、<xref:System.Windows.Thickness.Right%2A> と <xref:System.Windows.Thickness.Bottom%2A> 辺、それぞれの外接する四角形。 均一な値を外接する四角形の 4 辺すべてに適用される 1 つの値を指定することもできます。  
  
<a name="xamlAttributeUsage_Thickness"></a>   
## XAML 属性の使用方法  
  
```  
<object property="left"/>  
- or -  
<object property="left,top"/>  
- or -  
<object property=" left,top,right,bottom" ... />  
```  
  
<a name="xamlValues_Thickness"></a>   
## XAML 値  
 *左へ*  
 いずれかで説明した、フレームの左端、 <xref:System.Double> を指定する値、 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] メジャー、または、 *qualifiedDouble* \(下記参照\)。 だけを 1 つのメジャーが指定のメジャーがすべての左、上、右に適用されることを下の値、 <xref:System.Windows.Thickness>です。 これらのメジャーが対称的に適用されるだけ左と上のメジャーのペアが指定した場合、 <xref:System.Windows.Thickness>: 右の左の値が使用されます。 上位の値が下部の使用はです。  
  
 *上*  
 いずれかで説明した、フレームの上端、 <xref:System.Double> を指定する値、 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] メジャー、または、 *qualifiedDouble* \(下記参照\)。 これらのメジャーが対称的に適用されるだけ左と上のメジャーのペアが指定した場合、 <xref:System.Windows.Thickness>: 右の左の値が使用されます。 上位の値が下部の使用はです。  
  
 *右*  
 いずれかとして記載されているフレームの右エッジ、 <xref:System.Double> を指定する値、 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] メジャー、または、 *qualifiedDouble* \(下記参照\)。 左側の値を指定しない場合は、左の値が使用されます。  
  
 *下*  
 いずれかとして記載されているフレームの下部にあるエッジ、 <xref:System.Double> を指定する値、 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] メジャー、または、 *qualifiedDouble* \(下記参照\)。 左側の値を指定しない場合は、左の値が使用されます。  
  
 *qualifiedDouble*  
 A *二重* 値のいずれかのメジャー、前述のよう後に 1 つの単位の次の宣言文字列: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
> [!NOTE]
>  値には、小数点を文字列として指定されている場合に明示的に含まれません必要があります。 文字列「1」で提供される [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 1.0 コードで参照されている場合の値に評価します。  
  
   
  
## 例  
 次の例のインスタンスを作成する方法を示しています、 <xref:System.Windows.Thickness> 構造体し、そのプロパティを設定を使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードです。  
  
 [!code-csharp[ThicknessStruct\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]
 [!code-vb[ThicknessStruct\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]
 [!code-xml[ThicknessStruct\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.ThicknessConverter" />
    <altmember cref="T:System.Windows.Media.Animation.ThicknessAnimation" />
    <altmember cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thickness (double uniformLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 uniformLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.#ctor(System.Double)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uniformLength" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="uniformLength">外接する四角形の 4 辺すべてに適用される一定の長さ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Thickness" /> 両側に指定された一定の長さを含む構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thickness (double left, double top, double right, double bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 left, float64 top, float64 right, float64 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
        <Parameter Name="bottom" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">四角形の左側の太さ。</param>
        <param name="top">四角形の上側の太さ。</param>
        <param name="right">四角形の右側の太さ。</param>
        <param name="bottom">四角形の下側の太さ。</param>
        <summary>特定の長さ \(<see cref="T:System.Double" /> として提供されている\) が四角形の各側に適用されている <see cref="T:System.Windows.Thickness" /> 構造の新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例のインスタンスを作成する方法を示しています、 <xref:System.Windows.Thickness> コードを使用して構造体。  
  
 [!code-csharp[ThicknessStruct\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#1)]
 [!code-vb[ThicknessStruct\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#1)]
 [!code-xml[ThicknessStruct\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Thickness.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または外接する四角形の下のピクセル単位の幅を設定します。</summary>
        <value>A <see cref="T:System.Double" /> のこのインスタンスの外接する四角形の下のピクセル単位の幅を表す <see cref="T:System.Windows.Thickness" />します。 ピクセルは 1\/96 インチになります。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を設定する方法を示しています、 <xref:System.Windows.Thickness.Bottom%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードです。  
  
 [!code-csharp[ThicknessStruct\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]
 [!code-vb[ThicknessStruct\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]
 [!code-xml[ThicknessStruct\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較対象のオブジェクト。</param>
        <summary>この比較 <see cref="T:System.Windows.Thickness" /> 間構造 <see cref="T:System.Object" /> 等しいかどうか。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 論理的に等価な 2 つの浮動小数点値に等しいかどうかテストは、累積されることができますが、値が演算を精度エラーのため失敗する可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Thickness thickness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Thickness thickness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.Equals(System.Windows.Thickness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thickness" Type="System.Windows.Thickness" />
      </Parameters>
      <Docs>
        <param name="thickness">インスタンス <see cref="T:System.Windows.Thickness" /> 等しいかどうかを比較します。</param>
        <summary>この比較 <see cref="T:System.Windows.Thickness" /> 間構造 <see cref="T:System.Windows.Thickness" /> 構造が等しいかどうか。</summary>
        <returns>
          <see langword="true" /> 場合は、2 つの <see cref="T:System.Windows.Thickness" /> は同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 論理的に等価な 2 つの浮動小数点値に等しいかテストは、累積されることができますが、値が演算を精度エラーにより失敗する可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この構造体のハッシュ コードを返します。</summary>
        <returns>
          <see cref="T:System.Windows.Thickness" /> のこのインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Thickness.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外接する四角形の左辺の幅 \(ピクセル単位\) を取得または設定します。</summary>
        <value>この <see cref="T:System.Windows.Thickness" /> のインスタンスについて、外接する四角形の左辺の幅 \(ピクセル単位\) を表す <see cref="T:System.Double" />。 1 ピクセルは 1\/96 インチに相当します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を設定する方法を示しています、 <xref:System.Windows.Thickness.Left%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードです。  
  
 [!code-csharp[ThicknessStruct\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]
 [!code-vb[ThicknessStruct\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]
 [!code-xml[ThicknessStruct\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Thickness t1, valuetype System.Windows.Thickness t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.Windows.Thickness" />
        <Parameter Name="t2" Type="System.Windows.Thickness" />
      </Parameters>
      <Docs>
        <param name="t1">比較する最初の構造体。</param>
        <param name="t2">その他の構造体を比較します。</param>
        <summary>2 つの値と比較する <see cref="T:System.Windows.Thickness" /> 構造体が等しいかどうか。</summary>
        <returns>
          <see langword="true" /> 場合は、2 つの <see cref="T:System.Windows.Thickness" /> は同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 論理的に等価な 2 つの浮動小数点値に等しいかどうかテストは、累積されることができますが、値が演算を精度エラーのため失敗する可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Thickness t1, valuetype System.Windows.Thickness t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.Windows.Thickness" />
        <Parameter Name="t2" Type="System.Windows.Thickness" />
      </Parameters>
      <Docs>
        <param name="t1">比較する最初の構造体。</param>
        <param name="t2">その他の構造体を比較します。</param>
        <summary>2 つを比較して <see cref="T:System.Windows.Thickness" /> の非等値構造体。</summary>
        <returns>
          <see langword="true" /> 場合は、2 つの <see cref="T:System.Windows.Thickness" /> いないは同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 論理的に等価な 2 つの浮動小数点値に等しいかテストは、累積されることができますが、値が演算を精度エラーにより失敗する可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Thickness.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または外接する四角形の右側のピクセル単位の幅を設定します。</summary>
        <value>A <see cref="T:System.Double" /> \(ピクセル単位\) のこのインスタンスの外接する四角形の右端の幅を表す <see cref="T:System.Windows.Thickness" />します。 ピクセルは 1\/96 インチになります。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を設定する方法を示しています、 <xref:System.Windows.Thickness.Right%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードです。  
  
 [!code-csharp[ThicknessStruct\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]
 [!code-vb[ThicknessStruct\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]
 [!code-xml[ThicknessStruct\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Thickness.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または外接する四角形の面の上のピクセル単位の幅を設定します。</summary>
        <value>A <see cref="T:System.Double" /> 面の上のこのインスタンスの外接する四角形のピクセル単位の幅を表す <see cref="T:System.Windows.Thickness" />します。 ピクセルは 1\/96 インチになります。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を設定する方法を示しています、 <xref:System.Windows.Thickness.Top%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] とコードです。  
  
 [!code-csharp[ThicknessStruct\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]
 [!code-vb[ThicknessStruct\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]
 [!code-xml[ThicknessStruct\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Thickness.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列表現を返します、 <see cref="T:System.Windows.Thickness" /> 構造体。</summary>
        <returns>A <see cref="T:System.String" /> を表す、 <see cref="T:System.Windows.Thickness" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>インスタンスを比較 <see cref="T:System.Windows.Thickness" /> 等しいかどうか。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Thickness" /> 構造体の新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>