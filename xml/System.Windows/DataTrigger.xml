<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>プロパティ値を適用またはバインドされたデータは、指定した条件を満たしている場合に、アクションを実行するトリガーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Style>, 、<xref:System.Windows.Controls.ControlTemplate>, 、および <xref:System.Windows.DataTemplate> すべてである triggers コレクションです。 A <xref:System.Windows.DataTrigger> データ オブジェクトのプロパティの値に一致すると、指定したプロパティ値を設定することができます <xref:System.Windows.Condition.Value%2A>します。 一覧を表示する場合の例の `Employee` オブジェクトの場合、各に基づいて、別にする前景色をする可能性があります `Employee's` 現在出席します。 \(たとえば、 `Employees` 紫色のフォア グラウンドで現在休暇中にあるユーザーが表示されます\)。 一部のシナリオでコンバーターを作成したり、使用する適切な場合があります、 <xref:System.Windows.Controls.DataTemplateSelector>です。 詳細については、次を参照してください。、 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
 両方を指定する必要があります、 <xref:System.Windows.DataTrigger.Binding%2A> と <xref:System.Windows.DataTrigger.Value%2A> プロパティを <xref:System.Windows.DataTrigger> ユーザーにとってわかりやすいデータ トリガーします。 1 つまたは両方のプロパティが指定されていない場合、例外がスローされます。  
  
 <xref:System.Windows.DataTrigger.Setters%2A> のプロパティ、 <xref:System.Windows.DataTrigger> オブジェクトから成るのみ <xref:System.Windows.Setter> オブジェクトです。 追加する、 <xref:System.Windows.Setter> の子、 <xref:System.Windows.DataTrigger> オブジェクトが暗黙的に追加して、 <xref:System.Windows.SetterBaseCollection> の <xref:System.Windows.DataTrigger> オブジェクトです。<xref:System.Windows.EventSetter> オブジェクトはサポートされていません。のみ <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> サポート <xref:System.Windows.EventSetter> オブジェクトです。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> の <xref:System.Windows.Controls.ListBox> にバインドされた *場所*, 、 <xref:System.Collections.ObjectModel.ObservableCollection%601> の *場所* オブジェクトです。*場所* オブジェクト プロパティがある *名* と *状態*します。  
  
 各 <xref:System.Windows.Controls.ListBoxItem> の <xref:System.Windows.Controls.ListBox> を表示、 *場所* オブジェクトです。<xref:System.Windows.Style> の例では、各に適用される <xref:System.Windows.Controls.ListBoxItem>します。  
  
 <xref:System.Windows.DataTrigger> が指定されているように場合、 *状態* の *場所* データ項目は、"WA"し、対応するフォア グラウンド <xref:System.Windows.Controls.ListBoxItem> は赤に設定します。  
  
 [!code-xml[DataTrigger\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 使用する例を次に示します、 <xref:System.Windows.DataTrigger>, 、 <xref:System.Windows.Media.Animation.BeginStoryboard> アクション、および <xref:System.Windows.Media.Animation.Storyboard> バインドされたデータは、指定した条件を満たしている場合に、プロパティをアニメーション化します。 インベントリの情報を表示、 <xref:System.Windows.Controls.ListBox> コントロールです。 使用して、 <xref:System.Windows.DataTrigger> をアニメーション化する、 <xref:System.Windows.UIElement.Opacity%2A> の各 <xref:System.Windows.Controls.ListBoxItem> 在庫の書籍を格納しています。  
  
 [!code-xml[AnimatePropertyStoryboards\#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.DataTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ オブジェクトのプロパティ値を作成するバインドを取得または設定します。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このバインディングによって生成されたプロパティの値は指定する値と比較、 <xref:System.Windows.DataTrigger.Value%2A> プロパティです。 その値は最初 \(可能な場合は、バインディングの値の型に変換し、し、2 つの値が比較を使用して、 `Object.Equals` メソッドです。 2 つの値が等しい場合、関連付けられているアクションまたは set アクセス操作子適用されます。  
  
 バインディングを作成して使用すると、 <xref:System.Windows.Data.Binding.Path%2A> 特定のオブジェクト \(バインド ソース オブジェクト\) のプロパティにバインドするプロパティです。 バインドする場合など、 *優先順位* のプロパティ、 *タスク*します。 詳細については、次を参照してください。 [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
 両方を指定する必要があります、 <xref:System.Windows.DataTrigger.Binding%2A> と <xref:System.Windows.DataTrigger.Value%2A> プロパティを <xref:System.Windows.DataTrigger> ユーザーにとってわかりやすいデータ トリガーします。 1 つまたは両方のプロパティが設定されていない場合、例外がスローされます。  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## XAML 属性の使用方法  
  
```  
<object property="{Binding declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## XAML 値  
 *declaration*  
 コンマ \(,\) で区切られた 0 個以上の属性の割り当て句。 参照してください [バインド マークアップ拡張機能の選択](http://msdn.microsoft.com/ja-jp/83d6e2a4-1b0c-4fc8-bd96-b5e98800ab63) の詳細。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.DataTrigger> 設定、 <xref:System.Windows.Controls.Border.BorderBrush%2A> という名前の要素の `border` に `Yellow` 場合、 `TaskType` プロパティは `TaskType.Home`です。  
  
 [!code-xml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 この例の詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">マークアップ拡張機能値が設定されるオブジェクト。</param>
        <param name="eventArgs">マークアップ拡張機能の処理に関連するデータです。</param>
        <summary>マークアップ拡張機能がのプロパティの値を提供する場合の処理、 <see cref="T:System.Windows.DataTrigger" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これによって、適用されている参照されるメソッドは、 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 属性をクラス レベルは、このメソッドが値を設定する試みがすべてを処理することを意味で<xref:System.Windows.DataTrigger> マークアップ拡張機能でします。 したは通常このメソッドを直接呼び出しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Setter" /> オブジェクトで、データ項目は、指定した条件を満たしているときに適用するプロパティ値をまとめたものです。</summary>
        <value>既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## XAML 値  
 *ZeroOrMoreSetters*  
 0 個以上 <xref:System.Windows.Setter> オブジェクトです。  
  
 A <xref:System.Windows.DataTrigger> を使用するアクションを実行することで、 <xref:System.Windows.Setter>s プロパティを適用する値のデータ項目が、指定した条件を満たす場合。  
  
 Set アクセス操作子の同じコレクションに同じプロパティを設定するときに複数の set アクセス操作子が宣言されている set アクセス操作子最後が使用されます。  
  
 <xref:System.Windows.DataTrigger.Setters%2A> のプロパティ、 <xref:System.Windows.DataTrigger> オブジェクトから成るのみ <xref:System.Windows.Setter> オブジェクトです。 追加する、 <xref:System.Windows.Setter> の子、 <xref:System.Windows.DataTrigger> オブジェクトが暗黙的に追加して、 <xref:System.Windows.SetterBaseCollection> の <xref:System.Windows.DataTrigger> オブジェクトです。<xref:System.Windows.EventSetter> オブジェクトはサポートされていません。のみ <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> サポート <xref:System.Windows.EventSetter> オブジェクトです。  
  
   
  
## 例  
 次の例では 2 つ <xref:System.Windows.DataTrigger> で定義されているオブジェクト、 <xref:System.Windows.DataTemplate>です。<xref:System.Windows.DataTemplate> に適用される *AuctionItem* データ オブジェクト \(この例では表示されません\)、このプロパティを持つ *SpecialFeatures*します。  
  
 最初の <xref:System.Windows.DataTrigger> が指定されているようにデータ オブジェクトがある場合、 *SpecialFeatures* の値 *色*, とにアイテムを表示し、 `DodgerBlue` 海軍の書名をバック グラウンドです。 データ オブジェクトがある場合、 *SpecialFeatures* の値 *を強調表示*, 、秒、 <xref:System.Windows.DataTrigger> アクティブ、星のオレンジ色の罫線を表示するアイテムの原因になります。  
  
 完全なサンプルを参照してください。 [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)します。  
  
 [!code-xml[DataBindingLab\#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.DataTrigger> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ オブジェクトのプロパティの値と比較する値を設定します。</summary>
        <value>既定値は <see langword="null" /> です。 例外」を参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 この値はによって生成されるプロパティの値と比較、 <xref:System.Windows.DataTrigger.Binding%2A> のプロパティ、 <xref:System.Windows.DataTrigger>です。 比較では、参照が等しいかどうかチェックします。 2 つの値が等しい場合、関連付けられているアクションまたは set アクセス操作子適用されます。  
  
 両方を指定する必要があります、 <xref:System.Windows.DataTrigger.Binding%2A> と <xref:System.Windows.DataTrigger.Value%2A> プロパティを <xref:System.Windows.DataTrigger> ユーザーにとってわかりやすいデータ トリガーします。 1 つまたは両方のプロパティが設定されていない場合、例外がスローされます。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> の <xref:System.Windows.Controls.ListBox> にバインドされた *場所*, 、 <xref:System.Collections.ObjectModel.ObservableCollection%601> の *場所* オブジェクトです。*場所* オブジェクト プロパティがある *名* と *状態*します。  
  
 各 <xref:System.Windows.Controls.ListBoxItem> の <xref:System.Windows.Controls.ListBox> を表示、 *場所* オブジェクトです。<xref:System.Windows.Style> の例では、各に適用される <xref:System.Windows.Controls.ListBoxItem>します。  
  
 <xref:System.Windows.DataTrigger> が指定されているように場合、 *状態* の *場所* データ項目は、"WA"し、対応するフォア グラウンド <xref:System.Windows.Controls.ListBoxItem> は赤に設定します。  
  
 [!code-xml[DataTrigger\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 次の例では 2 つ <xref:System.Windows.DataTrigger>s で定義されている、 <xref:System.Windows.DataTemplate>です。<xref:System.Windows.DataTemplate> に適用される *AuctionItem* データ オブジェクト \(この例では表示されません\)、このプロパティを持つ *SpecialFeatures*します。 参照してください [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703) 完全な例です。  
  
 最初の <xref:System.Windows.DataTrigger> が指定されているようにデータ オブジェクトがある場合、 *SpecialFeatures* の値 *色*, 、海軍の書名を DodgerBlue 背景を持つ項目が表示されます。 データ オブジェクトがある場合、 *SpecialFeatures* の値 *を強調表示*, 、秒、 <xref:System.Windows.DataTrigger> アクティブ、星のオレンジ色の罫線を表示するアイテムの原因になります。  
  
 [!code-xml[DataBindingLab\#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">式がサポートされていません。 バインディングはサポートされません。</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>