<Type Name="SplashScreen" FullName="System.Windows.SplashScreen">
  <TypeSignature Language="C#" Value="public class SplashScreen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplashScreen extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SplashScreen" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows Presentation Foundation \(WPF\) アプリケーションの起動画面を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.SplashScreen> 起動時のウィンドウで、イメージを表示するクラスまたは *スプラッシュ スクリーン*, 、WPF アプリケーションの起動時にします。 呼び出す、 <xref:System.Windows.SplashScreen.Show%2A> スプラッシュ画面を表示するメソッドです。 呼び出す、 <xref:System.Windows.SplashScreen.Close%2A> スプラッシュ スクリーンを閉じます。 使用するイメージを指定して、 <xref:System.Windows.SplashScreen> コンス トラクターです。  
  
 <xref:System.Windows.SplashScreen> クラスは、Windows Imaging Component \(WIC\) ではサポートされているすべてのイメージ形式を表示できます。 たとえば、BMP、GIF、JPEG、PNG、または TIFF 形式を使用することができます。 イメージは PNG ファイル、アルファ チャネルが含まれている場合は、アルファ チャネルで定義されている透明度を使用して、イメージが表示されます。  
  
 後で、コードによって追加されるスプラッシュ スクリーンにプレース ホルダー テキストを含めることはできません。 スプラッシュ スクリーンにテキストを含める場合は、イメージ ファイルに追加する必要があります。  
  
> [!NOTE]
>  スプラッシュ画面を表示するコードを記述する必要はありません。 以降で [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)] SP1 では、すばやく構成できますスプラッシュ スクリーンと既定の設定です。 詳細については、次を参照してください。 [方法: スプラッシュ スクリーンを WPF アプリケーションに追加する](http://msdn.microsoft.com/ja-jp/d70a25c4-5fb9-4c27-b01d-b1b8ef39b3fd)します。  
  
 <xref:System.Windows.SplashScreen> クラス スプラッシュ スクリーンを表示できるだけ早く、アプリケーションの開始後にします。 スプラッシュ スクリーンを表示するには、WPF アプリケーションのインスタンスが作成される前に、ネイティブ コードを使用します。 スプラッシュ スクリーンは、画面の中央に表示されます。 アプリケーションが読み込まれるときに、スプラッシュ スクリーンをフェードインします。  
  
 アプリケーションをコンパイルすると、イメージはアセンブリでマネージ リソースとして埋め込まれます。 アプリケーションがローカライズされている場合は、ローカライズされたサテライト DLL に画像が埋め込まれます。  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> クラスは、部分信頼で使用することはありません。  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> 異なるスタートアップ アーキテクチャを使用するために、XAML ブラウザー アプリケーション \(Xbap\) のクラスを使用できません。  
  
   
  
## 例  
 次のコード例を作成および使用して、\[スタートアップ\] ウィンドウを表示する方法を示しています、 <xref:System.Windows.SplashScreen> クラスです。  
  
 [!code-csharp[System.Windows.SplashScreen\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.SplashScreen/CS/App.xaml.cs#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">for access to unmanaged resources. Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
    <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">埋め込まれたリソースの名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.SplashScreen" /> で指定されたリソース クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `resourceName` パラメーター埋め込みリソースの通常の規則に従います。 詳細については、<xref:System.Resources.ResourceManager> クラスを参照してください。`resourceName` パラメーターを指定の名前、リソース ファイルと URI ではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for access to unmanaged resources. Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly">埋め込まれたリソースを含むアセンブリ。</param>
        <param name="resourceName">埋め込まれたリソースの名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.SplashScreen" /> で指定されたリソース アセンブリのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `resourceAssembly` と `resourceName` パラメーター埋め込みリソースの通常の規則に従います。 詳細については、<xref:System.Resources.ResourceManager> クラスを参照してください。`resourceName` パラメーターを指定の名前、リソース ファイルと URI ではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan fadeoutDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(valuetype System.TimeSpan fadeoutDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fadeoutDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="fadeoutDuration">A <see cref="T:System.TimeSpan" /> クローズ操作が開始された後にフェードするスプラッシュ画面の時間を指定します。</param>
        <summary>スプラッシュ スクリーンを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出した場合、 <xref:System.Windows.SplashScreen.Show%2A> メソッドを `autoClose` パラメーターを設定する `true`, を呼び出す必要はありません、 <xref:System.Windows.SplashScreen.Close%2A> メソッドです。 スプラッシュ スクリーンは、アプリケーションが読み込まれた後に自動的に閉じます。 既定値でフェードアウトするのにかかる時間の長さを決定スプラッシュ画面を閉じると、 `fadeoutDuration` 300 ミリ秒のパラメーターです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose">
          <see langword="true" /> スプラッシュ スクリーンを自動的に閉じる <see langword="false" /> スプラッシュ スクリーンを手動で閉じます。</param>
        <summary>スプラッシュ スクリーンが表示されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出した場合、 <xref:System.Windows.SplashScreen.Show%2A> メソッドを `autoClose` 設定 `true`, を呼び出す必要はありません、 <xref:System.Windows.SplashScreen.Close%2A> メソッドです。 スプラッシュ スクリーンは、アプリケーションが読み込まれた後に自動的に閉じます。 既定値でフェードアウトするのにかかる時間の長さを決定スプラッシュ画面を閉じると、 `fadeoutDuration` 300 ミリ秒のパラメーターです。  
  
 呼び出す、 <xref:System.Windows.SplashScreen.Show%2A> メソッドを `autoClose` 設定 `false` フェード期間の既定以外の値を指定する場合。 呼び出す必要は、 <xref:System.Windows.SplashScreen.Close%2A> スプラッシュ スクリーンを閉じます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">コンス トラクターで指定されたリソースが見つかりませんでした。</exception>
        <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose, bool topMost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose, bool topMost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
        <Parameter Name="topMost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose">
          <see langword="true" /> スプラッシュ スクリーンを自動的に閉じる <see langword="false" /> スプラッシュ スクリーンを手動で閉じます。</param>
        <param name="topMost">
          <see langword="true" /> スプラッシュ画面のウィンドウが WS\_EX\_TOPMOST のスタイルを使用する場合それ以外の場合 <see langword="false" />します。</param>
        <summary>スプラッシュ スクリーンが表示されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スプラッシュ スクリーンが表示されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.SplashScreen" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>