<Type Name="Condition" FullName="System.Windows.Condition">
  <TypeSignature Language="C#" Value="public sealed class Condition : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Condition extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Condition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>条件を表す、 <see cref="T:System.Windows.MultiTrigger" /> と <see cref="T:System.Windows.MultiDataTrigger" />, 、一連の条件に基づくプロパティ値に変更を適用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.MultiTrigger>s と <xref:System.Windows.MultiDataTrigger>s を一連の条件に基づくプロパティ値を設定できるようにします。 要素またはデータ項目のプロパティの値に一致すると、指定した条件が満たされる <xref:System.Windows.Condition.Value%2A> \(等価性のチェックを参照\)。 指定したすべての条件が満たされると、トリガーが適用されます。  
  
 例外が発生するケースの一覧を次に示します。  
  
-   各 <xref:System.Windows.Condition>, 、のみを設定するか、 <xref:System.Windows.Condition.Property%2A> プロパティまたは <xref:System.Windows.Condition.Binding%2A> プロパティです。 両方のプロパティを設定すると、例外がスローされます。  
  
-   場合、 <xref:System.Windows.Condition> は、 <xref:System.Windows.MultiTrigger>, 、 <xref:System.Windows.Condition.Property%2A> プロパティを null にすることはできません。  
  
-   場合、 <xref:System.Windows.Condition> は、 <xref:System.Windows.MultiDataTrigger>, 、 <xref:System.Windows.Condition.Binding%2A> プロパティを null にすることはできません。  
  
-   場合に、例外がスローされます、指定した <xref:System.Windows.Condition.Value%2A> の指定した型に対して無効です <xref:System.Windows.Condition.Property%2A>します。  
  
 されている場合、 <xref:System.Windows.Condition> は、 <xref:System.Windows.MultiTrigger>, 、 <xref:System.Windows.Condition.Property%2A> と <xref:System.Windows.Condition.Value%2A> プロパティを設定する必要があります。 場合は、 <xref:System.Windows.MultiDataTrigger>, 、 <xref:System.Windows.Condition.Binding%2A> と <xref:System.Windows.Condition.Value%2A> プロパティを設定する必要があります。  
  
   
  
## 例  
 次の例には 2 つ <xref:System.Windows.MultiTrigger>秒です。 最初のセット、 **MinWidth** プロパティ値の場合、 **HasItems** プロパティが false と **幅** プロパティは、 **自動**します。 2 つ目は似ていますが、 **MinHeight** プロパティです。  
  
 [!code-xml[ControlTemplateExamples\_snip\#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 参照してください、 <xref:System.Windows.Condition.Binding%2A> プロパティで使用する条件の例については、 <xref:System.Windows.MultiDataTrigger>です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.Data.BindingBase binding, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Data.BindingBase binding, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binding">条件のプロパティを指定するバインディング。</param>
        <param name="conditionValue">条件の値。</param>
        <summary>
          <see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">条件のプロパティです。</param>
        <param name="conditionValue">条件の値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Condition" /> 指定したプロパティと値を持つクラス。 このコンス トラクターでは、パラメーターの検証を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
        <Parameter Name="sourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">条件のプロパティです。</param>
        <param name="conditionValue">条件の値。</param>
        <param name="sourceName">
          <c>x:Name</c> 持つオブジェクトの <c>conditionProperty</c>です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Condition" /> クラスで指定されたプロパティ、値、およびソース オブジェクトの名前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>条件のプロパティを指定するバインドを取得または設定します。 これは <see cref="T:System.Windows.MultiDataTrigger" /> オブジェクトにのみ適用されます。</summary>
        <value>既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.MultiDataTrigger>秒を使用すると、返されるデータの値に基づくプロパティ値を設定できます。 たとえば、作業項目の一覧を表示する場合、優先度の高いが 2 週間以上で参照されていない場合は、背景が赤のタスクを表示します。  
  
 バインディングを作成して使用すると、 <xref:System.Windows.Data.Binding.Path%2A> 特定のオブジェクト \(バインド ソース オブジェクト\) のプロパティにバインドするプロパティです。 バインドする場合など、 *優先順位* のプロパティ、 *タスク*します。 詳細については、次を参照してください。 [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
 条件である場合、 <xref:System.Windows.MultiDataTrigger>, 、 <xref:System.Windows.Condition.Binding%2A> と <xref:System.Windows.Condition.Value%2A> プロパティを設定する必要があります。 設定、 <xref:System.Windows.Condition.Property%2A> 値では、例外をという点となります。  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## XAML 属性の使用方法  
  
```  
<object property="{Binding declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## XAML 値  
 *declaration*  
 バインディング宣言します。 参照してください [バインド宣言の概要](http://msdn.microsoft.com/ja-jp/b97fd626-4c0d-4761-872a-2bca5820da2c) の詳細。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> の <xref:System.Windows.Controls.ListBox> にバインドされた *場所*, 、 <xref:System.Collections.ObjectModel.ObservableCollection%601> の *場所* オブジェクトです。*場所* オブジェクト プロパティがある *名* と *状態*します。  
  
 各 <xref:System.Windows.Controls.ListBoxItem> の <xref:System.Windows.Controls.ListBox> を表示、 *場所* オブジェクトです。<xref:System.Windows.Style> の例では、各に適用される <xref:System.Windows.Controls.ListBoxItem>します。<xref:System.Windows.Condition>の <xref:System.Windows.MultiDataTrigger> が指定されてように場合、 *名* と *状態* の *場所* データ項目は、「ポートランド」と"OR"、それぞれ、バック グラウンドの対応する <xref:System.Windows.Controls.ListBoxItem> Cyan に設定します。  
  
 [!code-xml[DataTrigger\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Property" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または条件のプロパティを設定します。 これはのみに適用 <see cref="T:System.Windows.MultiTrigger" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Windows.DependencyProperty" /> 条件のプロパティを指定します。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.MultiTrigger>秒を使用すると、一連の条件に基づくプロパティ値を設定できます。 条件がときに満たされたプロパティの値 \(によって指定された、 <xref:System.Windows.Condition.Property%2A> プロパティ\) 一致する要素の指定した <xref:System.Windows.Condition.Value%2A> \(等価性のチェックを参照\)。 指定したすべての条件が満たされると、トリガーが適用されます。  
  
 場合 `TargetType` のトリガーを含むテンプレートのスタイルが設定されていません。 使用して、プロパティ名を修飾する必要があります、 `ClassName.PropertyName` 構文です。  
  
 条件である場合、 <xref:System.Windows.MultiTrigger>, 、 <xref:System.Windows.Condition.Property%2A> と <xref:System.Windows.Condition.Value%2A> プロパティを設定する必要があります。 設定、 <xref:System.Windows.Condition.Binding%2A> 値では、例外をという点となります。  
  
 <xref:System.Windows.Condition>S <xref:System.Windows.MultiDataTrigger>、s、 <xref:System.Windows.Condition.Binding%2A> プロパティは、このプロパティの代わりに使用する必要があります。  
  
   
  
## 例  
 次の例には 2 つ <xref:System.Windows.MultiTrigger>秒です。 最初のセット、 **MinWidth** プロパティ値の場合、 **HasItems** プロパティが false と **幅** プロパティは、 **自動**します。 2 つ目は似ていますが、 **MinHeight** プロパティです。  
  
 [!code-xml[ControlTemplateExamples\_snip\#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Binding" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">マークアップ拡張機能値が設定されるオブジェクト。</param>
        <param name="eventArgs">マークアップ拡張機能の処理に関連するデータです。</param>
        <summary>マークアップ拡張機能がのプロパティの値を提供する場合の処理、 <see cref="T:System.Windows.Condition" /> オブジェクト</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これによって、適用されている参照されるメソッドは、 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 属性をクラス レベルは、このメソッドが値を設定する試みがすべてを処理することを意味で <xref:System.Windows.Condition> マークアップ拡張機能でします。 したは通常このメソッドを直接呼び出しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">型コンバーターは、値が設定されるオブジェクト。</param>
        <param name="eventArgs">型コンバーターの処理に関連するデータです。</param>
        <summary>型コンバーターがオンのプロパティの値を提供する場合の処理、<see cref="T:System.Windows.Condition" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これによって、適用されている参照されるメソッドは、 <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> 属性をクラス レベルは、このメソッドが値を設定する試みがすべてを処理することを意味で <xref:System.Windows.Condition> 型コンバーターを使用しました。 したは通常このメソッドを直接呼び出しません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を適用する関連付けられている setter を原因となったプロパティを持つオブジェクトの名前。 これはのみに適用 <see cref="T:System.Windows.MultiTrigger" /> オブジェクトです。</summary>
        <value>既定のプロパティは <see langword="null" />です。 このプロパティが場合 <see langword="null" />, 、スタイルが設定されているオブジェクトのプロパティによって関連付けられている setter が適用されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、トリガーのコレクション \(この条件を含むトリガーが含まれるコレクション\) が適用されるスコープ内の任意の要素の名前には、このプロパティを設定することができます。 通常、トリガーを格納しているテンプレート内にある名前付き要素です。  
  
 使用して、オブジェクトを名前を [x:Name Attribute](http://msdn.microsoft.com/ja-jp/b7e61222-e8cf-48d2-acd0-6df3b7685d48) 構文です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">後に、 <see cref="T:System.Windows.Condition" /> は使用中で、変更できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Condition> のインスタンスが <xref:System.ComponentModel.ISupportInitialize> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Condition> のインスタンスが <xref:System.ComponentModel.ISupportInitialize> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または条件の値を設定します。</summary>
        <value>
          <see cref="P:System.Windows.Condition.Value" /> プロパティは null にすることはできません、指定された <see cref="T:System.Windows.Condition" />します。  
  
 例外」を参照してください。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.MultiTrigger>s と <xref:System.Windows.MultiDataTrigger>s を一連の条件に基づくプロパティ値を設定できるようにします。 要素またはデータ項目のプロパティの値に一致すると、指定した条件が満たされる <xref:System.Windows.Condition.Value%2A>です。 指定したすべての条件が満たされると、トリガーが適用されます。 指定したすべての条件が満たされると、トリガーが適用されます。  
  
   
  
## 例  
 次の例には 2 つ <xref:System.Windows.MultiTrigger>秒です。 最初のセット、 **MinWidth** プロパティ値の場合、 **HasItems** プロパティが false と **幅** プロパティは、 **自動**します。 2 つ目は似ていますが、 **MinHeight** プロパティです。  
  
 [!code-xml[ControlTemplateExamples\_snip\#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 参照してください、 <xref:System.Windows.Condition.Binding%2A> プロパティで使用する条件の例については、 <xref:System.Windows.MultiDataTrigger>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">式がサポートされていません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Condition" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>