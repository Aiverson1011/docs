<Type Name="DeferrableContentConverter" FullName="System.Windows.DeferrableContentConverter">
  <TypeSignature Language="C#" Value="public class DeferrableContentConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeferrableContentConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DeferrableContentConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ストリームに変換する <see cref="T:System.Windows.DeferrableContent" /> インスタンス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="XAMLTextUsage_DeferrableContentConverter"></a>   
## XAML テキストの使用方法  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeferrableContentConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DeferrableContentConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.DeferrableContentConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DeferrableContentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="sourceType">A <see cref="T:System.Type" /> から変換する型を表します。</param>
        <summary>指定したオブジェクトをこのコンバーターが変換できるかどうかを返す、 <see cref="T:System.Windows.DeferrableContent" /> オブジェクトです。</summary>
        <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装は `true` に対してのみ、 `sourceType` に割り当てることができるを <xref:System.IO.Stream>。 他のすべての `sourceType` 戻り値の型 `false`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DeferrableContentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> 、現在のカルチャとして使用します。</param>
        <param name="value">変換するソース ストリーム。</param>
        <summary>新規作成\] を指定したストリームに変換 <see cref="T:System.Windows.DeferrableContent" /> オブジェクトです。</summary>
        <returns>新しい <see cref="T:System.Windows.DeferrableContent" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値 `context` のサービスを提供する必要があります <xref:System.Xaml.IXamlSchemaContextProvider>, 、<xref:System.Xaml.IRootObjectProvider>, 、<xref:System.Xaml.IXamlObjectWriterFactory>, 、および <xref:System.Windows.Markup.IProvideValueTarget>です。 スキーマ コンテキストと <xref:System.Xaml.IXamlSchemaContextProvider> が照会、内部的に実装された XAML スキーマ コンテキスト BAML 使用状況を特定である必要があります。 これにより、ユーザー コードのほとんどのシナリオを使用して <xref:System.Windows.DeferrableContentConverter>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="context" /> BAML に必要な XAML スキーマ コンテキストを提供することができません。  
  
 または  
  
 <see cref="T:System.Windows.Markup.IProvideValueTarget" /> サービスの解釈 <paramref name="context" /> ターゲット オブジェクトがないことを確認、 <see cref="T:System.Windows.ResourceDictionary" />です。  
  
 または  
  
 <paramref name="value" /> 有効なバイト ストリームではありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>