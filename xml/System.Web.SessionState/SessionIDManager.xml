<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ASP.NET セッション状態の一意の識別子を管理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.SessionIDManager> クラスは、ASP.NET セッション状態で使用するための一意のセッション id を管理する、HTTP モジュールです。 ASP.NET セッションの一意の識別子が、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> プロパティからアクセスできる、 <xref:System.Web.HttpContext.Session%2A> 、現在のプロパティ <xref:System.Web.HttpContext> または <xref:System.Web.UI.Page>です。 ASP.NET のセッション識別子は、小文字から成る 24 文字の文字列にエンコードされたランダムに生成された番号、z 値および 0 ~ 5 の数値にします。  
  
 既定では、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値は、ASP.NET アプリケーションに要求のたびに、cookie で送信します。 含むクッキーの名前、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値は、既定で ASP.NET\_SessionId します。 別の cookie 名を構成するには、設定、 `cookieName` の属性、 [sessionState 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 必要な cookie の名前にします。  
  
 でも行うことを ASP.NET アプリケーションで cookie の使用を無効にする場合のセッション状態を使用して、クッキーではなく URL に設定してセッション識別子を格納するようにアプリケーションを構成、 `cookieless` の属性、 `sessionState` 要素を `true` 、アプリケーションの Web.config ファイルにします。 詳細については、<xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> プロパティを参照してください。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>You can replace the ASP.NET session identifier with your own custom session identifier by creating a class that inherits the <see cref="T:System.Web.SessionState.SessionIDManager" /> class and overriding the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> and <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> methods with your own custom implementations. For an example of overriding the <see cref="T:System.Web.SessionState.SessionIDManager" /> class and implementing these methods, see the example provided for the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> method.  
  
 You can replace the entire <see cref="T:System.Web.SessionState.SessionIDManager" /> with a custom session-ID manager by creating a class that implements the <see cref="T:System.Web.SessionState.ISessionIDManager" /> interface. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter. For more information about creating a custom session-ID manager, see <see cref="T:System.Web.SessionState.ISessionIDManager" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.SessionState.SessionIDManager" /> クラスのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、アプリケーション コードから呼び出されるものではありません。  
  
 ASP.NET のインスタンスを作成するこのコンス トラクターを呼び出し、 <xref:System.Web.SessionState.SessionIDManager> クラスです。 ASP.NET を呼び出し、コンス トラクターを呼び出すと、 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> 新しい初期化するメソッドを <xref:System.Web.SessionState.SessionIDManager> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpContext" /> サーバー オブジェクトを参照するオブジェクトが HTTP 要求の処理に使用 \(たとえば、 <see cref="P:System.Web.HttpContext.Request" /> と <see cref="P:System.Web.HttpContext.Response" /> プロパティ\)。</param>
        <summary>セッションの一意のセッション識別子を作成します。</summary>
        <returns>一意のセッションの識別子です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> メソッドは、小文字から成る 24 文字の文字列にエンコードされたランダムに生成された番号である一意のセッション識別子を返します。、z 値および 0 ~ 5 の数値にします。  
  
   
  
## 例  
 次のコード例は、継承するクラスを示しています、 <xref:System.Web.SessionState.SessionIDManager> クラスおよびオーバーライド、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> と <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドを指定し、検証するメソッドを持つ、 <xref:System.Guid> として、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>です。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 この例で示すカスタム クラスを使用する構成の sessionIDManagerType 属性、 [sessionState 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 要素は、次の例で示すようにします。  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can supply a custom session identifier to be used by ASP.NET session state by creating a class that inherits the <see cref="T:System.Web.SessionState.SessionIDManager" /> class and overriding the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> and <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> methods with your own custom implementations. If your custom session ID does not meet the character constraints enforced by the default implementation of the <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> method, you should override the <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> method to provide validation of your custom session identifier. In this case, the <see cref="T:System.Web.SessionState.SessionIDManager" /> class will ensure that your custom session identifier is URL encoded in the HTTP response and URL decoded from the HTTP request using the <see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" /> and <see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" /> methods, respectively.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">デコードするセッション識別子。</param>
        <summary>Cookie または URL から取得したセッションの URL でエンコードされた識別子をデコードします。</summary>
        <returns>デコードされたセッションの識別子です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 このメソッドはによって内部的に使用、 <xref:System.Web.SessionState.SessionIDManager> カスタムをデコードするクラス <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 継承するクラスで作成された値、 <xref:System.Web.SessionState.SessionIDManager> クラスさせ、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> と <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドです。 による HTTP 要求から取得したカスタムのセッション識別子の値の忠実性を確認する、 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> 、メソッド、 <xref:System.Web.SessionState.SessionIDManager> カスタム値を使用して、デコード、 <xref:System.Web.HttpUtility.UrlDecode%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>For an example of a class that inherits the <see cref="T:System.Web.SessionState.SessionIDManager" /> class and overrides the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> and <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> methods, see the example provided for the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> method.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">エンコードするセッション識別子。</param>
        <summary>クッキーまたは URL のいずれかに保存するためのセッション識別子をエンコードします。</summary>
        <returns>エンコードされたセッションの識別子です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 このメソッドはによって内部的に使用、 <xref:System.Web.SessionState.SessionIDManager> ユーザー設定をエンコードするクラス <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 継承するクラスで作成された値、 <xref:System.Web.SessionState.SessionIDManager> クラスさせ、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> と <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドです。 HTTP 応答本文で格納されているカスタムのセッション id 値の忠実性を確実に、 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> メソッドを <xref:System.Web.SessionState.SessionIDManager> カスタム値を使用して、エンコード、 <xref:System.Web.HttpUtility.UrlEncode%2A> メソッドです。  
  
 継承するクラスの例については、 <xref:System.Web.SessionState.SessionIDManager> クラスおよびオーバーライド、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> と <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドを参照してください、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpContext" /> サーバー オブジェクトを参照するオブジェクトが HTTP 要求の処理に使用 \(たとえば、 <see cref="P:System.Web.HttpContext.Request" /> と <see cref="P:System.Web.HttpContext.Response" /> プロパティ\)。</param>
        <summary>現在の Web 要求からセッション id の値を取得します。</summary>
        <returns>現在の <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.SessionState.SessionStateModule> 呼び出し、 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> メソッド中に、 <xref:System.Web.HttpApplication.AcquireRequestState> を取得するイベント、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 現在から <xref:System.Web.HttpRequest>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">セッション id 値の長さの取得 HTTP から要求を超える、 <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化、 <see cref="T:System.Web.SessionState.SessionIDManager" /> 構成ファイルから情報を含むオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> メソッド、セッション構成からデータを読み取る、 [sessionState 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 構成ファイルの構成要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, bool supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> を現在の要求に関する情報を含むオブジェクト。</param>
        <param name="suppressAutoDetectRedirect">
          <see langword="true" /> クッキーのサポートの決定にリダイレクトするにはそれ以外の場合、 <see langword="false" /> を抑制する状況自動リダイレクトをクッキーのサポートを確認します。</param>
        <param name="supportSessionIDReissue">このメソッドが戻るときを示すブール値を格納するかどうか、 <see cref="T:System.Web.SessionState.SessionIDManager" /> オブジェクトは、元の ID が、発行元の新しいセッション Id をサポートしています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>要求ごとの初期化を実行、 <see cref="T:System.Web.SessionState.SessionIDManager" /> オブジェクトです。</summary>
        <returns>
          <see langword="true" /> 示すために、 <see cref="T:System.Web.SessionState.SessionIDManager" /> オブジェクトが的なリダイレクトをクッキーのサポートの決定を行う場合は、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 `cookieless` の属性、 `sessionState` に設定されている要素 `AutoDetect`, 、 <xref:System.Web.SessionState.SessionIDManager> オブジェクトが接続しているブラウザーが cookie をサポートしているかどうかを判断する同じパスにリダイレクトされます。 場合、 `suppressAutoDetectRedirect` パラメーターは `false`, 、サーバーはこのリダイレクトを実行しません。  
  
 `supportSessionIDReissue` パラメーターが返される `false` セッション id の要求が cookie を使用する場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpContext" /> サーバー オブジェクトを参照するオブジェクトが HTTP 要求の処理に使用 \(たとえば、 <see cref="P:System.Web.HttpContext.Request" /> と <see cref="P:System.Web.HttpContext.Response" /> プロパティ\)。</param>
        <summary>HTTP 応答からのセッション識別子 cookie を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.SessionState.SessionStateModule> 呼び出し、 <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> メソッド中に、 <xref:System.Web.HttpApplication.ReleaseRequestState> からのセッション識別子を削除するイベント、 <xref:System.Web.HttpResponse.Cookies%2A> のコレクション、 <xref:System.Web.HttpResponse> 場合は、新しいセッションが作成されましたが、使用されませんでした。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, bool redirected, bool cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpContext" /> サーバー オブジェクトを参照するオブジェクトが HTTP 要求の処理に使用 \(たとえば、 <see cref="P:System.Web.HttpContext.Request" /> と <see cref="P:System.Web.HttpContext.Response" /> プロパティ\)。</param>
        <param name="id">セッション識別子。</param>
        <param name="redirected">このメソッドが戻るときに、ブール値が含まれています<see langword=" true" /> 場合は、応答が URL に追加のセッション識別子を持つ現在の URL にリダイレクトされた以外の場合、 <see langword="false" />です。</param>
        <param name="cookieAdded">このメソッドが戻るときに、ブール値が含まれています<see langword=" true" /> がある場合、cookie を HTTP 応答に追加された以外の場合、 <see langword="false" />です。</param>
        <summary>HTTP 応答には、新しく作成されたセッション識別子を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> メソッドは、 <xref:System.Web.SessionState.SessionStateModule> 中に、 <xref:System.Web.HttpApplication.AcquireRequestState> イベントです。<xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> メソッドは、\(クッキーなしのセッション状態を使用\) 場合は、いずれかの URL または有効期限のないセッションの cookie、セッション識別子を格納します。  
  
 既定では、 <xref:System.Web.SessionState.SessionIDManager> 、有効期限のないセッションの cookie に一意のセッション識別子を配置し、設定、 `cookieAdded` パラメーターを `true`します。  
  
 クッキーなしのセッションの状態、 <xref:System.Web.SessionState.SessionIDManager> オブジェクトの一意のセッション識別子を現在の URL に挿入は、セッション識別子が含まれていて、設定を新しい URL にブラウザーをリダイレクト、 `redirected` パラメーターを `true`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">応答は既に送信されています。  
  
 または  
  
 セッション ID は、このメソッドが失敗しました検証に渡されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なセッションの識別子の最大長を取得します。</summary>
        <value>有効なセッションの識別子の最大長。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セッション識別子の最大長は、80 文字です。  
  
 セッション識別子によって作成されたときに、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> メソッドは 24 文字の長さで許可されているセッション id の最大長、 <xref:System.Web.SessionState.SessionIDManager> クラスは 80 文字です。 これは、ユーザー設定を実装する場合に特に重要 <xref:System.Web.SessionState.SessionIDManager>します。<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> から現在のセッション id 値を取得するメソッドを <xref:System.Web.HttpRequest>, 、値を超えないことにより、 <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A> 値とセッション識別子が、小文字のみを含む 24 文字の文字列になる、z を呼び出して数字 0 ~ 5 を <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドです。 カスタムを実装する場合 <xref:System.Web.SessionState.SessionIDManager> を継承するクラス、 <xref:System.Web.SessionState.SessionIDManager> クラスおよびオーバーライド、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> メソッドではなく、 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッド、カスタムのセッション id 値は、上記の制約を満たす必要があります。 オーバーライドする例については、 <xref:System.Web.SessionState.SessionIDManager> クラスし、これらのメソッドを実装するには、使用されている例を参照してください、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">検証するセッション識別子。</param>
        <summary>セッション識別子が有効かどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> セッション識別子が無効である場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードから呼び出されるものはありません。  
  
 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドであることを確認、指定された `id` 24 文字の文字列から文字の小文字から成る、z および数字の 0 ~ 5、およびその最大の長さ、セッション ID 80 文字以下です。  
  
 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> メソッドの呼び出し、 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドが提供されているセッション識別子が正しくフォーマットされていることを確認する、HTTP 要求からのセッション識別子を取得するときにします。  
  
   
  
## 例  
 次のコード例は、継承するクラスを示しています、 <xref:System.Web.SessionState.SessionIDManager> クラスおよびオーバーライド、 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> と <xref:System.Web.SessionState.SessionIDManager.Validate%2A> メソッドを指定し、検証するメソッドを持つ、 <xref:System.Guid> として、 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>です。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 この例で示すカスタム クラスを使用するのには、置換、 `SessionID` HTTP モジュールが次の例で示すように、カスタム クラスを使用して、Web.config ファイルです。  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can supply a custom session identifier to be used by ASP.NET session state by creating a class that inherits the <see cref="T:System.Web.SessionState.SessionIDManager" /> class and overriding the <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> and <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> methods with your own custom implementation. Even when you create a custom session identifier, the session ID is limited to 80 characters by the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>