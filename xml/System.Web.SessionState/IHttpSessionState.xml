<Type Name="IHttpSessionState" FullName="System.Web.SessionState.IHttpSessionState">
  <TypeSignature Language="C#" Value="public interface IHttpSessionState" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpSessionState" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.IHttpSessionState" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>カスタム セッション状態のコンテナーを実装するコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 セッション状態のコンテナーは、セッション状態の値と現在のセッションに関連する情報へのアクセスを提供します。 セッション状態のコンテナーに含まれるセッション情報がを通じてアプリケーション コードに公開される、 <xref:System.Web.SessionState.HttpSessionState> クラスを使用して、 <xref:System.Web.HttpContext.Session%2A> プロパティです。<xref:System.Web.SessionState.HttpSessionState> クラスは、セッション状態のコンテナーのラッパー クラスです。  
  
 ASP.NET のセッション状態のコンテナーの実装では、 <xref:System.Web.SessionState.HttpSessionStateContainer> クラスです。 要求の先頭の中に、 <xref:System.Web.HttpApplication.AcquireRequestState> イベント、 <xref:System.Web.SessionState.SessionStateModule> を作成して設定、 <xref:System.Web.SessionState.HttpSessionStateContainer> オブジェクトし、現在に割り当てられます <xref:System.Web.HttpContext>します。 要求の最後に中に、 <xref:System.Web.HttpApplication.ReleaseRequestState> イベント、 <xref:System.Web.SessionState.SessionStateModule> を取得、 <xref:System.Web.SessionState.HttpSessionStateContainer> オブジェクトから現在の <xref:System.Web.HttpContext> セッション ストアへのセッションの値の書き込みや、セッションを破棄など、必要なセッション作業を実行します。 要求が突然終了した場合、このような的なリダイレクトを介する、 <xref:System.Web.SessionState.SessionStateModule> を呼び出して同じのクリーンアップを実行する、 <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> メソッドです。  
  
 カスタム セッション状態のコンテナーを作成するを実装するクラスを作成、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。 カスタム セッション状態コンテナーを作成する場合も置き換える必要があります、 <xref:System.Web.SessionState.SessionStateModule> 独自のカスタム モジュールを使用しています。 カスタム モジュールは、カスタム セッション状態のコンテナーのインスタンスが作成され、現在追加 <xref:System.Web.HttpContext> を使用して、 <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> メソッドです。 カスタム セッション状態モジュールの例が含まれている、 <xref:System.Web.SessionState.SessionStateUtility> クラスの概要です。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState> という名前の新しいセッション状態のコンテナー クラスを作成するインターフェイス `MySessionState`します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#1)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Abandon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のセッションを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> をセッション データをクリアし、発生するメソッドが使用される、 **Session\_OnEnd** ASP.NET アプリケーションの Global.asax ファイルで定義されたイベント。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。 コード例での動作を複製、 <xref:System.Web.SessionState.HttpSessionStateContainer> クラスの追加点で、 <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> プロパティに設定されている `true` ときに、 <xref:System.Web.SessionState.IHttpSessionState.Abandon%2A> メソッドが呼び出されます。<xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> 中にセッション状態モジュールによってプロパティがオンになって、 <xref:System.Web.HttpApplication.ReleaseRequestState> セッションは放棄されたかどうかと、セッション状態モジュールは、セッション データを解除して、実行を決定するイベント、 **Session\_OnEnd** イベントです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#8)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">セッション状態コレクションに追加する項目の名前。</param>
        <param name="value">セッション状態コレクションに追加する項目の値。</param>
        <summary>セッション状態のコレクションに新しい項目を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Add%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> 内部セッション状態の項目コレクションに新しい項目の値を追加するインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#15)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セッション状態の項目コレクションからすべての値をクリアします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.IHttpSessionState.Clear%2A> 同じ機能を実行 <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Clear%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> 内部セッション状態の項目のコレクションからすべての項目を削除するインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#18)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のセッションのコード ページ id を設定します。</summary>
        <value>現在のセッションでのコード ページ識別子です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 文字セット \(コード ページ\) は、マルチバイト文字データ、文字値の決定を解釈し、並べ替え順序に使用されます。 コード ページの設定は、されていない Unicode 文字データへのマルチバイト文字データにのみ適用されます。  
  
 これは、 <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> プロパティは、ASP の旧バージョンのみと互換性のために提供します。 ASP ページとの下位互換性を維持する必要がない場合、 <xref:System.Text.Encoding.CodePage%2A> のプロパティ、 <xref:System.Web.HttpResponse.ContentEncoding%2A> プロパティ代わりにします。  
  
   
  
## 例  
 次のコード例を実装、 <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスを取得し、現在の応答のエンコーディングを設定します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#10)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションが Cookie なしのセッション用に構成されているかどうかを示す値を取得します。</summary>
        <value>いずれか、 <see cref="T:System.Web.HttpCookieMode" /> cookieless セッション用にアプリケーションが構成されているかどうかを示す値。 既定値は、<see cref="F:System.Web.HttpCookieMode.UseCookies" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> プロパティを返します。、 <xref:System.Web.HttpCookieMode> 列挙値の値に基づいている、 `cookieless` の属性、 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> 構成要素。 場合、 `cookieless` に属性が設定されている `true`, 、 <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> プロパティを返します。 <xref:System.Web.HttpCookieMode.UseUri>。 そうしないと、、 <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> プロパティを返します。 <xref:System.Web.HttpCookieMode.UseCookies>します。  
  
   
  
## 例  
 次のコード例、 `cookieless` の属性、 [sessionState 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 要素 `true` を変更するために Web.config ファイルで、 <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> プロパティです。 このサンプル アプリケーションの構成には、 <xref:System.Web.SessionState.IHttpSessionState.CookieMode%2A> は <xref:System.Web.HttpCookieMode.UseUri>です。  
  
```  
<configuration>  
  <system.web>  
    <sessionState  
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> セッション値を受け取る。</param>
        <param name="index">内のインデックス <c>array</c> 、コピーを開始します。</param>
        <summary>セッション状態の項目の値のコレクションを配列の指定したインデックスから始まる 1 次元の配列にコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.CopyTo%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> セッション状態の項目の値を配列にコピーするインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#22)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション状態の項目のコレクション内の項目の数を取得します。</summary>
        <value>セッション状態のアイテム コレクション内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Count%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> 内部セッション状態のアイテム コレクション内の項目数を取得します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#19)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のセッションですべてのセッション状態の項目値を読み取るために使用できる列挙子を返します。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> セッション状態のアイテム コレクション内の値を反復処理することができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.GetEnumerator%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> 内部のセッション状態の項目のコレクションの列挙子を取得します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#21)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション ID が URL に埋め込むか、HTTP クッキーに格納されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> セッションが URL に埋め込まれている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、cookie なしのセッションは、次を参照してください。 [Session Identifiers](http://msdn.microsoft.com/ja-jp/146ca206-d151-4f2e-a548-bcca05ccf0cb)します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.IsCookieless%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#6)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッションが現在の要求が作成されたかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 現在の要求で、セッションが作成された場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.IsNewSession%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#4)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッションは読み取り専用であるかどうかを示す値を取得します。</summary>
        <value>セッションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セッション状態設定読み取り専用に設定して、 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> ページ属性を `ReadOnly`します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.IsReadOnly%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイス コンス トラクターで設定した内部変数の値を返します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#24](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#24)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション状態の値のコレクションへのアクセスが同期されているかどうかを示す値 \(スレッド セーフである\) を取得します。</summary>
        <value>コレクションへのアクセスが同期されている \(スレッド セーフである\) 場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.IsSynchronized%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#25](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#25)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">セッション状態の項目の値の数値インデックス。</param>
        <summary>取得または数字のインデックスでセッション状態の項目値を設定します。</summary>
        <value>指定されたセッション状態のアイテムの値、 <paramref name="index" /> パラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Item%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスを格納および数値インデックスで内部辞書セッション状態の項目値を返します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#14)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">セッション状態の項目の値のキー名。</param>
        <summary>取得または名前でセッション状態のアイテムの値を設定します。</summary>
        <value>指定されたセッション状態のアイテムの値、 <paramref name="name" /> パラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Item%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> に保存し、キー名で内部辞書のセッション状態の項目値を返すへのインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#13)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション状態の項目のコレクションに格納されているすべての値のキーのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> セッション項目のすべてのキーを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Keys%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> 内部セッション状態の項目のコレクションからのセッション状態のアイテムのキー名のコレクションを取得するインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#20)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセッションのロケール識別子 \(LCID\) を取得または設定します。</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> インスタンスを現在のセッションのカルチャを指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `LCID` プロパティは、ASP の旧バージョンのみと互換性のために提供します。 ASP ページとの下位互換性を維持する必要がない場合、 <xref:System.Globalization.CultureInfo.LCID%2A> プロパティ代わりにします。  
  
 ASP.NET では、セッション状態にロケール識別子は保存されません。<xref:System.Web.SessionState.IHttpSessionState.LCID%2A> プロパティの呼び出し、 <xref:System.Globalization.CultureInfo.LCID%2A> を取得し、識別子を設定します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.LCID%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスを取得および現在のページのロケール識別子を設定します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#9)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセッション状態モードを取得します。</summary>
        <value>
          <see cref="T:System.Web.SessionState.SessionStateMode" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、別のセッション状態モードは、次を参照してください。 [Session State Modes](http://msdn.microsoft.com/ja-jp/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4)します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Mode%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#5)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">セッション状態の項目コレクションから削除する項目の名前。</param>
        <summary>セッション状態の項目コレクションから項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Remove%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> セッション状態の項目コレクションからキー名でセッション状態のアイテムを削除するインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#16)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.RemoveAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セッション状態の項目コレクションからすべての値をクリアします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A> 同じ機能を実行 <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>します。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> 内部セッション状態の項目のコレクションからすべての項目を削除するインターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#18)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">セッション状態コレクションから削除する項目のインデックス。</param>
        <summary>セッション状態の項目コレクションから指定したインデックス位置にある項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.RemoveAt%2A> のメソッド、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスが数字のインデックスを内部のセッション状態の項目コレクションからのセッション状態のアイテムを削除します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#17)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッションの一意のセッション識別子を取得します。</summary>
        <value>セッション id。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.SessionID%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#3)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>宣言されたオブジェクトのコレクションを取得 <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> ASP.NET アプリケーション ファイル Global.asax 内のタグ。</summary>
        <value>
          <see cref="T:System.Web.HttpStaticObjectsCollection" /> Global.asax ファイルで宣言されているオブジェクトを含みます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `StaticObjects` は、ASP の旧バージョンとの互換性のために提供されています。  
  
   
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.StaticObjects%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#12)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セッション状態値のコレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value>コレクションへのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.SyncRoot%2A> プロパティを実装している現在のオブジェクトのコピーを返す、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスです。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#23)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.IHttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得し、セッション状態プロバイダーは、セッションを終了する前に要求間で許可される分単位でタイムアウト期間を設定します。</summary>
        <value>タイムアウト期間 \(分\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を実装して、 <xref:System.Web.SessionState.IHttpSessionState.Timeout%2A> のプロパティ、 <xref:System.Web.SessionState.IHttpSessionState> インターフェイスを取得およびクラスのコンス トラクターで作成した内部変数に格納されているセッションのタイムアウト値を設定します。  
  
 [!code-csharp[System.Web.SessionState.IHttpSessionState\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/CS/mysessionstate.cs#2)]
 [!code-vb[System.Web.SessionState.IHttpSessionState\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.IHttpSessionState/VB/mysessionstate.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得または個別のセッション状態の項目の値を設定します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>