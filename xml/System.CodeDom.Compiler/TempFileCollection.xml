<Type Name="TempFileCollection" FullName="System.CodeDom.Compiler.TempFileCollection">
  <TypeSignature Language="C#" Value="public class TempFileCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.TempFileCollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>一時ファイルのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.CodeDom.Compiler.TempFileCollection> 一意のファイル名を生成して、ファイルの一覧を追跡するために使用できます。 これに役に立ちます <xref:System.CodeDom.Compiler.ICodeCompiler> コンパイラによって生成された中間ファイルを使用後に削除もの一覧を管理する場合に実装します。  
  
 一意の一時ファイル名を生成するディレクトリを指定するには、適切にオーバー ロードされたコンス トラクターを使用します。 示すかどうか、コレクションに追加されたファイル、する必要があります。 指定しない場合はそれ以外の場合を使用する場合、コンス トラクターのオーバー ロードを使用することもできます。、 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> または <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> メソッド、コレクションが破棄されるときに削除する、または <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドが呼び出されます。  
  
 インスタンスに任意のディレクトリ内のファイルを追加することができます <xref:System.CodeDom.Compiler.TempFileCollection> を使用して、 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> メソッドです。  
  
 特定のファイル拡張子の一時ファイル用の一意の名前を生成するには、呼び出す <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> および生成するファイル名の拡張子を指定します。<xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> メソッドは指定したディレクトリに指定した拡張子のファイル名への完全パスから成る文字列を返します、 <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> プロパティです。<xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> メソッドは 1 つのファイル名拡張子の 1 つの一意のファイル名だけを返します。  
  
 両方の <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> と <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> メソッド コレクションが破棄されるときに、ファイルを削除するかどうかを指定するためのオーバー ロードがあります、または <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドが呼び出されます。  
  
 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドにするおくとマークされているものを除き、コレクション内のすべてのファイルが削除されます。  
  
 <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> プロパティによって返されるファイル名の生成に使用されるファイル名拡張子の付かないの基本ファイル名への完全パスを示す、 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> メソッドです。  
  
> [!NOTE]
>  このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルで継承確認要求が含まれています。 A <xref:System.Security.SecurityException> 直前の呼び出し元または派生クラスのいずれかに完全信頼のアクセス許可があるない場合にスローされます。 セキュリティ要求の詳細については、「 [Link Demands](http://msdn.microsoft.com/ja-jp/a33fd5f9-2de9-4653-a4f0-d9df25082c4d) と [継承確認要求](http://msdn.microsoft.com/ja-jp/28b9adbb-8f08-4f10-b856-dbf59eb932d9)します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.CodeDom.Compiler.TempFileCollection> クラスおよび <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> と <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> メソッドです。  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#1)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">for deriving from the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class. Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />;<see cref="T:System.Security.PermissionSet" />: **languageKeyword tag is not supported!!!!**  
.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> クラスの新しいインスタンスを既定値で初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、既定の設定を使用して、コレクションを初期化する既定のコンス トラクターです。 既定では、この一時ファイル コレクションは既定の一時ディレクトリにファイルを保管して、生成および使用された後に一時ファイルを削除します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tempDir">使用して一時ファイルを保存、一時ディレクトリへのパス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> クラスを生成して、使用後に一時ファイルを削除する既定で設定されている指定された一時ディレクトリを使用します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">for full trust for the immediate caller. This class cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir, bool keepFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir, bool keepFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
        <Parameter Name="keepFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tempDir">使用して一時ファイルを保存、一時ディレクトリへのパス。</param>
        <param name="keepFiles">
          <see langword="true" /> 一時ファイルを使用後も保持する場合 <see langword="false" /> 場合は、一時ファイルを削除する必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> クラスの指定された一時ディレクトリとの保持または既定で生成して、使用後に一時ファイルを削除するかどうかを示す値を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値 `keepFiles` 設定に使用される、 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> パラメーター。 コレクション内の一時ファイルを保持またはの値に基づいてコンパイラ アクティビティの完了すると削除、 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> コレクション内のプロパティです。 各ファイルが、コレクションの現在の値に追加されるにつれて <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> を持つメソッドを使用して追加はしていない場合は、それに関連付けられた、 `keepFile` の特定のファイルの値を使用する場合のパラメーターです。 ときに、 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドが呼び出される場合は <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> は `true`, を使用して追加も含めすべてのファイルが削除され、 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> の値 `true`です。 これにより、特定のファイルが一時的にエラーが報告などの目的のコンパイル後に保持し、不要になったときに削除のファイルとして識別されるものです。  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">for full trust for the immediate caller. This class cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension">コレクションに追加する一時ファイルの自動生成された名前のファイル名拡張子。</param>
        <summary>指定したファイル名拡張子を持つファイル名をコレクションに追加します。</summary>
        <returns>指定された拡張子をコレクションに追加されたファイル名です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定した拡張子の一時ファイルのコレクションに追加されているファイル名を返します。 使用する前に、その他のコードは、ファイルを作成してする必要があります。  
  
 このメソッドは、同じ拡張機能で呼び出された場合は、同じ名前を返すために、各ファイル名拡張子に対して一度だけ呼び出すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileExtension">コレクションに追加する一時ファイルの自動生成された名前のファイル名拡張子。</param>
        <param name="keepFile">
          <see langword="true" /> 使用後も、ファイルを保持する場合 <see langword="false" /> 場合は、ファイルを削除する必要があります。</param>
        <summary>ファイルを削除または保持するかどうかを示す値を指定して、コレクションに指定されたファイル名拡張子を持つファイル名を追加します。</summary>
        <returns>指定された拡張子をコレクションに追加されたファイル名です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定した拡張子の一時ファイルのコレクションに追加されているファイル名を返します。 使用する前に、その他のコードは、ファイルを作成してする必要があります。  
  
 このメソッドは、同じ拡張機能で呼び出された場合は、同じ名前を返すために、各ファイル名拡張子に対して一度だけ呼び出すことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileExtension" /> が <see langword="null" /> または空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (string fileName, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFile(string fileName, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">コレクションに追加するファイルの名前。</param>
        <param name="keepFile">
          <see langword="true" /> 使用後も、ファイルを保持する場合 <see langword="false" /> 場合は、ファイルを削除する必要があります。</param>
        <summary>指定したファイルをコレクションが破棄された後、またはファイルを保持するかどうかを示す値を指定して、コレクションに追加、 <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> メソッドが呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用する、 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> コレクションに保持するのには、ファイルを追加するメソッドです。 このコード例が示されている例の一部は、 <xref:System.CodeDom.Compiler.TempFileCollection> クラスです。  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#2)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> が <see langword="null" /> または空の文字列です。  
  
 または  
  
 <paramref name="fileName" /> 重複しています。</exception>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションの一時ファイル名を生成するために使用される一時ディレクトリ パスのファイル名拡張子を除いたの基本ファイル名への完全パスを取得します。</summary>
        <value>コレクションの一時ファイル名を生成するために使用される、一時ディレクトリ パス上のファイル名拡張子の付かないの基本ファイル名の完全パス。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">場合、 <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> プロパティが設定されていないかに設定されている <see langword="null" />, 、および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> がで指定された一時ディレクトリに対して許可されていない、 <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] fileNames, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] fileNames, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileNames">コピー先の文字列の配列。</param>
        <param name="start">コピーを開始する配列のインデックス。</param>
        <summary>コレクションのメンバーを指定したインデックス位置に、指定した文字列にコピーします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内のファイルの数を取得します。</summary>
        <value>コレクション内のファイルの数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコレクション内で保持するマークされていない一時ファイルを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドはコレクション内のファイルが保持するか削除するかどうかを個別に確認するには、各ファイルをチェックします。 追加メソッドを使用して、コレクションに追加する際に、ファイルを明示的にマークすることができます、 `keepFile` パラメーター。 使用してコレクションにファイルを追加する場合、 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> がないオーバー ロード、 `keepFile` パラメーター値の <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> プロパティは、既定の保持ファイル インジケーターとして使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is **languageKeyword tag is not supported!!!!**  
, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このオブジェクトがガベージ コレクションによって回収される前に一時ファイルを削除しようとします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.Finalize%2A?displayProperty=fullName> を呼び出してリソースをクリーンアップし、 `Dispose(false)`します。`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。  
  
 アプリケーション コードは、このメソッドを呼び出さないようにオブジェクトの `Finalize` への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限りガベージ コレクション中にメソッドが自動的に起動、 <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> メソッドです。  
  
 詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/ja-jp/fd376774-1643-499b-869e-9546a3aeea70), 、[&#91;\<topic:\/\/cpconCleaningUpUnmanagedResources\>&#93;](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213), 、および [Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/ja-jp/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションのメンバーを列挙できる列挙子を取得します。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> コレクションのメンバーを格納しています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepFiles">
      <MemberSignature Language="C#" Value="public bool KeepFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定では、ファイルを保持するかどうかを示す値を取得またはときに、 <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> メソッドが呼び出されるか、コレクションを破棄します。</summary>
        <value>
          <see langword="true" /> ファイルを保持する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> プロパティは既定値として使用ときの値、 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> がないオーバー ロード、 `keepFile` パラメーターが、コレクションに一時ファイルを追加すると呼ばれます。 コレクション内の各一時ファイルが、そのファイルは保持するか削除するかどうかをファイルごとに決定する関連 keep ファイル フラグ。 ファイルを自動的に保持または、関連付けられている保持ファイルの値に基づいて、コンパイルの完了時に削除します。 ただし、コンパイルが完了したら、保存されたファイルが解放できるを設定して <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false 呼び出すと、 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> メソッドです。  これにより、すべてのファイルが削除が発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int start);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" /> から要素がコピーされる 1 次元の <see cref="T:System.Collections.ICollection" />。<see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
        <param name="start">コピーの開始位置となる、配列の 0 から始まるインデックス。</param>
        <summary>コレクションの要素を対象となる配列の指定したインデックスにある開始位置として、配列にコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションに格納されている要素の数を取得します。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスが同期されている \(スレッド セーフである\) かどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> へのアクセスが同期されている \(スレッド セーフである\) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションを反復処理する列挙子を返します。</summary>
        <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.Collections.IEnumerable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.CodeDom.Compiler.TempFileCollection> のインスタンスが <xref:System.IDisposable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="TempDir">
      <MemberSignature Language="C#" Value="public string TempDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TempDir" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の一時ファイルを格納する一時ディレクトリを取得します。</summary>
        <value>内の一時ファイルを格納する一時ディレクトリ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">for full trust for the immediate caller. This class cannot be used by partially trusted code.</permission>
        <summary>
          <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="AddExtension">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したファイル名拡張子を持つファイル名をコレクションに追加します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>