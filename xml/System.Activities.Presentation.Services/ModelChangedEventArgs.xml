<Type Name="ModelChangedEventArgs" FullName="System.Activities.Presentation.Services.ModelChangedEventArgs">
  <TypeSignature Language="C#" Value="public abstract class ModelChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>前の編集セッションにおけるモデル アイテム ツリーの変更に関する説明を保持するイベント データを表す抽象基本クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベント データは、<xref:System.Activities.Presentation.Services.ModelService.ModelChanged> イベントのサブスクライバーで使用できます。  
  
   
  
## 例  
<!-- TODO: review snippet reference  [!CODE [WFD\_ModelChangedEventArgs\#0](WFD_ModelChangedEventArgs#0)]  -->  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelChangedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelChangedEventArgs.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Activities.Presentation.Services.ModelChangedEventArgs" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsAdded">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; ItemsAdded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; ItemsAdded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelChangedEventArgs.ItemsAdded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Don't use this property. Use "ModelChangeInfo" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装された場合、追加されたイベント引数オブジェクトの列挙を取得します。</summary>
        <value>追加されたイベント引数の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsRemoved">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; ItemsRemoved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; ItemsRemoved" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelChangedEventArgs.ItemsRemoved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Don't use this property. Use "ModelChangeInfo" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装された場合、削除されたイベント引数オブジェクトの列挙を取得します。</summary>
        <value>削除されたイベント引数の <see cref="T:System.Collections.Generic.IEnumerable`1" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelChangeInfo">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Services.ModelChangeInfo ModelChangeInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Services.ModelChangeInfo ModelChangeInfo" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelChangedEventArgs.ModelChangeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Services.ModelChangeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装された場合は、モデルで行われた変更に関する詳細情報を取得します。</summary>
        <value>A <see cref="T:System.Activities.Presentation.Services.ModelChangeInfo" /> モデルで行われた変更に関する詳細情報を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesChanged">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; PropertiesChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; PropertiesChanged" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelChangedEventArgs.PropertiesChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Don't use this property. Use "ModelChangeInfo" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装された場合、変更されたプロパティの列挙を取得します。</summary>
        <value>変更されたプロパティの <see cref="T:System.Collections.Generic.IEnumerable`1" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>