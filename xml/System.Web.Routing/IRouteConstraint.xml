<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>URL パラメーター値が制約に対して有効かどうかを調べるためにクラスで実装する必要のあるコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Route 定義に、URL パラメーターの制約が含まれるいずれかの文字列、またはを実装するオブジェクトとして、制約を表す必要があります、 <xref:System.Web.Routing.IRouteConstraint> インターフェイスです。 制約が文字列の場合は、正規表現として扱われます。 実装するクラスを作成する <xref:System.Web.Routing.IRouteConstraint> と正規表現として簡単に検証ロジックを表すことはできません。 検証ロジックを追加する、 <xref:System.Web.Routing.IRouteConstraint.Match%2A> メソッドです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">HTTP 要求に関する情報をカプセル化するオブジェクト。</param>
        <param name="route">この制約が属するオブジェクト。</param>
        <param name="parameterName">チェックされるパラメーターの名前。</param>
        <param name="values">URL のパラメーターが含まれるオブジェクト。</param>
        <param name="routeDirection">受信要求の処理時、または URL の生成時に、制約チェックが実行されるかどうかを示すオブジェクト。</param>
        <summary>URL パラメーターにこの制約の正しい値が含まれているかどうかを判断します。</summary>
        <returns>URL パラメーターに正しい値が含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する、 <xref:System.Web.Routing.IRouteConstraint.Match%2A> 制約の検証ロジックを追加します。 このメソッドは、URL の構成と、受信要求が処理されるときに、ルーティングのためにフレームワークによって呼び出されます。 確認するには、現在のシナリオを指定できます、 `routeDirection` パラメーター。  
  
 要求が処理されるときに、ルーティングのフレームワークは、パターンと受信要求の値がパターンおよびルートの制約と一致するかどうかを決定します。 URL の構成とルーティングのフレームワークでは、値に、ときに渡されるかどうかが決まります、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> メソッドが呼び出されたパターンと、ルートの制約に一致します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>