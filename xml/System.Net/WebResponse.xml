<Type Name="WebResponse" FullName="System.Net.WebResponse">
  <TypeSignature Language="C#" Value="public abstract class WebResponse : MarshalByRefObject, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebResponse extends System.MarshalByRefObject implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebResponse" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>URI \(Uniform Resource Identifier\) からの応答を利用できるようにします。 これは <see langword="abstract" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse> クラスは、 `abstract` 基本プロトコル固有の応答クラスの派生元となるクラスです。 インスタンスを使用するプロトコルに依存しない方法でアプリケーションが要求と応答のトランザクションに参加できる、 <xref:System.Net.WebResponse> プロトコル固有のクラスから派生したクラス <xref:System.Net.WebResponse> 要求の詳細を実行します。  
  
 クライアント アプリケーションは作成しないでください <xref:System.Net.WebResponse> オブジェクト直接呼び出すことによって作成される、 <xref:System.Net.WebRequest.GetResponse%2A> メソッドを <xref:System.Net.WebRequest> インスタンス。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Net.WebResponse> インスタンスから、 <xref:System.Net.WebRequest>です。  
  
 [!code-cpp[Classic WebRequest Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you inherit from <see cref="T:System.Net.WebResponse" />, you must override the following members: <see cref="P:System.Net.WebResponse.ContentLength" />, <see cref="P:System.Net.WebResponse.ContentType" />, <see cref="M:System.Net.WebResponse.GetResponseStream" />, <see cref="P:System.Net.WebResponse.ResponseUri" />, and <see cref="P:System.Net.WebResponse.Headers" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.WebResponse" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションが呼び出す必要はありません、 <xref:System.Net.WebResponse> 直接コンス トラクターを使用してください、 <xref:System.Net.WebRequest.GetResponse%2A> メソッドを <xref:System.Net.WebRequest> インスタンス。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This constructor creates and initializes the required fields for descendant classes.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebResponse (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">新しい <see cref="T:System.Net.WebRequest" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスのインスタンス。</param>
        <param name="streamingContext">新しい <see cref="T:System.Net.WebRequest" /> インスタンスに関連付けられているシリアル化ストリームのソースを指定する <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスのインスタンス。</param>
        <summary>
          <see cref="T:System.Net.WebResponse" /> クラスと <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスの指定したインスタンスから、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを実装する派生クラスによって実装された場合、 <xref:System.Runtime.Serialization.ISerializable> のためのインターフェイス、 <xref:System.Net.WebResponse> 子孫です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">すべての試行がコンス トラクターが派生クラスでオーバーライドされていない場合、コンス トラクターにアクセスしようとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、応答ストリームを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.Close%2A> メソッドで使用したリソースをクリーンアップ、 <xref:System.Net.WebResponse> を呼び出して、基になるストリームを閉じると、 <xref:System.IO.Stream.Close%2A?displayProperty=fullName> メソッドです。  
  
> [!NOTE]
>  システム リソースの不足を防ぐためには、応答を閉じる必要があります。 呼び出して、応答ストリームを閉じることが <xref:System.IO.Stream.Close%2A?displayProperty=fullName> または <xref:System.Net.WebResponse.Close%2A>です。  
  
> [!NOTE]
>  <xref:System.Net.WebResponse> クラスは、 `abstract` クラスです。 実際の動作 <xref:System.Net.WebResponse> によって返される派生クラスによって実行時にインスタンスが決定されます <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName>します。 既定値と例外の詳細についてを参照してください派生クラスで、ドキュメントなど <xref:System.Net.HttpWebResponse> と <xref:System.Net.FileWebResponse>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.WebResponse.Close%2A> を終了するメソッド、 `WebResponse`です。  
  
 [!code-cpp[WebResponse\_close\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_Close/CPP/webresponse_close.cpp#1)]
 [!code-csharp[WebResponse\_close\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_Close/CS/webresponse_close.cs#1)]
 [!code-vb[WebResponse\_close\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_Close/VB/webresponse_close.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">すべての試行が、メソッドが派生クラスでオーバーライドされていない場合、メソッドにアクセスしようとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、受信しているデータのコンテンツ長を取得または設定します。</summary>
        <value>インターネット リソースから返されるバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.ContentLength%2A> プロパティには、インターネット リソースからの応答の長さ \(バイト\) が含まれています。 ヘッダー情報を含む要求方法については、 <xref:System.Net.WebResponse.ContentLength%2A> ヘッダー情報の長さは含まれません。  
  
> [!NOTE]
>  <xref:System.Net.WebResponse> クラスは、 `abstract` クラスです。 実際の動作 <xref:System.Net.WebResponse> によって返される派生クラスによって実行時にインスタンスが決定されます <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName>します。 既定値と例外の詳細についてを参照してください派生クラスで、ドキュメントなど <xref:System.Net.HttpWebResponse> と <xref:System.Net.FileWebResponse>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.WebResponse.ContentLength%2A> リソースの長さを取得するプロパティが返されます。  
  
 [!code-cpp[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ContentLength_Type/CPP/webresponse_contentlength_type.cpp#1)]
 [!code-csharp[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ContentLength_Type/CS/webresponse_contentlength_type.cs#1)]
 [!code-vb[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ContentLength_Type/VB/webresponse_contentlength_type.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">試行を取得またはプロパティが派生クラスでオーバーライドされていない場合、プロパティを設定します。</exception>
        <altmember cref="P:System.Net.HttpWebResponse.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、受信しているデータのコンテンツ タイプを取得または設定します。</summary>
        <value>応答のコンテンツ タイプを格納する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.ContentType%2A> プロパティがわかっている場合は、インターネット リソースからの応答の MIME コンテンツ タイプを含みます。  
  
> [!NOTE]
>  <xref:System.Net.WebResponse> クラスは、 `abstract` クラスです。 実際の動作 <xref:System.Net.WebResponse> によって返される派生クラスによって実行時にインスタンスが決定されます <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName>します。 既定値と例外の詳細についてを参照してください派生クラスで、ドキュメントなど <xref:System.Net.HttpWebResponse> と <xref:System.Net.FileWebResponse>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.WebResponse.ContentType%2A> 応答のコンテンツの種類を取得するプロパティです。  
  
 [!code-cpp[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ContentLength_Type/CPP/webresponse_contentlength_type.cpp#1)]
 [!code-csharp[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ContentLength_Type/CS/webresponse_contentlength_type.cs#1)]
 [!code-vb[WebResponse\_ContentLength\_Type\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ContentLength_Type/VB/webresponse_contentlength_type.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">試行を取得またはプロパティが派生クラスでオーバーライドされていない場合、プロパティを設定します。</exception>
        <altmember cref="P:System.Net.HttpWebResponse.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.WebResponse" /> オブジェクトによって使用されているアンマネージ リソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Net.WebResponse" /> オブジェクトによって使用されているアンマネージ リソースを解放します。オプションとして、マネージ リソースを破棄することもできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is **languageKeyword tag is not supported!!!!**  
, this method releases all resources held by any managed objects that this <xref:System.Net.WebResponse> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
> [!NOTE]
>  This member outputs trace information when you enable network tracing in your application. For more information, see [&#91;\<topic:\/\/conUsingNetworkTracing\>&#93;](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="streamingContext">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、ターゲット オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるすべてのオブジェクト、 <xref:System.Runtime.Serialization.SerializationInfo> 自動的に追跡され、フォーマッタによってシリアル化します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetResponseStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.GetResponseStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、インターネット リソースからデータ ストリームを返します。</summary>
        <returns>インターネット リソースからデータを読み取るための <see cref="T:System.IO.Stream" /> クラスのインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.GetResponseStream%2A> メソッドは、インターネット リソースからデータ ストリームを返します。  
  
> [!NOTE]
>  システム リソースの不足を防ぐためには、応答ストリームを閉じる必要があります。 呼び出して、応答ストリームを閉じることが <xref:System.IO.Stream.Close%2A?displayProperty=fullName> または <xref:System.Net.WebResponse.Close%2A>  
  
   
  
## 例  
 次の例では使用 <xref:System.Net.WebResponse.GetResponseStream%2A> を返す、 <xref:System.IO.StreamReader> インスタンス。 データを読み取る小さなローカル バッファーが使用される、 <xref:System.IO.StreamReader> をコンソールに出力します。  
  
 [!code-cpp[WebResponse\_GetResponseStream\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_GetResponseStream/CPP/webresponse_getresponsestream.cpp#1)]
 [!code-csharp[WebResponse\_GetResponseStream\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_GetResponseStream/CS/webresponse_getresponsestream.cs#1)]
 [!code-vb[WebResponse\_GetResponseStream\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_GetResponseStream/VB/webresponse_getresponsestream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">すべての試行が、メソッドが派生クラスでオーバーライドされていない場合、メソッドにアクセスしようとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、この要求に関連付けられたヘッダーの名前と値のペアのコレクションを取得します。</summary>
        <value>この応答に関連付けられているヘッダーの値を格納している <see cref="T:System.Net.WebHeaderCollection" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.Headers%2A> プロパティは、応答で返されるヘッダーの名前と値のペアを格納します。  
  
> [!NOTE]
>  <xref:System.Net.WebResponse> クラスは、 `abstract` クラスです。 実際の動作 <xref:System.Net.WebResponse> によって返される派生クラスによって実行時にインスタンスが決定されます <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName>します。 既定値と例外の詳細についてを参照してください派生クラスで、ドキュメントなど <xref:System.Net.HttpWebResponse> と <xref:System.Net.FileWebResponse>です。  
  
   
  
## 例  
 次の例は、すべてで返されるヘッダーの名前と値のペアの表示、 <xref:System.Net.WebResponse>です。  
  
 [!code-cpp[WebResponse\_Headers\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_Headers/CPP/webresponse_headers.cpp#1)]
 [!code-csharp[WebResponse\_Headers\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_Headers/CS/webresponse_headers.cs#1)]
 [!code-vb[WebResponse\_Headers\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_Headers/VB/webresponse_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">試行を取得またはプロパティが派生クラスでオーバーライドされていない場合、プロパティを設定します。</exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebResponse.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsFromCache">
      <MemberSignature Language="C#" Value="public virtual bool IsFromCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFromCache" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.IsFromCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この応答がキャッシュから取得されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
        <value>応答がキャッシュから取得された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のキャッシュ ポリシーと、要求されたリソースがキャッシュ内の有無は、応答をキャッシュから取得できるかどうかを決定します。 通常キャッシュされた応答を使用すると、アプリケーションのパフォーマンスが向上しますが、サーバー上の応答をキャッシュ内の応答が一致していないことのリスクがあります。 使用して、 <xref:System.Net.WebRequest.CachePolicy%2A> プロパティを設定し、 <xref:System.Net.Cache.RequestCachePolicy> を現在のキャッシュ ポリシーを列挙するクラス。  
  
 このプロパティの取得をスローできることに注意してください <xref:System.ObjectDisposedException>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>相互認証が行われたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
        <value>クライアントとサーバーの両方が認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 相互認証を要求するには、設定、 <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName> プロパティを使用して、 <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequested> または <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> 列挙値。 既定値、 <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName> プロパティを含む <xref:System.Security.Principal.TokenImpersonationLevel.Delegation> と <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequested>です。  
  
 このプロパティの取得をスローできることに注意してください <xref:System.ObjectDisposedException>します。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を確認します。  
  
 [!code-cpp[NclCredPolicy\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResponseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ResponseUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.ResponseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、要求に実際に応答したインターネット リソースの URI を取得します。</summary>
        <value>要求に実際に応答したインターネット リソースの URI を格納する <see cref="T:System.Uri" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebResponse.ResponseUri%2A> プロパティには、応答データを実際に指定したインターネット リソースの URI が含まれています。 基になるプロトコルは、要求のリダイレクトを許可する場合、このリソースは最初に要求された URI ではない可能性があります。  
  
> [!NOTE]
>  <xref:System.Net.WebResponse> クラスは、 `abstract` クラスです。 実際の動作 <xref:System.Net.WebResponse> によって返される派生クラスによって実行時にインスタンスが決定されます <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName>します。 既定値と例外の詳細についてを参照してください派生クラスで、ドキュメントなど <xref:System.Net.HttpWebResponse> と <xref:System.Net.FileWebResponse>です。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.WebResponse.ResponseUri%2A> プロパティの元の場所、 <xref:System.Net.WebResponse> の発生元します。  
  
 [!code-cpp[WebResponse\_ResponseUri\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse\_ResponseUri\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse\_ResponseUri\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">試行を取得またはプロパティが派生クラスでオーバーライドされていない場合、プロパティを設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsHeaders">
      <MemberSignature Language="C#" Value="public virtual bool SupportsHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebResponse.SupportsHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーがサポートされているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Boolean" /> を返します。  
  
 ヘッダーがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが true で常に [!INCLUDE[net_v45](~/includes/net-v45-md.md)]します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Net.WebResponse" /> のシリアル化されたデータを保持する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="streamingContext">新しい <see cref="T:System.Net.WebResponse" /> に関連付けられているシリアル化ストリームの転送先を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスに、<see cref="T:System.Net.WebResponse" /> をシリアル化するために必要なデータを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebResponse" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebResponse" /> オブジェクトによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>