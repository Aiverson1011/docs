<Type Name="WebException" FullName="System.Net.WebException">
  <TypeSignature Language="C#" Value="public class WebException : InvalidOperationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebException extends System.InvalidOperationException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebException" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.InvalidOperationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プラグ可能なプロトコルでネットワークにアクセスしているときにエラーが発生した場合にスローされる例外。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException> クラスが子となるクラスからスローされた <xref:System.Net.WebRequest> と <xref:System.Net.WebResponse> 、インターネットにアクセスするためのプラグ可能なプロトコルを実装します。  
  
 <xref:System.Net.WebException> の子によってスローされた、 <xref:System.Net.WebRequest> 、クラス、 <xref:System.Net.WebException.Response%2A> プロパティは、アプリケーションへのインターネット応答を提供します。  
  
 **関連するヒント**  
  
 **例外の Response プロパティを調べて、要求に失敗した原因を判断します。**  
 <xref:System.Net.WebException> 例外が <xref:System.Net.WebRequest> クラスの派生クラスによってスローされた場合、<xref:System.Net.WebException.Response%2A> プロパティにはアプリケーションへのインターネット応答が示されます。  
  
 **例外の Status プロパティを調べて、要求に失敗した原因を判断します。**  
 例外の <xref:System.Net.WebException.Status%2A> プロパティには、このエラーのステータス情報が示されます。 詳細については、「<xref:System.Net.WebExceptionStatus>」を参照してください。  
  
 **XML Web サービスにステップ インしているときにタイムアウトになった場合は、XML Web サービス呼び出しのタイムアウト値を無制限に設定します。**  
 詳細については、「[Error: Timeout While Debugging Web Services](http://msdn.microsoft.com/ja-jp/4b7df112-788a-4429-9a0c-4c6dac4fb609)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.WebException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターの新しいインスタンスを初期化する、 <xref:System.Net.WebException> クラスです。<xref:System.Exception.Message%2A> プロパティは、エラーを説明するシステム提供のメッセージに初期化します。 このメッセージには、現在のシステムのカルチャが考慮されます。<xref:System.Exception.InnerException%2A> と <xref:System.Net.WebException.Response%2A> にプロパティが初期化されます `null`します。<xref:System.Net.WebException.Status%2A> プロパティは <xref:System.Net.WebExceptionStatus.RequestCanceled> に初期化されます。  
  
   
  
## 例  
 次の例は、既定値をスロー <xref:System.Net.WebException>します。  
  
 [!code-cpp[WebException\_Constructor1\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor1/CPP/webexception_constructor1.cpp#1)]
 [!code-csharp[WebException\_Constructor1\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor1/CS/webexception_constructor1.cs#1)]
 [!code-vb[WebException\_Constructor1\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor1/VB/webexception_constructor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージのテキスト。</param>
        <summary>指定されたエラー メッセージで <see cref="T:System.Net.WebException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException> でインスタンスを初期化、 <xref:System.Exception.Message%2A> プロパティの値に設定 `message`します。 場合 `message` は `null`, 、 <xref:System.Exception.Message%2A> プロパティは、システム提供のメッセージに初期化します。<xref:System.Exception.InnerException%2A> と <xref:System.Net.WebException.Response%2A> にプロパティが初期化されます `null`します。<xref:System.Net.WebException.Status%2A> プロパティは <xref:System.Net.WebExceptionStatus.RequestCanceled> に初期化されます。  
  
   
  
## 例  
 次の例をスロー、 <xref:System.Net.WebException> エラー メッセージを指定しています。  
  
 [!code-cpp[WebException\_Constructor2\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor2/CPP/webexception_constructor2.cpp#1)]
 [!code-csharp[WebException\_Constructor2\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor2/CS/webexception_constructor2.cs#1)]
 [!code-vb[WebException\_Constructor2\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor2/VB/webexception_constructor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">新しい <see cref="T:System.Net.WebException" /> をシリアル化するために必要な情報を格納している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="streamingContext">新しい <see cref="T:System.Net.WebException" /> に関連付けられるシリアル化ストリームの転送元を格納する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> インスタンスから、<see cref="T:System.Net.WebException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを実装して、 <xref:System.Runtime.Serialization.ISerializable> のためのインターフェイス、 <xref:System.Net.WebException> クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージのテキスト。</param>
        <param name="innerException">入れ子になった例外。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.WebException" /> クラスを指定したエラー メッセージと入れ子になった例外を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException> でインスタンスを初期化、 <xref:System.Exception.Message%2A> プロパティの値に設定 `message` と <xref:System.Exception.InnerException%2A> プロパティの値に設定 `innerException`します。 場合 `message` は `null`, 、 <xref:System.Exception.Message%2A> プロパティは、システム提供のメッセージに初期化します。<xref:System.Exception.InnerException%2A> と <xref:System.Net.WebException.Response%2A> にプロパティが初期化されます `null`します。<xref:System.Net.WebException.Status%2A> プロパティは <xref:System.Net.WebExceptionStatus.RequestCanceled> に初期化されます。  
  
   
  
## 例  
 次の例をスロー、 <xref:System.Net.WebException> エラー メッセージと入れ子になった例外を指定しています。  
  
 [!code-cpp[WebException\_Constructor4\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor4/CPP/webexception_constructor4.cpp#1)]
 [!code-csharp[WebException\_Constructor4\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor4/CS/webexception_constructor4.cs#1)]
 [!code-vb[WebException\_Constructor4\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor4/VB/webexception_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, System.Net.WebExceptionStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, valuetype System.Net.WebExceptionStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージのテキスト。</param>
        <param name="status">
          <see cref="T:System.Net.WebExceptionStatus" /> 値のいずれか。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.WebException" /> クラスを指定したエラー メッセージとステータスを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException> でインスタンスを初期化、 <xref:System.Exception.Message%2A> プロパティの値に設定 `message` と <xref:System.Net.WebException.Status%2A> プロパティの値に設定 `status`します。 場合 `message` は `null`, 、 <xref:System.Exception.Message%2A> プロパティは、システム提供のメッセージに初期化します。<xref:System.Exception.InnerException%2A> と <xref:System.Net.WebException.Response%2A> にプロパティが初期化されます `null`します。  
  
   
  
## 例  
 次の例をスロー、 <xref:System.Net.WebException> エラー メッセージを指定することによって、 <xref:System.Net.WebExceptionStatus>です。  
  
 [!code-cpp[WebException\_Constructor3\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor3/CPP/webexception_constructor3.cpp#1)]
 [!code-csharp[WebException\_Constructor3\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor3/CS/webexception_constructor3.cs#1)]
 [!code-vb[WebException\_Constructor3\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor3/VB/webexception_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebException (string message, Exception innerException, System.Net.WebExceptionStatus status, System.Net.WebResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, valuetype System.Net.WebExceptionStatus status, class System.Net.WebResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="status" Type="System.Net.WebExceptionStatus" />
        <Parameter Name="response" Type="System.Net.WebResponse" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージのテキスト。</param>
        <param name="innerException">入れ子になった例外。</param>
        <param name="status">
          <see cref="T:System.Net.WebExceptionStatus" /> 値のいずれか 1 つ。</param>
        <param name="response">A <see cref="T:System.Net.WebResponse" /> リモート ホストからの応答を格納しているインスタンス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.WebException" /> 指定したエラー メッセージ、入れ子になった例外、状態、および応答しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException> でインスタンスを初期化、 <xref:System.Exception.Message%2A> プロパティの値に設定 `message`, 、 <xref:System.Exception.InnerException%2A> プロパティの値に設定 `innerException`, 、 <xref:System.Net.WebException.Status%2A> プロパティの値に設定 `status`, 、および <xref:System.Net.WebException.Response%2A> プロパティの値に設定 `response`します。 場合 `message` は `null`, 、 <xref:System.Exception.Message%2A> プロパティは、システム提供のメッセージに初期化します。  
  
   
  
## 例  
 次の例をスロー、 <xref:System.Net.WebException> エラー メッセージを指定することによって、 <xref:System.Net.WebExceptionStatus>です。  
  
 [!code-cpp[WebException\_Constructor5\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Constructor5/CPP/webexception_constructor5.cpp#1)]
 [!code-csharp[WebException\_Constructor5\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Constructor5/CS/webexception_constructor5.cs#1)]
 [!code-vb[WebException\_Constructor5\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Constructor5/VB/webexception_constructor5.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 使用します。</param>
        <param name="streamingContext">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> 使用します。</param>
        <summary>設定、 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスをシリアル化するために必要なデータを <see cref="T:System.Net.WebException" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.WebResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebException.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リモート ホストに返される応答を取得します。</summary>
        <value>インターネット リソースから応答がある場合は、 <see cref="T:System.Net.WebResponse" /> 、インターネット リソースからのエラー応答を格納しているインスタンスそれ以外の場合、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 HTTP などの一部のインターネット プロトコルを返すことを示す応答プロトコル レベルで発生したエラーを有効なそれ以外の場合。 インターネット要求への応答には、エラーが示されている場合 <xref:System.Net.WebRequest.GetResponse%2A?displayProperty=fullName> 設定、 <xref:System.Net.WebException.Status%2A> プロパティを <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=fullName> を提供し、 <xref:System.Net.WebResponse> でエラー メッセージを格納している、 <xref:System.Net.WebException.Response%2A> のプロパティ、 <xref:System.Net.WebException> がスローされました。 アプリケーションを調べることが、 <xref:System.Net.WebResponse> 実際のエラーを確認します。  
  
   
  
## 例  
 次の例の確認、 <xref:System.Net.WebException.Status%2A> プロパティと、コンソールに出力し、 <xref:System.Net.HttpWebResponse.StatusCode%2A> と <xref:System.Net.HttpWebResponse.StatusDescription%2A> 、基になる <xref:System.Net.HttpWebResponse> インスタンス。  
  
 [!code-cpp[WebException\_Status\_Response\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Status_Response/CPP/webexception_status_response.cpp#1)]
 [!code-csharp[WebException\_Status\_Response\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Status_Response/CS/webexception_status_response.cs#1)]
 [!code-vb[WebException\_Status\_Response\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Status_Response/VB/webexception_status_response.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.WebExceptionStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebExceptionStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebException.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebExceptionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>応答のステータスを取得します。</summary>
        <value>
          <see cref="T:System.Net.WebExceptionStatus" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebException.Status%2A> プロパティは、理由を示す、 <xref:System.Net.WebException>です。  
  
 値 <xref:System.Net.WebException.Status%2A> の 1 つ、 <xref:System.Net.WebExceptionStatus> 値。  
  
> [!WARNING]
>  <xref:System.Net.WebExceptionStatus.ProxyNameResolutionFailure> にエラーが返されない [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリです。  
  
   
  
## 例  
 次の例の確認、 <xref:System.Net.WebException.Status%2A> プロパティと、コンソールに出力し、 <xref:System.Net.HttpWebResponse.StatusCode%2A> と <xref:System.Net.HttpWebResponse.StatusDescription%2A> 、基になる <xref:System.Net.HttpWebResponse> インスタンス。  
  
 [!code-cpp[WebException\_Status\_Response\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebException_Status_Response/CPP/webexception_status_response.cpp#1)]
 [!code-csharp[WebException\_Status\_Response\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebException_Status_Response/CS/webexception_status_response.cs#1)]
 [!code-vb[WebException\_Status\_Response\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebException_Status_Response/VB/webexception_status_response.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.WebExceptionStatus" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">この <see cref="T:System.Net.WebException" /> のシリアル化の転送先となるオブジェクト。</param>
        <param name="streamingContext">シリアル化の転送先。</param>
        <summary>このインスタンスを、指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトにシリアル化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebException" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>