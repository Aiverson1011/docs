<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>HTTP インターネット リソースにアクセスする権限を制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebPermission> インターネット リソースへのアクセスを制御するメソッドとプロパティのセットを提供します。 使用することができます、 <xref:System.Net.WebPermission> に基づいて、リソースを制限付きであるか、無制限のアクセスを提供するのには、 <xref:System.Security.Permissions.PermissionState> ときに設定されている、 <xref:System.Net.WebPermission> が作成されます。  
  
 作成、 <xref:System.Net.WebPermission> パラメーターを使用して、次のいずれかのコンス トラクターを呼び出すことによってインスタンスを設定します。  
  
-   パラメーターはありません。 既定値 <xref:System.Security.Permissions.PermissionState> は <xref:System.Security.Permissions.PermissionState.None> です。  
  
-   <xref:System.Security.Permissions.PermissionState> いずれかを指定 <xref:System.Security.Permissions.PermissionState.Unrestricted> ターゲット クラスで使用する任意の URI を許可するように、または <xref:System.Security.Permissions.PermissionState.None> のみを使用すると指定した Uri へのアクセスを許可するように、 <xref:System.Net.WebPermission.AddPermission%2A> メソッドです。  
  
-   A <xref:System.Net.NetworkAccess> 値と URI 文字列。 指定された URI が与えられたアクセス許可、 <xref:System.Net.NetworkAccess> 値。  
  
-   A <xref:System.Net.NetworkAccess> 指定子は、正規表現の URI。  
  
 <xref:System.Net.WebPermission.ConnectList%2A> と <xref:System.Net.WebPermission.AcceptList%2A> アクセス許可を付与する Uri を保持します。 これらのリストのいずれかに URI を追加するには、使用 <xref:System.Net.WebPermission.AddPermission%2A>します。 渡した場合 <xref:System.Net.NetworkAccess.Accept> として、 <xref:System.Net.NetworkAccess> パラメーター、URI に追加する、 <xref:System.Net.WebPermission.AcceptList%2A>です。<xref:System.Net.WebPermission> ターゲット クラスに一致する Uri を持つ接続を許可する、 <xref:System.Net.WebPermission.AcceptList%2A>です。  
  
> [!CAUTION]
>  インターネット リソースへのアクセスを拒否するには、そのリソースへのすべての可能なパスへのアクセスを拒否する必要があります。 これにより、呼び出し元が必要です。 <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> 状態パラメーターを設定した <xref:System.Security.CodeAccessPermission.Deny%2A>します。 特定のリソースのみにアクセスできるようにすることをお勧めします。 このトピックの詳細についてを参照してください、 [NIB: 拒否メソッドを使用して](http://msdn.microsoft.com/ja-jp/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) トピックです。  
  
> [!NOTE]
>  リソースの標準パスのみを使用してアクセスを拒否する必要があります。 すべてのパスの構文を使用する必要はありません。  
  
> [!NOTE]
>  ユーザー名と既定のポート情報が削除、 <xref:System.Uri> に用意されている正規表現の引数と比較する前に、 <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> コンス トラクターです。 正規表現には、ユーザー情報または既定のポート番号、すべての受信が含まれている場合 <xref:System.Uri>に正規表現と一致します。  
  
   
  
## 例  
 次の例では、新しいインスタンスを作成 <xref:System.Net.WebPermission> を使用して、 <xref:System.Text.RegularExpressions.Regex>です。 別のホストの接続に追加され、一覧を受け入れます <xref:System.Net.WebPermission>します。 最後に、接続、同意をコンソールに一覧が表示されます。  
  
 [!code-cpp[WebPermission\_Regex\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission\_Regex\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission\_Regex\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebPermission> クラスの新しいインスタンスを作成します。 このコンス トラクターでは、任意の権限を付与されていない空のアクセス許可を作成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 値。</param>
        <summary>新しいインスタンスを作成、 <see cref="T:System.Net.WebPermission" /> すべて合格するクラスが要求またはすべての要求は失敗します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 `state` パラメーターは、いずれかの <xref:System.Security.Permissions.PermissionState.None?displayProperty=fullName> または <xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=fullName>, 、それぞれとして生成される完全に制限されるか、セキュリティのすべての変数に完全に無制限にアクセスします。 指定した場合 <xref:System.Security.Permissions.PermissionState.None?displayProperty=fullName>, を使用して個々 の Uri にアクセスできるようにすることができますし、 <xref:System.Net.WebPermission.AddPermission%2A>です。  
  
   
  
## 例  
 次の例のインスタンスを作成する <xref:System.Net.WebPermission> によりアクセス権を特定の Url とします。  
  
 [!code-cpp[WebPermission\_Copy\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission\_Copy\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission\_Copy\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">指定 URI に付与するアクセスの種類を示す NetworkAccess 値です。<see cref="F:System.Net.NetworkAccess.Accept" /> ローカル リソースにインターネットからの接続を受け入れるように、アプリケーションが許可されていることを示します。<see cref="F:System.Net.NetworkAccess.Connect" /> アプリケーションが特定のインターネット リソースに接続できることを示します。</param>
        <param name="uriString">アクセス権が与えられる URI 文字列。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.WebPermission" /> 指定した URI の指定のアクセス権限を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、 <xref:System.Net.WebPermission> リモート接続をホストするかによって記述された URI を使用してリモート ホスト接続をそのまま使用するか、その対象の権限を付与し、 `uriString` パラメーター。  
  
   
  
## 例  
 次の例の新しいインスタンスを作成する <xref:System.Net.WebPermission> 指定した URI の connect 権限を持つ。  
  
 [!code-cpp[WebPermission\_Union\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission\_Union\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission\_Union\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">A <see cref="T:System.Net.NetworkAccess" /> 指定 URI に付与するアクセスの種類を示す値。<see cref="F:System.Net.NetworkAccess.Accept" /> ローカル リソースにインターネットからの接続を受け入れるように、アプリケーションが許可されていることを示します。<see cref="F:System.Net.NetworkAccess.Connect" /> アプリケーションが特定のインターネット リソースに接続できることを示します。</param>
        <param name="uriRegex">アクセスが与えられる URI を記述する正規表現。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.WebPermission" /> URI の指定した正規表現の指定のアクセス権限を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、 <xref:System.Net.WebPermission> リモート接続をホストするかによって記述された URI を使用してリモート ホスト接続をそのまま使用するか、その対象の権限を付与し、 `uriRegex`パラメーター。  
  
> [!NOTE]
>  作成することをお勧め `uriRegex` を使用して、 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=fullName>, 、<xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=fullName>, 、および <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=fullName> フラグ。  
  
> [!NOTE]
>  候補 URI 文字列が関連する正規表現のリストに対して照合 \(<xref:System.Net.WebPermission.AcceptList%2A> または <xref:System.Net.WebPermission.ConnectList%2A>\) は 2 つあります。 最初に、候補 URI 文字列と照合されます適切なリストです。次に、一致がない場合は、候補 URI の文字列に変換する <xref:System.Uri> し、適切なリストと照合します。  
  
   
  
## 例  
 次の例の新しいインスタンスを作成する <xref:System.Net.WebPermission> 、指定の connect 権限を持つ <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>です。  
  
 [!code-cpp[WebPermission\_Constructor4\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission\_Constructor4\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission\_Constructor4\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは、1 つの列挙体を返します。 これによって保持されているアクセス許可を受け入れる <see cref="T:System.Net.WebPermission" />します。 返される列挙体に含まれる型が使用可能オブジェクト <see cref="T:System.String" /> と <see cref="T:System.Text.RegularExpressions.Regex" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> を含むインターフェイスは、アクセス許可をそのまま使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、これによって許可されているローカル リソースの一覧を取得します。 <xref:System.Net.WebPermission>します。 クラスを適用した <xref:System.Net.WebPermission> のみこのリストに見つかったローカル リソースへの着信接続を受信する権限を持っています。  
  
> [!NOTE]
>  このリストを使用する Uri を追加する <xref:System.Net.WebPermission.AddPermission%2A>です。  
  
> [!NOTE]
>  候補 URI 文字列が関連する正規表現のリストに対して照合 \(<xref:System.Net.WebPermission.AcceptList%2A> または <xref:System.Net.WebPermission.ConnectList%2A>\) は 2 つあります。 最初に、候補 URI 文字列と照合されます適切なリストです。次に、一致がない場合は、候補 URI の文字列に変換する <xref:System.Uri> し、適切なリストと照合します。  
  
   
  
## 例  
 次の例の出力内の Url、 <xref:System.Net.WebPermission.AcceptList%2A> コンソールにします。  
  
 [!code-cpp[WebPermission\_AcceptConnectList\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission\_AcceptConnectList\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission\_AcceptConnectList\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">A <see cref="T:System.Net.NetworkAccess" /> URI に与えられているアクセス権を指定します。</param>
        <param name="uriString">アクセス権が与えられる URI を表す文字列。</param>
        <summary>現在の指定したアクセス権を持つ指定した URI 文字列を追加 <see cref="T:System.Net.WebPermission" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した場合に <xref:System.Security.Permissions.PermissionState.None> として、 <xref:System.Security.Permissions.PermissionState>, を使用して <xref:System.Net.WebPermission.AddPermission%2A> の使用を許可 `uriString` ターゲット クラスにします。 方法 `uriString` 使用できますが、ターゲットによってクラスが指定されている `access`します。 指定 <xref:System.Net.NetworkAccess.Accept> アクセス パラメーターで指定された URI を追加すると、 `uriString` URI の一覧にパラメーターが、文字列を受け入れるか指定 <xref:System.Net.NetworkAccess.Connect> URI の一覧に、URI を追加するパラメーターの接続文字列へのアクセス。  
  
> [!NOTE]
>  呼び出す <xref:System.Net.WebPermission.AddPermission%2A> に <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Net.WebPermission> 効果はありません、すべての Uri へのアクセス許可が付与されているためです。  
  
> [!NOTE]
>  候補 URI 文字列が関連する正規表現のリストに対して照合 \(<xref:System.Net.WebPermission.AcceptList%2A> または <xref:System.Net.WebPermission.ConnectList%2A>\) は 2 つあります。 最初に、候補 URI 文字列と照合されます適切なリストです。次に、一致がない場合は、候補 URI の文字列に変換する <xref:System.Uri> し、適切なリストと照合します。  
  
   
  
## 例  
 次の例では、特定の URL 文字列へのアクセス権を追加する方法を示します。  
  
 [!code-cpp[WebPermission\_Intersect\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission\_Intersect\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission\_Intersect\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">URI に与えられているアクセス権を指定する NetworkAccess です。</param>
        <param name="uriRegex">アクセス権が与えられる Uri のセットを表す正規表現。</param>
        <summary>現在の指定したアクセス権を持つ指定された URI に追加 <see cref="T:System.Net.WebPermission" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した場合に <xref:System.Security.Permissions.PermissionState.None> として、 <xref:System.Security.Permissions.PermissionState>, を使用して <xref:System.Net.WebPermission.AddPermission%2A> の使用を許可する `uriRegex` ターゲット クラスにします。 指定 <xref:System.Net.NetworkAccess.Accept> として、 `access` で指定された URI を追加するパラメーター、 `uriRegex` URI の一覧にパラメーターが、文字列を受け入れるか指定 <xref:System.Net.NetworkAccess.Connect> URI の一覧に、URI を追加するパラメーターの接続文字列へのアクセス。  
  
> [!NOTE]
>  呼び出す <xref:System.Net.WebPermission.AddPermission%2A> 上、 <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Net.WebPermission> インスタンス効果はありませんすべての Uri へのアクセス許可が付与されています。  
  
> [!NOTE]
>  作成することをお勧め `uriRegex` を使用して、 <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=fullName>, 、<xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=fullName>, 、および <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=fullName> フラグ。  
  
> [!NOTE]
>  候補 URI 文字列が関連する正規表現のリストに対して照合 \(<xref:System.Net.WebPermission.AcceptList%2A> または <xref:System.Net.WebPermission.ConnectList%2A>\) は 2 つあります。 最初に、候補 URI 文字列と照合されます適切なリストです。次に、一致がない場合は、候補 URI の文字列に変換する <xref:System.Uri> し、適切なリストと照合します。  
  
   
  
## 例  
 次の例では使用 <xref:System.Net.WebPermission.AddPermission%2A> に指定した URI 用アクセス権を付与します。  
  
 [!code-cpp[WebPermission\_IsSubset\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission\_IsSubset\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission\_IsSubset\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriRegex" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプロパティは、1 つの列挙体を返します。 これによって保持されているアクセス許可を接続 <see cref="T:System.Net.WebPermission" />します。 返される列挙体に含まれる型が使用可能オブジェクト <see cref="T:System.String" /> と <see cref="T:System.Text.RegularExpressions.Regex" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> を含むインターフェイスは、アクセス許可を接続します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、これによって許可されているリモート リソースの一覧を取得します。 <xref:System.Net.WebPermission>します。 クラスを適用した <xref:System.Net.WebPermission> のみこのリストに見つかったリソースにアクセスする権限を持っています。  
  
> [!NOTE]
>  このリストを使用する Uri を追加する <xref:System.Net.WebPermission.AddPermission%2A>です。  
  
> [!NOTE]
>  候補 URI 文字列が関連する正規表現のリストに対して照合 \(<xref:System.Net.WebPermission.AcceptList%2A> または <xref:System.Net.WebPermission.ConnectList%2A>\) は 2 つあります。 最初に、候補 URI 文字列と照合されます適切なリストです。次に、一致がない場合は、候補 URI の文字列に変換する <xref:System.Uri> し、適切なリストと照合します。  
  
   
  
## 例  
 次の例の出力内の Url、 <xref:System.Net.WebPermission.ConnectList%2A> コンソールにします。  
  
 [!code-cpp[WebPermission\_AcceptConnectList\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission\_AcceptConnectList\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission\_AcceptConnectList\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コピーを作成、 <see cref="T:System.Net.WebPermission" />です。</summary>
        <returns>新しいインスタンス、 <see cref="T:System.Net.WebPermission" /> 元と同じ値を持つクラス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.IPermission> このメソッドは、元のリソースへのアクセスを同じから返される <xref:System.Net.WebPermission>です。 このメソッドは <xref:System.Security.CodeAccessPermission.Copy%2A> サポートするために実装されると、 <xref:System.Security.IPermission> インターフェイスです。  
  
   
  
## 例  
 次の例では、2 番目のインスタンスを作成する方法 <xref:System.Net.WebPermission> を使用して <xref:System.Net.WebPermission.Copy%2A>します。 この 2 つ目のインスタンスは、1 つ目と同じです。  
  
 [!code-cpp[WebPermission\_Copy\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission\_Copy\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission\_Copy\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">再構築する XML エンコーディング、 <see cref="T:System.Net.WebPermission" />です。</param>
        <summary>再構築、 <see cref="T:System.Net.WebPermission" /> XML エンコーディングからです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebPermission.FromXml%2A> メソッドの再構築、 <xref:System.Net.WebPermission> XML からによって定義されているエンコーディング、 <xref:System.Security.SecurityElement> クラスです。  
  
 使用して、 <xref:System.Net.WebPermission.ToXml%2A> XML エンコードする方法、 <xref:System.Net.WebPermission>, 、ステータス情報を含みます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Security.SecurityElement?displayProperty=fullName>, 、その属性を設定および使用 <xref:System.Net.WebPermission.FromXml%2A> のインスタンスにこの情報を転送する <xref:System.Net.WebPermission>です。  
  
 [!code-cpp[WebPermission\_FromToXml\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission\_FromToXml\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission\_FromToXml\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> パラメーターは、 <see langword="null." /></exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> この型の権限要素ではありません。</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のインスタンスと比較する <see cref="T:System.Net.WebPermission" />。</param>
        <summary>2 つの論理積集合を返す <see cref="T:System.Net.WebPermission" /> インスタンス。</summary>
        <returns>新しい <see cref="T:System.Net.WebPermission" /> を現在のインスタンスの積集合を表す、 <paramref name="target" /> パラメーター。 積集合が空、メソッドに返します <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebPermission.Intersect%2A> 返します、 <xref:System.Net.WebPermission> 両方に共通するアクセス許可を含む `target` と現在のインスタンス。  
  
 このメソッドは <xref:System.Security.CodeAccessPermission.Intersect%2A> サポートするために実装されると、 <xref:System.Security.IPermission> インターフェイスです。  
  
   
  
## 例  
 次の例は、のインスタンスを作成する方法を示しています。 <xref:System.Net.WebPermission> 既存の 2 つの論理積集合を使用して <xref:System.Net.WebPermission> インスタンス。  
  
 [!code-cpp[WebPermission\_Intersect\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission\_Intersect\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission\_Intersect\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> <see langword="null" /> または型の <see cref="T:System.Net.WebPermission" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Net.WebPermission" /> 現在と比較する <see cref="T:System.Net.WebPermission" />です。</param>
        <summary>決定するかどうか、現在 <see cref="T:System.Net.WebPermission" /> 、指定したオブジェクトのサブセットです。</summary>
        <returns>
          <see langword="true" /> 現在のインスタンスのサブセットである場合、 <paramref name="target" /> パラメーター。 そうしないと、 <see langword="false" />です。 ターゲットがある場合 <see langword="null" />, 、メソッドが戻る <see langword="true" /> が制限されていない空の現在の権限のおよび <see langword="false" /> それ以外の場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合現在 <xref:System.Net.WebPermission> によって完全に含まれる関連付けられているリソースのセットを示す、 `target` パラメーターを現在 <xref:System.Net.WebPermission> のサブセットである `target`です。 このメソッドは <xref:System.Net.WebPermission.IsSubsetOf%2A> サポートするために実装されると、 <xref:System.Security.IPermission> インターフェイスです。  
  
   
  
## 例  
 次の例では使用 <xref:System.Net.WebPermission.IsSubsetOf%2A> の 1 つのインスタンスにアクセス権があるかどうかを判断する <xref:System.Net.WebPermission> の別のインスタンス内にある <xref:System.Net.WebPermission>です。  
  
 [!code-cpp[WebPermission\_IsSubset2\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission\_IsSubset2\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission\_IsSubset2\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ターゲット パラメーターは、のインスタンスではない <see cref="T:System.Net.WebPermission" />します。</exception>
        <exception cref="T:System.NotSupportedException">現在のインスタンスには、正規表現でエンコードされた権限が含まれています。 とはまったく同じターゲット インスタンスに権利がします。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>全体的なアクセス許可の状態を調べ、 <see cref="T:System.Net.WebPermission" />です。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Net.WebPermission" /> で作成された、 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Net.WebPermission> は <xref:System.Security.Permissions.PermissionState.Unrestricted>, 、ターゲット クラスは、すべての Uri を使用ことができます。 それ以外の場合、特定のアクセス許可は、ターゲット クラスで使用する任意の URI を指定してください。  
  
> [!NOTE]
>  使用 <xref:System.Net.WebPermission.AddPermission%2A> URI を追加し、そのアクセス許可を指定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML エンコーディングを作成、 <see cref="T:System.Net.WebPermission" /> と現在の状態。</summary>
        <returns>A <see cref="T:System.Security.SecurityElement" /> の XML でエンコードされた表現を含む、 <see cref="T:System.Net.WebPermission" />, 、ステータス情報を含みます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Net.WebPermission.FromXml%2A> から状態情報を復元する方法、 <xref:System.Security.SecurityElement>です。  
  
   
  
## 例  
 次の例では、使用して <xref:System.Net.WebPermission.ToXml%2A> を作成する、 <xref:System.Security.SecurityElement?displayProperty=fullName> およびコンソールにその属性を印刷します。  
  
 [!code-cpp[WebPermission\_FromToXml\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission\_FromToXml\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission\_FromToXml\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Net.WebPermission" /> 現在とを組み合わせる <see cref="T:System.Net.WebPermission" />します。</param>
        <summary>2 つのインスタンス間で論理的な和集合を返す、 <see cref="T:System.Net.WebPermission" /> クラスです。</summary>
        <returns>A <see cref="T:System.Net.WebPermission" /> を現在のインスタンスの和集合を表す、 <paramref name="target" /> パラメーター。 いずれか <see langword="WebPermission" /> は <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, 、メソッドが戻る、 <see cref="T:System.Net.WebPermission" /> つまり <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />します。 ターゲットがある場合 <see langword="null" />, 、メソッドは、現在のコピーを返します <see cref="T:System.Net.WebPermission" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.WebPermission.Union%2A> 返します、 <xref:System.Net.WebPermission> 両方でのすべてのアクセス許可を含む `target` と現在のインスタンス。  
  
   
  
## 例  
 次の例は 2 つの論理的な和集合 <xref:System.Net.WebPermission> の 3 番目のインスタンスを作成するインスタンス <xref:System.Net.WebPermission>します。  
  
 [!code-cpp[WebPermission\_Union\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission\_Union\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission\_Union\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ターゲット <see langword="null" /> または型の <see cref="T:System.Net.WebPermission" />です。</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在の指定したアクセス権を持つ指定された URI に追加 <see cref="T:System.Net.WebPermission" />します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.WebPermission" /> クラスの新しいインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>