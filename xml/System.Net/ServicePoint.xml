<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP 接続の接続管理を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.ServicePoint> クラスは、リソースの統一リソース識別子 \(URI\) で渡されたホスト情報を基に、インターネット リソースへの接続を処理します。 リソースへの初期接続が指定した情報を <xref:System.Net.ServicePoint> オブジェクトを保持し、そのリソースへのすべての後続の要求で共有されます。  
  
 <xref:System.Net.ServicePoint> オブジェクトを管理、 <xref:System.Net.ServicePointManager> クラスし、作成されますが、必要に応じて、 <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> メソッドです。<xref:System.Net.ServicePoint> オブジェクトは直接作成されませんが、常に作成され、によって管理される、 <xref:System.Net.ServicePointManager> クラスです。 最大数 <xref:System.Net.ServicePoint> 作成できるオブジェクトが設定されている、 <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName> プロパティです。  
  
 各 <xref:System.Net.ServicePoint> オブジェクトを保持インターネット リソースへの接続をアイドル状態になるまでに指定した時間より長い、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> プロパティです。 ときに、 <xref:System.Net.ServicePoint> を超える、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> 値、それは再利用できます別の接続にします。 既定値の <xref:System.Net.ServicePoint.MaxIdleTime%2A> 設定されている、 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> プロパティです。  
  
 ときに、 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> プロパティが\-1 の場合、および指定時間後に経過すると、アクティブな以外の値に設定されている <xref:System.Net.ServicePoint> 接続は、次の要求をサービス後終了します。 これは、既定では、無期限に開かれたアクティブな接続を必要としないアプリケーションで便利です。  
  
> [!NOTE]
>  負荷が高い状態で一部のアプリケーションはシステム パフォーマンスが低下 \(高、変数のトランザクションの時間\) など、スレッド プール内のフリー スレッドを使い果たす可能性があります。 参照してください [http:\/\/msdn.microsoft.com\/library\/default.asp?url\=\/library\/dnpag\/html\/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) さまざまな構成の変更がこの問題を解決することができます。  
  
   
  
## 例  
 次のコード例を作成、 <xref:System.Net.ServicePoint> URI www.contoso.com への接続オブジェクトです。  
  
 [!code-cpp[System.Net.ServicePoint\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.ServicePoint" /> オブジェクトの接続先サーバーの URI \(Uniform Resource Identifier\) を取得します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトの接続先のインターネット サーバーの URI を格納している <see cref="T:System.Uri" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、このプロパティの値を表示します。  
  
 [!code-cpp[System.Net.ServicePoint\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Net.ServicePoint" /> ホスト モードにします。</exception>
        <permission cref="T:System.Net.WebPermission">For using <see cref="P:System.Net.ServicePoint.Address" /> if the <see cref="T:System.Net.ServicePoint" /> connects through a proxy server.</permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカルの <see cref="T:System.Net.IPEndPoint" /> を <see cref="T:System.Net.ServicePoint" /> に関連付けるデリゲートを指定します。</summary>
        <value>強制的に <see cref="T:System.Net.ServicePoint" /> が特定のローカル インターネット プロトコル \(IP\) アドレスとポート番号を使用するようにするデリゲート。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一部の負荷分散手法を特定ローカル IP アドレスとポート番号を使用するクライアントを必要となく <xref:System.Net.IPAddress.Any?displayProperty=fullName> \(または <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> インターネット プロトコル バージョン 6 用\) と一時的なポートです。<xref:System.Net.ServicePoint.BindIPEndPointDelegate%2A> この要件を満たすことができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for binding to a local port. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクト用に受信した証明書を取得します。</summary>
        <value>この <see cref="T:System.Net.ServicePoint" /> オブジェクト用に受信したセキュリティ証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> クラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Although a <xref:System.Net.ServicePoint> object can make multiple connections to an Internet resource, it can maintain only one certificate.  
  
   
  
## 例  
 The following code example displays the value of this property.  
  
 [!code-cpp[System.Net.ServicePoint\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint\#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバーに送信された最後のクライアント証明書を取得します。</summary>
        <value>サーバーに送信された最後のクライアント証明書のパブリック値を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、このプロパティの値を表示します。  
  
 [!code-cpp[System.Net.ServicePoint\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint\#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName">閉じてこのサービス ポイントから削除する接続を格納している接続グループの名前。</param>
        <summary>指定した接続グループを、この <see cref="T:System.Net.ServicePoint" /> オブジェクトから削除します。</summary>
        <returns>接続グループが閉じられたかどうかを示す <see cref="T:System.Boolean" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Connection groups associate a set of requests with a particular connection or set of connections. This method removes and closes all connections that belong to the specified connection group.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティブな <see cref="T:System.Net.ServicePoint" /> 接続が閉じられるまでのミリ秒単位の時間を取得または設定します。</summary>
        <value>アクティブな <see cref="T:System.Net.ServicePoint" /> 接続が開いている時間をミリ秒単位で指定する <see cref="T:System.Int32" />。 既定値は \-1 で、アクティブな <see cref="T:System.Net.ServicePoint" /> 接続を無制限に接続状態にしておくことができます。 要求の処理後に強制的に <see cref="T:System.Net.ServicePoint" /> 接続を閉じるには、このプロパティを 0 に設定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用していることを確認することができます、 <xref:System.Net.ServicePoint> オブジェクトのアクティブな接続が開いている無期限残ます。 このプロパティは、シナリオの接続を削除して負荷分散のシナリオなど、定期的に再確立する必要があります。  
  
 既定では、ときに <xref:System.Net.FtpWebRequest.KeepAlive%2A> は `true` 要求で、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> 終了のタイムアウトを設定するプロパティ <xref:System.Net.ServicePoint> 非アクティブな接続です。 場合、 <xref:System.Net.ServicePoint> アクティブな接続を持つ <xref:System.Net.ServicePoint.MaxIdleTime%2A> も何も起こりません、接続は無期限に開いたままです。  
  
 ときに、 <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> プロパティが\-1 の場合、および指定時間後に経過すると、アクティブな以外の値に設定されている <xref:System.Net.ServicePoint> を設定して、要求の処理後の接続が閉じられる <xref:System.Net.FtpWebRequest.KeepAlive%2A> に `false` その要求にします。  
  
 この値の設定が管理するすべての接続に影響を与えます、 <xref:System.Net.ServicePoint> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を設定します。  
  
 [!code-cpp[NCLServicePoint\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">セット操作に指定された値は、\-1 未満の負の数です。</exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトで許可される接続の最大数を取得または設定します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトで許可される接続の最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.ServicePoint.ConnectionLimit%2A> プロパティの設定接続の最大数、 <xref:System.Net.ServicePoint> オブジェクトは、インターネット リソースに加えることができます。 値、 <xref:System.Net.ServicePoint.ConnectionLimit%2A> の値にプロパティが設定されている、 <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName> プロパティと、 <xref:System.Net.ServicePoint> オブジェクトが作成されます。 その後に変更 <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> 既存の影響を及ぼしません <xref:System.Net.ServicePoint> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.ServicePoint.ConnectionLimit%2A> 接続の最大数を確認するプロパティを <xref:System.Net.ServicePoint> オブジェクトを指定した識別子 URI \(Uniform Resource\) を行うことができます。  
  
 [!code-cpp[System.Net.ServicePoint\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint\#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">接続数の上限は、同じか、または 0 より小さいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続名を取得します。</summary>
        <value>接続名を表す <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If the <xref:System.Net.ServicePoint> object was constructed with a <xref:System.Uri> object \(the <xref:System.Net.ServicePointManager.FindServicePoint%2A> or <xref:System.Net.ServicePointManager.FindServicePoint%2A> methods, for example\), then the <xref:System.Net.ServicePoint.ConnectionName%2A> property represents the <xref:System.Uri.Scheme%2A> property of the <xref:System.Uri> object used.  
  
 If the <xref:System.Net.ServicePoint> object was constructed from a network host and port, the <xref:System.Net.ServicePoint.ConnectionName%2A> property contains a string that represents the host and the network port. If the <xref:System.Net.ServicePoint.ConnectionName%2A> property is set when constructed from a host and port, only <xref:System.Net.WebRequest> objects with the same <xref:System.Net.WebRequest.ConnectionGroupName%2A> value can use this <xref:System.Net.ServicePoint> object.  
  
   
  
## 例  
 [!code-cpp[System.Net.ServicePoint\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint\#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトに関連付けられている、開いている接続の数を取得します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトに関連付けられている、開いている接続の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.ServicePoint.CurrentConnections%2A> property contains the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object. The value of <xref:System.Net.ServicePoint.CurrentConnections%2A> cannot exceed that of <xref:System.Net.ServicePoint.ConnectionLimit%2A>.  
  
   
  
## 例  
 The following code example uses the <xref:System.Net.ServicePoint.CurrentConnections%2A> property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  
  
 [!code-cpp[System.Net.ServicePoint\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>100\-Continue 動作を使用するかどうかを決定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>
          <see langword="POST" /> 要求に対して 100\-Continue 応答を見込んでいる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When this property is set to **languageKeyword tag is not supported!!!!**  
, client requests that use the **languageKeyword tag is not supported!!!!**  
 method expect to receive a 100\-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  
  
 For example, assume the <xref:System.Net.ServicePoint.Expect100Continue%2A> property is **languageKeyword tag is not supported!!!!**  
. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.  
  
 If the <xref:System.Net.ServicePoint.Expect100Continue%2A> property is **languageKeyword tag is not supported!!!!**  
, the request headers are sent to the server. If the server has not rejected the request, it sends a 100\-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.  
  
 Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.  
  
 The Expect 100\-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.  
  
   
  
## 例  
 The following code example displays the value of this property.  
  
 [!code-cpp[System.Net.ServicePoint\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint\#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトが最後にホストに接続した日付と時刻を取得します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトが最後に接続した日付と時刻を格納している <see cref="T:System.DateTime" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.ServicePoint.IdleSince%2A> プロパティは、最後の日付と時刻のサービス ポイントが、ホストから切断されてを記録します。 現在の時刻の差と <xref:System.Net.ServicePoint.IdleSince%2A> の値を超える <xref:System.Net.ServicePoint.MaxIdleTime%2A>, 、 <xref:System.Net.ServicePoint> オブジェクトは別の接続に再利用できます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.ServicePoint.IdleSince%2A> を設定し、日付および時刻を取得するプロパティ、 <xref:System.Net.ServicePoint> オブジェクトが最後のホストに接続します。  
  
 [!code-cpp[System.Net.ServicePoint\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトに関連付けられた接続がアイドル状態を持続できる時間を取得または設定します。この時間が経過すると、接続は閉じられます。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトに関連付けられた接続が閉じられて別の接続で再利用されるまでにアイドル状態を持続できる時間 \(ミリ秒単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定する <xref:System.Net.ServicePoint.MaxIdleTime%2A> に <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> の接続に関連付けられていることを示すために、 <xref:System.Net.ServicePoint> オブジェクトがタイムアウトしません。  
  
 既定値、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> プロパティの値では、 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> プロパティと、 <xref:System.Net.ServicePoint> オブジェクトを作成します。 以降の変更、 <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> プロパティを使用しないため、既存の影響を与える <xref:System.Net.ServicePoint> オブジェクトです。  
  
 ときに、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> に関連付けられている接続に対して、 <xref:System.Net.ServicePoint> が超過すると、接続は開いたまま、接続を使用するアプリケーションが試行されるまでです。 その時点では、フレームワークは、接続を終了し、リモート ホストへの新しい接続を作成します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.ServicePoint.MaxIdleTime%2A> 設定および取得するプロパティ、 <xref:System.Net.ServicePoint> アイドル時間。  
  
 [!code-cpp[System.Net.ServicePoint\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> 設定されているより小さい <see cref="F:System.Threading.Timeout.Infinite" /> 以上 <see cref="F:System.Int32.MaxValue" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトが使用する HTTP プロトコルのバージョンを取得します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトが使用する HTTP プロトコルのバージョンを格納している <see cref="T:System.Version" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 HTTP プロトコルのバージョンには、http\/1.0 および http\/1.1 です。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を表示します。  
  
 [!code-cpp[System.Net.ServicePoint\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint\#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.ServicePoint" /> が使用するソケットの受信バッファーのサイズを取得または設定します。</summary>
        <value>受信バッファーのサイズ \(バイト単位\) を格納している <see cref="T:System.Int32" />。 既定値は 8192 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、「<xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>」を参照してください。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を設定します。  
  
 [!code-cpp[NCLServicePoint\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された設定操作がより大きい値 <see cref="F:System.Int32.MaxValue" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">true に設定すると、指定された <c>keepAliveTime</c>  値および <c>keepAliveInterval</c> 値を使用して、TCP 接続の TCP keep\-alive オプションが有効になります。  
  
 false に設定すると、TCP keep\-alive オプションが無効になり、残りのパラメーターは無視されます。  
  
 既定値は false です。</param>
        <param name="keepAliveTime">最初の keep\-alive パケットが送信されるまでアクティビティを行わないタイムアウト値をミリ秒単位で指定します。  
  
 値は 0 よりも大きくする必要があります。  0 またはそれより小さい値が渡されると、<see cref="T:System.ArgumentOutOfRangeException" /> がスローされます。</param>
        <param name="keepAliveInterval">受信確認が受信されない場合に、連続する keep\-alive パケットが送信されるときの間隔をミリ秒単位で指定します。  
  
 値は 0 よりも大きくする必要があります。  0 またはそれより小さい値が渡されると、<see cref="T:System.ArgumentOutOfRangeException" /> がスローされます。</param>
        <summary>TCP 接続での keep\-alive オプションを有効または無効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションでは、TCP\/IP プロバイダーが、TCP 接続の keep alive パケットの使用を有効にすることを要求できます。 既定では、TCP 接続の keep alive パケットの使用が無効になっています。  
  
 TCP ソケットときの既定の設定は、2 時間にセット keep alive タイムアウトと keep alive 間隔を 1 秒に初期化されます。`keepAliveTime` パラメーターが反応のない最初の keep\-alive パケットが送信されるまでのミリ秒単位のタイムアウトを指定します。`keepAliveInterval` パラメーターを指定の間隔 \(ミリ秒単位\) 間で受信確認が受信されない場合、連続する keep\-alive パケットが送信されるとします。 Keep alive プローブの数は、変更することはできませんしは 10 に設定します。  
  
 Keep alive の結果として、TCP 接続が切断された場合、 <xref:System.Net.Sockets.SocketError> の <xref:System.Net.Sockets.SocketError.NetworkReset> 、ソケットに対する進行中のすべての呼び出しに返されますが、後続の呼び出しは失敗し、 <xref:System.Net.Sockets.SocketError> の <xref:System.Net.Sockets.SocketError.NotConnected>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値 <paramref name="keepAliveTime" /> または <paramref name="keepAliveInterval" /> パラメーターが 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトがパイプライン接続をサポートしているかどうかを示します。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" /> オブジェクトがパイプライン接続をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パイプライン化により、各サーバーから応答を待たずに、永続的な接続経由で複数の要求を送信するクライアント。 要求の受信と、サーバーが同じ順序で、応答を送信します。  
  
 パイプライン処理は、IETF RFC 2616 8.1.2.2\] セクションで詳しく説明します。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を表示します。  
  
 [!code-cpp[System.Net.ServicePoint\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint\#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その <see cref="T:System.Net.ServicePoint" /> オブジェクトが管理する接続で Nagle アルゴリズムを使用するかどうかを決定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>Nagle アルゴリズムを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Nagle アルゴリズムは小さなデータ パケット バッファーに格納し、1 つのパケットとして送信するために使用します。 「ナグリング」と呼ばれる、このプロセスは、転送されたパケットの数が減るためには広く使用され、パケットごとのオーバーヘッドを減らすことができます。  
  
 このプロパティの値を変更しても、既存の接続には影響しません。 のみ、変更後に作成された新しい接続を受けます。  
  
 Nagle アルゴリズムは、IETF RFC 896 完全に説明されています。  
  
   
  
## 例  
 次のコード例では、このプロパティの値を表示します。  
  
 [!code-cpp[System.Net.ServicePoint\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint\#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>