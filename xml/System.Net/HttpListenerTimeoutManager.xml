<Type Name="HttpListenerTimeoutManager" FullName="System.Net.HttpListenerTimeoutManager">
  <TypeSignature Language="C#" Value="public class HttpListenerTimeoutManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerTimeoutManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerTimeoutManager" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用するタイムアウト マネージャー、 <see cref="T:System.Net.HttpListener" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイムアウト マネージャーの接続のタイムアウト制限を定義する、  <xref:System.Net.HttpListener> インスタンス。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
    <altmember cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerTimeoutManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerTimeoutManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainEntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan DrainEntityBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DrainEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、時間の許容秒、 <see cref="T:System.Net.HttpListener" /> Keep Alive 接続上のエンティティ本体のドレインを実行します。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> を返します。  
  
 時間 \(秒\)、許可されている、 <see cref="T:System.Net.HttpListener" /> Keep Alive 接続上のエンティティ本体のドレインを実行します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は、2 分です。  
  
 Keep Alive 接続、アプリケーションが要求に対する応答を送信し、要求の前にエンティティ本体の到着が完全に後で、 <xref:System.Net.HttpListener> が開始される可能性のある別に到達するエンティティ本体の残りの部分をドレインがクライアントからの要求をパイプライン処理します。 残りのエンティティ本体のドレインを実行する時間が許可されている期間を超えた場合に、接続がタイムアウトしました。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan EntityBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan EntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.EntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または到着する要求エンティティ本体の許容秒で、時間を設定します。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> を返します。  
  
 時間を秒単位では、到着する要求エンティティ本体を使用できます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は、2 分です。  
  
 <xref:System.Net.HttpListener> 要求エンティティ本体が含まれる場合、このタイマーをオンにします。 タイマーの有効期限は初期設定の値に設定されます。 ときに、 <xref:System.Net.HttpListener> 追加のデータがないかの受信要求で、接続に別の範囲を指定するのには、タイマーがリセットされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWait">
      <MemberSignature Language="C#" Value="public TimeSpan HeaderWait { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HeaderWait" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.HeaderWait" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、時間の許容秒、 <see cref="T:System.Net.HttpListener" /> 要求ヘッダーを解析します。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> を返します。  
  
 時間 \(秒\)、許可されている、 <see cref="T:System.Net.HttpListener" /> 要求ヘッダーを解析します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は、2 分です。  
  
 このタイムアウトはへの接続では、最初の要求をルーティングした後にしか適用されない、 <xref:System.Net.HttpListener>です。  
  
 システムには、要求キューまたはヘッダーを解析するまでに、要求が関連付けられている URL のグループを判断できません。 したがって、 <xref:System.Net.HttpListener> 既定値が適用 <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> 接続では、最初の要求のタイマーです。 Keep Alive 接続 \[後続の要求では、このプロパティに設定された値を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleConnection">
      <MemberSignature Language="C#" Value="public TimeSpan IdleConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.IdleConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 \(秒\)、アイドル状態の接続を許可します。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> を返します。  
  
 時間を秒単位では、アイドル状態の接続を使用できます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は、2 分です。  
  
 このタイムアウトはへの接続では、最初の要求をルーティングした後にしか適用されない、 <xref:System.Net.HttpListener>です。  
  
 システムには、要求キューまたはヘッダーを解析するまでに、要求が関連付けられている URL のグループを判断できません。 したがって、 <xref:System.Net.HttpListener> 既定値が適用 <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> 接続では、最初の要求のタイマーです。 Keep Alive 接続 \[後続の要求では、このプロパティに設定された値を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSendBytesPerSecond">
      <MemberSignature Language="C#" Value="public long MinSendBytesPerSecond { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MinSendBytesPerSecond" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または最小の送信速度をバイト数\-1 秒あたりの応答に設定します。</summary>
        <value>
          <see cref="T:System.Int64" /> を返します。  
  
 最小送信レート バイト数\-1 秒あたりの応答のです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の応答の送信速度は、秒あたりのバイト数が 150 です。  
  
 このタイマーを無効にする設定 <xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A> MAXULONG にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueue">
      <MemberSignature Language="C#" Value="public TimeSpan RequestQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestQueue" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerTimeoutManager.RequestQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定する前に、要求キュー内に存続する要求の許容秒で、 <see cref="T:System.Net.HttpListener" /> がそれを取得します。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> を返します。  
  
 時間 \(秒\) を許可する前に、要求キュー内に存続する要求、 <see cref="T:System.Net.HttpListener" /> がそれを取得します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定値は、2 分です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>