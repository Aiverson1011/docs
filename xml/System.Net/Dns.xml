<Type Name="Dns" FullName="System.Net.Dns">
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>単純なドメイン名の解決機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns> クラスは、インターネット ドメイン ネーム システム \(DNS\) から特定のホストについての情報を取得する静的クラス。  
  
 インスタンスで、DNS クエリからホスト情報を返す、 <xref:System.Net.IPHostEntry> クラスです。 指定したホストに複数のエントリがある場合は、DNS データベースに <xref:System.Net.IPHostEntry> 複数の IP アドレスおよびエイリアスが含まれています。  
  
   
  
## 例  
 次の例では、ホスト www.contoso.com について DNS データベースを照会します。  
  
 [!code-cpp[Classic Dns Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</param>
        <summary>非同期的に指定したホストのインターネット プロトコル \(IP\) アドレスを返します。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> 非同期要求を参照するインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> メソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを非同期的に照会します。 場合 `hostNameOrAddress` は IP アドレス、DNS サーバーのクエリを実行せずにこのアドレスが返されます。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ホスト名として空の文字列が渡されると、このメソッドは、Windows Server 2003 以外のすべてのオペレーティング システムのローカル ホストの IPv4 アドレスを返しますWindows Server 2003 では、ローカル ホストの IPv4 と IPv6 の両方のアドレスが返されます。  
  
 非同期の <xref:System.Net.Dns.BeginGetHostAddresses%2A> を呼び出して操作を完了する必要があります、 <xref:System.Net.Dns.EndGetHostAddresses%2A> メソッドです。 通常、このメソッドはによって、 `requestCallback` を委任します。  
  
 このメソッドは、操作が完了するまでにはブロックされません。 操作が完了するまでにブロックするを使用して、 <xref:System.Net.Dns.GetHostAddresses%2A> メソッドです。  
  
 非同期プログラミング モデルの使用に関する詳細については、次を参照してください。 [Asynchronous Programming Overview](http://msdn.microsoft.com/ja-jp/41972034-92ed-450a-9664-ab93fcc6f1fb)  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostNameOrAddress" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> IP アドレスは無効です。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">ホストの DNS 名。</param>
        <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="stateObject">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</param>
        <summary>非同期要求を開始 <see cref="T:System.Net.IPHostEntry" /> 指定の DNS ホスト名に関する情報。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> 非同期要求を参照するインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 非同期の <xref:System.Net.Dns.BeginGetHostByName%2A> を呼び出して操作を完了する必要があります、 <xref:System.Net.Dns.EndGetHostByName%2A> メソッドです。 通常、このメソッドはによって、 `requestCallback` を委任します。  
  
 このメソッドは、操作が完了するまでにはブロックされません。 操作が完了するまでにブロックするを使用して、 <xref:System.Net.Dns.GetHostByName%2A> メソッドです。  
  
 非同期プログラミング モデルの使用に関する詳細については、次を参照してください。 [Asynchronous Programming Overview](http://msdn.microsoft.com/ja-jp/41972034-92ed-450a-9664-ab93fcc6f1fb)します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">DNS クエリの実行中にエラーが発生しました。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">解決するのには IP アドレスです。</param>
        <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="stateObject">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</param>
        <summary>IP アドレスを非同期的な <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> 非同期要求を参照するインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドは、IP アドレスと IP アドレスに関連付けられているエイリアスの DNS サーバーを非同期的に照会します。  
  
 **注** このメンバーは、アプリケーションでネットワーク トレースを有効にした場合にトレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 非同期の <xref:System.Net.Dns.BeginGetHostEntry%2A> を呼び出して操作を完了する必要があります、 <xref:System.Net.Dns.EndGetHostEntry%2A> メソッドです。 通常、このメソッドはによって、 `requestCallback` を委任します。  
  
 このメソッドは、操作が完了するまでにはブロックされません。 操作が完了するまでにブロックするを使用して、 <xref:System.Net.Dns.GetHostEntry%2A> メソッドです。  
  
 非同期プログラミング モデルの使用に関する詳細については、次を参照してください。 [Asynchronous Programming Overview](http://msdn.microsoft.com/ja-jp/41972034-92ed-450a-9664-ab93fcc6f1fb)  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドを解決するには、IP アドレスを <xref:System.Net.IPHostEntry> インスタンス。  
  
 [!code-cpp[System.Net.Dns\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="address" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> IP アドレスは無効です。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="stateObject">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</param>
        <summary>ホスト名または IP アドレスを非同期的な <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> 非同期要求を参照するインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。  
  
 **注** このメンバーは、アプリケーションでネットワーク トレースを有効にした場合にトレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 非同期の <xref:System.Net.Dns.BeginGetHostEntry%2A> を呼び出して操作を完了する必要があります、 <xref:System.Net.Dns.EndGetHostEntry%2A> メソッドです。 通常、このメソッドはによって、 `requestCallback` を委任します。  
  
 このメソッドは、操作が完了するまでにはブロックされません。 操作が完了するまでにブロックするを使用して、 <xref:System.Net.Dns.GetHostEntry%2A> メソッドです。  
  
 非同期プログラミング モデルの使用に関する詳細については、次を参照してください。 [Asynchronous Programming Overview](http://msdn.microsoft.com/ja-jp/41972034-92ed-450a-9664-ab93fcc6f1fb)します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.Dns.BeginGetHostEntry%2A> メソッドを解決するには、IP アドレスを <xref:System.Net.IPHostEntry> インスタンス。  
  
 [!code-cpp[System.Net.Dns\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostNameOrAddress" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> IP アドレスは無効です。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">ホストの DNS 名。</param>
        <param name="requestCallback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="stateObject">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</param>
        <summary>DNS ホスト名または IP アドレスを解決する非同期要求を開始、 <see cref="T:System.Net.IPAddress" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> 非同期要求を参照するインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 非同期の <xref:System.Net.Dns.BeginResolve%2A> を呼び出して操作を完了する必要があります、 <xref:System.Net.Dns.EndResolve%2A> メソッドです。 通常、このメソッドはによって、 `requestCallback` を委任します。  
  
 このメソッドは、操作が完了するまでにはブロックされません。 操作が完了するまでにブロックするを使用して、 <xref:System.Net.Dns.Resolve%2A> メソッドです。  
  
 非同期プログラミング モデルの使用に関する詳細については、次を参照してください。 [Asynchronous Programming Overview](http://msdn.microsoft.com/ja-jp/41972034-92ed-450a-9664-ab93fcc6f1fb)します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例では使用 <xref:System.Net.Dns.BeginResolve%2A> に DNS ホスト名を解決するのには、 <xref:System.Net.IPAddress>です。  
  
 [!code-cpp[Dns\_Begin\_EndResolve\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns\_Begin\_EndResolve\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns\_Begin\_EndResolve\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">呼び出し元には、DNS 情報にアクセスする権限がありません。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> への呼び出しによって返されるインスタンス、 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> メソッドです。</param>
        <summary>DNS 情報への非同期要求を終了します。</summary>
        <returns>型の配列 <see cref="T:System.Net.IPAddress" /> で指定されたホストの IP アドレスを保持する、 <paramref name="hostNameOrAddress" /> のパラメーター <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> メソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを照会します。 場合 `hostNameOrAddress` は IP アドレス、DNS サーバーのクエリを実行せずにこのアドレスが返されます。  
  
 ホスト名として空の文字列が渡されると、このメソッドは、Windows Server 2003 以外のすべてのオペレーティング システムのローカル ホストの IPv4 アドレスを返しますWindows Server 2003 では、ローカル ホストの IPv4 と IPv6 の両方のアドレスが返されます。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> への呼び出しによって返されるインスタンス、 <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> メソッドです。</param>
        <summary>DNS 情報への非同期要求を終了します。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> ホストに関する DNS 情報を含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはブロックするまで、操作を完了します。  
  
 この操作を同期的に実行するを使用して、 <xref:System.Net.Dns.GetHostByName%2A> メソッドです。  
  
 場合、 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=fullName> にプロパティが設定されている `true`, 、 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> への呼び出しによって返されるインスタンス、 <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> メソッドです。</param>
        <summary>DNS 情報への非同期要求を終了します。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> 、ホストのアドレス情報を格納しているインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはブロックするまで、操作を完了します。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
 この操作を同期的に実行するを使用して、 <xref:System.Net.Dns.GetHostEntry%2A> メソッドです。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> への呼び出しによって返されるインスタンス、 <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> メソッドです。</param>
        <summary>DNS 情報への非同期要求を終了します。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> ホストに関する DNS 情報を含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはブロックするまで、操作を完了します。  
  
 場合、 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=fullName> に設定されている `true`, 、 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
 この操作を同期的に実行するを使用して、 <xref:System.Net.Dns.Resolve%2A> メソッドです。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例では、DNS ホスト情報への非同期要求を終了します。  
  
 [!code-cpp[Dns\_Begin\_EndResolve\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns\_Begin\_EndResolve\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns\_Begin\_EndResolve\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <summary>指定したホストのインターネット プロトコル \(IP\) アドレスを返します。</summary>
        <returns>型の配列 <see cref="T:System.Net.IPAddress" /> で指定されているホストの IP アドレスを保持する、 <paramref name="hostNameOrAddress" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.GetHostAddresses%2A> メソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを照会します。 場合 `hostNameOrAddress` は IP アドレス、DNS サーバーのクエリを実行せずにこのアドレスが返されます。  
  
 ホスト名として空の文字列が渡されると、このメソッドは、Windows Server 2003 以外のすべてのオペレーティング システムのローカル ホストの IPv4 アドレスを返しますWindows Server 2003 では、ローカル ホストの IPv4 と IPv6 の両方のアドレスが返されます。  
  
 IPv6 アドレスはフィルターでの結果から、 <xref:System.Net.Dns.GetHostAddresses%2A> メソッド、ローカル コンピューターでは、IPv6 がインストールされていない場合。 その結果、可能であれば、空を取得する <xref:System.Net.IPAddress> IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.Dns.GetHostAddresses%2A> 型の配列に IP アドレスを解決するのにはメソッド <xref:System.Net.IPAddress>します。  
  
 [!code-cpp[System.Net.Dns\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostNameOrAddress" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> IP アドレスは無効です。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <summary>非同期操作として、指定したホストのインターネット プロトコル \(IP\) アドレスを返します。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。<see cref="P:System.Threading.Tasks.Task`1.Result" /> タスク オブジェクトのプロパティ型の配列を返す <see cref="T:System.Net.IPAddress" /> で指定されているホストの IP アドレスを保持する、 <paramref name="hostNameOrAddress" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この操作はブロックされません。 返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、完了した後、 `hostNameOrAddress` が解決されました。  
  
 このメソッドは、ホスト名に関連付けられている IP アドレスの DNS サーバーを照会します。 場合 `hostNameOrAddress` は IP アドレス、DNS サーバーのクエリを実行せずにこのアドレスが返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostNameOrAddress" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> IP アドレスは無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Net.IPAddress" />。</param>
        <summary>作成、 <see cref="T:System.Net.IPHostEntry" /> から、指定したインスタンス <see cref="T:System.Net.IPAddress" />します。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" />。  
  
 <see cref="T:System.Net.IPHostEntry" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Net.IPHostEntry> から、 <xref:System.Net.IPAddress>です。  
  
 [!code-cpp[Dns\_GetHostByAddress\_IPAddress\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns\_GetHostByAddress\_IPAddress\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns\_GetHostByAddress\_IPAddress\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="address" />します。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">IP アドレス。</param>
        <summary>作成、 <see cref="T:System.Net.IPHostEntry" /> IP アドレスからのインスタンス。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="address" />します。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> 有効な IP アドレスはありません。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">ホストの DNS 名。</param>
        <summary>指定の DNS ホスト名の DNS の情報を取得します。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> で指定されたアドレスのホスト情報を格納しているオブジェクト <paramref name="hostName" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.GetHostByName%2A> メソッドは、インターネット DNS サーバーのホスト情報を照会します。 ホスト名として空の文字列を渡す場合、このメソッドは、ローカル コンピューターの標準的なホスト名を取得します。  
  
 DNS 情報を非同期アクセスを使用して、 <xref:System.Net.Dns.BeginGetHostByName%2A> と <xref:System.Net.Dns.EndGetHostByName%2A> メソッドです。  
  
 場合、 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=fullName> にプロパティが設定されている `true`, 、 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.Dns.GetHostByName%2A> 指定の DNS ホスト名の DNS の情報を取得します。  
  
 [!code-cpp[Dns\_GetHostByName\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns\_GetHostByName\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns\_GetHostByName\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostName" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostName" />します。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">IP アドレス。</param>
        <summary>IP アドレスに解決、 <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> で指定されたホストのアドレス情報を格納しているインスタンス <paramref name="address" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.GetHostEntry%2A> メソッドは、IP アドレスと IP アドレスに関連付けられているエイリアスの DNS サーバーを照会します。  
  
 IPv6 アドレスはフィルターでの結果から、 <xref:System.Net.Dns.GetHostEntry%2A> メソッド、ローカル コンピューターでは、IPv6 がインストールされていない場合。 その結果、可能であれば、空を取得する <xref:System.Net.IPHostEntry> IPv6 の使用可能な場合の結果だけをインスタンス化、 `address` パラメーター。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.Dns.GetHostEntry%2A> メソッドを解決するには、IP アドレスを <xref:System.Net.IPHostEntry> インスタンス。  
  
 [!code-cpp[System.Net.Dns\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="address" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> IP アドレスは無効です。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <summary>ホスト名または IP アドレスを解決する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> で指定されたホストのアドレス情報を格納しているインスタンス <paramref name="hostNameOrAddress" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.GetHostEntry%2A> メソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。  
  
 ホスト名として空の文字列が渡されると、このメソッドは、ローカル ホストの IPv4 アドレスを返します。  
  
 ホスト名が見つからなかった場合、 <xref:System.Net.Sockets.SocketException> 11001 \(Windows ソケット エラー WSAHOST\_NOT\_FOUND\) の値を持つ例外が返されます。 DNS サーバーが応答しない場合、この例外を返すことができます。 この例外は、名前が、正式なホスト名またはエイリアスであるか、クエリ対象のデータベースで見つからない場合にも返されます。  
  
 <xref:System.ArgumentException> 場合にも、例外が返さ、 `hostNameOrAddress` パラメーターが含まれる <xref:System.Net.IPAddress.Any> または <xref:System.Net.IPAddress.IPv6Any>です。  
  
 <xref:System.Net.Dns.GetHostEntry%2A> メソッドを前提とする IP のリテラル文字列が渡された場合、 `hostNameOrAddress` アプリケーションが、パラメーター、 <xref:System.Net.IPHostEntry> プロパティ セットのすべてのインスタンスが返されます。 これらのプロパティには、 <xref:System.Net.IPHostEntry.AddressList%2A>, 、<xref:System.Net.IPHostEntry.Aliases%2A>, 、および <xref:System.Net.IPHostEntry.HostName%2A>です。 その結果の実装、 <xref:System.Net.Dns.GetHostEntry%2A> リテラル IP 文字列が渡されるメソッドは次の動作を示します。  
  
1.  このメソッドは、アドレスを解析しようとします。 場合、 `hostNameOrAddress` パラメーターには、リテラルで有効な IP 文字列が含まれていますし、最初のフェーズが成功するとします。  
  
2.  IP 文字列リテラルの IP アドレスを使用して逆引き参照がホスト名を取得しようとしています。 この結果として設定されて、 <xref:System.Net.IPHostEntry.HostName%2A> プロパティです。  
  
3.  この逆引き参照からのホスト名は、すべての可能な IP アドレス、名前に関連付けられているし、として設定するためにもう一度使用されます、 <xref:System.Net.IPHostEntry.AddressList%2A> プロパティです。  
  
 IPv4 のリテラル文字列、上記の 3 つすべての手順が成功します。 実際に返される別のホストに属している IPv4 アドレスの DNS レコードの古い可能です。 手順 3 失敗し、\(は IPv4 アドレスの DNS PTR レコードが IPv4 アドレスの DNS A レコードがありません\)、例外をスローする可能性があります。  
  
 Ipv6、上記の手順 2 が失敗した IPv6 のほとんどの配置は、IPv6 アドレスの逆引き \(PTR\) レコードを登録しないためです。 このメソッドを返すよう文字列 IPv6 に完全に修飾されたドメイン \(FQDN\) のホスト名とリテラル、 <xref:System.Net.IPHostEntry.HostName%2A> プロパティです。  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> メソッドには IP リテラルに関して動作が異なります。 1 つ目のステップが成功した場合 \(正常に解析して、IP アドレスとして\)、アドレスがすぐに、結果として返されることです。 逆引き参照での操作はありません。  
  
 IPv6 アドレスはフィルターでの結果から、 <xref:System.Net.Dns.GetHostEntry%2A> メソッド、ローカル コンピューターでは、IPv6 がインストールされていない場合。 その結果、可能であれば、空を取得する <xref:System.Net.IPHostEntry> IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.Dns.GetHostEntry%2A> メソッドを解決するには、IP アドレスを <xref:System.Net.IPHostEntry> インスタンス。  
  
 [!code-cpp[System.Net.Dns\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> パラメーターが 255 文字よりも大きいです。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました、 <paramref name="hostNameOrAddress" /> パラメーター。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> パラメーターが無効な IP アドレスです。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">IP アドレス。</param>
        <summary>IP アドレスに解決、 <see cref="T:System.Net.IPHostEntry" /> 非同期操作としてのインスタンス。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。<see cref="P:System.Threading.Tasks.Task`1.Result" /> タスク オブジェクトのプロパティの取得、 <see cref="T:System.Net.IPHostEntry" /> で指定されたホストのアドレス情報を格納しているインスタンス <paramref name="address" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この操作はブロックされません。 返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、完了した後、 `address` が解決されました。  
  
 このメソッドは、IP アドレスと IP アドレスに関連付けられているエイリアスの DNS サーバーを照会します。  
  
 IPv6 アドレスは、ローカル コンピューターでは、IPv6 がインストールされていない場合に、このメソッドの結果から除外されます。 その結果、可能であれば、空を取得する <xref:System.Net.IPHostEntry> IPv6 の使用可能な場合の結果だけをインスタンス化、 `address` パラメーター。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="address" />します。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> IP アドレスは無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ホスト名または IP アドレスを解決します。</param>
        <summary>ホスト名または IP アドレスを解決する <see cref="T:System.Net.IPHostEntry" /> 非同期操作としてのインスタンス。</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" /> を返します。  
  
 非同期操作を表すタスク オブジェクト。<see cref="P:System.Threading.Tasks.Task`1.Result" /> タスク オブジェクトのプロパティの取得、 <see cref="T:System.Net.IPHostEntry" /> で指定されたホストのアドレス情報を格納しているインスタンス <paramref name="hostNameOrAddress" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この操作はブロックされません。 返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、完了した後、 `hostNameOrAddress` が解決されました。  
  
 このメソッドは、ホスト名に関連付けられている IP アドレスまたは IP アドレスの DNS サーバーを照会します。  
  
 ホスト名として空の文字列が渡されると、このメソッドは、ローカル ホストの IPv4 アドレスを返します。  
  
 ホスト名が見つからなかった場合、 <xref:System.Net.Sockets.SocketException> 11001 \(Windows ソケット エラー WSAHOST\_NOT\_FOUND\) の値を持つ例外が返されます。 DNS サーバーが応答しない場合、この例外を返すことができます。 この例外は、名前が、正式なホスト名またはエイリアスであるか、クエリ対象のデータベースで見つからない場合にも返されます。  
  
 <xref:System.ArgumentException> 場合にも、例外が返さ、 `hostNameOrAddress` パラメーターが含まれる <xref:System.Net.IPAddress.Any> または <xref:System.Net.IPAddress.IPv6Any>です。  
  
 このメソッドを前提とする IP のリテラル文字列が渡された場合、 `hostNameOrAddress` アプリケーションが、パラメーター、 <xref:System.Net.IPHostEntry> プロパティ セットのすべてのインスタンスが返されます。 これらのプロパティには、 <xref:System.Net.IPHostEntry.AddressList%2A>, 、<xref:System.Net.IPHostEntry.Aliases%2A>, 、および <xref:System.Net.IPHostEntry.HostName%2A>です。 その結果、このメソッドの実装では、リテラル IP 文字列が渡されるときに、次の現象が発生します。  
  
1.  このメソッドは、アドレスを解析しようとします。 場合、 `hostNameOrAddress` パラメーターには、リテラルで有効な IP 文字列が含まれていますし、最初のフェーズが成功するとします。  
  
2.  IP 文字列リテラルの IP アドレスを使用して逆引き参照がホスト名を取得しようとしています。 この結果として設定されて、 <xref:System.Net.IPHostEntry.HostName%2A> プロパティです。  
  
3.  この逆引き参照からのホスト名は、すべての可能な IP アドレス、名前に関連付けられているし、として設定するためにもう一度使用されます、 <xref:System.Net.IPHostEntry.AddressList%2A> プロパティです。  
  
 IPv4 のリテラル文字列、上記の 3 つすべての手順が成功します。 実際に返される別のホストに属している IPv4 アドレスの DNS レコードの古い可能です。 手順 3 失敗し、\(は IPv4 アドレスの DNS PTR レコードが IPv4 アドレスの DNS A レコードがありません\)、例外をスローする可能性があります。  
  
 Ipv6、上記の手順 2 が失敗した IPv6 のほとんどの配置は、IPv6 アドレスの逆引き \(PTR\) レコードを登録しないためです。 このメソッドを返すよう文字列 IPv6 に完全に修飾されたドメイン \(FQDN\) のホスト名とリテラル、 <xref:System.Net.IPHostEntry.HostName%2A> プロパティです。  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> メソッドには IP リテラルに関して動作が異なります。 1 つ目のステップが成功した場合 \(正常に解析して、IP アドレスとして\)、アドレスがすぐに、結果として返されることです。 逆引き参照での操作はありません。  
  
 IPv6 アドレスは、ローカル コンピューターでは、IPv6 がインストールされていない場合に、このメソッドの結果から除外されます。 その結果、可能であれば、空を取得する <xref:System.Net.IPHostEntry> IPv6 の使用可能な場合の結果だけをインスタンス化、 `hostNameOrAddress`.parameter します。  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostNameOrAddress" /> パラメーターが 255 文字よりも大きいです。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました、 <paramref name="hostNameOrAddress" /> パラメーター。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> パラメーターが無効な IP アドレスです。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ローカル コンピューターのホスト名を取得します。</summary>
        <returns>ローカル コンピューターの名前をホストする DNS を含む文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、 <xref:System.Net.Dns.GetHostName%2A> メソッドは、ローカル コンピューターのホスト名を取得します。  
  
 [!code-cpp[Dns\_GetHostName\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns\_GetHostName\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns\_GetHostName\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">ローカル ホスト名を解決するときに、エラーが発生しました。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">DNS スタイルのホスト名または IP アドレス。</param>
        <summary>DNS ホスト名または IP アドレスを解決する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> で指定されたホストのアドレス情報を格納しているインスタンス <paramref name="hostName" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Dns.Resolve%2A> メソッドは、ホスト名または IP アドレスに関連付けられている IP アドレスの DNS サーバーを照会します。  
  
 ときに `hostName` DNS スタイルのホスト名に関連付けられている複数の IP アドレス、そのホスト名に解決される最初の IP アドレスのみが返されます。  
  
 場合、 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=fullName> にプロパティが設定されている `true`, 、 <xref:System.Net.IPHostEntry.Aliases%2A> のプロパティ、 <xref:System.Net.IPHostEntry> 返されたインスタンスは、このメソッドでは設定されませんし、常に空になります。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。 詳細については、「[Network Tracing](http://msdn.microsoft.com/ja-jp/e993b7c3-087f-45d8-9c02-9dded936d804)」を参照してください。  
  
   
  
## 例  
 次の例では、 <xref:System.Net.Dns.Resolve%2A> メソッドを解決するには、IP アドレスを <xref:System.Net.IPHostEntry> インスタンス。  
  
 [!code-cpp[Dns\_Resolve\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns\_Resolve\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns\_Resolve\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">長さ <paramref name="hostName" /> が 255 文字を超えています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">解決するときにエラーが発生しました <paramref name="hostName" />します。</exception>
        <permission cref="T:System.Net.DnsPermission">for accessing DNS information. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ホスト名または IP アドレスを解決する <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>IP アドレスの DNS ホスト情報を取得します。 これらのメソッドは今後使用しません。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ホスト名または IP アドレスを解決する <see cref="T:System.Net.IPHostEntry" /> 非同期操作としてのインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ホスト名または IP アドレスを非同期的な <see cref="T:System.Net.IPHostEntry" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>