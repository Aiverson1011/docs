<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>複数の資格情報のストレージを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required. When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier \(URI\) and authentication type provided with those stored in the cache and returns the first set of credentials that match.  
  
 The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged\-in user or the user being impersonated.  
  
   
  
## 例  
 The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.CredentialCache" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The constructor creates a <xref:System.Net.CredentialCache> instance.  
  
   
  
## 例  
 The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> 資格情報へのアクセスを許可するリソースの URI プレフィックスを指定します。</param>
        <param name="authType">指定されたリソースで使用される認証スキーム <c>uriPrefix</c>します。</param>
        <param name="cred">
          <see cref="T:System.Net.NetworkCredential" /> 資格情報キャッシュに追加します。</param>
        <summary>追加、 <see cref="T:System.Net.NetworkCredential" /> 資格情報キャッシュをインスタンス化で使用する SMTP 以外のプロトコルし、統一リソース識別子 \(URI\) のプレフィックスと認証プロトコルに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.CredentialCache.Add%2A> メソッドの場所、 <xref:System.Net.NetworkCredential> に SMTP 以外のプロトコルで使用するためのインスタンス、 <xref:System.Net.CredentialCache>です。 キャッシュに追加された順序で資格情報を格納します。 ときに、 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> メソッドが呼び出されると、適切な一致を返す <xref:System.Net.NetworkCredential> インスタンス。  
  
   
  
## 例  
 次のコード例の初期化、 <xref:System.Net.CredentialCache> を複数のセキュリティ資格情報と、資格情報を使用して、 <xref:System.Net.WebRequest>です。  
  
 [!code-cpp[Classic CredentialCache.Add Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="authType" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">同じ資格情報は、複数回追加されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> ホスト コンピューターを識別します。</param>
        <param name="port">A <see cref="T:System.Int32" /> オン\] に接続するポートを指定する <c>host</c>です。</param>
        <param name="authenticationType">A <see cref="T:System.String" /> に接続するときに使用する認証方式を識別する <c>host</c> を使用して <c>cred</c>します。 「解説」を参照してください。</param>
        <param name="credential">
          <see cref="T:System.Net.NetworkCredential" /> 資格情報キャッシュに追加します。</param>
        <summary>追加、 <see cref="T:System.Net.NetworkCredential" /> smtp 資格情報キャッシュの使用インスタンスをホスト コンピューター、ポート、および認証プロトコルに関連付けます。 このメソッドを使用して追加の資格情報は SMTP のみできます。 このメソッドは、HTTP または FTP の要求に対しては機能しません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Net.NetworkCredential> に SMTP を使用するインスタンス、 <xref:System.Net.CredentialCache>です。 キャッシュに追加された順序で資格情報を格納します。 ときに、 <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> 返すメソッドが呼び出されると、 <xref:System.Net.NetworkCredential> 照合することで選択されているインスタンス、 `host`, 、`port`, と `authType`です。 大文字小文字の比較が行われます。  
  
 サポートされる値 `authType` は"NTLM"、"Digest"、"Kerberos"および"Negotiate"です。  
  
 このメソッドを使用して追加の資格情報では、SMTP を使用できるもののみです。 このメソッドは、HTTP、FTP プロトコルは機能しません。  
  
   
  
## 例  
 次のコード例の初期化、 <xref:System.Net.CredentialCache> で複数のセキュリティ資格情報使用して smtp を使用してこれらの資格情報を <xref:System.Net.Mail.SmtpClient>です。  
  
 [!code-cpp[NCL\_Credential.Cache.Add\_SMTP\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL\_Credential.Cache.Add\_SMTP\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL\_Credential.Cache.Add\_SMTP\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="authType" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> 許容される値ではありません。 「解説」を参照してください。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのシステムの資格情報を取得します。</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> アプリケーションのシステムの資格情報を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> プロパティは NTLM にのみ、negotiate、Kerberos ベースの認証とします。  
  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> アプリケーションが実行されている現在のセキュリティ コンテキストでのシステムの資格情報を表します。 クライアント側のアプリケーションでは、これらは通常、Windows の資格情報 \(ユーザー名、パスワード、およびドメイン\)、アプリケーションを実行しているユーザーです。 ASP.NET アプリケーションは、既定の資格情報は、ログインしたユーザーまたは権限借用されているユーザーのユーザーの資格情報です。  
  
 として資格情報を取得、 <xref:System.Net.NetworkCredential> インスタンスを使用して、 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> プロパティです。  
  
 サポートされる値 `authType` は"NTLM"、"Digest"、"Kerberos"および"Negotiate"です。 このメソッドは、HTTP、FTP プロトコルは機能しません。  
  
> [!NOTE]
>  <xref:System.Net.ICredentials> によって返されるインスタンス <xref:System.Net.CredentialCache.DefaultCredentials%2A> ユーザー名、パスワード、または現在のセキュリティ コンテキストのドメインを表示するのには使用できません。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.CredentialCache.DefaultCredentials%2A> アプリケーションのシステムの資格情報を取得するプロパティです。  
  
 [!code-cpp[CredentialCache\_DefaultCredentials\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache\_DefaultCredentials\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache\_DefaultCredentials\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">for reading the USERNAME environment variable. Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセキュリティ コンテキストのネットワーク資格情報を取得します。</summary>
        <value>
          <see cref="T:System.Net.NetworkCredential" /> 、現在のユーザーまたはアプリケーションのネットワーク資格情報を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返される資格情報、 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> プロパティは、NTLM のみの適用、negotiate、Kerberos ベースの認証とします。  
  
 によって返される資格情報 <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> 、アプリケーションが実行されている現在のセキュリティ コンテキストの認証資格情報を表します。 クライアント側のアプリケーションでは、これらは通常、Windows の資格情報 \(ユーザー名、パスワード、およびドメイン\)、アプリケーションを実行しているユーザーです。 ASP.NET アプリケーションは、既定のネットワーク資格情報は、ログインしたユーザーまたは権限借用されているユーザーのユーザーの資格情報です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">for reading the USERNAME environment variable. Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> 資格情報へのアクセスを許可するリソースの URI プレフィックスを指定します。</param>
        <param name="authType">指定されたリソースで使用される認証スキーム <c>uriPrefix</c>します。</param>
        <summary>返します。、 <see cref="T:System.Net.NetworkCredential" /> 指定された Uniform Resource Identifier \(URI\) と認証の種類に関連付けられているインスタンス。</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> 、キャッシュ内に一致した資格情報がない場合や、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> メソッドの検索、 <xref:System.Net.CredentialCache> 返します、 <xref:System.Net.NetworkCredential> 指定した URI と承認の型のインスタンス。 場合、 <xref:System.Net.CredentialCache> が含まれていないに一致する <xref:System.Net.NetworkCredential> インスタンス、 `null` が返されます。  
  
 <xref:System.Net.CredentialCache.GetCredential%2A> キャッシュに一致する最長の URI プレフィックスを使用して、承認の種類に対して返される資格情報のセットを決定します。 次の表は、例を示します。  
  
|URI のプレフィックス|一致する文字列|  
|------------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|特定の Web ページに対する要求 `news.htm`します。|  
|`http://www.contoso.com/portal/`|すべてのコンテンツの要求、 `portal` ページ以外のパス `news.htm`します。|  
|`http://www.contoso.com/`|すべてのリソースに対する要求 `www.contoso.com`, で文字を除く、 `portal` パス。|  
  
   
  
## 例  
 次のコード例では、 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> を返すメソッドを <xref:System.Net.NetworkCredential> 指定した URI と認証の種類に関連付けられているインスタンス。  
  
 [!code-cpp[CredentialCache\_GetCredential\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache\_GetCredential\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache\_GetCredential\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> または <paramref name="authType" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> ホスト コンピューターを識別します。</param>
        <param name="port">A <see cref="T:System.Int32" /> オン\] に接続するポートを指定する <c>host</c>です。</param>
        <param name="authenticationType">A <see cref="T:System.String" /> に接続するときに使用する認証方式を識別する <c>host</c>です。 「解説」を参照してください。</param>
        <summary>返します。、 <see cref="T:System.Net.NetworkCredential" /> 指定されたホスト、ポート、および認証プロトコルに関連付けられているインスタンス。</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> 、キャッシュ内に一致した資格情報がない場合や、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、検索、 <xref:System.Net.CredentialCache> 返します、 <xref:System.Net.NetworkCredential> 指定されたホスト、ポート、および承認の種類のインスタンス。`host`, 、`port`, 、および `authType` に資格情報を追加したときに指定した値に、このメソッドに渡される値が大文字小文字と比較して、 <xref:System.Net.CredentialCache> を使用して、 <xref:System.Net.CredentialCache.Add%2A> メソッドです。  
  
 サポートされる値 `authType` は"NTLM"、"Digest"、"Kerberos"および"Negotiate"です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="authType" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> 許容される値ではありません。 「解説」を参照してください。  
  
 または  
  
 <paramref name="host" /> 空の文字列 \(""\) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.CredentialCache" /> インスタンスを反復処理できる列挙子を返します。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Net.CredentialCache" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Net.CredentialCache.GetEnumerator%2A> を反復処理できる列挙子を返すメソッド、 <xref:System.Net.CredentialCache> インスタンス。  
  
 [!code-cpp[CredentialCache\_GetEnumerator\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache\_GetEnumerator\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache\_GetEnumerator\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> の資格情報が使用されるリソースの URI プレフィックスを指定します。</param>
        <param name="authType">という名前のホストによって使用される認証スキーム <c>uriPrefix</c>します。</param>
        <summary>削除、 <see cref="T:System.Net.NetworkCredential" /> 指定された Uniform Resource Identifier \(URI\) プレフィックスおよび認証プロトコルに関連付けられている場合、キャッシュからインスタンス化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、削除、 <xref:System.Net.NetworkCredential> インスタンスから、 <xref:System.Net.CredentialCache> 場合は、指定した URI プレフィックスと認証プロトコルでは、資格情報に関連付けられているものと一致します。 複数回呼び出す、 <xref:System.Net.CredentialCache.Remove%2A> 同じメソッド <xref:System.Net.NetworkCredential> 影響を与えるありません。  
  
 場合 `authType` は `null` または `uriPrefix` は `null`, 、一致した資格情報が見つからない、キャッシュにこのメソッドは何か。  
  
   
  
## 例  
 次のコード例は、削除するこのメソッドを使用して、 <xref:System.Net.NetworkCredential> キャッシュからインスタンス。  
  
 [!code-cpp[CredentialCache\_Add\_Remove\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache\_Add\_Remove\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache\_Add\_Remove\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> ホスト コンピューターを識別します。</param>
        <param name="port">A <see cref="T:System.Int32" /> オン\] に接続するポートを指定する <c>host</c>です。</param>
        <param name="authenticationType">A <see cref="T:System.String" /> に接続するときに使用する認証方式を識別する <c>host</c>です。 「解説」を参照してください。</param>
        <summary>削除、 <see cref="T:System.Net.NetworkCredential" /> 指定されたホスト、ポート、および認証プロトコルに関連付けられている場合、キャッシュからインスタンス化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、削除、 <xref:System.Net.NetworkCredential> インスタンスから、 <xref:System.Net.CredentialCache> かどうかは、指定されたホスト、ポート、および認証プロトコルを使用すれば、資格情報に関連付けられている一致します。 複数回呼び出す、 <xref:System.Net.CredentialCache.Remove%2A> 同じメソッド <xref:System.Net.NetworkCredential> 影響を与えるありません。  
  
 場合 `authType` は `null` または `uriPrefix` は `null`, 、一致した資格情報が見つからない、キャッシュにこのメソッドは何か。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>削除、 <see cref="T:System.Net.NetworkCredential" /> キャッシュからインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返します。、 <see cref="T:System.Net.NetworkCredential" /> 指定統一リソース識別子 \(URI\) またはホスト、および認証の種類に関連付けられているインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>追加、 <see cref="T:System.Net.NetworkCredential" /> 資格情報キャッシュのインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>