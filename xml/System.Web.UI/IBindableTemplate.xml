<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>など、ASP.NET データ バインド コントロールの手段を提供 <see cref="T:System.Web.UI.WebControls.DetailsView" /> と <see cref="T:System.Web.UI.WebControls.FormView" />, 、テンプレートのコンテンツ セクション内での ASP.NET データ ソース コントロールに自動的にバインドします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.IBindableTemplate> インターフェイスにより、ASP.NET データ バインド コントロールのなど <xref:System.Web.UI.WebControls.DetailsView>, 、<xref:System.Web.UI.WebControls.GridView>, 、および <xref:System.Web.UI.WebControls.FormView>, などの ASP.NET データのソース コントロールにより提供されるデータにバインドするには、 <xref:System.Web.UI.WebControls.ObjectDataSource> または <xref:System.Web.UI.WebControls.SqlDataSource>, データ バインド コントロールには、テンプレート化されたコンテンツが含まれている場合、します。  
  
> [!NOTE]
>  ページの開発者が実装していない、 <xref:System.Web.UI.IBindableTemplate> インターフェイスです。 カスタムのデータ バインド コントロールを作成する開発者は、操作が <xref:System.Web.UI.IBindableTemplate> の実装内のオブジェクト、 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> と <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> メソッドを実装しない独自 <xref:System.Web.UI.IBindableTemplate> オブジェクトです。  
  
 などのデータ バインド コントロール <xref:System.Web.UI.WebControls.GridView> 通常はその子コントロール ツリーの認識とことができるため値をバインドする、これらのファイルから値を抽出およびデータ バインドが発生するたびに、データ バインド コントロールとデータ ソース コントロールの間でこれらの値を渡します。 ただし、ページ開発者は、データ バインド コントロールのテンプレートのコンテンツを定義、ときに、テンプレート内で子コントロールに表示されない、親データ バインド コントロール: 親は子をレンダリングできるコンテンツ \(ため、実質的に、コントロールをレンダリング自体\) は、これらの子コントロールに関連付けられているデータ ソース コントロールの更新、挿入、または削除操作に渡す値を抽出することはできませんが、します。 データ バインディングのシナリオでは、テンプレート コンテンツは、親データ バインド コントロールに非透過的です。`Bind` 構文は、データ バインド コントロール内のデータ バインド コントロールから値を抽出する、 <xref:System.Web.UI.IBindableTemplate> インスタンス。  
  
 データ バインディングには、一方向または双方向を指定できます。 \(バインド、次の手順は、 <xref:System.ComponentModel.BindingDirection> 列挙体です\)。 一方向のデータ バインディングは、データ バインド コントロールにデータ ソース コントロールからの送信方向で実行される任意のデータ バインディングたとえば、すべてデータの読み取りシナリオでは、一方向のデータ バインドします。 一方向のデータ バインド、一方向のデータ バインドの構文を使用することができます \(`<%# Eval("fieldname") %>`\) テンプレートのコンテンツ内、双方向の ASP.NET データ バインドの構文を使用する必要はありません。 双方向データ バインドでは、データ ソース コントロールにデータ バインド コントロールからの受信方向でのデータ バインドについて説明します。 自動編集、挿入、および削除のシナリオに ASP.NET を使用してデータ バインドとデータ ソース コントロールは双方向データ バインドのシナリオです。 これらのシナリオは、双方向データ バインディング式を使用して \(`<%# Bind("fieldname") %>`\)。<xref:System.Web.UI.IBindableTemplate> インターフェイスと、ASP.NET インフラストラクチャは、ASP.NET データ ソース コントロールと、テンプレート化されたコンテンツとの間の自動、宣言型、双方向データ バインディングをサポートします。 ASP.NET データ バインド式および構文の詳細については、次を参照してください。 [データベースへのバインド](http://msdn.microsoft.com/ja-jp/ab7b2846-975b-4057-a948-45527497c742) と [Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)です。  
  
 データ バインド コントロールのテンプレートのコンテンツが宣言で定義されているほとんどの場合。 次の表では、テンプレート化されたデータをデータ バインド コントロールにバインドする最も一般的に使用するプロセスについて説明します。  
  
|データ バインド コントロール|プロセス|  
|---------------------|----------|  
|<xref:System.Web.UI.WebControls.DetailsView>|データ バインド コントロールを使用してデータにバインドする、 `DataSourceID` で、データ ソース コントロールおよびテンプレートのコンテンツのプロパティが定義されている、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, 、<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> または <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> プロパティです。|  
|<xref:System.Web.UI.WebControls.GridView>|データ バインド コントロールを使用してデータにバインドする、 `DataSourceID` で、データ ソース コントロールおよびテンプレートのコンテンツのプロパティが定義されている、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> または <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> プロパティです。<xref:System.Web.UI.WebControls.GridView> コントロールが挿入操作をサポートしません。|  
|<xref:System.Web.UI.WebControls.FormView>|データ バインド コントロールを使用してデータにバインドする、 `DataSourceID` でプロパティ、およびテンプレートのコンテンツが定義されている、 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, 、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, 、または <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティ、または、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
  
 <xref:System.Web.UI.WebControls.DataList> と <xref:System.Web.UI.WebControls.Repeater> コントロールでは、自動双方向データ バインディングのシナリオをサポートしていません。  
  
 ASP.NET が暗黙的に作成、 <xref:System.Web.UI.IBindableTemplate> オブジェクト、テンプレート内での ASP.NET データ ソース コントロールにバインドするテンプレートのコンテンツの解析時にします。 具体的には、ASP.NET のパーサーがのインスタンスを作成、 <xref:System.Web.UI.CompiledBindableTemplateBuilder> クラスの ASP.NET データ バインドの構文を使用し、データ バインディングをサポートする ASP.NET Web サーバー コントロールを含むテンプレートのコンテンツを解析するとします。 これらの ASP.NET サーバー コントロールによってマークされて、 <xref:System.ComponentModel.BindableAttribute> 属性です。  
  
 <xref:System.Web.UI.IBindableTemplate> インターフェイスが 1 つのメソッドを定義 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>します。 このメソッドは、データ バインド コントロールは自動的にテンプレート化されたコンテンツから名前\/値ペアを抽出して実行時にデータ ソース コントロールに、ペアを渡すように双方向データ バインドに対して定義されます。 自動データ バインディングを成功させるのには、フィールド名が、テンプレート化されたコンテンツから抽出された、 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> メソッドが関連付けられたデータ ソース コントロール内のパラメーター名と一致する必要があります。 開発者の呼び出しの制御、 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> メソッドに明示的の実装内でのみ <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> またはカスタムのデータ バインド コントロールの他のいくつかのようなメソッドです。  
  
   
  
## 例  
 次のコード例を示す方法、 <xref:System.Web.UI.WebControls.FormView> コントロールのテンプレートの内容を定義、によって提供されるデータにバインドすることができます宣言によって、 <xref:System.Web.UI.WebControls.SqlDataSource> を制御して表示され、既存のレコードを編集します。 ASP.NET のパーサーは、テンプレートのコンテンツを解析し、作成、 <xref:System.Web.UI.IBindableTemplate> オブジェクトから値をバインドすることは、実行時に、 <xref:System.Web.UI.WebControls.SqlDataSource> 一方向の両方の ASP.NET データ バインディング構文によって、テンプレートで定義されているデータ領域にコントロール \(`<%# Eval("fieldname") %>`\) と双方向データ バインドの構文 \(`<%# Bind("fieldname") %>`\)。  
  
> [!IMPORTANT]
>  このコントロールには、ユーザー入力を受け付けるテキスト ボックスがあります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[FormView\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-vb[FormView\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Web.UI.Control" /> 名前\/値ペアを抽出するため、これに渡されるデータ バインド コントロールで双方向データ バインドのシナリオに関連付けられたデータ ソース コントロールです。</param>
        <summary>クラスによって実装された場合は、テンプレートのコンテンツ内での双方向の ASP.NET データ バインド構文を使用してバインドされた値の名前\/値ペアのセットを取得します。</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 名前\/値ペアのです。 名前はテンプレートのコンテンツ内のコントロールの名前を表し、値は、双方向の ASP.NET データ バインドの構文を使用してバインド プロパティの値の現在の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>An <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> method must conform to the following rules:  
  
-   If more than one binding exists for a given field, the last binding encountered is used.  
  
-   In order to reference a control's identifier in the <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> method, the control must also have a user-defined ID property at parse time. If no ID exists, this results in a parse error.  
  
-   Two-way ASP.NET data-binding syntax is only valid in an <see cref="T:System.Web.UI.ITemplate" /> or <see cref="T:System.Web.UI.IBindableTemplate" /> property of a data-bound control.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>