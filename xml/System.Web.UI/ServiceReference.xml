<Type Name="ServiceReference" FullName="System.Web.UI.ServiceReference">
  <TypeSignature Language="C#" Value="public class ServiceReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ServiceReference" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web ページに使用するための Web サービスを登録します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ECMAScript \(JavaScript\) から Web サービス メソッドを呼び出すには、ASP.NET ページにサービス参照を含めるし、適用する必要があります、 <xref:System.Web.Script.Services.ScriptServiceAttribute> 属性を Web サービス クラス定義です。 Web サービスにサービス参照を含めるかどうかは、 <xref:System.Web.UI.ScriptManager> または <xref:System.Web.UI.ScriptManagerProxy> JavaScript オブジェクトは、ブラウザーでインスタンス化する ASP.NET ページ内のコントロールです。  
  
 プロキシ オブジェクトが、次の操作に使用されます。  
  
-   Web サービス メソッドに JavaScript で非同期の要求を行う  
  
-   インスタンスを初期化、サーバーのデータ型のプロキシの具体的には使用する Web メソッドを呼び出すための入力パラメーターとして。  
  
> [!NOTE]
>  <xref:System.Web.UI.ServiceReference> コントロールは、同じドメイン内のサービスにのみ使用できます。  
  
 Web サービスの場所を宣言で定義するには追加することで、 `<asp:ServiceReference>` 要素を `<Services>` 内の要素、 `<asp:ScriptManager>` \] ページで、次の設定で要素の <xref:System.Web.UI.ServiceReference.Path%2A> 属性は、次の例で示すようにします。  
  
```  
<asp:ScriptManager runat="server" ID="scriptManager">  
  <Services>  
    <asp:ServiceReference Path="~/WebServices/SimpleWebService.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 使用する、 <xref:System.Web.UI.ServiceReference.InlineScript%2A> プロキシ生成スクリプトがインライン スクリプト ブロックとしてそのページに含まれるか、別の要求によって取得されるかを示すプロパティです。  
  
 プログラムでも追加することができます、 <xref:System.Web.UI.ServiceReference> オブジェクトを通じて、 <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=fullName> または <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=fullName> を使用してコレクション、 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> のメソッド、 <xref:System.Web.UI.ServiceReferenceCollection> クラスです。  
  
   
  
## 例  
 次の例では、スクリプトから Web サービス メソッドを呼び出すページ マークアップで Web サービスへの参照を追加する方法を示します。  
  
 [!code-csharp[System.Web.Script.Services.ScriptMethodAttribute\#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/CS/Default.aspx#5)]
 [!code-vb[System.Web.Script.Services.ScriptMethodAttribute\#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/VB/Default.aspx#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ServiceReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Web サービスの場所。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.ServiceReference" /> クラス パスを指定しています。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyScript">
      <MemberSignature Language="C#" Value="protected virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyScript(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">ページ上の <see cref="T:System.Web.UI.ScriptManager" /> コントロール。</param>
        <param name="containingControl">
          <see cref="T:System.Web.UI.Control" /> オブジェクト。</param>
        <summary>カスタマイズとしてオーバーライド可能な派生 <see cref="T:System.Web.UI.ServiceReference" /> オブジェクトからプロキシ スクリプトを提供します。</summary>
        <returns>プロキシ スクリプト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **parameterReference tag is not supported!!!!**  
 parameter is the <xref:System.Web.UI.ScriptManager> object or <xref:System.Web.UI.ScriptManagerProxy> object on which the <xref:System.Web.UI.ServiceReference> object is defined. It should be used as a basis for relative URL resolution.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyUrl(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">ページ上の <see cref="T:System.Web.UI.ScriptManager" /> コントロール。</param>
        <param name="containingControl">
          <see cref="T:System.Web.UI.Control" /> オブジェクト。</param>
        <summary>カスタマイズとしてオーバーライド可能な派生 <see cref="T:System.Web.UI.ServiceReference" /> オブジェクトからプロキシ URL を提供します。</summary>
        <returns>プロキシ URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **parameterReference tag is not supported!!!!**  
 parameter is the <xref:System.Web.UI.ScriptManager> object or <xref:System.Web.UI.ScriptManagerProxy> object on which the <xref:System.Web.UI.ServiceReference> object is defined and should be used as a basis for relative URL resolution.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="public virtual bool InlineScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InlineScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.InlineScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプロキシ生成スクリプトがインライン スクリプト ブロックとしてそのページに含まれるか、別の要求によって取得されるかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> プロキシ生成スクリプトが、ページ内のインライン スクリプト ブロックとして含まれる場合 <see langword="false" /> プロキシ生成スクリプトを個別の要求で取得した場合。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.ServiceReference.InlineScript%2A> プロパティが宣言されていない、既定値は `false`です。  
  
 <xref:System.Web.UI.ServiceReference.InlineScript%2A> に設定されている `false`, 、ECMAScript \(JavaScript\) プロキシを生成するためのスクリプトは、サーバーへの追加要求によって別のスクリプト ファイルとしてダウンロードします。 ブラウザーのキャッシュを使用する場合は、このオプションの値は複数の Web ページが同じサービス参照を使用するときに役立ちます。  
  
 <xref:System.Web.UI.ServiceReference.InlineScript%2A> に設定されている `true`, 、プロキシの生成のスクリプトは、ページ内のインライン スクリプト ブロックとして含まれています。 サーバーのパフォーマンスを向上これには、特に\] ページで多数のサービス参照がある、他のページには、同じサービスの参照がない場合、ネットワーク要求の数を減らすことです。 さらに、 <xref:System.Web.UI.ServiceReference.Path%2A> プロパティは、相対パスに設定する必要がある場合 <xref:System.Web.UI.ServiceReference.InlineScript%2A> に設定されている `true`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または参照先の Web サービスへのパスを設定します。</summary>
        <value>参照先の Web サービスのパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ServiceReference.Path%2A> プロパティのみをローカルの Web サービスをポイントできます。 つまり、このプロパティのみ、AJAX 対応 ASP.NET Web アプリケーションと同じドメイン内の Web サービスを指します。<xref:System.Web.UI.ServiceReference.Path%2A> 相対パス、アプリケーション相対パス、ドメインの相対または絶対パスであることができます。  
  
 場合、 <xref:System.Web.UI.ServiceReference.InlineScript%2A> にプロパティが設定されている `true`, を含むページと同じ Web アプリケーションを示す相対パスを使用する必要があります、 <xref:System.Web.UI.ServiceReference> インスタンス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>値を表す文字列を返す、 <see cref="P:System.Web.UI.ServiceReference.Path" /> プロパティまたは型の名前。</summary>
        <returns>値、 <see cref="P:System.Web.UI.ServiceReference.Path" /> プロパティで定義されている、それ以外の場合、値の <see cref="P:System.Reflection.MemberInfo.Name" /> クラスのプロパティです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ServiceReference" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>