<Type Name="PartialCachingAttribute" FullName="System.Web.UI.PartialCachingAttribute">
  <TypeSignature Language="C#" Value="public sealed class PartialCachingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PartialCachingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PartialCachingAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web フォーム ユーザー コントロール \(.ascx ファイル\) を指定する場合に使用するメタデータ属性とその出力をキャッシュする方法を定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PartialCachingAttribute> 属性クラスは、フラグメントのキャッシュをサポートしているユーザー コントロール \(.ascx ファイル\) をマークし、ASP.NET は、コントロールをキャッシュすると、キャッシュの設定をカプセル化します。 ページとコントロールの開発者を使用して、 <xref:System.Web.UI.PartialCachingAttribute> を有効にする属性が分離コード ファイルにユーザー コントロールのキャッシュを出力します。  
  
 使用して、 <xref:System.Web.UI.PartialCachingAttribute> キャッシュ出力いずれかの方法を有効にできます。 次の一覧では、出力キャッシュを有効に使用できる方法について説明します。  
  
-   ディレクティブを使用して、出力は、宣言型のシナリオでキャッシュを有効にします。  
  
-   使用して、 <xref:System.Web.UI.PartialCachingAttribute> 分離コード ファイルにユーザー コントロールのキャッシュを有効にします。  
  
-   使用して、 <xref:System.Web.UI.ControlCachePolicy> クラスをプログラムで作業してプログラム的なシナリオでキャッシュの設定を指定する <xref:System.Web.UI.BasePartialCachingControl> インスタンス。  
  
 ユーザー コントロールは、ディレクティブが含まれるかがいる場合、 <xref:System.Web.UI.PartialCachingAttribute> ASP.NET パーサー、適用のインスタンスを生成、 <xref:System.Web.UI.PartialCachingControl> ユーザー コントロールをラップするクラス。  
  
 ASP.NET のキャッシュの詳細については、次を参照してください。 [ASP.NET Caching Features](http://msdn.microsoft.com/ja-jp/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce)します。 属性の使用方法については、「[Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Web.UI.PartialCachingAttribute>です。 この例では、3 つの部分があります。  
  
-   部分クラス `ctlMine`, から継承する、 <xref:System.Web.UI.UserControl> 基本クラスとする、 <xref:System.Web.UI.PartialCachingAttribute> 属性を適用します。  
  
-   使用されるユーザー コントロール、 `ctlMine` 部分クラスです。  
  
-   ユーザー コントロールをホストする Web フォーム ページです。  
  
 例では、最初の部分が継承された部分クラスを示しています、 <xref:System.Web.UI.UserControl> 基本クラスとする、 <xref:System.Web.UI.PartialCachingAttribute> 属性を適用します。 この例では、属性は、ユーザー コントロールが 20 秒間にキャッシュすることを指定します。  
  
 [!code-csharp[PartialCachingAttribute\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_1/CS/partialcache.cs.ascx.cs#1)]
 [!code-vb[PartialCachingAttribute\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_1/VB/partialcache.vb.ascx.vb#1)]  
  
 この例の 2 番目の部分では、ユーザー コントロール、およびキャッシュを示すために、前の例で使用されるユーザー コントロールを示します。  
  
 [!code-csharp[PartialCachingAttribute\_1\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_1/CS/partialcache.cs.ascx#5)]
 [!code-vb[PartialCachingAttribute\_1\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_1/VB/partialcache.vb.ascx#5)]  
  
 この例の 3 番目の部分では、ユーザー コントロールをホストする Web フォーム ページを示しています。  
  
 [!code-csharp[PartialCachingAttribute\_1\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_1/CS/partialcache.cs.aspx#6)]
 [!code-vb[PartialCachingAttribute\_1\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_1/VB/partialcache.vb.aspx#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.UserControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartialCachingAttribute (int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="duration">秒単位での時間、ユーザー コントロールは、出力キャッシュに残ります必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PartialCachingAttribute" /> キャッシュすることをユーザー コントロールに割り当てられている指定した存続期間を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%29> コンス トラクターは、ユーザー コントロールに適用できます。 例では、ユーザー コントロールをキャッシュすることを示すために、キャッシュの期間を指定するにはコンス トラクターが使用されます。 このコード例が示されている例の一部は、 <xref:System.Web.UI.PartialCachingAttribute> クラスです。  
  
 [!code-csharp[PartialCachingAttribute\_1\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_1/CS/partialcache.cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_1\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_1/VB/partialcache.vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartialCachingAttribute (int duration, string varyByParams, string varyByControls, string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 duration, string varyByParams, string varyByControls, string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByParams" Type="System.String" />
        <Parameter Name="varyByControls" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">ユーザー コントロールをキャッシュする秒単位での時間数。</param>
        <param name="varyByParams">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 既定では、これらの文字列には、GET メソッドの属性を持つ送信されたクエリ文字列値または POST メソッドを使用して送信されるパラメーターが対応しています。 この属性が複数のパラメーターに設定されている場合、出力キャッシュには、指定したパラメーターごとに、要求されたドキュメントの別のバージョンが含まれています。 指定できる値は"none"、"\*"と有効なクエリ文字列、またはポスト パラメーターの名前。</param>
        <param name="varyByControls">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 これらの文字列は、ユーザー コントロールのプロパティの完全修飾名を表します。 このパラメーターを使用して、ユーザー コントロールの各ユーザーの指定したコントロール プロパティのキャッシュ用にユーザー コントロールの出力が変化します。</param>
        <param name="varyByCustom">ユーザー設定を表すテキストには、キャッシュ要件を出力します。 このパラメーターには、\[ブラウザー\] の値を指定した、キャッシュはブラウザー名とメジャー バージョン情報で切り替えられます。 オーバーライドする必要があります、独自の文字列が入力した場合、 <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> アプリケーションの Global.asax ファイル内のメソッドです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PartialCachingAttribute" /> 指定して、キャッシュの存続期間、GET と POST 値、コントロール名、およびカスタムの出力キャッシュの変更に使用される要件をキャッシュします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%2CSystem.String%2CSystem.String%2CSystem.String%29> コンス トラクターは、ユーザー コントロールに適用できます。 例では、コンス トラクターがユーザー コントロールをキャッシュできることを示すために使用されるキャッシュの存続期間を 20 秒を指定し、という名前のコントロール `state` ユーザー コントロールの出力を変更できるのです。  
  
 [!code-csharp[PartialCachingAttribute\_2\_Resubmit\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_2_Resubmit/CS/partialcache_1cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_2\_Resubmit\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_2_Resubmit/VB/partialcache_1vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartialCachingAttribute (int duration, string varyByParams, string varyByControls, string varyByCustom, bool shared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 duration, string varyByParams, string varyByControls, string varyByCustom, bool shared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByParams" Type="System.String" />
        <Parameter Name="varyByControls" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="shared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="duration">ユーザー コントロールをキャッシュする秒単位での時間数。</param>
        <param name="varyByParams">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 既定では、これらの文字列はと共に送信されるクエリ文字列の値に対応 <see langword="GET" /> メソッドの属性またはパラメーターを使用して送信、 <see langword="POST" /> メソッドです。 この属性が複数のパラメーターに設定されている場合、出力キャッシュには、指定したパラメーターごとに、要求されたドキュメントの別のバージョンが含まれています。 指定できる値は"none"、"\*"、および任意の有効なクエリ文字列または <see langword="POST" /> パラメーター名。</param>
        <param name="varyByControls">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 これらの文字列は、ユーザー コントロールのプロパティの完全修飾名を表します。 このパラメーターを使用して、ユーザー コントロールの各ユーザーの指定したコントロール プロパティのキャッシュ用にユーザー コントロールの出力が変化します。</param>
        <param name="varyByCustom">ユーザー設定を表すテキストには、キャッシュ要件を出力します。 このパラメーターには、\[ブラウザー\] の値を指定した、キャッシュはブラウザー名とメジャー バージョン情報で切り替えられます。 オーバーライドする必要があります、独自の文字列が入力した場合、 <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> アプリケーションの Global.asax ファイル内のメソッドです。</param>
        <param name="shared">
          <see langword="true" /> ユーザー コントロールの出力を複数のページで共有できることを示すためにそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PartialCachingAttribute" /> 指定して、キャッシュの存続期間、 <see langword="GET" /> と <see langword="POST" /> 値、出力キャッシュの変更に使用されるキャッシュの要件をカスタム コントロール名およびユーザー コントロールが出力するかどうかは、複数のページと共有できます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartialCachingAttribute (int duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, bool shared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 duration, string varyByParams, string varyByControls, string varyByCustom, string sqlDependency, bool shared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PartialCachingAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByParams" Type="System.String" />
        <Parameter Name="varyByControls" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="sqlDependency" Type="System.String" />
        <Parameter Name="shared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="duration">ユーザー コントロールをキャッシュする秒単位での時間数。</param>
        <param name="varyByParams">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 既定では、これらの文字列はと共に送信されるクエリ文字列の値に対応 <see langword="GET" /> メソッドの属性またはパラメーターを使用して送信、 <see langword="POST" /> メソッドです。 この属性が複数のパラメーターに設定されている場合、出力キャッシュには、指定したパラメーターごとに、要求されたドキュメントの別のバージョンが含まれています。 指定できる値は"none"、"\*"、および任意の有効なクエリ文字列または <see langword="POST" /> パラメーター名。</param>
        <param name="varyByControls">セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。 これらの文字列は、ユーザー コントロールのプロパティの完全修飾名を表します。 このパラメーターを使用して、ユーザー コントロールの各ユーザーの指定したコントロール プロパティのキャッシュ用にユーザー コントロールの出力が変化します。</param>
        <param name="varyByCustom">ユーザー設定を表すテキストには、キャッシュ要件を出力します。 このパラメーターには、\[ブラウザー\] の値を指定した、キャッシュはブラウザー名とメジャー バージョン情報で切り替えられます。 オーバーライドする必要があります、独自の文字列が入力した場合、 <see cref="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" /> アプリケーションの Global.asax ファイル内のメソッドです。</param>
        <param name="sqlDependency">データベース名とテーブルの区切り記号付きリストされた名前を変更されたときに、ASP.NET キャッシュ内のキャッシュ エントリを明示的に期限切れです。 これらのデータベース名は、Web 構成セクションで特定された、SQL Server キャッシュの依存関係と一致します。</param>
        <param name="shared">
          <see langword="true" /> ユーザー コントロールの出力を複数のページで共有できることを示すためにそれ以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PartialCachingAttribute" /> 指定して、キャッシュの存続期間、 <see langword="GET" /> と <see langword="POST" /> 値、出力キャッシュ、データベースの依存関係の変更に使用されるキャッシュの要件をカスタム コントロール名およびユーザー コントロールが出力するかどうかは、複数のページと共有できます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュされたアイテムが出力キャッシュに維持される時間を秒単位の量を取得します。</summary>
        <value>秒単位での時間、ユーザー コントロールは、出力キャッシュに残ります必要があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%29> コンス トラクターは、ユーザー コントロールに適用できます。 属性は、ユーザー コントロールがキャッシュできるキャッシュ期間 20 秒を指定することを示します。 このコード例が示されている例の一部は、 <xref:System.Web.UI.PartialCachingAttribute> クラスです。  
  
 [!code-csharp[PartialCachingAttribute\_1\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_1/CS/partialcache.cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_1\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_1/VB/partialcache.vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または関連付けられたコントロールの出力キャッシュ データを格納するために使用されるプロバイダーの名前を設定します。</summary>
        <value>プロバイダーの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 宣言または属性を使用して、このプロパティを設定することができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public bool Shared { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー コントロールの出力を複数のページで共有できるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザー コントロールの出力は、複数のページ間で共有できる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定する場合は、 `true`, 、キャッシュされたユーザー コントロールの出力は、複数の Web フォーム ページからアクセスできます。 設定しない場合 `true`, 、既定の動作は、1 つのバージョンのユーザー コントロールを含む各ページのユーザー コントロールの出力をキャッシュします。 このプロパティを有効にして可能性のある大量のメモリを保存できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDependency">
      <MemberSignature Language="C#" Value="public string SqlDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.SqlDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 つまたは複数データベースとテーブル名のペア、キャッシュされたユーザー コントロールが依存するを識別する区切り文字列を取得します。</summary>
        <value>一連のユーザー コントロールのキャッシュ エントリが依存するデータベースとテーブルの名前を識別する区切り文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PartialCachingAttribute.SqlDependency%2A> データベースと、構成で、SQL Server のキャッシュ依存関係の名前に従ってテーブルの名前を識別する文字列 \(通常を使用して、追加、 `sqlcachedependency` 構成要素\)。 SQL Server 2005 を使用する場合は、設定、 <xref:System.Web.UI.PartialCachingAttribute.SqlDependency%2A> プロパティを"CommandNotification"は、現在の ASP.NET ページのコンテキスト内で発行されたすべての SQL コマンドの行レベルの依存関係を作成するように指示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControls">
      <MemberSignature Language="C#" Value="public string VaryByControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>出力キャッシュを使用してユーザー コントロールを変更するユーザー コントロールのプロパティの一覧を取得します。</summary>
        <value>ユーザー コントロールのプロパティの一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%2CSystem.String%2CSystem.String%2CSystem.String%29> コンス トラクターは、ユーザー コントロールに適用できます。 ユーザー コントロールをキャッシュすることを示すために、期間を指定する、キャッシュを 20 秒、およびという名前のコントロールを指定するにはコンス トラクターを使用例では、 `state` ユーザー コントロールの出力を変更できるのです。  
  
 [!code-csharp[PartialCachingAttribute\_2\_Resubmit\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_2_Resubmit/CS/partialcache_1cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_2\_Resubmit\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_2_Resubmit/VB/partialcache_1vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCustom">
      <MemberSignature Language="C#" Value="public string VaryByCustom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCustom" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー コントロールを変更するため、出力キャッシュを使用するカスタムの文字列のリストを取得します。</summary>
        <value>カスタム文字列のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの \[ブラウザー\] を指定すると、ユーザー コントロールはブラウザーの種類とメジャー バージョン番号が変更されます。 このプロパティを使用して、出力キャッシュは、ユーザー コントロールの応答を識別する値を拡張することもできます。  
  
   
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%2CSystem.String%2CSystem.String%2CSystem.String%29> コンス トラクターは、ユーザー コントロールに適用できます。 例では、ユーザー コントロールをキャッシュすることを示すために、キャッシュのエントリがブラウザーの種類とメジャー バージョン番号に依存していることを指定するにはコンス トラクターが使用します。  
  
 [!code-csharp[PartialCachingAttribute\_4\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_4/CS/partialcache_3cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_4\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_4/VB/partialcache_3vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public string VaryByParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリ文字列またはフォームの一覧を取得 <see langword="POST" /> をユーザー コントロールを変えるには、出力キャッシュを使用するパラメーターです。</summary>
        <value>クエリ文字列またはフォームのリスト <see langword="POST" /> パラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.PartialCachingAttribute.%23ctor%28System.Int32%2CSystem.String%2CSystem.String%2CSystem.String%29> コンス トラクターは、ユーザー コントロールに適用できます。 例では、ユーザー コントロールをキャッシュすることを示すために、キャッシュ エントリが依存しているパラメーターを指定するにはコンス トラクターが使用されます。  
  
 [!code-csharp[PartialCachingAttribute\_3\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PartialCachingAttribute_3/CS/partialcache_2cs.ascx.cs#2)]
 [!code-vb[PartialCachingAttribute\_3\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PartialCachingAttribute_3/VB/partialcache_2vb.ascx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.PartialCachingAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>