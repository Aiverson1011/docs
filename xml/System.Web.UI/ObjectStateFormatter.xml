<Type Name="ObjectStateFormatter" FullName="System.Web.UI.ObjectStateFormatter">
  <TypeSignature Language="C#" Value="public sealed class ObjectStateFormatter : System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectStateFormatter extends System.Object implements class System.Runtime.Serialization.IFormatter, class System.Web.UI.IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ObjectStateFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>オブジェクトの状態を表すオブジェクト グラフをシリアル化および逆シリアル化します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ObjectStateFormatter> クラスがシリアル化し、コンパクトな形式でのオブジェクトの状態のグラフを逆シリアル化します。  
  
 <xref:System.Web.UI.ObjectStateFormatter> によって使用される、 <xref:System.Web.UI.PageStatePersister> クラスとビュー ステートをシリアル化し、コントロールの状態から派生するクラス。 使用して、 <xref:System.Web.UI.LosFormatter> ASP.NET インフラストラクチャのさまざまな部分の書式設定オブジェクトの状態グラフを提供するクラス。  
  
 <xref:System.Web.UI.ObjectStateFormatter> 多く一般的な .NET Framework 参照型では、定数と同じように書式設定およびシリアル化するクラスを最適化します。 次の表は、最適化されている種類を示します。  
  
|||||  
|-|-|-|-|  
|<xref:System.Array>|<xref:System.DateTime>|<xref:System.Int16>|<xref:System.String>|  
|<xref:System.Collections.ArrayList>|<xref:System.Double>|<xref:System.Int32>|文字列|  
|<xref:System.Boolean>|<xref:System.Enum>|null \(`Nothing`\)|<xref:System.String.Empty?displayProperty=fullName>|  
|<xref:System.Byte>|<xref:System.Collections.Hashtable>|<xref:System.Web.UI.Pair>|<xref:System.Web.UI.Triplet>|  
|<xref:System.Char>|<xref:System.Collections.Specialized.HybridDictionary>|<xref:System.Single>|<xref:System.Type>|  
|<xref:System.Drawing.Color>|<xref:System.Collections.IDictionary>|||  
  
 さらに、従来の文字列型と文字列の配列をへ書き込み中に、変更を加えず、シリアル化されたバイナリ ライターから、内部の文字列テーブルを作成することで一部の文字列が最適化されています。 文字列は、文字列がある関連付けられている場合は、これらのテーブルを使用して最適化された <xref:System.ComponentModel.TypeConverter> オブジェクトまたは文字列のインスタンスでは実際には、 <xref:System.Web.UI.IndexedString> クラスです。  
  
 上記以外の他の種類がバイナリでシリアル化されたを使用して、 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 実装するオブジェクト、 <xref:System.Runtime.Serialization.ISerializable> インターフェイスまたはで修飾された、 <xref:System.SerializableAttribute> 属性です。<xref:System.Web.UI.ObjectStateFormatter> クラスは、任意のシリアル化可能な種類については最適化されません。  
  
 場合、 <xref:System.Web.UI.ObjectStateFormatter> クラスは、シリアル化できない型を検出した、 <xref:System.ArgumentException> 例外がスローされます。  
  
   
  
## 例  
 次のコード例は、方法から派生するクラスについて説明します。、 <xref:System.Web.UI.PageStatePersister> クラスへのアクセス、 <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> 取得するプロパティを、 <xref:System.Web.UI.ObjectStateFormatter> ビュー ステートとコントロールの状態をストリームにシリアル化するインスタンス。 このコード例が示されている例の一部は、 <xref:System.Web.UI.PageStatePersister> クラスです。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ObjectStateFormatter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトの状態グラフをシリアル化された形式から逆シリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ObjectStateFormatter.Serialize" />
        <altmember cref="Overload:System.Web.UI.LosFormatter.Deserialize" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">A <see cref="T:System.IO.Stream" /> を <see cref="T:System.Web.UI.ObjectStateFormatter" /> に初期化されたシリアル化解除 <see langword="object" />します。</param>
        <summary>含まれているバイナリでシリアル化された形式からオブジェクトの状態グラフを逆シリアル化し、指定した <see cref="T:System.IO.Stream" /> オブジェクトです。</summary>
        <returns>逆シリアル化されたオブジェクトの状態グラフを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されるオブジェクトの状態グラフ、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%2A> メソッドと逆シリアル化する、 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> メソッドです。<xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.IO.Stream%29> メソッドに格納されているオブジェクトの状態グラフの復元を使用して、 <xref:System.IO.Stream>, など、 <xref:System.IO.FileStream>です。  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
   
  
## 例  
 次のコード例は、方法から派生するクラスについて説明します。、 <xref:System.Web.UI.PageStatePersister> クラスの初期化、 <xref:System.Web.UI.PageStatePersister.ViewState%2A> コレクションです。 この例では、 <xref:System.Web.UI.PageStatePersister.ViewState%2A> にコレクションが割り当てられて、 <xref:System.Web.UI.Pair.First> のフィールド、 <xref:System.Web.UI.Pair> オブジェクトし、を使用してファイルにシリアル化、 <xref:System.Web.UI.ObjectStateFormatter> クラスです。 ときに、 <xref:System.Web.UI.PageStatePersister.Load%2A> メソッドが呼び出される、 <xref:System.Web.UI.LosFormatter.Deserialize%28System.IO.Stream%29> メソッドは、ファイルからビューステートを逆シリアル化に使用され、 <xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティを初期化します。 このコード例が示されている例の一部は、 <xref:System.Web.UI.PageStatePersister> クラスです。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定した <paramref name="inputStream" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">シリアル化解除中に例外が発生した、 <see cref="T:System.IO.Stream" />です。 例外メッセージがのメッセージに添付された、 <see cref="T:System.ArgumentException" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string inputString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string inputString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputString">ある文字列、 <see cref="T:System.Web.UI.ObjectStateFormatter" /> 初期化されたオブジェクトに逆シリアル化します。</param>
        <summary>オブジェクトの状態グラフをシリアル化された base64 でエンコードされた文字列の形式から逆シリアル化します。</summary>
        <returns>逆シリアル化されたオブジェクトの状態グラフを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されるオブジェクトの状態グラフ、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%2A> メソッドと逆シリアル化する、 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> メソッドです。<xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29> メソッドを使用して、base64 でエンコードされた文字列の形式で格納されるオブジェクトの状態グラフを復元します。  
  
> [!IMPORTANT]
>  セキュリティ上のリスクは、信頼できないデータをこのメソッドを呼び出すことです。 このメソッドでは、信頼されたデータだけです。 詳細については、次を参照してください。 [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)します。  
  
   
  
## 例  
 次のコード例は、base64 でエンコードされた文字列を逆シリアル化して返すメソッドを実装する方法を示します、 <xref:System.Collections.ICollection> プロパティ設定のコレクション。 このコード例は、プロパティの設定でシリアル化されていることに依存している、 <xref:System.Web.UI.ObjectStateFormatter> クラスのように、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29> メソッドです。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter\_1\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#2)]
 [!code-vb[System.Web.UI.ObjectStateFormatter\_1\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定した <paramref name="inputString" /> は <see langword="null" /> かが、 <see cref="P:System.String.Length" /> は 0 です。</exception>
        <exception cref="T:System.ArgumentException">シリアル化されたデータが正しくありません。</exception>
        <exception cref="T:System.Web.HttpException">ビュー ステートを逆シリアル化が失敗したときに実行されるコンピューター認証コード \(MAC\) の検証チェックします。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stateGraph">シリアル化するオブジェクト。</param>
        <summary>Base64 でエンコードされた文字列オブジェクトの状態グラフをシリアル化します。</summary>
        <returns>Base 64 エンコード文字列のシリアル化されたオブジェクトの状態を表す、 <paramref name="stateGraph" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されるオブジェクトのグラフ、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%2A> メソッドと逆シリアル化する、 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> メソッドです。<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29> メソッドは、base64 でエンコードされた文字列形式を使用するオブジェクトの状態グラフをシリアル化に使用します。  
  
   
  
## 例  
 次のコード例では、コントロールのプロパティを使用して、base64 でエンコードされた文字列を一連の値をシリアル化、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29> メソッドです。 後の時点の文字列を逆シリアル化できる、 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29> メソッドです。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#1)]
 [!code-vb[System.Web.UI.ObjectStateFormatter\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream outputStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream outputStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="outputStream">A <see cref="T:System.IO.Stream" /> 先、 <see cref="T:System.Web.UI.ObjectStateFormatter" /> 指定したオブジェクトの状態をシリアル化します。</param>
        <param name="stateGraph">シリアル化するオブジェクト。</param>
        <summary>指定したオブジェクトの状態グラフをシリアル化 <see cref="T:System.IO.Stream" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されるオブジェクトの状態グラフ、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%2A> メソッドと逆シリアル化する、 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> メソッドです。<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29> メソッドを使用するバイナリ オブジェクトの状態グラフをシリアル化を <xref:System.IO.Stream> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、クラスを取得する方法を示しています、 <xref:System.Web.UI.ObjectStateFormatter> ビュー ステートとコントロールの状態を使用してストリームをシリアル化するインスタンス、 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29> メソッドです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.PageStatePersister> クラスです。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定した <paramref name="inputStream" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Binder">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Runtime.Serialization.Formatter.Binder" />」を参照してください。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 逆シリアル化中に型の検索を実行します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Runtime.Serialization.IFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Context">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Runtime.Serialization.IFormatter.Context" />」を参照してください。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> シリアル化および逆シリアル化に使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Runtime.Serialization.IFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IFormatter.Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.Serialization.IFormatter.Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Deserialize(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">逆シリアル化するデータを格納しているストリーム。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />」を参照してください。</summary>
        <returns>逆シリアル化されたグラフの最上位オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Runtime.Serialization.IFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Serialize">
      <MemberSignature Language="C#" Value="void IFormatter.Serialize (System.IO.Stream serializationStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IFormatter.Serialize(class System.IO.Stream serializationStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Serialize(System.IO.Stream,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">フォーマッタによってシリアル化されたデータが格納するストリーム。 このストリームは、さまざまなバッキング ストア \(ファイル、ネットワーク、メモリなど\) を参照できます。</param>
        <param name="stateGraph">オブジェクト、またはシリアル化する、オブジェクト グラフのルート。 このルート オブジェクトのすべての子オブジェクトは、自動的にシリアル化されます。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Runtime.Serialization.IFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="T:System.Runtime.Serialization.SurrogateSelector" />」を参照してください。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> このフォーマッタで使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Runtime.Serialization.IFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IStateFormatter.Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateFormatter.Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Deserialize(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState">ある文字列、 <see cref="T:System.Web.UI.IStateFormatter" /> 初期化されたオブジェクトに逆シリアル化します。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />」を参照してください。</summary>
        <returns>ASP.NET サーバー コントロールの状態を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Web.UI.IStateFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Serialize">
      <MemberSignature Language="C#" Value="string IStateFormatter.Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IStateFormatter.Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Serialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">文字列形式にシリアル化する Web サーバー コントロールのビュー ステートを表すオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />」を参照してください。</summary>
        <returns>Web サーバー コントロールのビュー ステートを表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.ObjectStateFormatter> のインスタンスが <xref:System.Web.UI.IStateFormatter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトの状態グラフをシリアル化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>