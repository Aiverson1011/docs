<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コントロールが、サーバー上のコールバック イベントの対象にできることを示すために使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装、 <xref:System.Web.UI.ICallbackEventHandler> コールバック イベントを受け取る必要がある任意のカスタム コントロールのインターフェイスです。 詳細については、「[Client Callbacks Without Postbacks in ASP.NET Pages](http://msdn.microsoft.com/ja-jp/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)」を参照してください。  
  
 実装するコントロールの例については、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスに含まれて、 <xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.TreeView> コントロールです。 コールバック イベントを実装するコントロールを対象とすると、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイス、 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> イベント引数のパラメーターとして渡すと共に、イベントを処理するメソッドが呼び出されると、 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> メソッドのコールバックの結果を返します。  
  
 コントロールのコールバック中にデータ ソース コントロールからデータを取得することができますように同期または非同期になります。 ASP.NET コントロールと同様に <xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.TreeView> 同期的に実装されます。 同期コールバックには、ブラウザーでの作業と、ユーザーがいなくてできます。 同期モードで最後のコールバックが優先順位で、一度に 1 つだけのコールバックは実行できます。 Web コントロールが非同期動作をサポートするために実装されている場合は、複数のコールバックを同時に発生することができます。 非同期プログラミングの詳細については、「 [Asynchronous Programming Design Patterns](http://msdn.microsoft.com/ja-jp/c6baed9f-2a25-4728-9a9a-53b7b14840cf)します。  
  
 ユーザー インターフェイスから生成されるコールバック イベントが実装するコントロールで表示されるかどうかを指定する、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスが検証されます。 イベントの検証が、適切なセキュリティ プラクティスです。 ただし、パフォーマンス上の理由は無効にできます。 かどうかを制御するは、イベントの検証はコールバック イベントの実行は、設定、 `enableEventValidation` の属性、 [@ Page](http://msdn.microsoft.com/ja-jp/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) ディレクティブまたは `enableEventValidation` の属性、 [pages 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/4123bb66-3fe4-4d62-b70e-33758656b458) の Web.config ファイルです。 設定した場合、 <xref:System.Web.UI.Page.EnableEventValidation%2A> でコードでは、プロパティを設定して、 `Page_Init` ページ処理の段階です。 イベントの検証、パフォーマンス コストと、セキュリティ上の利点の分散の詳細については、次を参照してください。 [Performance Overview](http://msdn.microsoft.com/ja-jp/f882bf1b-a009-4312-ac06-74370ffabc0b)します。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スローされた例外 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> できなくなる <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 呼び出されると、結果を返すからです。 防ぐために <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 、結果を返すから例外がスローされたときにフラグを設定 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> から空の文字列を返す <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すイベント引数を表す文字列。</param>
        <summary>コントロールを対象とするコールバック イベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに `null` 使用は、サーバーに"null"と送信済みのバックアップを作成、イベント引数のパラメーターとして文字列をシリアル化します。 区別する手段がないため `null` および"null"を使用しないで `null` になったコールバックの引数のパラメーターです。  
  
 スローされた例外 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> できなくなる <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 呼び出されると、結果を返すからです。 防ぐために <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 、結果を返すから例外がスローされたときにフラグを設定 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> から空の文字列を返す <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>