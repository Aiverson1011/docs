<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ノードや、階層データ構造でノードのコレクション上のデータ ビューを表す、 <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET には、Web サーバー コントロールのデータにバインドして、一貫した方法で提供できるようにするためのデータ バインディング アーキテクチャがサポートされています。 データにバインドする web サーバー コントロールは、データ バインド コントロールと呼ばれ、バインディングを容易にするためのクラスには、データ ソース コントロールと呼ばれます。 データ ソース コントロールは、任意のデータ ソースを表すことができます。 ファイル、ストリーム、リレーショナル データベース、ビジネス オブジェクト、およびなどです。 データ ソースは、ソースまたは基になるデータの形式に関係なく、データ バインド コントロールに一貫した方法でデータ表示を制御します。  
  
 階層データを表現するデータ ソース コントロールは、抽象型から派生 <xref:System.Web.UI.HierarchicalDataSourceControl> クラスです。 データ ソース コントロールのデータ ソース コントロールのオブジェクトとデータ ソース ビュー オブジェクトで表されている基になるデータ ビューの組み合わせと考えることができます。 階層的なデータ ソース コントロールは、それらが表すデータの各階層レベルの階層的なデータ ソース ビューをサポートします。 データ ソース ビュー、名前、このような <xref:System.Web.UI.DataSourceView> オブジェクトに関連付けられている、 <xref:System.Web.UI.DataSourceControl> を制御するには、一意の階層パスで識別します。  
  
 データ ソース ビューでは、データ ソース コントロールの機能を定義します。 含むすべてのデータ ソース ビュー オブジェクト <xref:System.Web.UI.HierarchicalDataSourceView>, 、基になるデータ ソースを使用して、データの取得をサポートして、 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> としてデータの階層リストを取得するメソッド、 <xref:System.Web.UI.IHierarchicalEnumerable> オブジェクトです。 すべてのデータ ソース ビュー オブジェクトは、必要に応じてなどの操作を含む、機能の基本セットをサポート <xref:System.Web.UI.DataSourceView.Insert%2A>, 、<xref:System.Web.UI.DataSourceView.Update%2A>, 、<xref:System.Web.UI.DataSourceView.Delete%2A>, 、および並べ替え。 関連付けられたデータ ソースを取得することによってデータ ソース コントロールの機能の表示を使用して、データ バインド コントロールを検出できる、 <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> メソッドおよびデザイン時または実行時に、ビューのクエリを実行します。<xref:System.Web.UI.HierarchicalDataSourceView> サポートされていない <xref:System.Web.UI.DataSourceView.Insert%2A>, 、<xref:System.Web.UI.DataSourceView.Update%2A> または <xref:System.Web.UI.DataSourceView.Delete%2A> 操作します。  
  
   
  
## 例  
 次のコード例では、派生クラスを <xref:System.Web.UI.HierarchicalDataSourceView> これで、階層データのストレージからデータを取得するクラスをファイル システムの場合します。`FileSystemDataSourceView` クラスは厳密に型指定 <xref:System.Web.UI.HierarchicalDataSourceView> などにより、階層的な Web サーバー コントロールのインスタンス、 <xref:System.Web.UI.WebControls.TreeView> コントロールをバインドする、 `FileSystemDataSource` を制御し、ファイル システム情報を表示します。 セキュリティのために、ファイル システム情報は、データ ソース コントロールは、ローカル ホスト上で使用されている場合にのみが表示されます、シナリオでは、認証され、データ ソース コントロールを使用して Web フォーム ページが存在する仮想ディレクトリのみが起動します。 それ以外の場合、 `viewPath` コンス トラクターに渡されるパラメーターは、現在のファイル システム パスに基づくビューを作成するために使用可能性があります。 このコード例が示されている例の一部は、 <xref:System.Web.UI.HierarchicalDataSourceControl> クラスです。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you inherit from <see cref="T:System.Web.UI.HierarchicalDataSourceView" />, you must override the following member: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</para>
    </block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー内のすべてのデータ項目の一覧を取得します。</summary>
        <returns>
          <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> データ アイテムのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> メソッドが返される、 <xref:System.Web.UI.IHierarchicalEnumerable> 現在のビュー内のデータ項目のコレクション。 呼び出すことができます、 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 取得するメソッド、 <xref:System.Collections.IEnumerator> オブジェクトし、データ項目のコレクションを反復処理します。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> から派生したクラスのメソッド、 <xref:System.Web.UI.HierarchicalDataSourceView> クラス階層を取得する <xref:System.IO.FileSystemInfo> ファイル システムからデータをします。 セキュリティのために、ファイル システム情報は、データ ソース コントロールは、ローカル ホスト上で使用されている場合にのみが表示されます、シナリオでは、認証され、データ ソース コントロールを使用して Web フォーム ページが存在する仮想ディレクトリのみが起動します。 それ以外の場合、 `viewPath` view オブジェクトのコンス トラクターに渡されるパラメーターは、現在のファイル システム パスに基づくビューを作成するために使用可能性があります。 このコード例が示されている例の一部は、 <xref:System.Web.UI.HierarchicalDataSourceControl> クラスです。  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>