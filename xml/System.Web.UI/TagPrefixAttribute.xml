<Type Name="TagPrefixAttribute" FullName="System.Web.UI.TagPrefixAttribute">
  <TypeSignature Language="C#" Value="public sealed class TagPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TagPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TagPrefixAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム コントロールを識別するために、Web ページで使用されるタグ プレフィックスを定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.TagPrefixAttribute> クラスをカスタム コントロールのタグ プレフィックスのエイリアスを指定するために必要なアセンブリ レベル属性を定義します。 この属性は自動的に生成する Microsoft Visual Studio などのツールで使用する `Register` ディレクティブでカスタム コントロールが使用されている ASP.NET ページです。  
  
 このディレクティブは、名前空間のタグ プレフィックスを登録します。 さらに、カスタム コントロールのコードの実装が存在するアセンブリを指定します。 このディレクティブを使用できますカスタム コントロール、Web ページで宣言によって。  
  
 属性の使用方法については、「[Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
   
  
## 例  
 [!code-csharp[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]
 [!code-vb[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagPrefixAttribute (string namespaceName, string tagPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string namespaceName, string tagPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="tagPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceName">カスタム コントロールの名前空間を識別する文字列。</param>
        <param name="tagPrefix">カスタム コントロールのプレフィックスを識別する文字列。</param>
        <summary>
          <see cref="T:System.Web.UI.TagPrefixAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 およびでは、カスタム コントロールを定義するコードの前に、次のようにこのクラス コンス トラクターを呼び出す必要があります。  
  
 `[assembly:TagPrefix(namespace, tag)]`  
  
   
  
## 例  
 次のコード例では、カスタム コントロールのタグ プレフィックスのエイリアスを指定することができますアセンブリ レベル属性を定義する方法を示します。 この属性は自動的に生成する Microsoft Visual Studio などのツールで使用する `@ Register` ディレクティブでカスタム コントロールが使用される Web ページです。  
  
 [!code-csharp[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]
 [!code-vb[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> または <paramref name="tagPrefix" /> は <see langword="null" /> または空の文字列 \(""\) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TagPrefixAttribute.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したコントロールの名前空間プレフィックスを取得します。</summary>
        <value>名前空間の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 [!code-csharp[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]
 [!code-vb[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagPrefix">
      <MemberSignature Language="C#" Value="public string TagPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TagPrefixAttribute.TagPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したコントロールのタグ プリフィックスを取得します。</summary>
        <value>タグ プリフィックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 [!code-csharp[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]
 [!code-vb[SystemWebUI\_TagPrefixAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>