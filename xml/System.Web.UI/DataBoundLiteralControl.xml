<Type Name="DataBoundLiteralControl" FullName="System.Web.UI.DataBoundLiteralControl">
  <TypeSignature Language="C#" Value="public sealed class DataBoundLiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBoundLiteralControl extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBoundLiteralControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ バインディング式および静的なリテラル テキストを保持します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.DataBoundLiteralControl> class persists the value of its <xref:System.Web.UI.DataBoundLiteralControl.Text%2A> property to view state.  
  
   
  
## 例  
 The following code example creates a class that obtains a <xref:System.Web.UI.DataBoundLiteralControl> object and displays the <xref:System.Web.UI.DataBoundLiteralControl.Text%2A> property of the object.  
  
 [!code-csharp[SystemWebUI\_DataBoundLiteralControl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/CS/mydataboundliteralcontrol.cs#1)]
 [!code-vb[SystemWebUI\_DataBoundLiteralControl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/VB/mydataboundliteralcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBoundLiteralControl (int staticLiteralsCount, int dataBoundLiteralCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 staticLiteralsCount, int32 dataBoundLiteralCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.#ctor(System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="staticLiteralsCount" Type="System.Int32" />
        <Parameter Name="dataBoundLiteralCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="staticLiteralsCount">静的なリテラル文字列を格納するために作成する配列のサイズを定義します。</param>
        <param name="dataBoundLiteralCount">データ バインドされたリテラル文字列を格納するために作成する配列のサイズを定義します。</param>
        <summary>
          <see cref="T:System.Web.UI.DataBoundLiteralControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataBoundString">
      <MemberSignature Language="C#" Value="public void SetDataBoundString (int index, string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataBoundString(int32 index, string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.SetDataBoundString(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">保持する配列内の位置、 <c>s</c> パラメーターの値。</param>
        <param name="s">A <see cref="T:System.String" /> データ バインド式の値を格納します。</param>
        <summary>データ バインドされた値を格納する配列に文字列値を割り当てます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStaticString">
      <MemberSignature Language="C#" Value="public void SetStaticString (int index, string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStaticString(int32 index, string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBoundLiteralControl.SetStaticString(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">保持する配列内の位置、 <c>s</c> パラメーターの値。</param>
        <param name="s">A <see cref="T:System.String" /> データ バインド式の値を格納します。</param>
        <summary>静的な値を格納する配列に文字列値を割り当てます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ITextControl.Text">
      <MemberSignature Language="C#" Value="string System.Web.UI.ITextControl.Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.ITextControl.Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBoundLiteralControl.System#Web#UI#ITextControl#Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のテキストの内容、 <see cref="T:System.Web.UI.DataBoundLiteralControl" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.String" /> のコンテンツのテキストを表す、 <see cref="T:System.Web.UI.DataBoundLiteralControl" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Web.UI.ITextControl> インターフェイスの値を返す、 <xref:System.Web.UI.DataBoundLiteralControl.Text%2A> プロパティです。 値、 <xref:System.Web.UI.DataBoundLiteralControl.Text%2A> ビュー ステートにプロパティを永続化します。  
  
 <xref:System.Web.UI.DataBoundLiteralControl> オブジェクトを実装して <xref:System.Web.UI.ITextControl> はサポートしていませんが、 `set` メソッドを <xref:System.Web.UI.ITextControl.Text%2A> プロパティです。 このメソッドを使用する試みがすべてを返す、 <xref:System.NotSupportedException> 例外です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBoundLiteralControl.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストのコンテンツを取得、 <see cref="T:System.Web.UI.DataBoundLiteralControl" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.String" /> のコンテンツのテキストを表す、 <see cref="T:System.Web.UI.DataBoundLiteralControl" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.DataBoundLiteralControl> クラスの値が引き続き発生する、 <xref:System.Web.UI.DataBoundLiteralControl.Text%2A> 状態を表示するプロパティです。  
  
   
  
## 例  
 次のコード例は、カスタム コントロールを作成し、.aspx ファイル内のテキストを表示するからそのコントロールを使用して、 <xref:System.Web.UI.DataBoundLiteralControl> オブジェクトです。 カスタム コントロールを取得、 <xref:System.Web.UI.DataBoundLiteralControl> オブジェクトし、の text プロパティを出力、 `Render` メソッドです。  
  
 [!code-csharp[SystemWebUI\_DataBoundLiteralControl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/CS/mydataboundliteralcontrol.cs#1)]
 [!code-vb[SystemWebUI\_DataBoundLiteralControl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/VB/mydataboundliteralcontrol.vb#1)]  
  
 Visual Basic コンパイラ \(vbc.exe\) や c\# コンパイラ \(csc.exe\) を持つコントロールをコンパイルすることができます。 次のコード例のように、Web プロジェクトの Bin ディレクトリに生成された .dll ファイルを配置する必要があります。  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /t:library /out:myWebAppPath/bin/vb_myDataBoundLiteralControl.dll myDataBoundLiteralControl.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/bin/cs_myDataBoundLiteralControl.dll myDataBoundLiteralControl.cs  
```  
  
 次のコード例は、カスタム コントロールが登録され、.aspx ファイル内で使用する方法を示します。  
  
 [!code-csharp[SystemWebUI\_DataBoundLiteralControl\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/CS/databoundform.aspx#2)]
 [!code-vb[SystemWebUI\_DataBoundLiteralControl\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_DataBoundLiteralControl/VB/databoundform.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>