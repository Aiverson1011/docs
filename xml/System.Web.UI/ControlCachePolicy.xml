<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET ユーザー コントロールの出力キャッシュを設定するには、プログラムによるアクセスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ControlCachePolicy> クラスは、ユーザー コントロール \(.ascx ファイル\) の出力キャッシュ設定を指定するプログラムでユーザー コントロールのシナリオでの開発者によって使用されます。 ASP.NET 内でユーザー コントロールが埋め込まれます、 <xref:System.Web.UI.BasePartialCachingControl> インスタンス。<xref:System.Web.UI.BasePartialCachingControl> クラスは、出力キャッシュを有効にするユーザー コントロールを表します。 アクセスするときに、 <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName> のプロパティ、 <xref:System.Web.UI.PartialCachingControl> コントロール、有効なは常に受け取る <xref:System.Web.UI.ControlCachePolicy> オブジェクトです。 ただしにアクセスする場合、 <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName> のプロパティ、 <xref:System.Web.UI.UserControl> コントロールが表示されたら、有効な <xref:System.Web.UI.ControlCachePolicy> オブジェクトでユーザー コントロールが既にラップされたかどうかのみ、 <xref:System.Web.UI.BasePartialCachingControl> コントロールです。 ラップされていない場合、 <xref:System.Web.UI.ControlCachePolicy> プロパティによって返されるオブジェクトは、関連付けられていないため、操作しようとする、例外がスロー <xref:System.Web.UI.BasePartialCachingControl>します。 確認するかどうか、 <xref:System.Web.UI.UserControl> インスタンスは例外を生成せずにキャッシュをサポートで、確認、 <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> プロパティです。  
  
 使用して、 <xref:System.Web.UI.ControlCachePolicy> クラスは、出力キャッシュを有効にする方法はいくつかのいずれかです。 次の一覧には、出力キャッシュを有効に使用できる方法について説明します。  
  
-   ディレクティブを使用して、出力は、宣言型のシナリオでキャッシュを有効にします。  
  
-   使用して、 <xref:System.Web.UI.PartialCachingAttribute> 属性をユーザー コントロールの分離コード ファイルにキャッシュを有効にします。  
  
-   使用して、 <xref:System.Web.UI.ControlCachePolicy> クラスを使用しているプログラムのシナリオでキャッシュの設定を指定する <xref:System.Web.UI.BasePartialCachingControl> インスタンスを使用して動的に読み込むされ、キャッシュが有効なを使用して、上記の方法のいずれかをされている、 <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName> メソッドです。 A <xref:System.Web.UI.ControlCachePolicy> インスタンスが正常に操作できるとの間でのみ、 `Init` と `PreRender` コントロールのライフ サイクルの段階です。 変更した場合、 <xref:System.Web.UI.ControlCachePolicy> オブジェクトの後に、 `PreRender` フェーズでは、例外、スローされると ASP.NET コントロールを表示した後、すべての変更が行われるので実際に影響することのキャッシュ設定 \(でコントロールをキャッシュ、 `Render` ステージ\)。 最後に、ユーザー コントロールのインスタンス \(つまり、 <xref:System.Web.UI.ControlCachePolicy> オブジェクト\) をプログラムから管理できるは実際に表示されている場合だけです。  
  
   
  
## 例  
 次のコード例は、ユーザー コントロールを動的に読み込まれ、実行時にプログラムで操作する方法を示します。<xref:System.Web.UI.PartialCachingAttribute> という名前のユーザー コントロールに属性が適用される `SimpleControl`, でラップされたため、ユーザー コントロール、 <xref:System.Web.UI.PartialCachingControl> 実行時にコントロールできます。`SimpleControl` オブジェクトのキャッシュ設定をプログラムで指定できますを介してそれに関連する処理 <xref:System.Web.UI.ControlCachePolicy> 、利用可能なオブジェクトへの参照によって、 <xref:System.Web.UI.PartialCachingControl> それをラップするコントロール。 この例では、 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> プロパティがページの初期化と変更後の使用時に検査、 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> と <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> メソッドのいくつかの条件が満たされた場合です。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 次のコード例では、使用方法を示します、 `SimpleControl` Web フォーム ページからユーザー コントロールです。 この例を正常に実行するには、ユーザー コントロール ファイル \(.ascx\)、その分離コード ファイル \(.cs または .vb\) およびユーザー コントロール \(.aspx\) をホストする Web フォーム ページは同じディレクトリになっていることを確認します。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー コントロールの一部だけのキャッシュが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ユーザー コントロールの出力先をキャッシュする場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。  
  
 または  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> プロパティが初期化と、コントロールのレンダリング段階の外部で設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のインスタンス、 <see cref="T:System.Web.Caching.CacheDependency" /> キャッシュされたユーザー コントロールの出力に関連付けられているクラス。</summary>
        <value>コントロールに関連付けられた <see cref="T:System.Web.Caching.CacheDependency" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> プロパティ、 <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> のプロパティ、 <xref:System.Web.UI.BasePartialCachingControl> ユーザー コントロールをラップするコントロール。 ときに、 <xref:System.Web.Caching.CacheDependency> インスタンスが無効になって、ユーザー コントロールがキャッシュから削除します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。  
  
 または  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> プロパティが初期化と、コントロールのレンダリング段階の外部で設定します。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキャッシュされたアイテムが出力キャッシュを維持しようとする時間を設定します。</summary>
        <value>A <see cref="T:System.TimeSpan" /> ユーザー コントロールは、出力キャッシュ内に存続時間を表します。 既定値は、<see cref="F:System.TimeSpan.Zero" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して絶対有効期限ポリシーが設定されている場合、 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 、メソッド、 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> キャッシュ エントリの有効期限までの残りの時間数を返します。  
  
   
  
## 例  
 次のコード例は、ユーザー コントロールを動的に読み込まれ、実行時にプログラムで操作する方法を示します。<xref:System.Web.UI.PartialCachingAttribute> という名前のユーザー コントロールに属性が適用される `SimpleControl`, でラップされたことを意味する、 <xref:System.Web.UI.PartialCachingControl> 実行時にコントロールできます。`SimpleControl` オブジェクトのキャッシュ設定をプログラムで指定できますを介してそれに関連する処理 <xref:System.Web.UI.ControlCachePolicy> 、利用可能なオブジェクトへの参照によって、 <xref:System.Web.UI.PartialCachingControl> それをラップするコントロール。 この例では、 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> ページの初期化中にプロパティが検査され、いくつかの条件が満たされた場合、キャッシュの有効期限が変更されました。 この例に示されている例の一部である、 <xref:System.Web.UI.ControlCachePolicy> クラスです。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。  
  
 または  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> プロパティが初期化と、コントロールのレンダリング段階の外部で設定します。</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのインスタンスに関連付けられている出力キャッシュ プロバイダーの名前を設定します。</summary>
        <value>プロバイダーの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> プロパティを使用して、コントロールに関連付けられている現在の出力キャッシュ プロバイダーを指定することができます、 <xref:System.Web.UI.ControlCachePolicy> インスタンス。 このプロパティを前にのみ設定することができます、 <xref:System.Web.UI.Control.PreRender> コントロールの有効期間でイベントが発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">プロバイダー名が見つかりませんでした。</exception>
        <exception cref="T:System.Web.HttpException">設定しようとしましたが、 <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> プロパティ中または後に、 <see cref="E:System.Web.UI.Control.PreRender" /> イベントです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">A <see cref="T:System.DateTime" /> キャッシュ エントリが期限切れの後です。</param>
        <summary>指示、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> キャッシュ エントリを指定した日付と時刻に期限切れにユーザー コントロールをラップするコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> と <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> メソッド \(渡す `true`\) に指示する、 <xref:System.Web.UI.BasePartialCachingControl> キャッシュ ポリシーは絶対有効期限ポリシーではなくスライド式有効期限を使用するユーザー コントロールをラップするコントロール。 使用して、 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> メソッドおよび <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> メソッド \(渡す `false`\) 絶対有効期限ポリシーを指定します。  
  
   
  
## 例  
 次のコード例は、ユーザー コントロールを動的に読み込まれ、実行時にプログラムで操作する方法を示します。<xref:System.Web.UI.PartialCachingAttribute> という名前のユーザー コントロールに属性が適用される `SimpleControl`, でラップされたため、ユーザー コントロール、 <xref:System.Web.UI.PartialCachingControl> 実行時にコントロールできます。`SimpleControl` オブジェクトのキャッシュ設定をプログラムで指定できますを介してそれに関連する処理 <xref:System.Web.UI.ControlCachePolicy> 、利用可能なオブジェクトへの参照によって、 <xref:System.Web.UI.PartialCachingControl> それをラップするコントロール。 この例では、 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> プロパティがページの初期化と変更後の使用時に検査、 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> と <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> メソッドのいくつかの条件が満たされた場合です。 この例に示されている例の一部である、 <xref:System.Web.UI.ControlCachePolicy> クラスです。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">
          <see langword="true" /> 絶対有効期限は代わりに変化するキャッシュ有効期限を使用するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指示、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> スライディングまたは絶対有効期限を使用するユーザー コントロールのキャッシュ エントリを設定するユーザー コントロールをラップするコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> と <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> メソッド \(渡す `true`\) に指示する、 <xref:System.Web.UI.BasePartialCachingControl> キャッシュ ポリシーは絶対有効期限ポリシーではなくスライド式有効期限を使用するユーザー コントロールをラップするコントロール。 使用して、 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> メソッドおよび <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> メソッド \(渡す `false`\) 絶対有効期限ポリシーを指定します。  
  
   
  
## 例  
 次のコード例は、ユーザー コントロールを動的に読み込まれ、実行時にプログラムで操作する方法を示します。 という名前のユーザー コントロール `SimpleControl` で修飾された、 <xref:System.Web.UI.PartialCachingAttribute> 属性でラップされたことを意味する、 <xref:System.Web.UI.PartialCachingControl> 実行時にコントロールできます。`SimpleControl` オブジェクトのキャッシュ設定をプログラムで指定できますを介してそれに関連する処理 <xref:System.Web.UI.ControlCachePolicy> 、利用可能なオブジェクトへの参照によって、 <xref:System.Web.UI.PartialCachingControl> それをラップするコントロール。 この例ではキャッシュの設定はページの初期化中に確認して、いくつかの条件が満たされた場合に変更します。 この例に示されている例の一部である、 <xref:System.Web.UI.ControlCachePolicy> クラスです。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-vb[System.Web.UI.ControlCachePolicy\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">カスタム文字列のリスト。</param>
        <summary>出力キャッシュがユーザー コントロールを変更するために使用するカスタムの文字列のリストを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 \[ブラウザー\] として渡す場合、 `varyByCustom` パラメーター、ブラウザーの種類とメジャー バージョン番号により、ユーザー コントロールが変更されます。 オーバーライドする必要がありますをもう 1 つのカスタム文字列が入力した場合、 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> アプリケーションの Global.asax ファイル内のメソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー コントロールはキャッシュをサポートしているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザー コントロールは、キャッシュをサポートしている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー コントロールに関連付けられている場合に、キャッシュをサポートしている、 <xref:System.Web.UI.BasePartialCachingControl> ASP.NET パーサーによって、ディレクティブが解析されたかまたはユーザー コントロールがで修飾されたことを示すインスタンス、 <xref:System.Web.UI.PartialCachingAttribute> 属性です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキャッシュされた出力を変更するためのコントロール id の一覧を設定します。</summary>
        <value>ユーザー コントロールを変更するための文字列をセミコロンで区切ってのキャッシュを出力します。 これらの文字列を表す、 <see cref="P:System.Web.UI.Control.ID" /> ASP.NET サーバー コントロールのプロパティの値は、ユーザー コントロールで宣言されています。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。  
  
 または  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> プロパティが初期化と、コントロールのレンダリング段階の外部で設定します。</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の一覧 <see langword="GET" /> または <see langword="POST" /> でキャッシュされた出力を変化させるパラメーター名。</summary>
        <value>セミコロンで区切られた一連の出力キャッシュの変更に使用される文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、これらの文字列には、GET メソッドを使用して送信されたクエリ文字列値または POST メソッドを使用して送信されるパラメーターが対応しています。 ときに、 <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> プロパティが複数のパラメーターに設定されている、パラメーターを指定されたそれぞれの出力キャッシュには要求ドキュメントの別のバージョンが含まれます。 指定できる値は"none"、"\*"と有効なクエリ文字列、またはポスト パラメーターの名前。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ユーザー コントロールが関連付けられていない、 <see cref="T:System.Web.UI.BasePartialCachingControl" /> し、キャッシュ可能ではありません。</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>