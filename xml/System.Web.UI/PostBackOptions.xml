<Type Name="PostBackOptions" FullName="System.Web.UI.PostBackOptions">
  <TypeSignature Language="C#" Value="public sealed class PostBackOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PostBackOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PostBackOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定する方法は、クライアント側の JavaScript はポストバック イベントを開始する生成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions> クラスは、ポストバック イベントを開始するクライアント側スクリプトを生成するコントロールを使用できます。<xref:System.Web.UI.PostBackOptions> クラスもを通じてポストバック イベントが発生したコントロールへの参照を提供、 <xref:System.Web.UI.PostBackOptions.TargetControl%2A> プロパティです。 指定されたオプションに基づいて、ポストバック イベントが作成、 <xref:System.Web.UI.PostBackOptions> オブジェクトに渡される、 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A?displayProperty=fullName> メソッドです。  
  
 通常、サーバーへのポストバックは、\[送信\] ボタンまたはイメージ ボタンなどの要素によって開始されます。 ただし、出力のクライアント側の JavaScript でさまざまなコントロールがポストバック イベントを開始できます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.Button.OnClick%2A> のイベント、 <xref:System.Web.UI.WebControls.Button> クライアント側スクリプトの生成対象のコントロール、 <xref:System.Web.UI.WebControls.HyperLink> コントロールできるようになりますが、 <xref:System.Web.UI.WebControls.HyperLink> ポストバック イベントが発生するコントロール。<xref:System.Web.UI.PostBackOptions.ActionUrl%2A> のプロパティ、 `myPostBackOptions` オブジェクトが"Page2.aspx"に設定されている、ポストバックは"Page2.aspx"は、ここが指定されていないという名前の別のページに Web フォーム ページを送信します。 この例を使用するには、プロジェクトまたはディレクトリに"Page2.aspx"という名前の別の Web ページを追加する必要があります。  
  
 [!code-csharp[System.Web.UI.PostBackOptions\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PostBackOptions/CS/postbackoptions.aspx.cs#2)]
 [!code-vb[System.Web.UI.PostBackOptions\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PostBackOptions/VB/postbackoptions.aspx.vb#2)]  
  
 次のコード例は、上記のコード ビハインド ファイルの実行に使用できる Web ページです。  
  
 [!code-csharp[System.Web.UI.PostBackOptions\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PostBackOptions/CS/postbackoptions.aspx#1)]
 [!code-vb[System.Web.UI.PostBackOptions\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PostBackOptions/VB/postbackoptions.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PostBackOptions (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">
          <see cref="T:System.Web.UI.Control" /> ポストバック イベントを受け取る。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PostBackOptions" /> クラスに指定されたターゲット コントロールのデータです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PostBackOptions.TargetControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PostBackOptions (System.Web.UI.Control targetControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control targetControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetControl">
          <see cref="T:System.Web.UI.Control" /> ポストバック イベントを受け取る。</param>
        <param name="argument">省略可能なパラメーターは、ポストバック イベント中に渡されます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PostBackOptions" /> クラスに指定されたターゲットの制御と引数のデータです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PostBackOptions.TargetControl" />
        <altmember cref="P:System.Web.UI.PostBackOptions.Argument" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PostBackOptions (System.Web.UI.Control targetControl, string argument, string actionUrl, bool autoPostBack, bool requiresJavaScriptProtocol, bool trackFocus, bool clientSubmit, bool performValidation, string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control targetControl, string argument, string actionUrl, bool autoPostBack, bool requiresJavaScriptProtocol, bool trackFocus, bool clientSubmit, bool performValidation, string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PostBackOptions.#ctor(System.Web.UI.Control,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="actionUrl" Type="System.String" />
        <Parameter Name="autoPostBack" Type="System.Boolean" />
        <Parameter Name="requiresJavaScriptProtocol" Type="System.Boolean" />
        <Parameter Name="trackFocus" Type="System.Boolean" />
        <Parameter Name="clientSubmit" Type="System.Boolean" />
        <Parameter Name="performValidation" Type="System.Boolean" />
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetControl">
          <see cref="T:System.Web.UI.Control" /> ポストバック イベントを受け取る。</param>
        <param name="argument">省略可能なパラメーターは、ポストバック イベント中に渡されます。</param>
        <param name="actionUrl">ポストバックのターゲットです。</param>
        <param name="autoPostBack">
          <see langword="true" /> ユーザー アクションへの応答でサーバーにフォームを自動的にポストするにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="requiresJavaScriptProtocol">
          <see langword="true" /> 場合、 <see langword="javascript:" /> プレフィックスは必須です。 それ以外の場合、 <see langword="false" />です。</param>
        <param name="trackFocus">
          <see langword="true" /> 現在のページがスクロール位置と、対象のコントロールにフォーカスを返す場合は、ポストバック イベントを返す必要があります。それ以外の場合、 <see langword="false" />です。</param>
        <param name="clientSubmit">
          <see langword="true" /> クライアントのスクリプトによってポストバック イベントが発生する場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="performValidation">
          <see langword="true" /> ポストバック イベントが発生する前に、クライアント側の検証が必要な場合それ以外の場合、 <see langword="false" />です。</param>
        <param name="validationGroup">なるコントロールのグループ <see cref="T:System.Web.UI.PostBackOptions" /> が原因で、サーバーへのポストバック時に検証します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.PostBackOptions" /> インスタンスのプロパティの値を指定しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetControl" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ActionUrl">
      <MemberSignature Language="C#" Value="public string ActionUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.ActionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web フォーム ページのポストバックのターゲット URL を設定します。</summary>
        <value>Web フォーム ページのポストバックの URL です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.ActionUrl%2A> のプロパティ、 <xref:System.Web.UI.PostBackOptions> クラスの URL を指定する、 `action` Web フォーム ページの属性です。<xref:System.Web.UI.PostBackOptions.ActionUrl%2A> を Web フォーム ページを指定するプロパティを使用できるにデータがポストバック、クロスページ post 原因です。 ページ間ポスティングの詳細については、次を参照してください。 [Cross\-Page Posting in an ASP.NET Web Page](http://msdn.microsoft.com/ja-jp/fedf234e-b7c4-4644-a9e8-c1c0870b043b)します。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Web.UI.PostBackOptions.ActionUrl%2A> のプロパティ、 <xref:System.Web.UI.PostBackOptions> クロスページ ポストバックの場合、ユーザーが発生するオブジェクトが上にマウス ポインターを置いた、 <xref:System.Web.UI.WebControls.Label> コントロールです。  
  
 [!code-csharp[System.Web.UI.PostBackOptions.ActionUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.ActionUrl/CS/postbackoptions.actionurlcs.aspx#1)]
 [!code-vb[System.Web.UI.PostBackOptions.ActionUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.ActionUrl/VB/postbackoptions.actionurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public string Argument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Argument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ポストバック イベントで転送される省略可能な引数を設定します。</summary>
        <value>ポストバック イベントで転送される省略可能な引数です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.Argument%2A> プロパティは、ポストバック イベントで転送される省略可能な引数を指定します。 このプロパティを表すために使用、 `EVENTARGUMENT` \_ のパラメーター`doPostBack` クライアント側の JavaScript のメソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPostBack">
      <MemberSignature Language="C#" Value="public bool AutoPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.AutoPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはフォームが自動的にユーザーの操作への応答でサーバーにポストされるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> フォームが自動的にユーザー アクションへの応答にポストバックされる場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.UI.PostBackOptions.AutoPostBack%2A> プロパティを Web フォーム ページがドロップダウン リストから項目を選択するなどのユーザー アクションへの応答でサーバーに投稿して自動的を示します。 JavaScript `setTimeout` メソッドを使用する \_`doPostBack` ポストバックが発生する前にユーザーの操作が完了したことを確認する方法です。  
  
   
  
## 例  
 クライアント側のスクリプトは次のコード例で示すときに発生する、 <xref:System.Web.UI.PostBackOptions.AutoPostBack%2A> プロパティおよび <xref:System.Web.UI.PostBackOptions.RequiresJavaScriptProtocol%2A> プロパティに設定されて `true`します。  
  
```vb  
javascript:setTimeout('__doPostBack('__Page','')', 0)  
```  
  
```csharp  
javascript:setTimeout('__doPostBack('__Page','')', 0)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSubmit">
      <MemberSignature Language="C#" Value="public bool ClientSubmit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClientSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.ClientSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアント側スクリプトからポストバック イベントが発生するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> クライアント側スクリプトからポストバック イベントが発生した場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.ClientSubmit%2A> プロパティは、クライアント側スクリプトからポストバック イベントが発生するかどうかを示します。 設定した場合、 <xref:System.Web.UI.PostBackOptions.ClientSubmit%2A> プロパティを `false`, 、JavaScript は生成されません。 割り当てることができます `false` に、 <xref:System.Web.UI.PostBackOptions.ClientSubmit%2A> プロパティを呼び出そうとする場合、 `__doPostBack` メソッド自分でします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformValidation">
      <MemberSignature Language="C#" Value="public bool PerformValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PerformValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.PerformValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはポストバック イベントが発生する前にクライアント側の検証が必要であるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ポストバック イベントが発生する前に、クライアント側の検証が必要な場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.PerformValidation%2A> プロパティを使用して、ポストバック イベントを行う前にクライアント側の検証が必要かどうかを指定します。 ときの値、 <xref:System.Web.UI.PostBackOptions.PerformValidation%2A> にプロパティが設定されている `true`, 、使用することも、 <xref:System.Web.UI.PostBackOptions.ValidationGroup%2A> プロパティを確認する必要はポストバック イベントが発生する前に、検証グループの名前を指定します。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Web.UI.PostBackOptions.ValidationGroup%2A> と <xref:System.Web.UI.PostBackOptions.PerformValidation%2A> ことを確認する 2 つのプロパティ <xref:System.Web.UI.WebControls.TextBox> コントロールがポストバック イベントを生成する前に、それらに入力した情報があります。`NameTextBox` と `AgeTextBox` コントロールの一部である、 `PersonalInfoGroup` 検証グループが、 `StateTextBox` コントロールはありません。 そのため、ユーザーが内のデータを入力する、 `StateTextBox` ポストバック イベントを生成する前に制御します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.PostBackOptions.Validation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.Validation/CS/postbackoptions.validationcs.aspx#1)]
 [!code-vb[System.Web.UI.PostBackOptions.Validation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.Validation/VB/postbackoptions.validationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PostBackOptions.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RequiresJavaScriptProtocol">
      <MemberSignature Language="C#" Value="public bool RequiresJavaScriptProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresJavaScriptProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.RequiresJavaScriptProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see langword="javascript:" /> プレフィックスは、クライアント側\-スクリプトを生成します。</summary>
        <value>
          <see langword="true" /> 場合、 <see langword="javascript:" /> プレフィックスは、クライアント側\-スクリプトの生成された以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `javascript:` プレフィックスがなどに必要ないくつかの HTML 属性を持つ、 `href` の属性、 `<a>` URL から JavaScript のプロパティを識別するタグです。 属性と同様に `onclick` 必要はありません、 `javascript:` プレフィックス JavaScript で自動的に関連付けられているためです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control TargetControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control TargetControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.TargetControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポストバック イベントを受信する対象のコントロールを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.Control" /> ポストバック イベントを受け取るコントロールを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.TargetControl%2A> プロパティを返します。、 <xref:System.Web.UI.Control> ポストバック イベントを受け取るコントロールを表すオブジェクト。 このプロパティとして渡される、 `EVENTTARGET` パラメーターを `__doPostBack` クライアント側の JavaScript のメソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackFocus">
      <MemberSignature Language="C#" Value="public bool TrackFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.TrackFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはポストバック イベントが現在のスクロール位置をページを返し、現在のコントロールにフォーカスを返すかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 現在のページがスクロール位置と、対象のコントロールにフォーカスを返す場合は、ポストバック イベントを返す必要があります。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.PostBackOptions.TrackFocus%2A> プロパティは、ポストバック イベントが現在のスクロール位置をページを返すしにフォーカスを返すかどうかを示します。、 <xref:System.Web.UI.PostBackOptions.TargetControl%2A> ポストバック イベントが発生した後に制御します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PostBackOptions.TargetControl" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PostBackOptions.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのグループを設定する、 <see cref="T:System.Web.UI.PostBackOptions" /> オブジェクトは、サーバーへのポストバック時に検証を実行します。</summary>
        <value>なるコントロールのグループ、 <see cref="T:System.Web.UI.PostBackOptions" /> オブジェクトは、サーバーへのポストバック時に検証を実行します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.PostBackOptions.ValidationGroup%2A> プロパティにポストバック イベントが生成されたときに検証する検証のグループを指定します。 指定した検証グループで、検証コントロールのみが検証されます。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Web.UI.PostBackOptions.ValidationGroup%2A> と <xref:System.Web.UI.PostBackOptions.PerformValidation%2A> ことを確認する 2 つのプロパティ <xref:System.Web.UI.WebControls.TextBox> コントロールがポストバック イベントを生成する前に、それらに入力した情報があります。`NameTextBox` と `AgeTextBox` コントロールの一部である、 `PersonalInfoGroup` 検証グループが、 `StateTextBox` コントロールはありません。 そのため、ユーザーが内のデータを入力する、 `StateTextBox` ポストバック イベントを生成する前に制御します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.PostBackOptions.Validation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.Validation/CS/postbackoptions.validationcs.aspx#1)]
 [!code-vb[System.Web.UI.PostBackOptions.Validation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PostBackOptions.Validation/VB/postbackoptions.validationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PostBackOptions.PerformValidation" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.PostBackOptions" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>