<Type Name="ProfileServiceManager" FullName="System.Web.UI.ProfileServiceManager">
  <TypeSignature Language="C#" Value="public class ProfileServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ProfileServiceManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>事前に読み込まれたプロファイル プロパティのセットと、プロファイル サービスのカスタム実装の場所を構成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.ProfileServiceManager> クラスに対応して、 <xref:System.Web.UI.ScriptManager.ProfileService%2A> プロパティに追加することができますが、 <xref:System.Web.UI.ScriptManager> または <xref:System.Web.UI.ScriptManagerProxy> コントロールです。  
  
 使用する <xref:System.Web.UI.ProfileServiceManager> ページが表示され、クライアント スクリプトを使用できますにプリロードするプロファイルのプロパティのセットを指定します。 また、組み込みプロファイルの ASP.NET AJAX の機能によって提供される Web サービスを使用する代わりに、特定のパスの読み込みまたはスクリプトからのプロファイルのプロパティの保存に使用する Web サービスの代替実装を提供するのにこのクラスを使用できます。  
  
 アプリケーションでプロファイル サービスを使用するには、構成ファイルで有効にする必要があります。 組み込みプロファイル Web サービスを使用してプロパティをプリロードする必要はありません\] ページで、プロファイル サービス マネージャーを明示的に宣言する必要はありません。  
  
 宣言によって、一連のプリロードされたプロパティ、または Web サービスのカスタム プロファイルを指定するには、 `<ProfileService>` 内の要素、 `<asp:ScriptManager>` 要素\] ページで、次の例で示すようにします。  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB" Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 プロファイル サービスのプロパティを事前に読み込むか、カスタム プロファイル Web サービスを使用するプログラムを使用しても構成できます。  
  
 次の例では、カスタム プロファイル Web サービスで実装する必要がある基本クラス構造を示します。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingProfileServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ProfileServiceManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ProfileServiceManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperties">
      <MemberSignature Language="C#" Value="public string[] LoadProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] LoadProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.LoadProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定がクライアント スクリプトを利用できるプロファイルのプロパティを格納している配列。</summary>
        <value>プリロードされたとするクライアント スクリプトを使用できるプロファイルのプロパティの名前を格納する文字列配列。 既定値は空の配列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> Web アプリケーションで組み込みのプロファイル サービスは、指定されたプロファイル プロパティのそれぞれに対して現在のユーザーのプロファイル データを取得し、プロファイル プロパティの名前に対応するには、少なくとも 1 つの文字列が含まれています。 プロファイル プロパティの値をシリアル化され、を通じてクライアント スクリプトを利用できるよう、 [Sys.Services ProfileService properties Field](http://msdn.microsoft.com/ja-jp/ebce3c40-7017-482b-94df-91f7448fda05) コレクションです。  
  
> [!NOTE]
>  このプロパティを宣言によって設定するには、プロパティ名のコンマ区切りのリストを使用します。 グループ化されたプロパティの値の構文を使用して *GroupName*.*PropertyName*します。  
  
 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> はデータがプリロードされたプロファイルを指定しない空の配列。  
  
 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> でプロパティを指定することができます、 <xref:System.Web.UI.ScriptManager> コントロールまたは関連付けられている <xref:System.Web.UI.ScriptManagerProxy> コントロールです。<xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> の両方で設定されている、 <xref:System.Web.UI.ScriptManager> コントロールと 1 つまたは複数の <xref:System.Web.UI.ScriptManagerProxy> 指定されたすべてのプロパティをマージすることで、コントロールのプロパティのセットを決定します。 重複するプロパティは無視されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> プロパティには、現在のアプリケーションのプロファイル スキーマに含まれていないプロパティの名前が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプロファイル Web サービスのカスタム実装のパスを設定します。</summary>
        <value>プロファイル Web サービスのカスタム実装のパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 相対仮想パス、絶対仮想パス、完全修飾パスは許可されます。  
  
 場合、 <xref:System.Web.UI.ProfileServiceManager.Path%2A> プロパティが設定されていない、戻り値は <xref:System.String.Empty>です。 この場合は、ASP.NET の AJAX 機能し、プロファイルを使用する、組み込み次の内部の既定のパスに対応する Web サービス: ~\/ScriptServices\_ProfileService.asmx します。 設定した場合に、同じ現象が発生 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 空の値であること、または `null`です。  
  
 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 指定できる、 <xref:System.Web.UI.ScriptManager> コントロールまたは関連付けられている <xref:System.Web.UI.ScriptManagerProxy> コントロールです。<xref:System.Web.UI.ProfileServiceManager.Path%2A> で設定されますが、 <xref:System.Web.UI.ScriptManagerProxy> レベルでは次の注意事項が当てはまります。  
  
-   コントロールの階層構造で複数のプロキシがある場合 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 各プロキシ インスタンスに設定する必要はありません。  
  
-   場合 <xref:System.Web.UI.ProfileServiceManager.Path%2A> が明示的に設定すると、プロキシ インスタンスで、値、同じでなければなりませんこのプロパティが明示的に設定された他のすべてのプロキシです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">1 つ以上の一意のパスは、コントロールの階層構造で設定しました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>