<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>コントロールとコントロールの省略可能なイベントと、非同期ポストバック トリガーとして定義する、 <see cref="T:System.Web.UI.UpdatePanel" /> コントロールを更新します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.AsyncPostBackTrigger> コントロールに対してトリガーを有効にするコントロール、 <xref:System.Web.UI.UpdatePanel> コントロールです。 更新パネルのトリガーであるコントロールは、非同期ポストバック後に、パネルのコンテンツの更新を発生させます。 非同期トリガー コントロールを定義するは、次のシナリオで役立ちます。  
  
-   コントロール パネルの外部ことができます。  
  
-   コントロール パネル内の場合、 <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> プロパティは `false`です。  
  
-   親パネルを更新するために入れ子になったパネル内にあるコントロール。  
  
 コントロールを <xref:System.Web.UI.AsyncPostBackTrigger> するトリガーは、更新パネルの名前付けコンテナーである必要があります制御の参照。 その他の名前付けコンテナー内のコントロールに基づくトリガーはサポートされていません。  
  
 追加 <xref:System.Web.UI.AsyncPostBackTrigger> 制御を使用するか、 **\[UpdatePanelTrigger コレクション エディター** ダイアログ ボックスで、デザイナーで作成することで、 `Triggers` 要素で、宣言によって、 <xref:System.Web.UI.UpdatePanel> コントロールです。<xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> プロパティが必要でも、 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> プロパティは省略可能です。 場合、 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> プロパティが指定されていない、 <xref:System.ComponentModel.DefaultEventAttribute> コントロールの属性を使用して、既定のイベントを確認します。 たとえば、既定のイベントを <xref:System.Web.UI.WebControls.Button> コントロールは、 <xref:System.Web.UI.WebControls.Button.Click> イベントです。<xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> プロパティは区別されません。  
  
 名前付けコンテナーは、トリガーとして参照することもできます。 その場合は、ポストバックを発生させる、コンテナー内のすべての子コントロールと見なされますのトリガー、 <xref:System.Web.UI.UpdatePanel> コントロールです。  
  
 プログラムで追加する <xref:System.Web.UI.AsyncPostBackTrigger> コントロールがサポートされていません。 プログラムを使用して登録するポストバック コントロールを使用、 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> のメソッド、 <xref:System.Web.UI.ScriptManager> コントロールです。 まず、 <xref:System.Web.UI.UpdatePanel.Update%2A> のメソッド、 <xref:System.Web.UI.UpdatePanel> ときに、コントロールがポストバックを制御します。  
  
 両方を使用してコントロールを定義する場合 <xref:System.Web.UI.PostBackTrigger> と <xref:System.Web.UI.AsyncPostBackTrigger>, 、例外がスローされます。  
  
   
  
## 例  
 次の例では、追加する方法、 <xref:System.Web.UI.AsyncPostBackTrigger> 宣言によって制御されます。 A <xref:System.Web.UI.WebControls.Button> 外にあるコントロール、 <xref:System.Web.UI.UpdatePanel> コントロール ユーザー内を検索する検索語句を入力できるように、 `Products` Northwind データベースのテーブルです。 A <xref:System.Web.UI.WebControls.GridView> 内のコントロール、 <xref:System.Web.UI.UpdatePanel> コントロールは、結果を表示します。<xref:System.Web.UI.WebControls.Button> コントロールが非同期トリガーとして指定されている、 <xref:System.Web.UI.UpdatePanel> コントロールです。  
  
 [!code-csharp[System.Web.UI.AsyncPostBackTrigger\#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-vb[System.Web.UI.AsyncPostBackTrigger\#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加 <xref:System.Web.UI.AsyncPostBackTrigger> 制御を使用するか、 **\[UpdatePanelTrigger コレクション エディター** ダイアログ ボックスで、デザイナーで作成することで、 `Triggers` 要素で、宣言によって、 <xref:System.Web.UI.UpdatePanel> コントロールです。  
  
 追加する <xref:System.Web.UI.AsyncPostBackTrigger> コントロール プログラムではサポートされていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の非同期ポストバックをトリガーするコントロールの名前、 <see cref="T:System.Web.UI.UpdatePanel" /> コントロールです。</summary>
        <value>サーバー コントロールの id。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を開始するポストバック イベント、 <see cref="T:System.Web.UI.UpdatePanel" /> コントロールが更新されます。</summary>
        <value>イベントの名前です。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> プロパティはオプションです。 このオプションを指定しない場合、 <xref:System.ComponentModel.DefaultEventAttribute> コントロールの属性を使用して、既定のイベントを確認します。 次の表は、いくつかの一般的な ASP.NET 2.0 コントロールの既定のイベントを示します。  
  
|コントロール|既定のイベント|  
|------------|-------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トリガーが呼び出されるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> トリガーが発生した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールの開発者がオーバーライドできる、 <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> トリガーが発生したかどうかを判断するためのカスタム ロジックを指定するメソッドです。 カスタムのトリガーを表示する、 `Triggers` の要素、 <xref:System.Web.UI.UpdatePanel> コントロール、ページまたは Web.config ファイルの要素に、ディレクティブを追加することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期化、 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> を制御し、トリガーで指定されているイベントが存在し、有効かどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">いいえ <see cref="T:System.Web.UI.ScriptManager" /> コントロールがページに記載されています。  
  
 \- または \-  
  
 指定されているイベント、 <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> で指定されているコントロールのプロパティが見つからない、 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティです。  
  
 \- または \-  
  
 指定されているイベント、 <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> で指定されているコントロールのプロパティを <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> プロパティが標準的なイベント ハンドラーのシグネチャと一致しません。</exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントの送信元です。</param>
        <param name="e">イベントのデータ。</param>
        <summary>ポストバックおよびの更新をトリガーするイベントを発生させる、 <see cref="T:System.Web.UI.UpdatePanel" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の文字列表現を返します <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールです。</summary>
        <returns>現在を表す文字列 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>