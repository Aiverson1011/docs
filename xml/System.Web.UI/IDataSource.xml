<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロールのバインド先である抽象データ ソースを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET には、Web サーバー コントロールの一貫した方法でデータをバインドできるようにするコントロールのデータ バインディング アーキテクチャがサポートされています。 データにバインドする web サーバー コントロールは、データ バインド コントロールとバインドのデータ ソース コントロールは呼び出されることを促進するクラスと呼ばれます。 データ ソース コントロールは、任意のデータ ソースを表すことができます。 リレーショナル データベース、ファイル、ストリーム、ビジネス オブジェクト、およびなどです。 データ ソースは、ソースまたは基になるデータの形式に関係なく、データ バインド コントロールに一貫した方法でデータ表示を制御します。  
  
 実装する、 <xref:System.Web.UI.IDataSource> インターフェイスの独自のカスタム ASP.NET データ ソースの管理を実装する場合。  
  
 実装するクラス、 <xref:System.Web.UI.IDataSource> インターフェイスは、データ ソース コントロールです。<xref:System.Web.UI.IDataSource> インターフェイスは、ASP.NET のすべてのデータ ソースの基盤を制御し、その 2 つの方法で基本的なデータ バインディング アーキテクチャ概念の 1 つを定義します。、 <xref:System.Web.UI.IDataSource.GetView%2A> メソッドおよび <xref:System.Web.UI.IDataSource.GetViewNames%2A> メソッドです。 この概念は、すべてのデータ ソース コントロールが、データの 1 つまたは複数の名前付きビューをサポートします。 データ ソース ビュー オブジェクトがに似ていますが、 <xref:System.Data.DataView> の抽象化、 <xref:System.Data> 名前空間: データ バインディング可能、並べ替え、フィルター処理、およびビューを定義するその他のデータ操作用のデータのビューをカスタマイズします。 根本的に、データ ソース コントロールで行わ以上のデータのビューを取得します。  
  
 データ ソース コントロールには、1 つまたは複数の関連するデータ ソース ビュー オブジェクトことができます。 一部のデータ ソース コントロールなどのリレーショナル データベースを表すものも含め <xref:System.Web.UI.WebControls.SqlDataSource> と <xref:System.Web.UI.WebControls.AccessDataSource>, 、1 つのビューをサポートします。 その他のデータ ソース コントロールなどの階層的なデータ ソース コントロールを含む <xref:System.Web.UI.WebControls.SiteMapDataSource>, 、多くのビューをサポートします。 データ ソース ビューでは、データ ソースおよびサポートしている操作の機能を定義します。  
  
 要約すると、データ ソース コントロールの実装、 <xref:System.Web.UI.IDataSource> インターフェイス、いずれかをサポートまたは複数が表し、それらが表すデータ ソースからデータの取得をサポートして常に、データに対するビューの名前付きです。 データ ソース コントロールが常にときなど、必要に応じてデータを取得する `DataBind` データ バインド コントロールで呼び出されます。  
  
   
  
## 例  
 次のコード例では、クラスがによって定義されたメソッドを実装する方法を示しています、 <xref:System.Web.UI.IDataSource> データのデータ バインド コントロールを提供するインターフェイスです。 この例では、データ ソース コントロールは、コンマ区切り値ファイルでは、上のデータ ソースとして機能し、コンマ区切りファイルのデータを表示する任意のデータ バインド コントロールで使用できます。 このコード例が示されている例の一部は、 <xref:System.Web.UI.DataSourceControl> クラスです。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールがデータ バインド コントロールに影響を与えるいくつかの方法で変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> イベントは、データ バインド コントロールとそのデータ間のデータ バインドに影響を与えるいくつかの方法で、データ バインド コントロールまたは基になるデータのプロパティが変更された時期です。 ファイルの名プロパティには場合、に、イベントを発生するなど、 <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> ファイル ベースのデータ ソース コントロールでプロパティが変更されました。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。</param>
        <summary>データ ソース コントロールに関連付けられている名前付きのデータ ソース ビューを取得します。</summary>
        <returns>返す名前付き <see cref="T:System.Web.UI.DataSourceView" /> に関連付けられている、 <see cref="T:System.Web.UI.IDataSource" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ ソース コントロール クラスには、基になるデータには 1 つまたは複数のビューをサポートできます。 これらのビューがのインスタンスによって表される、 <xref:System.Web.UI.DataSourceView> クラスです。 データ ソース ビューでは、データ ソース コントロールの機能を定義し、基になるデータ ストアからデータを取得し、並べ替え、挿入、削除、および更新などの操作を実行するために必要なすべての作業を実行します。  
  
 データ ソース コントロールを実装するクラス、 <xref:System.Web.UI.IDataSource> インターフェイスを実装、 <xref:System.Web.UI.IDataSource.GetView%2A> 厳密に型を返すメソッドがクラスに関連付けられているオブジェクトを表示します。  
  
   
  
## 例  
 次のコード例は、データ ソース コントロール クラスを実装する方法を示しています、 <xref:System.Web.UI.IDataSource> インターフェイスを実装して、 <xref:System.Web.UI.IDataSource.GetView%2A> の厳密に型指定のインスタンスを返すメソッド、 <xref:System.Web.UI.DataSourceView> クラスです。 データ ソース コントロールは、1 つのビューをサポートするためにメソッド名を無視し、既定のビュー名が指定されたビューを返します。 このコード例が示されている例の一部は、 <xref:System.Web.UI.DataSourceControl> クラスです。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられているビュー オブジェクトの一覧を表す名のコレクションを取得、 <see cref="T:System.Web.UI.IDataSource" /> インターフェイスです。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> に関連付けられているビューの名前を格納している、 <see cref="T:System.Web.UI.IDataSource" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ ソース コントロール クラスには、その基になるデータの 1 つまたは複数の名前付きビューをサポートできます。<xref:System.Web.UI.IDataSource.GetViewNames%2A> メソッドは、データ ソース コントロールのインスタンスに関連付けられているビュー名のコレクションを返します。 呼び出し元はビュー名のコレクションを反復処理して、個々 の取得 <xref:System.Web.UI.DataSourceView> オブジェクト、 <xref:System.Web.UI.IDataSource.GetView%2A> メソッドです。  
  
 データ ソース コントロールを実装するクラス、 <xref:System.Web.UI.IDataSource> インターフェイスを実装、 <xref:System.Web.UI.IDataSource.GetViewNames%2A> を表すすべてのデータ ソース名のコレクションを返すメソッドは、データ ソース コントロール クラスに関連付けられているオブジェクトを表示します。  
  
   
  
## 例  
 次のコード例は、データ ソース コントロールを実装する方法を示しています、 <xref:System.Web.UI.IDataSource> インターフェイスを実装して、 <xref:System.Web.UI.IDataSource.GetViewNames%2A> を返すメソッド、 <xref:System.Collections.ICollection> 名のコレクション。 データ ソースは、1 つのビューをサポートするため、メソッドは、ビューの既定の名前を使用して 1 つの要素のコレクションを返します。 このコード例が示されている例の一部は、 <xref:System.Web.UI.DataSourceControl> クラスです。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource\_1\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource\_1\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>