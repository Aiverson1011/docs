<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>役割サービスのカスタム実装の場所を構成します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.RoleServiceManager> クラスに対応して、 <xref:System.Web.UI.ScriptManager.RoleService%2A> のプロパティ、 <xref:System.Web.UI.ScriptManager> または <xref:System.Web.UI.ScriptManagerProxy> コントロールです。  
  
 AJAX 対応のアプリケーションは Web サービスの役割を使用して、非同期 Web サービス呼び出しを使用して、現在の認証されたユーザーのロール情報を取得します。 使用することができます <xref:System.Web.UI.RoleServiceManager> ロール、組み込みの Web サービスを使用する代わりに Web サービスの代替実装のパスを指定します。  
  
 アプリケーションで、役割サービスを使用するには、構成ファイルで有効にし、ページで宣言します。 組み込みのロール Web サービスを使用する場合を有効にする必要があるが、サービス マネージャー\] ページで、ロールが明示的に宣言する必要はありません。  
  
 カスタムのロール サービスを作成するには、2 つのメソッドを持つ Web サービスを実装する必要があります: `GetRolesForCurrentUser` と `IsCurrentUserInRole`です。 これらのメソッドには、組み込みのロール Web サービスの対応するメソッドと同じシグネチャが必要です。  
  
 次の例では、カスタムのロール Web サービス クラスで実装する必要がある基本クラス構造を示します。  
  
  
  
 カスタム ロールの Web サービスを使用することができますサービスを追加する、宣言的マークアップで記述することによって、 `RoleService` 内の要素、 <xref:System.Web.UI.ScriptManager> の次の例に示すように制御します。  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 プログラムによって設定することができます、 <xref:System.Web.UI.RoleServiceManager.Path%2A> プロパティをカスタムのロール Web サービスを使用します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.RoleServiceManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在ログオンしているユーザーのロールの一覧を取得する必要があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、ロールの一覧を取得する必要があります。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> にプロパティが設定されている `true`, 、によってロールの一覧を取得、 <xref:System.Web.UI.RoleServiceManager> クラスを使用して、 <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> メソッドです。 一覧は、ページ マークアップにシリアル化されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> は `true`, 、現在の認証されたユーザーが所属するすべてのロールはブラウザーに送信します。 ユーザーがロール情報を表示できる可能性があるために、セキュリティ上の問題できます。  
  
 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> でプロパティを指定することができます、 <xref:System.Web.UI.ScriptManager> コントロールまたは関連付けられている <xref:System.Web.UI.ScriptManagerProxy> コントロールです。 場合 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> に設定されている `true` プロキシ インスタンスのロールの一覧取得され、ページに追加します。 場合 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> は `false`, 、ロールは、ページのマークアップに追加されません。 その場合は、ブラウザーでメモリにロール情報を格納する、メソッドを使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または役割サービスのパスを設定します。</summary>
        <value>カスタム ロールの Web サービスのパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.RoleServiceManager.Path%2A> プロパティが設定されていない、戻り値は <xref:System.String.Empty?displayProperty=fullName>です。 その場合は、ASP.NET が次の内部の既定のパスに対応する Web サービスの組み込みの認証を使用します。 ~\/RolesService.svc します。 設定した場合に、同じ現象が発生 <xref:System.Web.UI.RoleServiceManager.Path%2A> 、空の文字列または `null`です。  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> 指定できる、 <xref:System.Web.UI.ScriptManager> コントロールまたは関連付けられている <xref:System.Web.UI.ScriptManagerProxy> コントロールです。<xref:System.Web.UI.RoleServiceManager.Path%2A> で設定されますが、 <xref:System.Web.UI.ScriptManagerProxy> レベルでは、次の条件に該当します。  
  
-   コントロールの階層構造で複数のプロキシ オブジェクトがある場合 <xref:System.Web.UI.RoleServiceManager.Path%2A> プロキシ インスタンスごとに設定する必要はありません。  
  
-   場合 <xref:System.Web.UI.RoleServiceManager.Path%2A> が明示的に設定すると、プロキシ オブジェクトの場合、値がありますの他のすべてのプロキシ オブジェクトに対してこのプロパティを設定することです。 コントロールの階層構造で別のプロキシ オブジェクトのさまざまなパスを設定した場合、 <xref:System.ArgumentException> 例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">1 つ以上の一意のパスは、コントロールの階層構造で設定しました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>