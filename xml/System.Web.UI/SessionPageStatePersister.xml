<Type Name="SessionPageStatePersister" FullName="System.Web.UI.SessionPageStatePersister">
  <TypeSignature Language="C#" Value="public class SessionPageStatePersister : System.Web.UI.PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionPageStatePersister extends System.Web.UI.PageStatePersister" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.SessionPageStatePersister" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.PageStatePersister</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web サーバー上の ASP.NET ページのビュー ステートを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET ページを格納できる <xref:System.Web.UI.Page> 状態情報を本質的にステートレスの HTTP 要求と応答を処理して、任意の Web ページを提供するために必要なのです。 この状態は「の状態を表示します」と呼ばれる  
  
 既定の ASP.NET の永続化メカニズムを使用してクライアント上のビュー ステートを格納する、 <xref:System.Web.UI.HiddenFieldPageStatePersister> クラスです。 ビュー全般に問題なく機能し、はどの Web サーバーが重要でないために、大規模な Web ファームのシナリオで重要なの状態と各 HTTP 要求と応答にデータを格納するサービスの要求: ページの状態が正確にページのレンダリングにサーバーの現在のコンテキストで使用できます。  
  
 ページがクライアント側のリソースが限られているか、非表示フィールドの要素をサポートしていないマークアップ言語を使用する小型のデバイスに提供される場所では、サーバー上のビュー ステートを格納することが必要です。 ASP.NET デバイス\] ページの複数のアダプターのオーバーライド、 `GetStatePersister` を返すメソッドを <xref:System.Web.UI.SessionPageStatePersister> クライアントに関連付けられたセッション オブジェクト内のサーバー上のページの状態を格納するオブジェクト。  
  
   
  
## 例  
 次のコード例では、記述する方法を示しています、 <xref:System.Web.UI.Adapters.PageAdapter> クラスのインスタンスを返す、 <xref:System.Web.UI.SessionPageStatePersister> 、既定ではなくクラス <xref:System.Web.UI.HiddenFieldPageStatePersister> クラスをサーバー側のセッション オブジェクトにビュー ステートを保存します。  
  
 [!code-csharp[System.Web.UI.SessionPageStatePersister\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/CS/mypageadapter2.cs#1)]
 [!code-vb[System.Web.UI.SessionPageStatePersister\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/VB/mypageadapter2.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PageStatePersister" />
    <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionPageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <see cref="T:System.Web.UI.Page" /> のビュー状態の永続化メカニズムを作成します。</param>
        <summary>
          <see cref="T:System.Web.UI.SessionPageStatePersister" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、記述する方法を示しています、 <xref:System.Web.UI.Adapters.PageAdapter> クラスのインスタンスを返す、 <xref:System.Web.UI.SessionPageStatePersister> クラスをサーバー側のセッション オブジェクトにビュー ステートを保存します。  
  
 [!code-csharp[System.Web.UI.SessionPageStatePersister\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/CS/mypageadapter2.cs#1)]
 [!code-vb[System.Web.UI.SessionPageStatePersister\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/VB/mypageadapter2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Web.SessionState.HttpSessionState" /> が null \(<see langword="Nothing" /> Visual basic\)</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.Load" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>逆シリアル化し、サーバー側のセッション オブジェクトから永続化された状態を読み込むときに、 <see cref="T:System.Web.UI.Page" /> オブジェクトがそのコントロールの階層構造を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.SessionPageStatePersister> クラスが実装する、 <xref:System.Web.UI.SessionPageStatePersister.Load%2A> からページの状態を読み込むためのメソッド、 <xref:System.Web.SessionState.HttpSessionState> クライアントに関連付けられているオブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="M:System.Web.UI.SessionPageStatePersister.Load" /> メソッドが正常に逆シリアル化されない Web サーバーへの要求に含まれている状態です。</exception>
        <altmember cref="M:System.Web.UI.SessionPageStatePersister.Save" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.Save" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>含まれているすべてのオブジェクトの状態をシリアル化、 <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> または <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> プロパティ、状態をセッション オブジェクトに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.SessionPageStatePersister> クラスが実装する、 <xref:System.Web.UI.HiddenFieldPageStatePersister.Save%2A> でページの状態を永続化するメソッド、 <xref:System.Web.SessionState.HttpSessionState> クライアントに関連付けられているオブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.SessionPageStatePersister.Load" />
      </Docs>
    </Member>
  </Members>
</Type>