<Type Name="CssStyleCollection" FullName="System.Web.UI.CssStyleCollection">
  <TypeSignature Language="C#" Value="public sealed class CssStyleCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CssStyleCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.CssStyleCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定された HTML サーバー コントロールの HTML のカスケード スタイル シート \(CSS\) インライン スタイル属性が含まれています。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 含む Web フォーム ページが解析される際、特定の HTML サーバー コントロールの宣言されている任意のスタイルはコレクションに追加します。 自動的に解析し、ディクショナリ パターン API を通じて CSS プロパティを公開します。 任意の CSS プロパティをサーバー コントロールを操作する、 <xref:System.Web.UI.HtmlControls.HtmlControl.Style%2A> プロパティです。 単にインデックス付きコレクションで、CSS プロパティのキーと値を使用します。  
  
   
  
## 例  
 次のコード例を反復処理、 <xref:System.Web.UI.CssStyleCollection> のオブジェクト、 <xref:System.Web.UI.HtmlControls.HtmlInputText> サーバー コントロール。<xref:System.Web.UI.CssStyleCollection.Keys%2A> プロパティを使用して、サーバー コントロールにスタイル属性が公表されているかを判断し、バインド、属性の名前し値を <xref:System.Web.UI.WebControls.DataList> Web フォーム ページ上のオブジェクト。  
  
 [!code-csharp[System.Web.UI.CssStyleCollection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-vb[System.Web.UI.CssStyleCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">コレクションに追加する新しいスタイル属性の名前。</param>
        <param name="value">コレクションに追加するスタイル属性の値。</param>
        <summary>によってスタイルの項目を追加、 <see cref="T:System.Web.UI.CssStyleCollection" /> の指定した名前\/値ペアを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加するスタイルの項目が存在する場合、 <xref:System.Web.UI.HtmlTextWriterStyle> 列挙型のオーバー ロードを使用して、 <xref:System.Web.UI.CssStyleCollection.Add%2A> を受け取るメソッド、 <xref:System.Web.UI.HtmlTextWriterStyle> パラメーターは厳密に型指定するためです。 つまりの get アクセサーを持つ項目を表示するときに追加される項目を含めるがあること、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、両方のオーバー ロードを使用して、 <xref:System.Web.UI.CssStyleCollection.Add%2A> するカスケード スタイル シートを追加するメソッドを <xref:System.Web.UI.HtmlControls.HtmlSelect>, 、<xref:System.Web.UI.HtmlControls.HtmlInputSubmit>, と <xref:System.Web.UI.WebControls.Label> をプログラムで制御します。  
  
 [!code-csharp[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Add(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値をコレクションに追加します。</param>
        <param name="value">コレクションに追加するスタイル属性の値。</param>
        <summary>によってスタイルの項目を追加、 <see cref="T:System.Web.UI.CssStyleCollection" /> 指定してコントロールのコレクション <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値と対応する値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加するスタイルの項目が存在する場合、 <xref:System.Web.UI.HtmlTextWriterStyle> 列挙型、これを使用して <xref:System.Web.UI.CssStyleCollection.Add%2A> のオーバー ロード、 <xref:System.Web.UI.CssStyleCollection.Add%2A> を受け取らないオーバー ロードではなく、メソッド、 <xref:System.Web.UI.HtmlTextWriterStyle> パラメーター。  
  
   
  
## 例  
 次のコード例では、両方のオーバー ロードを使用して、 <xref:System.Web.UI.CssStyleCollection.Add%2A> するカスケード スタイル シートを追加するメソッドを <xref:System.Web.UI.HtmlControls.HtmlSelect>, 、<xref:System.Web.UI.HtmlControls.HtmlInputSubmit>, と <xref:System.Web.UI.WebControls.Label> をプログラムで制御します。  
  
 [!code-csharp[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべてのスタイル項目を削除、 <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.CssStyleCollection.Clear%2A> からプログラムを使用してすべての CSS を削除するメソッドにスタイルを設定、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[Classic CssStyleCollection.Clear Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.Clear Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の項目の数を取得、 <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトです。</summary>
        <value>内の項目数、 <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例を作成し、 `CountStyleFunc` の現在の値を取得する関数、 <xref:System.Web.UI.CssStyleCollection.Count%2A> プロパティを <xref:System.Web.UI.HtmlControls.HtmlInputText> サーバー コントロールし、ASP.NET ページに表示されます。  
  
 [!code-csharp[CssStyleCollection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CssStyleCollection/CS/cssstylecollection_4.cs.aspx#1)]
 [!code-vb[CssStyleCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CssStyleCollection/VB/cssstylecollection_4.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">CSS 属性のインデックス。</param>
        <summary>取得または HTML サーバー コントロールの指定した CSS 値を設定します。</summary>
        <value>
          <paramref name="key" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティが設定されているスタイルの値を返す、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。  
  
 [!code-csharp[Classic CssStyleCollection.this Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.this Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[System.Web.UI.HtmlTextWriterStyle key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(valuetype System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Item(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>指定した設定を取得または <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> HTML サーバー コントロールの値。</summary>
        <value>値 <paramref name="key" />。 そうしないと、 <see langword="null" />, 場合は、 <paramref name="key" /> サーバー コントロールのコレクションに含まれない。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プログラムに追加される項目のスタイルを設定、 <xref:System.Web.UI.CssStyleCollection> とコントロールのコレクション、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティまたは <xref:System.Web.UI.CssStyleCollection.Add%2A> メソッドを <xref:System.Web.UI.HtmlTextWriterStyle> と共に返される項目のスタイルの数の入力としての列挙値が含まれている、 <xref:System.Web.UI.CssStyleCollection.Count%2A> と共に返される、文字列リテラルに含まれているプロパティとは、 <xref:System.Web.UI.CssStyleCollection.Value%2A> プロパティです。 これらの属性は厳密型指定されました。 サーバー コントロールに追加するカスケード スタイル シート属性が存在する場合、 <xref:System.Web.UI.HtmlTextWriterStyle> 列挙型では、これらの厳密に型指定メソッドを使用します。 追加する属性が存在しない場合、 <xref:System.Web.UI.HtmlTextWriterStyle> 列挙体を使用して、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティまたは <xref:System.Web.UI.CssStyleCollection.Add%2A> メソッドです。  
  
 アクセスしているとき、 <xref:System.Web.UI.HtmlTextWriterStyle> 列挙値、 <xref:System.Web.UI.CssStyleCollection> が追加されていないコントロールが追加されている CSS 属性にアクセスしたり、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティまたは <xref:System.Web.UI.CssStyleCollection.Add%2A> メソッドは、返します `null` を使用して、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.CssStyleCollection.Item%2A> プロパティが設定されているスタイルの値を返す、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。  
  
 [!code-csharp[Classic CssStyleCollection.this Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.this Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのスタイルのキーのコレクションを取得、 <see cref="T:System.Web.UI.CssStyleCollection" /> 特定の HTML サーバー コントロールのオブジェクト。</summary>
        <value>含まれているキーのコレクション、 <see cref="T:System.Web.UI.CssStyleCollection" /> 指定した HTML サーバー コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 反復処理する次のコード例には、 <xref:System.Web.UI.CssStyleCollection> のコレクション、 <xref:System.Web.UI.HtmlControls.HtmlInputText> サーバー コントロール。<xref:System.Web.UI.CssStyleCollection.Keys%2A> プロパティを使用して、サーバー コントロールにスタイル属性が宣言されているかを決定し、バインド属性の名前と値を <xref:System.Web.UI.WebControls.DataList> Web フォーム ページ上のオブジェクト。  
  
 [!code-csharp[System.Web.UI.CssStyleCollection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/CS/css1.cs.aspx#1)]
 [!code-vb[System.Web.UI.CssStyleCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CssStyleCollection/VB/css1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">削除する項目のスタイルの文字列リテラルです。</param>
        <summary>スタイル アイテムを削除、 <see cref="T:System.Web.UI.CssStyleCollection" /> の指定したスタイルのキーを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.CssStyleCollection.Remove%2A> からスタイルの CSS をプログラムで削除する方法、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[Classic CssStyleCollection.Remove Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.Remove Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.CssStyleCollection.Remove(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値を削除します。</param>
        <summary>スタイル アイテムを削除、 <see cref="T:System.Web.UI.CssStyleCollection" /> 指定してコントロールのコレクション <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Style" />
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Add" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.CssStyleCollection.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、 <see langword="style" /> HTML サーバー コントロールの属性です。</summary>
        <value>スタイルの文字列リテラルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.CssStyleCollection.Value%2A> プロパティのスタイル属性の一覧を <xref:System.Web.UI.HtmlControls.HtmlSelect> 、ユーザーが \[送信\] ボタンをクリックしたときを制御します。  
  
 [!code-csharp[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CssStyleCollection.Add Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CssStyleCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.CssStyleCollection.Item" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>によってスタイルの項目を追加、 <see cref="T:System.Web.UI.CssStyleCollection" /> コントロールのです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得または HTML サーバー コントロールの CSS 値を設定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スタイル アイテムを削除、 <see cref="T:System.Web.UI.CssStyleCollection" /> コントロールのです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>