<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlClient.SqlCommand" /> に対するパラメーター、および必要に応じてその <see cref="T:System.Data.DataSet" /> 列へのマッピングを表します。 このクラスは継承できません。 パラメーターの詳細については、次を参照してください。 [Configuring Parameters and Parameter Data Types](http://msdn.microsoft.com/ja-jp/537d8a2c-d40b-4000-83eb-bc1fcc93f707)します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター名の大文字と小文字は区別されません。  
  
> [!NOTE]
>  名前のない、序数に基づくとも呼ばれます。 パラメーターが、SQL Server の .NET Framework データ プロバイダーによってサポートされていません。  
  
 詳細については、その他のサンプル コードと共にパラメーターを使用する方法を示すを参照してください [Commands and Parameters](http://msdn.microsoft.com/ja-jp/b623f810-d871-49a5-b0f5-078cc3c34db6)します。  
  
   
  
## 例  
 次の例の複数のインスタンスを作成する <xref:System.Data.SqlClient.SqlParameter> を通じて、 <xref:System.Data.SqlClient.SqlParameterCollection> 内のコレクション、 <xref:System.Data.SqlClient.SqlDataAdapter>です。 データ ソースからデータを選択しにデータを格納するこれらのパラメーターが使用される、 <xref:System.Data.DataSet>です。 この例では、 <xref:System.Data.DataSet> と <xref:System.Data.SqlClient.SqlDataAdapter> 適切なスキーマ、コマンド、および接続を使用して既に作成されています。 詳細およびパラメーターの使用に関するその他の例は、「 [Retrieving and Modifying Data in ADO.NET](http://msdn.microsoft.com/ja-jp/722e7f87-3691-46c6-87e8-7d159722d675) と [Configuring Parameters and Parameter Data Types](http://msdn.microsoft.com/ja-jp/537d8a2c-d40b-4000-83eb-bc1fcc93f707)です。  
  
 [!code-csharp[Classic WebData SqlParameter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
        <summary>指定されたパラメーター名およびデータ型を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The data type and, if appropriate, **legacyBold tag is not supported!!!!**  
 and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the **parameterReference tag is not supported!!!!**  
 parameter.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> のパラメーター名および値を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When you specify an <xref:System.Object> in the **parameterReference tag is not supported!!!!**  
 parameter, the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> is inferred from the Microsoft .NET Framework type of the <xref:System.Object>.  
  
 Use caution when you use this overload of the <xref:System.Data.SqlClient.SqlParameter> constructor to specify integer parameter values. Because this overload takes a **parameterReference tag is not supported!!!!**  
 of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C\# example demonstrates.  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 If you do not perform this conversion, the compiler assumes that you are trying to call the **languageKeyword tag is not supported!!!!**  
 \(**parameterReference tag is not supported!!!!**  
, **parameterReference tag is not supported!!!!**  
\) constructor overload.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、およびサイズを使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **legacyBold tag is not supported!!!!**  
 is inferred from the value of the **parameterReference tag is not supported!!!!**  
 parameter if it is not explicitly set in the **parameterReference tag is not supported!!!!**  
 parameter.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> パラメーターの指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="sourceColumn">
          <see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 \(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />\) の名前。</param>
        <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、サイズ、およびソース列名を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **legacyBold tag is not supported!!!!**  
 is inferred from the value of the **parameterReference tag is not supported!!!!**  
 parameter if it is not explicitly set in the **parameterReference tag is not supported!!!!**  
 parameter.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> パラメーターの指定された値が、無効なバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> の値の 1 つ。</param>
        <param name="isNullable">フィールドの値を NULL に設定できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="precision">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn">
          <see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 \(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />\) の名前。</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>パラメーター名、パラメーターの型、パラメーターのサイズ、<see cref="T:System.Data.ParameterDirection" />、パラメーターの有効桁数、パラメーターの小数点以下桁数、ソース列、使用する <see cref="T:System.Data.DataRowVersion" />、およびパラメーターの値を使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **サイズ** と <xref:System.Data.SqlClient.SqlParameter.Precision%2A> の値から推論される、 `dbType` パラメーターで明示的に設定されていない場合、 `size` と `precision` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">マップするパラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 値の 1 つ。</param>
        <param name="precision">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn">
          <see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> に対する呼び出しでこの <see cref="T:System.Data.SqlClient.SqlParameter" /> が使用されている場合の、ソース列 \(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />\) の名前。</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
        <param name="sourceColumnNullMapping">ソース列で NULL 値が許容される場合は <see langword="true" />。NULL 値が許容されない場合は <see langword="false" />。</param>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlParameter" /> の値である <see cref="T:System.Object" />。</param>
        <param name="xmlSchemaCollectionDatabase">この XML インスタンスのスキーマ コレクションがあるデータベースの名前。</param>
        <param name="xmlSchemaCollectionOwningSchema">この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマ。</param>
        <param name="xmlSchemaCollectionName">このパラメーターのスキーマ コレクションの名前。</param>
        <summary>以下のものを使用する <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。つまり、パラメーター名、パラメーターの型、パラメーターの長さ、方向、精度、位取り、ソース列の名前、<see cref="T:System.Data.DataRowVersion" /> の値の 1 つ、ソース列マッピングのブール値、<see langword="SqlParameter" /> の値、この XML インスタンスのスキーマ コレクションがあるデータベースの名前、この XML インスタンスのスキーマ コレクションがある所有リレーショナル スキーマ、このパラメーターのスキーマ コレクションの名前です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> と <xref:System.Data.SqlClient.SqlParameter.Precision%2A> の値から推論される、 `dbType` パラメーターで明示的に設定されていない場合、 `size` と `precision` パラメーター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このパラメーターについての文字列比較を実行する方法を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを取得または設定します。</summary>
        <value>このパラメーターの文字列比較を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 値のいずれか。 既定値は、<see langword="NVarChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> to a supporting <xref:System.Data.SqlDbType>.  
  
 For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member. For more information, see [DataAdapter Parameters](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12).  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターのいずれであるかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定値は、<see langword="Input" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.SqlClient.SqlCommand> does not return a value, the <xref:System.Data.SqlClient.SqlParameter> contains a null value.  
  
 `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> cannot be accessed until you close the <xref:System.Data.SqlClient.SqlDataReader>.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [Commands and Parameters \(ADO.NET\)](http://msdn.microsoft.com/ja-jp/b623f810-d871-49a5-b0f5-078cc3c34db6)  
  
 [DataAdapter Parameters \(ADO.NET\)](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12)  
  
 [Using the .NET Framework Data Provider for SQL Server](http://msdn.microsoft.com/ja-jp/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用したときに、パラメーターの暗号化を強制 [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)します。 パラメーターの暗号化が不要であることが SQL Server からドライバーに通知された場合、このパラメーターを使用するクエリは失敗します。 クライアントに対して不正な暗号化メタデータを提供する危険な SQL Server が関係したセキュリティ攻撃を受けると、データ漏洩が引き起こされる可能性がありますが、このプロパティは、そのような攻撃に対する付加的な保護を提供します。</summary>
        <value>パラメーターに列の強制暗号化が設定されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが null 値を受け取るかどうかを示す値を取得または設定します。<see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> は、パラメーターの値の検証には使用されないため、コマンドを実行するときに null 値の送信や受信を妨げません。</summary>
        <value>null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Null values are handled using the <xref:System.DBNull> class.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties\#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の地域の規約や言語を決定するロケール識別子を取得または設定します。</summary>
        <value>パラメーターに関連付けられているロケールの識別子を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The locale identifies conventions and language for a particular geographical region. The codepage used to encode a specific string \(the character set\) is based on the locale used by that string or the environment that produced it. This property sets \(for input parameters\) or gets \(for output parameters\) the locale to be attached to a string when exchanging data with the server. This property is typically used together with the <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> property.  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティへのオフセットを取得または設定します。</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> へのオフセット。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **languageKeyword tag is not supported!!!!**  
 property is used for client\-side chunking of binary and string data. For example, in order to insert 10MB of text into a column on a server, a user might execute 10 parameterized inserts of 1MB chunks, shifting the value of **languageKeyword tag is not supported!!!!**  
 on each iteration by 1MB.  
  
 `Offset` specifies the number of bytes for binary types, and the number of characters for strings. The count for strings does not include the terminating character.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties\#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> の名前を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> is specified in the form @paramname. You must set <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> before executing a <xref:System.Data.SqlClient.SqlCommand> that relies on parameters.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すために使用する最大桁数を取得または設定します。</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すために使用する最大桁数。 既定値は 0 です。 これは、データ プロバイダーによって <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> の有効桁数が設定されることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlParameter.Precision%2A> property is used by parameters that have a <xref:System.Data.SqlDbType> of **languageKeyword tag is not supported!!!!**  
.  
  
 You do not need to specify values for the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> properties for input parameters, as they can be inferred from the parameter value. **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.  
  
> [!NOTE]
>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the **languageKeyword tag is not supported!!!!**  
>  namespace prior to assigning a value to the parameter's **languageKeyword tag is not supported!!!!**  
>  property.  
  
> [!NOTE]
>  Microsoft .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> or <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> parameter values. This can cause truncated data being inserted at the data source. If you are using .NET Framework version 1.0, validate the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value. When you use .NET Framework version 1.1 or a later version, an exception is thrown if a <xref:System.Decimal> parameter value is set with an invalid <xref:System.Data.SqlClient.SqlParameter.Precision%2A>. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value. Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter. Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が解決される、小数点以下の桁数を取得または設定します。</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> が解決される、小数点以下の桁数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlParameter.Scale%2A> property is used by parameters that have a <xref:System.Data.SqlDbType> of **languageKeyword tag is not supported!!!!**  
.  
  
> [!WARNING]
>  Data may be truncated if the <xref:System.Data.SqlClient.SqlParameter.Scale%2A> property is not explicitly specified and the data on the server does not fit in scale 0 \(the default\).  
  
 You do not need to specify values for the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> properties for input parameters, as they can be inferred from the parameter value. **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.  
  
> [!NOTE]
>  Use of this property to coerce data passed to the database is not supported. To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the **languageKeyword tag is not supported!!!!**  
>  namespace prior to assigning a value to the parameter's **languageKeyword tag is not supported!!!!**  
>  property.  
  
> [!NOTE]
>  .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> or <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> parameter values. This can cause truncated data to be inserted at the data source. If you are using .NET Framework version 1.0, validate the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter> of <xref:System.Decimal> values before setting the parameter value. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties\#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列内のデータの最大サイズをバイト単位で取得または設定します。</summary>
        <value>列内のデータの最大サイズ \(バイト単位\)。 既定値はパラメーター値から推論されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Return values are not affected by this property; return parameters from stored procedures are always fixed\-size integers.  
  
 For output parameters with a variable length type \(nvarchar, for example\), the size of the parameter defines the size of the buffer holding the output parameter. The output parameter can be truncated to a size specified with <xref:System.Data.SqlClient.SqlParameter.Size%2A>. For character types, the size specified with <xref:System.Data.SqlClient.SqlParameter.Size%2A> is in characters.  
  
 The <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is used for binary and string types. For parameters of type **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
 means length in Unicode characters. For parameters of type **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
 is ignored.  
  
 For nonstring data types and ANSI string data, the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property refers to the number of bytes. For Unicode string data, <xref:System.Data.SqlClient.SqlParameter.Size%2A> refers to the number of characters. The count for strings does not include the terminating character.  
  
 For variable\-length data types, <xref:System.Data.SqlClient.SqlParameter.Size%2A> describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, <xref:System.Data.SqlClient.SqlParameter.Size%2A> could be used to limit the amount of data sent to the server to the first one hundred characters.  
  
 If not explicitly set, the size is inferred from the actual size of the specified parameter value.  
  
 If the fractional part of the parameter value is greater than the size, then the value will be truncated to match the size.  
  
 For fixed length data types, the value of <xref:System.Data.SqlClient.SqlParameter.Size%2A> is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.  
  
 For information about streaming, see [SqlClient Streaming Support](http://msdn.microsoft.com/ja-jp/c449365b-470b-4edb-9d61-8353149f5531).  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties\#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataSet" /> にマップされ、<see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を読み込んだり返したりするために使用されるソース列の名前を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> is set to anything other than an empty string, the value of the parameter is retrieved from the column with the <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> name. If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to **languageKeyword tag is not supported!!!!**  
, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to **languageKeyword tag is not supported!!!!**  
, the value is taken from the data source. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> of **languageKeyword tag is not supported!!!!**  
 is a combination of both.  
  
 For more information about how to use the <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> property, see [Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12) and [Updating the Database with a DataAdapter and the DataSet](http://msdn.microsoft.com/ja-jp/d1bd9a8c-0e29-40e3-bda8-d89176b72fb1).  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties\#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース列が null 許容かどうかを示す値を設定または取得します。 これにより、<see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> で null 許容列の Update ステートメントを正しく生成できます。</summary>
        <value>ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> is used by the <xref:System.Data.SqlClient.SqlCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> is limited to developers inheriting from <xref:System.Data.SqlClient.SqlCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.SqlClient.SqlCommandBuilder> is generating its Update statement, it examines the <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> for each parameter. If the property is `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> generates a WHERE clauses like the following \(in this query expression, "FieldName" represents the name of the field\):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 If <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> for the field is false, <xref:System.Data.SqlClient.SqlCommandBuilder> generates the following WHERE clause:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 In addition, @IsNull\_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRowVersion" /> を読み込むときに使用する <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 値のいずれか。 既定値は、<see langword="Current" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用、 `SqlDataAdapter.UpdateCommand` の更新時にパラメーター値に、元のまたは現在の値を使用するかどうかを決定します。 これにより、プライマリ キーを更新できます。 バージョンにこのプロパティを設定、 <xref:System.Data.DataRow> で使用される、 `DataRow.Item` プロパティ、またはのいずれか、 `DataRow.GetChildRows` のメソッド、 <xref:System.Data.DataRow> オブジェクトです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[DataWorks SqlParam.Properties\#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties\#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 値のいずれか。 既定値は、<see langword="NVarChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> to a supporting <xref:System.Data.SqlDbType>.  
  
 For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member. For more information, see [Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12).  
  
 For information about streaming, see [SqlClient Streaming Support](http://msdn.microsoft.com/ja-jp/c449365b-470b-4edb-9d61-8353149f5531).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を SQL 型として取得または設定します。</summary>
        <value>SQL 型を使用する、パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.  
  
 This property can be set to null or <xref:System.DBNull.Value>. Use <xref:System.DBNull.Value> to send a NULL value as the value of the parameter. Use null or do not set <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A> to use the default value for the parameter.  
  
 If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  
  
 Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the <xref:System.Data.SqlClient.SqlParameter.Value%2A>.  
  
 The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by **languageKeyword tag is not supported!!!!**  
.  
  
 Use the <xref:System.Data.SqlClient.SqlParameter.Value%2A> property to return parameter values as common language runtime \(CLR\) types.  
  
 For information about streaming, see [SqlClient Streaming Support](http://msdn.microsoft.com/ja-jp/c449365b-470b-4edb-9d61-8353149f5531).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」を参照してください。</summary>
        <returns>このインスタンスのコピーである新しい <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlParameter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を表す文字列を取得します。</summary>
        <returns>
          <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を表す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル値パラメーターの型名を取得または設定します。</summary>
        <value>指定されたテーブル値パラメーターの型名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターとしてユーザー定義型を表す <see langword="string" /> を取得または設定します。</summary>
        <value>データベース内のユーザー定義型の完全修飾名を表す <see langword="string" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サンプルのデモの <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, を参照してください [Retrieving UDT Data](http://msdn.microsoft.com/library/ms131080.aspx)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を取得または設定します。</summary>
        <value>パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.  
  
 This property can be set to null or <xref:System.DBNull.Value>. Use <xref:System.DBNull.Value> to send a NULL value as the value of the parameter. Use null or do not set <xref:System.Data.SqlClient.SqlParameter.Value%2A> to use the default value for the parameter.  
  
 An exception is thrown if non\-Unicode XML data is passed as a string.  
  
 If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  
  
 Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the Value.  
  
 The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by **languageKeyword tag is not supported!!!!**  
.  
  
 For information about streaming, see [SqlClient Streaming Support](http://msdn.microsoft.com/ja-jp/c449365b-470b-4edb-9d61-8353149f5531).  
  
   
  
## 例  
 The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  
  
 [!code-csharp[DataWorks SqlParam.Properties\#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties\#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションがあるデータベースの名前を取得します。</summary>
        <value>この XML インスタンスのスキーマ コレクションがあるデータベースの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This value is null \(**languageKeyword tag is not supported!!!!**  
 in Microsoft Visual Basic\) if the collection is defined within the current database. It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションの名前を取得します。</summary>
        <value>この XML インスタンスのスキーマ コレクションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This value is null \(**languageKeyword tag is not supported!!!!**  
 in Microsoft Visual Basic\) if there is no associated schema collection. If the value is null, then <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XML インスタンスのスキーマ コレクションがある、所有リレーショナル スキーマ。</summary>
        <value>この XML インスタンスの所有リレーショナル スキーマ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This value is null \(**languageKeyword tag is not supported!!!!**  
 in Microsoft Visual Basic\) if the collection is defined within the current database. It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> are also null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>