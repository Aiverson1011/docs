<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ コマンドのセットと、<see cref="T:System.Data.DataSet" /> の格納および SQL Server データベースの更新に使用されるデータベース接続を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDataAdapter>, 、間の仲介役として機能する <xref:System.Data.DataSet> と SQL Server を取得して、データを保存します。<xref:System.Data.SqlClient.SqlDataAdapter> マッピングすることによってこのブリッジは、 <xref:System.Data.Common.DbDataAdapter.Fill%2A>, 、内のデータを変更する、 <xref:System.Data.DataSet> データ ソースのデータと一致して <xref:System.Data.Common.DbDataAdapter.Update%2A>, のデータと一致するデータ ソースのデータを変更する、 <xref:System.Data.DataSet>, 、データ ソースに対して適切な TRANSACT\-SQL ステートメントを使用します。 更新プログラムは、行ごとに実行されます。 すべての挿入、変更、および削除された行に対して、 <xref:System.Data.Common.DbDataAdapter.Update%2A> メソッドで行われた変更の種類を判断する \(`Insert`, 、`Update`, 、または `Delete`\)。 変更の種類に応じて、 `Insert`, 、`Update`, 、または `Delete` コマンド テンプレートを変更した行のデータ ソースに反映されるまで実行します。 ときに、 <xref:System.Data.SqlClient.SqlDataAdapter> 塗りつぶします、 <xref:System.Data.DataSet>, 、まだ存在しない場合、必要なテーブルと返されたデータの列を作成しています。 ただし、主キー情報は含まれません暗黙的に作成されたスキーマにしない限り、 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> にプロパティが設定されている <xref:System.Data.MissingSchemaAction.AddWithKey>します。 こともできます、 <xref:System.Data.SqlClient.SqlDataAdapter> のスキーマを作成、 <xref:System.Data.DataSet>, を使用してデータを入力する前に、主キーの情報を含む `FillSchema`します。 詳細については、「[Adding Existing Constraints to a DataSet](http://msdn.microsoft.com/ja-jp/307d2809-208b-4cf8-b6a9-5d16f15fc16c)」を参照してください。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter> 組み合わせて使用 <xref:System.Data.SqlClient.SqlConnection> と <xref:System.Data.SqlClient.SqlCommand> SQL Server データベースに接続するときにパフォーマンスを向上させる。  
  
> [!NOTE]
>  SQL Server のストアド プロシージャで、`DataAdapter` を使用してデータを編集または削除する場合、ストアド プロシージャの定義に SET NOCOUNT ON は使用しないでください。 処理された行数がゼロとして返され、`DataAdapter` によって同時実行の競合として解釈されてしまいます。 この場合、<xref:System.Data.DBConcurrencyException> がスローされます。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter> も含まれています、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, 、および <xref:System.Data.Common.DataAdapter.TableMappings%2A> を読み込み、データの更新を容易にするプロパティです。  
  
 インスタンス <xref:System.Data.SqlClient.SqlDataAdapter> が作成、読み取り\/書き込みプロパティの初期値に設定されます。 これらの値の一覧は、次を参照してください。、 <xref:System.Data.SqlClient.SqlDataAdapter> コンス トラクターです。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, 、および <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> パラメーター メカニズムによって変更されたすべての行から個々 の値で自動的に埋められた一般的なテンプレートです。  
  
 \[データ ソースに反映されるすべての列に対して <xref:System.Data.Common.DbDataAdapter.Update%2A>, には、パラメーターを追加する必要があります、 `InsertCommand`, 、`UpdateCommand`, 、または `DeleteCommand`です。<xref:System.Data.Common.DbParameter.SourceColumn%2A> のプロパティ、 <xref:System.Data.Common.DbParameter> オブジェクトは、列の名前に設定する必要があります。 この設定は、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。  
  
> [!NOTE]
>  <xref:System.InvalidOperationException> 場合に発生するが、 <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドが呼び出され、テーブルにはで、クライアント コンピューターが利用できないユーザー定義の型が含まれています。 詳細については、次を参照してください。 [Creating and Using User\-Defined Types](http://go.microsoft.com/fwlink/?LinkId=139492) SQL Server オンライン ブック。  
  
   
  
## 例  
 次の例では、 <xref:System.Data.SqlClient.SqlCommand>, 、<xref:System.Data.SqlClient.SqlDataAdapter>, と <xref:System.Data.SqlClient.SqlConnection> をデータベースからレコードを選択し、設定、 <xref:System.Data.DataSet> 、選択した行にします。 塗りつぶされた、 <xref:System.Data.DataSet> 返されます。 これを実現する、メソッドは渡される初期化された <xref:System.Data.DataSet>, 、接続文字列の場合、およびクエリ文字列では、TRANSACT\-SQL SELECT ステートメントです。  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス <xref:System.Data.SqlClient.SqlDataAdapter> 作成されると、次読み取り\/書き込みプロパティは、次の初期値に設定されます。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">A <see cref="T:System.Data.SqlClient.SqlCommand" /> TRANSACT\-SQL SELECT ステートメントまたはストアド プロシージャととして設定されている、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> のプロパティ、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 、指定したクラス <see cref="T:System.Data.SqlClient.SqlCommand" /> として、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Data.SqlClient.SqlDataAdapter> コンス トラクターのセット、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> プロパティで指定された値を `selectCommand` パラメーター。  
  
 インスタンス <xref:System.Data.SqlClient.SqlDataAdapter> 作成されると、次読み取り\/書き込みプロパティは、次の初期値に設定されます。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> \(またはその他のコマンド プロパティのいずれか\) が割り当てられている以前に作成した <xref:System.Data.SqlClient.SqlCommand>, 、 <xref:System.Data.SqlClient.SqlCommand> 複製されません。<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">A <see cref="T:System.String" /> TRANSACT\-SQL SELECT ステートメントまたはストアド プロシージャで使用するのには、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> のプロパティ、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" />です。</param>
        <param name="selectConnection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> 接続を表します。 接続文字列で <see langword="Integrated Security = true" /> を使用しない場合、<see cref="T:System.Data.SqlClient.SqlCredential" /> を使用することによって、接続文字列内でユーザー ID とパスワードをテキストとして指定する場合よりも安全にユーザー ID とパスワードを渡すことができます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラス、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> と <see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Data.SqlClient.SqlDataAdapter> を開いたり閉じたり、 <xref:System.Data.SqlClient.SqlConnection> が開いていない場合。 これ呼び出す必要のあるアプリケーションで役に立ちます、 <xref:System.Data.Common.DbDataAdapter.Fill%2A> メソッドの 2 つまたは複数 <xref:System.Data.SqlClient.SqlDataAdapter> オブジェクトです。 場合、 <xref:System.Data.SqlClient.SqlConnection> は既に開かれている、明示的に呼び出す必要があります **を閉じる** または **Dispose** を閉じます。  
  
 インスタンス <xref:System.Data.SqlClient.SqlDataAdapter> 作成されると、次読み取り\/書き込みプロパティは、次の初期値に設定されます。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">A <see cref="T:System.String" /> TRANSACT\-SQL SELECT ステートメントまたはストアド プロシージャで使用するのには、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> のプロパティ、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" />です。</param>
        <param name="selectConnectionString">接続文字列。 接続文字列を使用しない場合 <see langword="Integrated Security = true" />, 、使用することができます <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> と <see cref="T:System.Data.SqlClient.SqlCredential" /> ユーザー ID とパスワードをするよりも安全に渡す接続文字列内のテキストとしてユーザー ID とパスワードを指定することです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラス、 <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> と接続文字列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このオーバー ロード、 <xref:System.Data.SqlClient.SqlDataAdapter> コンス トラクターを使用して、 `selectCommandText` を設定するパラメーター、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> プロパティです。<xref:System.Data.SqlClient.SqlDataAdapter> が作成されで作成された接続を維持、 `selectConnectionString` パラメーター。  
  
 インスタンス <xref:System.Data.SqlClient.SqlDataAdapter> 作成されると、次読み取り\/書き込みプロパティは、次の初期値に設定されます。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または TRANSACT\-SQL ステートメントまたはデータ セットからレコードを削除するストアド プロシージャを設定します。</summary>
        <value>A <see cref="T:System.Data.SqlClient.SqlCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> に対応するデータベース レコードを削除するには、内の行を削除、 <see cref="T:System.Data.DataSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> を設定する場合は、自動的に生成できる、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> プロパティと使用、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 次に、追加のコマンドを設定しないはによって生成される、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[Automatically Generated Commands](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> が割り当てられている以前に作成した <xref:System.Data.SqlClient.SqlCommand>, 、 <xref:System.Data.SqlClient.SqlCommand> 複製されません。<xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 \[データ ソースに反映されるすべての列に対して <xref:System.Data.Common.DbDataAdapter.Update%2A>, には、パラメーターを追加する必要があります、 `InsertCommand`, 、`UpdateCommand`, 、または `DeleteCommand`です。`SourceColumn` 列の名前に、パラメーターのプロパティを設定する必要があります。 これは、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、設定、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, 、および <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.SqlClient.SqlConnection> オブジェクトです。  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, int32 recordsAffected, class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または TRANSACT\-SQL ステートメントまたはデータ ソースに新しいレコードを挿入するストアド プロシージャを設定します。</summary>
        <value>A <see cref="T:System.Data.SqlClient.SqlCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> で新しい行に対応するデータベースにレコードを挿入、 <see cref="T:System.Data.DataSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> を設定する場合は、自動的に生成できる、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> プロパティと使用、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 次に、追加のコマンドを設定しないはによって生成される、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[Automatically Generated Commands](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> が割り当てられている以前に作成した <xref:System.Data.SqlClient.SqlCommand>, 、 <xref:System.Data.SqlClient.SqlCommand> 複製されません。<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 これらの行に追加できるこのコマンドの実行には、行が返された場合、 <xref:System.Data.DataSet> の設定に応じて、 **UpdatedRowSource** のプロパティ、 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 \[データ ソースに反映されるすべての列に対して <xref:System.Data.Common.DbDataAdapter.Update%2A>, には、パラメーターを追加する必要があります `InsertCommand`, 、`UpdateCommand`, 、または `DeleteCommand`です。`SourceColumn` 列の名前に、パラメーターのプロパティを設定する必要があります。 これは、パラメーターの値が、手動で設定されていないが、現在処理されている行の特定の列から取得したことを示します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、設定、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, 、および <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.SqlClient.SqlConnection> オブジェクトです。  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>中に発生した <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ ソースに対してコマンドが実行された後です。 更新の試行が行われたイベントが発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する場合 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 、更新されたデータ行ごとに発生する 2 つのイベントがあります。 実行の順序は次のとおりです。  
  
1.  値、 <xref:System.Data.DataRow> パラメーターの値に移動します。  
  
2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。  
  
3.  コマンドを実行します。  
  
4.  コマンドに設定されている場合は、 `FirstReturnedRecord`, 、最初に返された結果に格納、 <xref:System.Data.DataRow>です。  
  
5.  出力パラメーターがある場合に置かれて、 <xref:System.Data.DataRow>です。  
  
6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。  
  
   
  
## 例  
 次の例では、両方を使用する方法、 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> と <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> イベントです。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> イベントには、この出力が返されます。  
  
 イベント引数: \(command\=System.Data.SqlClient.SqlCommand commandType 2 のステータスを \= \= 0\)  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> イベントには、この出力が返されます。  
  
 イベント引数: \(command\=System.Data.SqlClient.SqlCommand commandType \= 2 recordsAffected \= 1 row\=System.Data.DataRow\[37\] ステータス \= 0\)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>中に発生した <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 、データ ソースに対してコマンドが実行される前にします。 更新の試行が行われたイベントが発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する場合 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 、更新されたデータ行ごとに発生する 2 つのイベントがあります。 実行の順序は次のとおりです。  
  
1.  値、 <xref:System.Data.DataRow> パラメーターの値に移動します。  
  
2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。  
  
3.  コマンドを実行します。  
  
4.  コマンドに設定されている場合は、 `FirstReturnedRecord`, 、最初に返された結果に格納、 <xref:System.Data.DataRow>です。  
  
5.  出力パラメーターがある場合に置かれて、 <xref:System.Data.DataRow>です。  
  
6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。  
  
   
  
## 例  
 次の例では、両方を使用する方法、 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> と <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> イベントです。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> イベントには、この出力が返されます。  
  
 イベント引数: \(command\=System.Data.SqlClient.SqlCommand commandType 2 のステータスを \= \= 0\)  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> イベントには、この出力が返されます。  
  
 イベント引数: \(command\=System.Data.SqlClient.SqlCommand commandType \= 2 recordsAffected \= 1 row\=System.Data.DataRow\[37\] ステータス \= 0\)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または TRANSACT\-SQL ステートメントまたはストアド プロシージャをデータ ソース内のレコードを選択するために使用を設定します。</summary>
        <value>A <see cref="T:System.Data.SqlClient.SqlCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> に配置するデータベースからレコードを選択、 <see cref="T:System.Data.DataSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> が割り当てられている以前に作成した <xref:System.Data.SqlClient.SqlCommand>, 、 <xref:System.Data.SqlClient.SqlCommand> 複製されません。<xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 場合、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> 、どの行を返さないことにテーブルが追加されない、 <xref:System.Data.DataSet>, 、例外が発生しなかったとします。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、設定、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, 、および <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.SqlClient.SqlConnection> オブジェクトです。  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />」を参照してください。</summary>
        <value>データ セットで削除される行のデータ ソース内のレコードを削除するために、<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 中で使用される <see cref="T:System.Data.IDbCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.InsertCommand" />」をご覧ください。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" />中に使用される<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />データ セットの新しい行のデータ ソースのレコードを挿入します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.SelectCommand" />」を参照してください。</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> 中に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> データ セットに配置するデータ ソースからレコードを選択します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />」をご覧ください。</summary>
        <value>
          <see cref="T:System.Data.IdbCommand" />中に使用される<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />データ セット内で変更された行のデータ ソース内のレコードを更新します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」を参照してください。</summary>
        <returns>現在のインスタンスのコピーである新しいオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.SqlClient.SqlDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または各ラウンドト リップでサーバーに処理される行の数を設定します。</summary>
        <value>バッチごとに処理する行の数。  
  
 <list type="table">  
<listheader>  
<term> 値は、します。  
  
 </term>  
<description> 効果  
  
 </description>  
</listheader>  
<item>  
<term> 0  
  
 </term>  
<description> バッチのサイズに制限はありません.  
  
 </description>  
</item>  
<item>  
<term> 1  
  
 </term>  
<description> バッチ更新を無効にします。  
  
 </description>  
</item>  
<item>  
<term> &gt;1  
  
 </term>  
<description> 変更のバッチを使用する送信 <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> 一度に操作します。  
  
 </description>  
</item>  
</list>  
  
 すべてのコマンドに関連付けられている 1 以外の値には、これを設定するとき、 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> を持つ必要はその **UpdatedRowSource** プロパティに設定 <see langword="None" /> または <see langword="OutputParameters" />です。 それ以外の場合、例外がスローされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得またはまたはバッチ処理サポートを無効にする値を設定し、バッチ内で実行できるコマンドの数を指定します。  
  
 使用して、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> の変更に伴ってデータ ソースを更新するプロパティ、 <xref:System.Data.DataSet>です。 サーバーへのラウンドト リップ数を減らすことによってアプリケーションのパフォーマンスが向上します。  
  
 サイズの大きいバッチを実行すると、パフォーマンスが低下する可能性があります。 そのため、アプリケーションを実装する前に、バッチの最適なサイズ設定をテストする必要があります。  
  
 <xref:System.ArgumentOutOfRangeException> 値が数値に設定されている場合にスローされるゼロより小さい。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定により、TRANSACT\-SQL ステートメントまたはストアド プロシージャをデータ ソースのレコードを更新するために使用します。</summary>
        <value>A <see cref="T:System.Data.SqlClient.SqlCommand" /> 時に使用される <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 内の行が変更に対応するデータベース レコードを更新する、 <see cref="T:System.Data.DataSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中に <xref:System.Data.Common.DbDataAdapter.Update%2A>, このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>, 、 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> を設定する場合は、自動的に生成できる、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> プロパティと使用、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 次に、追加のコマンドを設定しないはによって生成される、 <xref:System.Data.SqlClient.SqlCommandBuilder>です。 この生成ロジックではキー列の情報に含まれる、 <xref:System.Data.DataSet>です。 詳細については、「[Automatically Generated Commands](http://msdn.microsoft.com/ja-jp/6e3fb8b5-373b-4f9e-ab03-a22693df8e91)」を参照してください。  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> が割り当てられている以前に作成した <xref:System.Data.SqlClient.SqlCommand>, 、 <xref:System.Data.SqlClient.SqlCommand> 複製されません。<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> 以前に作成したへの参照を保持 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
> [!NOTE]
>  更新された行がマージされる可能性がこのコマンドの実行には、行が返された場合、 <xref:System.Data.DataSet> の設定に応じて、 **UpdatedRowSource** のプロパティ、 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 \[データ ソースに反映されるすべての列に対して <xref:System.Data.Common.DbDataAdapter.Update%2A>, には、パラメーターを追加する必要があります `InsertCommand`, 、`UpdateCommand`, 、または `DeleteCommand`です。  
  
 `SourceColumn` 列の名前に、パラメーターのプロパティを設定する必要があります。 これは、あるパラメーターの値を手動で設定がされておらず、現在処理されている行の特定の列から取得を示します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.SqlClient.SqlDataAdapter> し、設定、 <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, 、<xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> と <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> プロパティです。 既に作成するいると想定して、 <xref:System.Data.SqlClient.SqlConnection> オブジェクトです。  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>