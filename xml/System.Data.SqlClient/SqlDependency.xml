<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトは、アプリケーションと SQL Server のインスタンスのクエリ通知の依存関係を表します。 アプリケーションを作成できる、 <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトおよびから通知を受信するように登録、 <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> イベント ハンドラーです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency> キャッシュの ASP.NET アプリケーションまたは中間層サービスがメモリにキャッシュされている特定の情報を保持する必要があるシナリオに最適です。<xref:System.Data.SqlClient.SqlDependency> キャッシュを更新するように、データベース内の元のデータが変更されたときに通知を受信できます。  
  
 依存関係を設定するに関連付ける必要があります、 <xref:System.Data.SqlClient.SqlDependency> を 1 つ以上のオブジェクト <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。 通知を受信するにを購読する必要がある、 <xref:System.Data.SqlClient.SqlDependency.OnChange> イベントです。 通知のクエリを作成するための要件に関する詳細については、「を作成するクエリ通知の」SQL Server オンライン ブックを参照してください。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> ASP.NET または中間層サービスで使用するように設計されましたが、比較的少数のデータベースに対してアクティブな依存関係にあるサーバーです。 数百または数千のクライアント コンピューターがあると、クライアント アプリケーションでの使用向けに設計されていない <xref:System.Data.SqlClient.SqlDependency> オブジェクトの 1 つのデータベース サーバーを設定します。 セクションを参照している場合は、データが変更されたときに、信頼できる即時の通知が必要なアプリケーションを開発している、 **効率的なクエリ通知方法の計画** と **クエリ通知に代わる方法** で、 [Planning for Notifications](http://go.microsoft.com/fwlink/?LinkId=211984) SQL Server オンライン ブックのトピックです。  
  
 詳細については、次を参照してください。 [Using Query Notifications](http://msdn.microsoft.com/ja-jp/0f0ba1a1-3180-4af8-87f7-c795dc8f8f55) と SQL Server オンライン ブックの"通知ソリューションの構築"します。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange> コマンドの実行を開始したスレッドから別のスレッドでイベントを生成することができます。  
  
 クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表に、SQL Server オンライン ブックの Service Broker とクエリ通知に関するドキュメントへのリンクを示します。  
  
 **SQL Server オンライン ブック**  
  
-   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Security and Protection \(Service Broker\)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Solution Design Considerations \(Service Broker\)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Developer's Guide \(Service Broker\)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを作成、 <see cref="T:System.Data.SqlClient.SqlDependency" /> クラスを既定の設定です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンス トラクターは、 <xref:System.Data.SqlClient.SqlDependency> オブジェクトは Service Broker サービス名とタイムアウトを使用しています。 作成した後は、ある時点で使用する必要があります、 <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> メソッドを次のように 1 つまたは複数のコマンドを関連付ける <xref:System.Data.SqlClient.SqlDependency> オブジェクトです。  
  
 クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表に、SQL Server オンライン ブックの Service Broker とクエリ通知に関するドキュメントへのリンクを示します。  
  
 **SQL Server オンライン ブック**  
  
-   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Security and Protection \(Service Broker\)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Solution Design Considerations \(Service Broker\)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Developer's Guide \(Service Broker\)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトに関連付ける <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトです。 コンス トラクターを設定、 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトし、コマンドにバインドします。</param>
        <summary>新しいインスタンスを作成、 <see cref="T:System.Data.SqlClient.SqlDependency" /> クラスし、関連付けます、 <see cref="T:System.Data.SqlClient.SqlCommand" /> パラメーター。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターが内部的には、インスタンスを作成、 <xref:System.Data.Sql.SqlNotificationRequest> クラスにそれをバインド、 <xref:System.Data.SqlClient.SqlCommand> オブジェクトです。  
  
 クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表に、SQL Server オンライン ブックの Service Broker とクエリ通知に関するドキュメントへのリンクを示します。  
  
 **SQL Server オンライン ブック**  
  
-   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Security and Protection \(Service Broker\)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Solution Design Considerations \(Service Broker\)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Developer's Guide \(Service Broker\)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトが既にある、 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトに割り当てられているその <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> プロパティ、およびを <see cref="T:System.Data.Sql.SqlNotificationRequest" /> この依存関係と関連付けられていません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトに関連付ける <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトです。 コンス トラクターを設定、 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトし、コマンドにバインドします。</param>
        <param name="options">この依存関係で使用される通知要求オプション。<c>null</c> 既定のサービスを使用します。</param>
        <param name="timeout">秒単位では、この通知のタイムアウト値。 既定値は 0 で、サーバーのタイムアウトを使用することを示します。</param>
        <summary>新しいインスタンスを作成、 <see cref="T:System.Data.SqlClient.SqlDependency" /> クラス、関連付けます、 <see cref="T:System.Data.SqlClient.SqlCommand" /> パラメーター、通知オプションとタイムアウト値を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表に、SQL Server オンライン ブックの Service Broker とクエリ通知に関するドキュメントへのリンクを示します。  
  
 **SQL Server オンライン ブック**  
  
-   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Security and Protection \(Service Broker\)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Solution Design Considerations \(Service Broker\)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Developer's Guide \(Service Broker\)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">タイムアウト値が 0 未満です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトが既にある、 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトに割り当てられているその <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> プロパティ <see cref="T:System.Data.Sql.SqlNotificationRequest" /> この依存関係と関連付けられていません。  
  
 作成しようとしましたが、 **SqlDependency** SQLCLR 内からインスタンス化します。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> 通知に対して有効なステートメントを含むオブジェクト。</param>
        <summary>関連付けます、 <see cref="T:System.Data.SqlClient.SqlCommand" /> このオブジェクト <see cref="T:System.Data.SqlClient.SqlDependency" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表に、SQL Server オンライン ブックの Service Broker とクエリ通知に関するドキュメントへのリンクを示します。  
  
 **SQL Server オンライン ブック**  
  
-   [Creating a Query for Notification](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Security Considerations for Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Security and Protection \(Service Broker\)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Security Considerations for Notifications Services](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Query Notification Permissions](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [International Considerations for Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Solution Design Considerations \(Service Broker\)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker Developer InfoCenter](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Developer's Guide \(Service Broker\)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> パラメーターが null です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトが既にある、 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> オブジェクトに割り当てられているその <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> プロパティ、およびを <see cref="T:System.Data.Sql.SqlNotificationRequest" /> この依存関係と関連付けられていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>依存関係に関連付けられている結果セットのいずれかが変更されたかどうかを示す値を取得します。</summary>
        <value>結果のいずれかを設定するかどうかを示すブール値が変更されました。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用していない場合、 <xref:System.Data.SqlClient.SqlDependency.OnChange> チェックするイベント、 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> プロパティ、クエリ結果が変更されているかどうかを判断します。  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> プロパティは必ずしもデータに変更します。 タイムアウトなどの他の状況が期限切れになり、通知要求を設定しても変更イベントを生成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスを一意に識別する値を取得、 <see cref="T:System.Data.SqlClient.SqlDependency" /> クラスです。</summary>
        <value>インスタンスごとに生成された GUID の文字列表現、 <see cref="T:System.Data.SqlClient.SqlDependency" /> クラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A> プロパティが一意に識別するために使用される、指定された <xref:System.Data.SqlClient.SqlDependency> インスタンス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これに関連するコマンドのいずれかの通知を受け取ると発生 <see cref="T:System.Data.SqlClient.SqlDependency" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> 関連付けられているコマンドの結果が変わると発生します。 使用していない場合 <xref:System.Data.SqlClient.SqlDependency.OnChange>, 、確認すること、 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> プロパティ、クエリ結果が変更されているかどうかを判断します。  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> イベントは必ずしもデータに変更します。 その他のような場合に、タイムアウトし、通知要求を設定するエラーを生成するよう <xref:System.Data.SqlClient.SqlDependency.OnChange>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>依存関係の変更通知を受け取るリスナーを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency> でエラーが発生した場合、リスナーは再起動は、 [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 接続します。  
  
 複数回呼び出す、 <xref:System.Data.SqlClient.SqlDependency.Start%2A> 、次の制限の対象のメソッドを行んだことができます。  
  
-   \(同じ接続文字列と呼び出し元のスレッドで Windows 資格情報\) と同じパラメーターを使用して複数の呼び出しは有効です。  
  
-   別の接続文字列を含む複数の呼び出しが有効な限り。  
  
    -   各接続文字列を別のデータベースを指定または  
  
    -   各接続文字列を別のユーザーを指定または  
  
    -   呼び出しは、異なるアプリケーション ドメインから取得されます。  
  
 ことができます、 <xref:System.Data.SqlClient.SqlDependency> を別のユーザーがサブスクライブおよびリッスンするために、グループに dbo ロールを与えることがなく別のユーザーの資格情報を表す複数のスレッドを使用するアプリケーションに対して正しく動作 \(を使用して [Start](<!-- TODO: review code entity reference <xref:assetId:///System.Web.Caching.SqlCacheDependency?qualifyHint=False&amp;autoUpgrade=True>  -->) または <xref:System.Data.SqlClient.SqlCommand>\)、管理者によって作成された通知キューにします。 関連するアプリケーション ドメインの開始時に、サービス\/キュー \(キューの作成とサービスの作成のアクセス許可、データベース\) を初期化する権限を持つユーザー \(Windows\) の資格情報を使用開始を呼び出します。 AppDomain、ごとそれ以外の場合、あいまいさの例外が発生した後に、開始がのみ呼び出されることを確認します。  ユーザー スレッドは、通知 \(データベースの SUBSCRIBE QUERY NOTIFICATIONS 権限\) を受け取る権限を持っている必要があります。<xref:System.Data.SqlClient.SqlDependency> 管理者以外のユーザーが管理者によって作成されたサービス\/キューへのサブスクリプション要求を関連付けます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">インスタンスの接続文字列 SQL Server から取得するには、通知を変更します。</param>
        <summary>接続文字列で指定された SQL Server のインスタンスからの依存関係の変更通知を受信するためには、リスナーを開始します。</summary>
        <returns>**true** リスナーが正常に初期化される場合 **false** 互換性のあるリスナーが既に存在する場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、リスナーを開始、 <xref:System.AppDomain> のインスタンスから依存関係の通知を受信するため [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] によって指定された、 `connectionString` パラメーター。 このメソッド呼び出すことができます複数回ごとに異なる接続文字列を含む複数のサーバーです。  
  
 追加の「解説」を参照してください。 <xref:System.Data.SqlClient.SqlDependency.Start%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> パラメーターは、このメソッドを前回呼び出したときと同じですが、パラメーターが異なる。  
  
 メソッドは、CLR 内からを呼び出されました。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元を必須にすることはない <see cref="T:System.Data.SqlClient.SqlClientPermission" /> コード アクセス セキュリティ \(CAS\) アクセス許可。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">後続の呼び出し、メソッドに相当する型で作成された <paramref name="connectionString" /> 別のユーザーと同じスキーマに特に指定しない限り、ユーザーのパラメーターです。  
  
 また、基になる **SqlClient** 例外です。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server のインスタンスを取得するための接続文字列は、通知を変更します。</param>
        <param name="queue">使用する既存の SQL Server Service Broker キュー。 場合 <see langword="null" />, 、既定のキューを使用します。</param>
        <summary>指定された SQL Server Service Broker キューを使用して接続文字列で指定された SQL Server のインスタンスからの依存関係の変更通知を受信するためには、リスナーを開始します。</summary>
        <returns>**true** リスナーが正常に初期化される場合 **false** 互換性のあるリスナーが既に存在する場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、リスナーを開始、 <xref:System.AppDomain> で指定された SQL Server のインスタンスから依存関係の通知を受信するため、 `connectionString` パラメーター。 このメソッド呼び出すことができます複数回ごとに異なる接続文字列を含む複数のサーバーです。  
  
 キュー名が指定されていない場合 <xref:System.Data.SqlClient.SqlDependency> 、プロセスでは、1 つ以上の場合でも、全体の処理に使用されるサーバーに一時キューとサービスを作成 <xref:System.AppDomain>します。 キューおよびサービスは、アプリケーションのシャット ダウン時に自動的に削除します。  
  
 追加の「解説」を参照してください。 <xref:System.Data.SqlClient.SqlDependency.Start%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="connectionString" /> パラメーターは、このメソッドを前回呼び出したときと同じですが、パラメーターが異なる。  
  
 メソッドは、CLR 内からを呼び出されました。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元を必須にすることはない <see cref="T:System.Data.SqlClient.SqlClientPermission" /> コード アクセス セキュリティ \(CAS\) アクセス許可。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">後続の呼び出し、メソッドに相当する型で作成された <paramref name="connectionString" /> パラメーターが、別のユーザーまたは同じスキーマに特に指定しない限り、ユーザーです。  
  
 また、基になる **SqlClient** 例外です。</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>以前に指定された接続用のリスナーを停止する <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency> リスナーが SQL Server の接続でエラーが発生したときに再起動されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">以前に使用された SQL Server のインスタンスの接続文字列 <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> 呼び出します。</param>
        <summary>以前に指定された接続用のリスナーを停止する <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 呼び出します。</summary>
        <returns>**true** 場合は、リスナーが完全に停止しました。 **false** 場合、 <see cref="T:System.AppDomain" /> リスナーからバインドがありませんでしたが、少なくとも 2 つが用意されて <see cref="T:System.AppDomain" /> 同じリスナーを使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> ごとにメソッドを呼び出す必要があります <xref:System.Data.SqlClient.SqlDependency.Start%2A> 呼び出します。 指定されたリスナーがのみがシャット ダウン、完全に受信すると、同じ数の <xref:System.Data.SqlClient.SqlDependency.Stop%2A> 要求として <xref:System.Data.SqlClient.SqlDependency.Start%2A> 要求します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、SQLCLR 内からを呼び出されました。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元を必須にすることはない <see cref="T:System.Data.SqlClient.SqlClientPermission" /> コード アクセス セキュリティ \(CAS\) アクセス許可。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">基になる **SqlClient** 例外が発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">以前に使用された SQL Server のインスタンスの接続文字列 <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> 呼び出します。</param>
        <param name="queue">以前に使用された SQL Server Service Broker キュー <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> 呼び出します。</param>
        <summary>以前に指定された接続用のリスナーを停止する <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> 呼び出します。</summary>
        <returns>**true** 場合は、リスナーが完全に停止しました。 **false** 場合、 <see cref="T:System.AppDomain" /> リスナーからバインドできなかったが、少なくとも 1 つであるその他の <see cref="T:System.AppDomain" /> 同じリスナーを使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> ごとにメソッドを呼び出す必要があります <xref:System.Data.SqlClient.SqlDependency.Start%2A> 呼び出します。 指定されたリスナーがのみがシャット ダウン、完全に受信すると、同じ数の <xref:System.Data.SqlClient.SqlDependency.Stop%2A> 要求として <xref:System.Data.SqlClient.SqlDependency.Start%2A> 要求します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionString" /> パラメーターが NULL です。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、SQLCLR 内からを呼び出されました。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元を必須にすることはない <see cref="T:System.Data.SqlClient.SqlClientPermission" /> コード アクセス セキュリティ \(CAS\) アクセス許可。</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">基になると **SqlClient** 例外が発生しました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlDependency" /> クラスの新しいインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>