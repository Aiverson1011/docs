<Type Name="SqlBulkCopyColumnMappingCollection" FullName="System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopyColumnMappingCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopyColumnMappingCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Collections.CollectionBase" /> から継承した <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクトのコレクション。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 列マッピングは、データ ソースとターゲット テーブル間のマッピングを定義します。  
  
 マッピングが定義されていない場合などは、 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> コレクションが空 — 序数位置に基づいて暗黙的に列がマップします。 これが機能するには、ソースとターゲットのスキーマが一致する必要があります。 一致しない場合、 <xref:System.InvalidOperationException> がスローされます。  
  
 場合、 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> コレクションが空でない、データ ソースに存在しないすべての列を指定する必要があります。 コレクションにマップされていない列は無視されます。  
  
 ソースとターゲットの列名または序数で参照することができます。 混在していても、同じマップ コレクション内の序数による列参照を混在させることができます。  
  
   
  
## 例  
 次の例の大部分でソース テーブルからデータをコピーする、 **AdventureWorks** 、同じデータベース内の変換先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列の名前と順序位置一致していません。<xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 追加、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> の <xref:System.Data.SqlClient.SqlBulkCopy> 一括コピーの列マップを作成するオブジェクト。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollection\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(class System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bulkCopyColumnMapping" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="bulkCopyColumnMapping">
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> をコレクションに追加するマッピングを記述するオブジェクト。</param>
        <summary>指定したマッピングを追加、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />です。</summary>
        <returns>
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例の大部分でソース テーブルからデータをコピーする、 **AdventureWorks** 、同じデータベース内の変換先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列の名前と順序位置一致していません。<xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> オブジェクトは、一括コピーする列マップの作成に使用されます。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, int destinationColumnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(int32 sourceColumnIndex, int32 destinationColumnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumnIndex" Type="System.Int32" />
        <Parameter Name="destinationColumnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumnIndex">データ ソース内の基になる列の序数位置。</param>
        <param name="destinationColumnIndex">変換先テーブル内の変換先列の序数位置。</param>
        <summary>新たに作成 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> し、ソースと宛先の両方の列を指定する序数を使用して、コレクションに追加します。</summary>
        <returns>列のマッピング。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内のマッピングを統一する必要があります。 すべての整数または整数値のペア、文字列\/文字列のすべてのペア、すべての整数や文字列のペアまたはすべての文字列または整数値のペアです。 コレクションに既に他のユーザーに異なるマッピングを追加しようとすると、 <xref:System.InvalidOperationException> がスローされます。  
  
   
  
## 例  
 次の例の大部分でソース テーブルからデータをコピーする、 **AdventureWorks** 、同じデータベース内の変換先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列の名前と順序位置一致していません。<xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> オブジェクトは、ソースと変換先の列の序数位置を使用して一括コピーする列マップの作成に使用されます。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(int32 sourceColumnIndex, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumnIndex" Type="System.Int32" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumnIndex">データ ソース内の基になる列の序数位置。</param>
        <param name="destinationColumn">変換先テーブル内の変換先列の名前。</param>
        <summary>新しい <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> し、ソース列と変換先列の文字列の序数を使用して、コレクションに追加します。</summary>
        <returns>列のマッピング。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内のマッピングを統一する必要があります。 すべての整数または整数値のペア、文字列\/文字列のすべてのペア、すべての整数や文字列のペアまたはすべての文字列または整数値のペアです。 コレクションに既に他のユーザーに異なるマッピングを追加しようとすると、 <xref:System.InvalidOperationException> がスローされます。  
  
   
  
## 例  
 次の例の大部分でソース テーブルからデータをコピーする、 **AdventureWorks** 、同じデータベース内の変換先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列の名前と順序位置一致していません。<xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> オブジェクトは、一括コピーする列マップの作成に使用されます。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingIndexColName\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingIndexColName/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingIndexColName\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingIndexColName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, int destinationColumnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(string sourceColumn, int32 destinationColumnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">データ ソース内の基になる列の名前。</param>
        <param name="destinationColumnIndex">変換先テーブル内の変換先列の序数位置。</param>
        <summary>新たに作成<see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />し、ソース列と変換先列を指定する序数を記述する列名を使用して、コレクションに追加します。</summary>
        <returns>列のマッピング。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内のマッピングは均一である必要があります。 すべての整数または整数のペア、文字列\/文字列のすべてのペア、整数\/文字列のすべてのペア、またはすべての文字列または整数のペア。 コレクション内の既存の他のユーザーから別のマッピングを追加しようとする場合、<xref:System.InvalidOperationException>がスローされます。  
  
   
  
## 例  
 次の例を一括でソース テーブルからデータをコピーする、 **AdventureWorks**同じデータベースのレプリケーション先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列名と序数位置一致していません。<xref:System.Data.SqlClient.SqlBulkCopyColumnMapping>オブジェクトは、一括コピーする列マップの作成に使用されます。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 使用する構文を示すためにこのコードが提供される**SqlBulkCopy**のみです。 簡単かつ高速、TRANSACT\-SQL の使用には、ソース テーブルと対象テーブルが同じ SQL Server インスタンス内にある場合は、`INSERT … SELECT`ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingColNameIndex\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingColNameIndex/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingColNameIndex\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingColNameIndex/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(string sourceColumn, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumn">データ ソース内の基になる列の名前。</param>
        <param name="destinationColumn">変換先テーブル内の変換先列の名前。</param>
        <summary>新たに作成 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> し、ソースと宛先の両方の列を指定する列名を使用して、コレクションに追加します。</summary>
        <returns>列のマッピング。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内のマッピングを統一する必要があります。 すべての整数または整数値のペア、文字列\/文字列のすべてのペア、すべての整数や文字列のペアまたはすべての文字列または整数値のペアです。 コレクションに既に他のユーザーに異なるマッピングを追加しようとすると、 <xref:System.InvalidOperationException> がスローされます。  
  
   
  
## 例  
 次の例の大部分でソース テーブルからデータをコピーする、 **AdventureWorks** 、同じデータベース内の変換先テーブルにサンプル データベース。 コピー先の列の数には、ソース内の列の数が一致すると、列の名前と順序位置一致していません。 このコードを作成、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 列の名前を指定するオブジェクト。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollection\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションの内容を消去します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation. If you create column mappings for one bulk copy operation, you must clear the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method and before processing the next bulk copy.  
  
 Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation.  
  
   
  
## 例  
 The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example \(because the ordinal positions of the source and destination columns do match\), the example defines column mappings for each bulk copy operation. The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method must be used after the first bulk copy is performed and before the next bulk copy's column mappings are defined.  
  
> [!IMPORTANT]
>  This sample will not run unless you have created the work tables as described in [Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb). This code is provided to demonstrate the syntax for using **legacyBold tag is not supported!!!!**  
>  only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact\-SQL `INSERT … SELECT` statement to copy the data.  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value">有効な <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクトです。</param>
        <summary>指定したかどうかを示す値を取得 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクト、コレクション内に存在します。</summary>
        <returns>
          <see langword="true" /> 指定されたマッピングがコレクションに存在する場合それ以外の場合 <see langword="false" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">1 次元 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> からコピーした要素のコピー先の配列は <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />です。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
        <param name="index">コピーの開始位置とする <c>array</c> のインデックス \(0 から始まる\)。</param>
        <summary>要素をコピー、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> 型の配列を <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> アイテム、特定のインデックスから始まります。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 検索対象のオブジェクト。</param>
        <summary>指定したインデックスを取得 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクトです。</summary>
        <returns>列マッピング\] または \[列マッピングがコレクション内に見つからない場合は\-1 の 0 から始まるインデックス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="index">内の場所の整数値、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> 新しいを挿入する位置を示す <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />します。</param>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> コレクションに挿入するオブジェクト。</param>
        <summary>新しい挿入 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 指定されたインデックス位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">0 から始まるインデックス、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> を検索します。</param>
        <summary>取得、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクトを指定したインデックス位置。</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> コレクションから削除するオブジェクト。</param>
        <summary>指定された削除 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 要素を <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> メソッドは、1 つを使用すると最もよく使用 <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスで複数のバルク コピー操作を処理します。 一括コピーを 1 つの列マッピングを作成する場合は、不要になった後に適用するマッピングを削除する必要があります、 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> メソッドが呼び出されて、次の一括コピーのマッピングを定義する前にします。 使用してコレクション全体をクリアすることができます、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> メソッド、または削除のマッピングを使用して個別に、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> メソッドまたは <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> メソッドです。  
  
 同じを使用していくつかの一括コピーを実行する <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスは通常、個別に使用するよりもパフォーマンスの観点から効率なります <xref:System.Data.SqlClient.SqlBulkCopy> 操作ごとにします。  
  
   
  
## 例  
 次の例では、2 つの一括コピー操作を実行します。 最初の操作は、販売注文ヘッダー情報をコピーし、2 つ目は販売注文の詳細をコピーします。 必須ではありませんこの例では \(変換元と移行先の列の序数位置が一致する\) ため、この例は、一括コピー操作の各列のマッピングを定義します。 両方の一括コピーでのマッピングを含める、 **SalesOrderID**, 、一括コピー操作の例の削除でコレクション全体を除くのすべてのマッピングをオフにするのではなく、 **SalesOrderID** マッピングし、2 つ目のバルク コピー操作に対する適切なマッピングを追加します。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingRemove\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemove/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemove\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">0 から始まるインデックス、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> コレクションから削除するオブジェクト。</param>
        <summary>コレクションから指定したインデックス位置にあるマップを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> メソッドは、1 つを使用すると最もよく使用 <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスで複数のバルク コピー操作を処理します。 一括コピーを 1 つの列マッピングを作成する場合は、不要になった後に適用するマッピングを削除する必要があります、 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> メソッドが呼び出されて、次の一括コピーのマッピングを定義する前にします。 使用してコレクション全体をクリアすることができます、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> メソッド、または削除のマッピングを使用して個別に、 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> メソッドまたは <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> メソッドです。  
  
 同じを使用していくつかの一括コピーを実行する <xref:System.Data.SqlClient.SqlBulkCopy> インスタンスは通常、個別に使用するよりもパフォーマンスの観点から効率なります <xref:System.Data.SqlClient.SqlBulkCopy> 操作ごとにします。  
  
   
  
## 例  
 次の例では、2 つの一括コピー操作を実行します。 最初の操作は、販売注文ヘッダー情報をコピーし、2 つ目は販売注文の詳細をコピーします。 必須ではありませんこの例では \(変換元と移行先の列の序数位置が一致する\) ため、この例は、一括コピー操作の各列のマッピングを定義します。 両方の一括コピーでのマッピングを含める、 **SalesOrderID**, 、一括コピー操作の例の削除でコレクション全体を除くのすべてのマッピングをオフにするのではなく、 **SalesOrderID** マッピングし、2 つ目のバルク コピー操作に対する適切なマッピングを追加します。  
  
> [!IMPORTANT]
>  このサンプルは、「[Creating Tables for the Bulk Copy Examples](http://msdn.microsoft.com/ja-jp/d4dde6ac-b8b6-4593-965a-635c8fb2dadb)」で説明しているように作業テーブルを作成してからでないと動作しません。 このコードでは、**SqlBulkCopy** だけを使用した構文について説明します。 簡単かつ迅速に、TRANSACT\-SQL の使用が元とコピー先のテーブルが同じ SQL Server インスタンスである場合は、 `INSERT … SELECT` ステートメント、データをコピーします。  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingRemoveAt\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemoveAt/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemoveAt\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemoveAt/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> に、 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />です。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>