<Type Name="QueryableFilterRepeater" FullName="System.Web.DynamicData.QueryableFilterRepeater">
  <TypeSignature Language="C#" Value="public class QueryableFilterRepeater : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryableFilterRepeater extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.QueryableFilterRepeater" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サポートされる列型のフィルター テーブル行に UI を自動的に生成する、テンプレート コントロールを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [クラスのコンテキスト](#ClassContext)  
  
-   [宣言構文](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロールが自動的にテーブル行のフィルター処理するための UI を生成するページのマークアップで使用します。 既定では、動的なデータは ~\\DynamicData\\Filters ディレクトリにある既定のフィルターのテンプレートを使用して、サポートされている列の種類ごとに UI を作成します。  
  
 既定のテンプレートは、外部キー、ブール値、および列挙型の列の型をサポートします。  
  
 次の表に、関連付けられているタスク、 <xref:System.Web.DynamicData.QueryableFilterRepeater> 型です。  
  
|タスク|説明|  
|---------|--------|  
|テーブルの行をフィルター処理するための UI を作成します。|追加 <xref:System.Web.DynamicData.DynamicFilter> UI を使用して作成するためのコントロール、 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> プロパティです。|  
|確認するかどうか、 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロールにデータ フィールドのフィルターが含まれています。|あるチェック マークを実行、 <xref:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender%2A> メソッドです。|  
  
<a name="ClassContext"></a>   
## クラスのコンテキスト  
 <xref:System.Web.DynamicData.QueryableFilterRepeater> を使用するコントロールがデザインされた、 <xref:System.Web.UI.WebControls.QueryExtender> コントロールです。 によって参照される必要があります、 <xref:System.Web.DynamicData.DynamicFilterExpression> 内をインスタンス化、 <xref:System.Web.UI.WebControls.QueryExtender> ページ マークアップ内のオブジェクト。  
  
 次の図は、動的なデータが自動テーブル行のフィルター処理を実装するために次の手順を示します。  
  
 7bba9d3c-3e6c-4b06-a5f8-a9e7e57cbc09  
  
1.  <xref:System.Web.DynamicData.DynamicFilter> コントロール \(に含まれており、 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロール\)、列の値を渡す、 <xref:System.Web.UI.WebControls.QueryExtender> コントロールです。  
  
2.  <xref:System.Web.UI.WebControls.QueryExtender> コントロールがこの値をフィルター処理し、データ ソース コントロールに渡されます情報クエリを作成するために使用します。  
  
3.  データ ソース コントロールには、データ ソース プロバイダーに情報をフィルター処理クエリが渡されます。  
  
4.  データ ソース プロバイダーでは、データベースにクエリを渡します。  
  
5.  データベースでは、フィルター選択されたテーブルの行を返します。  
  
6.  データ ソース プロバイダーでは、データ ソース コントロールにこのデータを送信します。  
  
7.  このコントロールは、フィルター選択されたテーブルの行を表示するためのデータ バインド コントロールに渡します。  
  
<a name="DeclarativeSyntax"></a>   
## 宣言構文  
  
```  
<asp:QueryableFilterRepeater   
    ID="string"  
    DynamicFilterContainerId="string"   
    EnableViewState="True|False"   
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="true"  
    runat="server" />  
```  
  
   
  
## 例  
 Visual Studio プロジェクトにソース コードがこの場所で使用可能な: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914)します。  
  
 次の例では、使用する方法、 <xref:System.Web.DynamicData.QueryableFilterRepeater> テーブル行のフィルター処理するための UI を生成するコントロール。 Repeater の項目テンプレートが含まれています、 <xref:System.Web.DynamicData.DynamicFilter> コントロールごとに UI を作成するには、列の型がサポートされています。  
  
 次に例が必要です。  
  
-   動的データ Web サイトまたは動的データ Web アプリケーション。 詳細については、「`Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`」を参照してください。  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#1)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx.vb#3)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/awltl2spartials.cs#4)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/awltpartiall2sclasses.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryableFilterRepeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常使用しないこのコンス トラクターの新しいインスタンスを初期化するために、 <xref:System.Web.DynamicData.QueryableFilterRepeater> クラスです。 代わりに、指定、 <xref:System.Web.DynamicData.QueryableFilterRepeater> ページ マークアップ内のコントロールとコントロールが自動的に初期化ページを実行するとします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicFilterContainerId">
      <MemberSignature Language="C#" Value="public string DynamicFilterContainerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicFilterContainerId" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("DynamicFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.DynamicData.QueryableFilterUserControl))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の ID、 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 列のフィルターを使用するように構成するテンプレート内のコントロールです。</summary>
        <value>ID、 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 列のフィルターを使用するように構成するテンプレート内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ID が設定されていない場合は、"DynamicFilter"は、ID の既定値です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.INamingContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するコントロールを設定、 <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> クラスです。</summary>
        <value>オブジェクトを定義する方法 \[項目を <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> コントロールが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> プロパティの設定に使用される動作を定義、 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロールに子コントロール。 子コントロールは、ページで定義されているインライン テンプレートを表します。  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロールの <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> プロパティが含まれるように <xref:System.Web.DynamicData.DynamicFilter> コントロールごとに UI を作成するには、列の型がサポートされています。  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#2)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>コントロールにデータ フィールドのフィルターが含まれるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ フィールドのフィルターが存在しない場合は、このメソッドを設定、 <xref:System.Web.UI.Control.Visible%2A> のプロパティ、 <xref:System.Web.DynamicData.QueryableFilterRepeater> オブジェクトを `false`します。 このメソッドは、 <xref:System.Web.DynamicData.QueryableFilterRepeater> コントロールが読み込まれるが、これは、レンダリングされる前にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">データ ソース クエリ。</param>
        <summary>現在のフィルター値を使用して、変更したクエリを取得します。</summary>
        <returns>フィルターです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.DynamicData.QueryableFilterRepeater> のインスタンスが <xref:System.Web.DynamicData.IFilterExpressionProvider> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソース。</param>
        <summary>
          <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.DynamicData.QueryableFilterRepeater> のインスタンスが <xref:System.Web.DynamicData.IFilterExpressionProvider> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>