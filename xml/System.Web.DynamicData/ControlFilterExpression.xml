<Type Name="ControlFilterExpression" FullName="System.Web.DynamicData.ControlFilterExpression">
  <TypeSignature Language="C#" Value="public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ControlFilterExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロールで選択される項目のデータ キーを使用して、データベース クエリを変更します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.DynamicData.ControlFilterExpression> など、ページに 2 つのデータ バインド コントロールが含まれている場合に使用するように設計されたクラス、 <xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.ListView> コントロールです。 1 つのコントロールは、データのキー \(行\) が選択されている、ソースです。 その他のコントロールは、選択されたデータ キーに基づいて、データが表示される対象です。 データ ソース コントロールで定義されているクエリを実行してターゲット データが取得、 <xref:System.Web.UI.WebControls.QueryExtender> クラスとするが、選択したデータのキーを使用して構築されています。  
  
 使用する、 <xref:System.Web.DynamicData.ControlFilterExpression> クラス、ページには、次の手順に従って。  
  
-   追加、 <xref:System.Web.UI.WebControls.QueryExtender> コントロールをページです。  
  
-   設定、 `TargetControlID` のプロパティ、 <xref:System.Web.UI.WebControls.QueryExtender> ターゲット データ ソース コントロールの ID を制御します。  
  
-   追加、 <xref:System.Web.DynamicData.ControlFilterExpression> インスタンスを <xref:System.Web.UI.WebControls.QueryExtender> コントロールです。  
  
-   設定、 `ControlID` のプロパティ、 <xref:System.Web.DynamicData.ControlFilterExpression> 元のデータ バインド コントロールの要素。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.DynamicData.ControlFilterExpression> クラス データ キーが選択されている元のデータ バインド コントロールを参照します。<xref:System.Web.UI.WebControls.QueryExtender> コントロールは、選択したデータのキーを使用してフィルター処理されたデータを取得する対象のデータ ソース コントロールに参照します。 例では、元のデータ バインド コントロールが親テーブルを参照し、対象のデータ バインド コントロールは、子テーブルを参照します。  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="SourceGridViewID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <altmember cref="P:System.Web.DynamicData.ControlFilterExpression.Column" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public string Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクエリの基となる列の名前を設定します。</summary>
        <value>クエリの基となる列の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが空である場合、 <xref:System.Web.DynamicData.ControlFilterExpression> コントロールは、現在のテーブルの主キーとして選択されたデータ キーを処理します。 これは、リスト\-詳細のシナリオで同じテーブルのデータ ソースとターゲットのデータ バインド コントロールは操作に役立ちます。  
  
 プロパティの値を割り当てる場合、 <xref:System.Web.DynamicData.ControlFilterExpression> コントロールは、外部キーとしてデータ キーを処理します。 このプロパティに割り当てられた値では、対象のデータ バインド コントロールに表示される列の名前になります。 これは、対象のデータ バインド コントロールは子テーブルからデータを操作し、元のデータ バインド コントロールが親テーブルからデータを操作対象の親と子シナリオで役立ちます。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.DynamicData.ControlFilterExpression> 、フィルターの適用先の列を設定するクラス。  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ControlFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または元のデータ バインド コントロールの ID を設定します。</summary>
        <value>元のデータ バインド コントロールの ID です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.DynamicData.ControlFilterExpression.ControlID%2A> プロパティがデータ キーの選択元となるソース データ バインド コントロールを識別します。 選択されたデータ キーを使用して、 <xref:System.Web.DynamicData.ControlFilterExpression> 、クエリを作成するコントロール。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.DynamicData.ControlFilterExpression> 元のデータ バインド コントロールの ID を設定するクラス。  
  
```  
<asp:QueryExtender ID="QueryExtenderID"   
    TargetControlID="TargetDataSourceID" runat="server">  
    <asp:ControlFilterExpression ControlID="GridViewID" Column="Category"/>  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">変更するデータ ソース クエリ。</param>
        <summary>変更するデータ ソースのクエリを取得します。</summary>
        <returns>これによって変更されたデータ ソースのクエリを表すオブジェクト <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.DynamicData.ControlFilterExpression.GetQueryable%28System.Linq.IQueryable%29> メソッドは、ソースのデータ バインド コントロールの選択されたデータ キーに基づくクエリを変更します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する状態。</param>
        <summary>以前に保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポストされた時間以降のビューステートへの変更を保存します。</summary>
        <returns>このオブジェクトは、状態を表示する変更が含まれています。 このメソッドが戻るかどうかは、オブジェクトに関連付けられているビューステートがない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">これで、コントロール、 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> ようなインスタンスが含まれる、 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールです。</param>
        <param name="context">アプリケーションの現在 <see cref="T:System.Web.HttpContext" /> オブジェクトです。</param>
        <param name="dataSource">ターゲット データ ソースを <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> インスタンス。 場合、 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> にインスタンスが含まれている、 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> するデータ ソースのコントロールでは、このパラメーターは、 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールが参照するには</param>
        <summary>データ ソース情報をフィルター式を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> コントロールのビュー状態のオブジェクトに格納できるように、ビュー ステートへの変更を追跡するために、同じページに対する要求間で永続化するオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>