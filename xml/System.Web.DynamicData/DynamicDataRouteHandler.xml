<Type Name="DynamicDataRouteHandler" FullName="System.Web.DynamicData.DynamicDataRouteHandler">
  <TypeSignature Language="C#" Value="public class DynamicDataRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ASP.NET Dynamic Data のプロセスでは、パターンをルーティングします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRouteHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CreateHandler (System.Web.DynamicData.DynamicDataRoute route, System.Web.DynamicData.MetaTable table, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler CreateHandler(class System.Web.DynamicData.DynamicDataRoute route, class System.Web.DynamicData.MetaTable table, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Web.DynamicData.DynamicDataRoute" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="route">一致するルートです。</param>
        <param name="table">ルートに含まれているメタデータ テーブル。</param>
        <param name="action">ルートに含まれているアクション。</param>
        <summary>要求を処理するハンドラーを作成します。</summary>
        <returns>このハンドラーは、要求を処理することができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomPageVirtualPath">
      <MemberSignature Language="C#" Value="protected virtual string GetCustomPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCustomPageVirtualPath(class System.Web.DynamicData.MetaTable table, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">ページが適用されるデータ モデルのメタデータ テーブルです。</param>
        <param name="viewName">".Aspx"ファイル名拡張子のないページの名前を表すビュー アクションの名前。</param>
        <summary>カスタムのページの仮想パスを作成します。</summary>
        <returns>カスタムのページの仮想パス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestContext">
      <MemberSignature Language="C#" Value="public static System.Web.Routing.RequestContext GetRequestContext (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Routing.RequestContext GetRequestContext(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">Web 要求に関連付けられているコンテキスト情報。</param>
        <summary>返します。、 <see cref="T:System.Web.Routing.RequestContext" /> 現在の Web 要求のインスタンス。</summary>
        <returns>Web 要求の要求のコンテキスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 必要な場合は、新しいコンテキストが作成されます。 これは、現在の要求が動的なデータの要求である場合に発生することができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="httpContext" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestMetaTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetRequestMetaTable (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetRequestMetaTable(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">Web 要求に関連付けられているコンテキスト情報。</param>
        <summary>返します。、 <see cref="T:System.Web.DynamicData.MetaTable" /> オブジェクトから、 <see cref="T:System.Web.HttpContext" /> オブジェクトです。</summary>
        <returns>現在の Web 要求に関連付けられているデータ モデルのメタデータ テーブルまたは <see langword="null" /> 場合は、要求は、動的データ要求ではありません</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="httpContext" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldPageVirtualPath">
      <MemberSignature Language="C#" Value="protected virtual string GetScaffoldPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetScaffoldPageVirtualPath(class System.Web.DynamicData.MetaTable table, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">ページが適用されるメタデータ テーブルです。</param>
        <param name="viewName">".Aspx"ファイル名拡張子のないページの名前を表すビュー アクションの名前。</param>
        <summary>動的なデータが有効になっているページの仮想パスを返します。</summary>
        <returns>ページの仮想パス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRouteHandler.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.DynamicData.MetaModel" /> オブジェクトを <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> クラスに関連付けられています。</summary>
        <value>データ モデルを <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> クラスに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRequestMetaTable">
      <MemberSignature Language="C#" Value="public static void SetRequestMetaTable (System.Web.HttpContext httpContext, System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRequestMetaTable(class System.Web.HttpContext httpContext, class System.Web.DynamicData.MetaTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
      </Parameters>
      <Docs>
        <param name="httpContext">Web 要求に関連付けられているコンテキスト情報。</param>
        <param name="table">現在の要求に関連付けられているメタテーブルします。</param>
        <summary>セット、 <see cref="T:System.Web.DynamicData.MetaTable" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.HttpRequest" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.HttpRequest> オブジェクトできます `null` 動的以外のデータ要求します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.Routing.IRouteHandler.GetHttpHandler">
      <MemberSignature Language="C#" Value="System.Web.IHttpHandler IRouteHandler.GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.IHttpHandler System.Web.Routing.IRouteHandler.GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Web 要求に関連付けられているコンテキスト情報。</param>
        <summary>ASP.NET 動的データ ルート パターンを処理するハンドラーを返します。</summary>
        <returns>ASP.NET 動的データ ルート パターンを処理するハンドラー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.Routing.IRouteHandler.GetHttpHandler%2A> インターフェイス メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>