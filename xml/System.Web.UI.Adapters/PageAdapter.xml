<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定のブラウザーの Web ページを調整し、継承元となるすべてのページ アダプター、直接または間接的に基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter> クラスは、ブラウザー、ブラウザーが使用するマークアップ言語で定義されている \(たとえば、HTML または XHTML\) の特定のクラスを Web ページの対応する抽象クラスです。 表示動作の適応性の多くから派生する特殊なテキスト ライター クラスにカプセル化できます、 <xref:System.Web.UI.HtmlTextWriter> クラスのため、常にページ アダプターを提供する必要はありません。  
  
 Page 派生クラスのアダプターのほとんどのメンバーがから呼び出される、 <xref:System.Web.UI.Page> クラスまたはコントロール アダプタからです。 まず、 <xref:System.Web.UI.Page> クラスまたはコントロールのアダプター派生ページ アダプターの存在を検出し、メンバーを呼び出して、またはページ アダプターが存在しない場合は、機能を提供します。  
  
 メンバー、 <xref:System.Web.UI.Adapters.PageAdapter> クラスは、次の機能を提供します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> と <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> プロパティ定義の追加の HTTP ヘッダーと HTTP `GET` と `POST` キャッシュを変更するために使用されるパラメーターです。 キャッシュの初期化中に呼び出される、 <xref:System.Web.UI.Page> クラスです。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> メソッドは、ページのすべての表示と制御の状態を永続化するために使用できるオブジェクトを返します。 参照されている、 <xref:System.Web.UI.Page.PageStatePersister%2A> プロパティ派生ページ アダプターが存在する場合。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> メソッドは、スクリプト内のフォームを参照するために使用できる DHTML のコードを提供します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> ページがポストバックの場合、メソッドがポストバックの変数のコレクションを返します。 代わりに、.NET フレームワークによって呼び出される、 <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=fullName> メソッド派生ページ アダプターが存在する場合。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> と <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> メソッドが派生ページ アダプターが存在する場合にハイパーリンクを表示するコントロール アダプターで使用されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、ハイパーリンクまたはフォームを送信できるポストバック クライアント タグを表示します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> と <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> メソッドを使用して、もう一方を参照オプション ボタン コントロール アダプターによって <xref:System.Web.UI.WebControls.RadioButton> ラジオ ボタン グループ内のコントロールです。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> プロパティのすべてのコントロールとビューの状態へのアクセスを提供する、 <xref:System.Web.UI.Page> を介して、内部オブジェクト `ClientState` のプロパティ、 <xref:System.Web.UI.Page> クラスです。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> メソッドは、デバイス固有のテキスト変換を実行するコントロール アダプタによって使用されます。  
  
   
  
## 例  
 次のコード例では、という名前のクラスを派生 `CustomPageAdapter` から、 <xref:System.Web.UI.Adapters.PageAdapter> クラスをオーバーライド、 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドです。<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドという名前の属性を追加する `src` これをハイパーリンクに現在のページへの参照が含まれています。 先のページに表示されるすべてのハイパーリンク `CustomPageAdapter` がアタッチされているが、 `src` 属性です。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework を構築このアダプターに、内部的に対応するの作成時に <xref:System.Web.UI.Page> クラスまたは派生クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが接続されている Web ページのキャッシュに影響するその他の HTTP ヘッダーの一覧を取得します。</summary>
        <value>
          <see cref="T:System.Collections.IList" /> HTTP ヘッダーのリストを格納しない場合は、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web 上の Web ページをキャッシュするエンティティは、HTTP ヘッダーやその他の要因に基づいて、複数のバージョンをキャッシュします。 たとえば、バージョン、ページを生成する各言語がキャッシュされた通常に基づいて、 `Accept-Language` HTTP ヘッダー。  
  
 特定のブラウザーは、ターゲットに依存しないキャッシュを制御するだけでなく、ヘッダーの HTTP ヘッダーによってキャッシュを変更する必要があります。 たとえば、さまざまな画面サイズは、ページのさまざまなバージョンをキャッシュする必要があります。  
  
 によって返されたヘッダーの名前、 <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> プロパティは、ヘッダーのリストに追加する、 `Vary` クライアント ブラウザーに送信された HTTP ヘッダー。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> property to return a list of the additional headers to control target-specific caching. The <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> base property returns <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが接続されている Web ページのキャッシュに影響する HTTP GET および POST 要求から追加のパラメーターの一覧を取得します。</summary>
        <value>
          <see cref="T:System.Collections.IList" /> GET と POST パラメーターのリストを格納しない場合は、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web ページのキャッシュが複数のバージョンをキャッシュする Web 上のエンティティに基づいて、その他の要因の間での要求パラメーターです。 たとえば、バージョン、ページが生成対象となる小売チェーン内で各ストアの場所はキャッシュ通常に基づいてのパラメーター名 \(たとえば、 `StoreID`\)。  
  
 特定のブラウザーを取得してキャッシュを変更したり、ポストのパラメーター以外にパラメーター ターゲットに依存しないキャッシュを制御するために必要な場合があります。 たとえば、携帯電話サービス プロバイダーのさまざまなバージョンのページをキャッシュする必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> property to return a list of the additional GET or POST parameters to control target-specific caching. The <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> base method returns <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが接続されている Web ページの表示と制御の状態データを含むエンコードされた文字列を取得します。</summary>
        <value>エンコードされた <see cref="T:System.String" /> 、関連するコントロールのすべての表示と制御の状態を含む <see cref="T:System.Web.UI.Page" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> プロパティは、内部へのアクセスを提供 `ClientState` のプロパティ、 <xref:System.Web.UI.Page> クラスです。  
  
 によって格納される状態データを表示、 <xref:System.Web.UI.PageStatePersister> は内部オブジェクト `ClientState` の <xref:System.Web.UI.Page> Web ページで、非表示フィールドに保存常にします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you cannot override the <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> property because it is not <see langword="virtual" />. To modify the behavior of <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> in a derived class, implement a new <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> property that references the <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> property of the base class.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページがポストバックでは、ポストバックの変数の名前\/値コレクションを返しするかどうかを決定します。</summary>
        <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> ; 存在する場合は、ポストバック変数のそれ以外の場合 <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> メソッドでは、次のコレクションのいずれかを返します。  
  
-   フォーム変数の場合は、HTTP データ転送方法が `POST`です。  
  
-   HTTP メソッドの場合、クエリ文字列変数 `GET`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> method to provide target-specific handling of the postback variables collection.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求で ASP.NET 要求の検証を実行しなくても、POST または GET コマンドのいずれかを使用してページが投稿されたデータの名前と値のコレクションを返します。</summary>
        <returns>検証されていないフォーム データです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、<xref:System.Web.UnvalidatedRequestValues> クラスを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">A <see cref="T:System.String" /> が投稿されたフォームのクライアント ID を保持します。</param>
        <summary>クライアント ブラウザーに送信されたページ上のフォームを参照する使用 DHTML コード フラグメントを返します。</summary>
        <returns>A <see cref="T:System.String" /> に送信されたページ上のフォームへの参照。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> メソッドはポストバックのフォームに DHTML のリファレンスを提供します。 コード フラグメントでは、次の形式があります。  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> method if the markup for the browser supported by the adapter requires a different format for the postback form reference. For example, the HTML 3.2 standard used by PocketPC browsers requires the following format:  
  
 <c>document.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">A <see cref="T:System.String" /> の名前は、 <see cref="T:System.Web.UI.WebControls.RadioButton" /> グループを取得します。</param>
        <summary>指定したオプション ボタン コントロールのコレクションを取得して <paramref name="groupName" />します。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> の <see cref="T:System.Web.UI.WebControls.RadioButton" /> を構成するコントロール <paramref name="groupName" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ラジオ ボタン コントロールのアダプターを使用して、 <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> と <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> を他の参照方法 <xref:System.Web.UI.WebControls.RadioButton> グループ内のコントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページで、制御を維持し、状態の確認に使用されるオブジェクトを返します。</summary>
        <returns>派生したオブジェクト <see cref="T:System.Web.UI.PageStatePersister" /> を作成して、展開のすべてのコントロールとビューの状態をサポートする、 <see cref="T:System.Web.UI.Page" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Page.PageStatePersister%2A> プロパティは、 <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> から派生したオブジェクトを取得する方法、 <xref:System.Web.UI.PageStatePersister> を形成して、ページのすべてのコントロールとビューの状態を抽出するクラス。 ページに接続されている page 派生クラスのアダプターが存在しない場合、 <xref:System.Web.UI.HiddenFieldPageStatePersister> オブジェクトは、ページの非表示フィールドに状態を維持するために使用します。  
  
|リンクの種類|結果として得られるリンク|  
|------------|------------------|  
|エンティティ参照、cer をコードします。|<xref:System.Char.ToString%2A>|  
|コードのエンティティの参照を修飾 cerq|<xref:System.Char.ToString%2A?displayProperty=fullName>|  
|コードのエンティティの参照を特定、cer|<xref:System.Char.ToString%28System.Char%29>|  
|コードのエンティティの参照を修飾特定、cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=fullName>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>View state data stored by the <see cref="T:System.Web.UI.PageStatePersister" /> object in the internal <see langword="ClientState" /> property of the <see cref="T:System.Web.UI.Page" /> will always be saved in the hidden field on the Web page.</para>
        </block>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> method to return another derived page state persister if it is not feasible to maintain the combined state in a hidden field (for example, because of limited resources).  
  
 The <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> base class returns a <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> object. You can use the <see cref="T:System.Web.UI.SessionPageStatePersister" /> class to maintain the page state in session state.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">コレクションに追加する <see cref="T:System.Web.UI.WebControls.RadioButton" />。</param>
        <summary>指定したオプション ボタン グループのコレクションには、オプション ボタン コントロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter> クラスは、 <xref:System.Collections.Specialized.ListDictionary> オプション ボタン グループのリストを保持するオブジェクト。 内の各要素 <xref:System.Collections.Specialized.ListDictionary> のコレクションには、 <xref:System.Web.UI.WebControls.RadioButton> ラジオ ボタン グループ内のコントロールです。<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> メソッドは、追加、 <xref:System.Web.UI.WebControls.RadioButton> 存在していない場合は、コレクションを作成して、作成は、適切なコレクションにコントロール <xref:System.Collections.Specialized.ListDictionary> が以前登録されている場合 <xref:System.Web.UI.WebControls.RadioButton> コントロールです。  
  
 ラジオ ボタン コントロールのアダプターを使用して、 <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> と <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> を他の参照方法 <xref:System.Web.UI.WebControls.RadioButton> ラジオ ボタン グループ内のコントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力を表示するメソッドを含みます。</param>
        <param name="targetUrl">
          <see cref="T:System.String" /> リンクのターゲット URL を保持します。</param>
        <param name="encodeUrl">
          <see langword="true" /> 使用する <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> ; の出力ストリームのエンコードにそれ以外の場合、 <see langword="false" />です。</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> ソフト キーのラベルとして使用する値。</param>
        <summary>開始のレンダリングを応答ストリームへのターゲット URL を含むハイパーリンク タグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、開始を書き込みます。 ハイパーリンク タグ。`writer` は <xref:System.Web.UI.HtmlTextWriter>, 、このタグは、次の形式。  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## 例  
 次のコード例では、という名前のクラスを派生 `CustomPageAdapter` から、 <xref:System.Web.UI.Adapters.PageAdapter> クラスをオーバーライド、 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドです。<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドという名前の属性を追加する `src` これをハイパーリンクに現在のページへの参照が含まれています。 先のページに表示されるすべてのハイパーリンク `CustomPageAdapter` がアタッチされているが、 `src` 属性です。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> method to write a different format for an opening hyperlink tag or to write additional tag attributes. For example, the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> base method does not write an attribute for <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力を表示するメソッドを含みます。</param>
        <param name="targetUrl">
          <see cref="T:System.String" /> リンクのターゲット URL を保持します。</param>
        <param name="encodeUrl">
          <see langword="true" /> 使用する <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> ; の出力ストリームのエンコードにそれ以外の場合、 <see langword="false" />です。</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> ソフト キーのラベルとして使用する値。</param>
        <param name="accessKey">
          <see cref="T:System.String" /> に代入する値、 <see langword="accessKey" /> を作成するリンクの属性です。</param>
        <summary>開始のレンダリング ターゲット URL と応答ストリームへのアクセス キーを含むハイパーリンク タグ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドは、開始を書き込みます。 ハイパーリンク タグ。`writer` は、 <xref:System.Web.UI.HtmlTextWriter> のオブジェクト、このタグは、次の形式。  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## 例  
 次のコード例では、という名前のクラスを派生 `CustomPageAdapter` から、 <xref:System.Web.UI.Adapters.PageAdapter> クラスをオーバーライド、 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> メソッドです。<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> という名前の属性を追加 `src` これをハイパーリンクに現在のページへの参照が含まれています。 先のページに表示されるすべてのハイパーリンク `CustomPageAdapter` がアタッチされているが、 `src` 属性です。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> 1 つの文字を超えています。</exception>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> method to write a different format for an opening hyperlink tag or to write additional tag attributes. For example, the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> base method does not write an attribute for <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力をレンダリングするメソッドを格納しています。</param>
        <summary>応答ストリームにハイパーリンクの終了タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> メソッドは、終了、書き込みますハイパーリンク タグ。 テキスト ライターの場合は、 <xref:System.Web.UI.HtmlTextWriter> のオブジェクト、このタグは、次の形式。  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> and <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> methods when a different format of hyperlink must be rendered.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力を表示するメソッドを含みます。</param>
        <param name="target">
          <see cref="T:System.String" /> ポストバック イベント ターゲット名を保持します。</param>
        <param name="argument">
          <see cref="T:System.String" /> ポストバックのターゲット イベントに渡す引数を保持します。</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> ソフト キーのラベルとして使用する値。</param>
        <param name="text">
          <see cref="T:System.String" /> リンクとして表示するテキストの値。</param>
        <summary>ポストバック イベントを応答ストリームにエンコードおよび場合によって暗号化されたビュー ステート、およびイベント ターゲットと引数など、ハイパーリンクとしてレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> メソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> method if a different format is required for the postback event hyperlink or the browser has other unique requirements. For example, some browsers require the hyperlink text to be nonempty if the link is to render. You can also override <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> if limited resources prevent including the view state as a URL parameter. The <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> base method does not write an attribute for <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力を表示するメソッドを含みます。</param>
        <param name="target">
          <see cref="T:System.String" /> ポストバック イベント ターゲット名を保持します。</param>
        <param name="argument">
          <see cref="T:System.String" /> ポストバックのターゲット イベントに渡す引数を保持します。</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> ソフト キーのラベルとして使用する値。</param>
        <param name="text">
          <see cref="T:System.String" /> リンクとして表示するテキストの値。</param>
        <param name="postUrl">
          <see cref="T:System.String" /> ポストバックの URL ターゲット ページを保持する値。</param>
        <param name="accessKey">
          <see cref="T:System.String" /> に割り当てるために使用する値、 <see langword="accessKey" /> 、作成したリンクの属性です。</param>
        <summary>ポストバック イベントを応答ストリームにエンコードおよび場合によって暗号化されたビュー ステート、イベント ターゲットと引数、前のページのパラメーター、およびアクセス キーを含む、ハイパーリンクとしてレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> おそらくチャンクを含むメソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます <xref:System.Web.HttpUtility.UrlEncode%2A> ビュー ステート `__EVENTTARGET``=target`, 、`__EVENTARGUMENT``=argument`, 、`__PREVIOUSPAGE=``currentFilePath` パラメーター、および `accessKey="``accessKey``"` 属性です。  
  
 場合にビュー ステートが暗号化されて、 `enableViewStateMac` の属性、 [pages 要素 \(ASP.NET 設定スキーマ\)](http://msdn.microsoft.com/ja-jp/4123bb66-3fe4-4d62-b70e-33758656b458) に設定されている構成要素 `true`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> method if a different format is required for the postback event hyperlink or the browser has other unique requirements. For example, some browsers require the hyperlink text to be nonempty if the link is to render. You can also override <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> if limited resources prevent including the view state as a URL parameter. The <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> base method does not write an attribute for <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ターゲット固有の出力を表示するメソッドを含みます。</param>
        <param name="target">
          <see cref="T:System.String" /> ポストバック イベント ターゲット名を保持します。</param>
        <param name="argument">
          <see cref="T:System.String" /> ポストバックのターゲット イベントに渡す引数を保持します。</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> ソフト キーのラベルとして使用する値。</param>
        <param name="text">
          <see cref="T:System.String" /> リンクとして表示するテキストの値。</param>
        <param name="postUrl">
          <see cref="T:System.String" /> ポストバックの URL ターゲット ページを保持する値。</param>
        <param name="accessKey">
          <see cref="T:System.String" /> に代入する値、 <see langword="accessKey" /> 、作成したリンクの属性です。</param>
        <param name="encode">
          <see langword="true" /> 使用する <c>&amp;amp;</c> URL パラメーター区切り記号として <see langword="false" /> を使用する <c>&amp;</c>です。</param>
        <summary>ポストバック イベントを応答ストリームにエンコードされたビュー ステート、イベント ターゲットと引数、前のページのパラメーター、およびアクセス キーを含む、ハイパーリンクとしてレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> おそらくチャンクを含むメソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます <xref:System.Web.HttpUtility.UrlEncode%2A> ビュー ステート `__EVENTTARGET``=``target`, 、`__EVENTARGUMENT``=``argument`, 、`__PREVIOUSPAGE`\=`currentFilePath` パラメーター、および `accessKey`\="`accessKey`"属性です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override the <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> method if a different format is required for the postback event hyperlink or the browser has other unique requirements. For example, some browsers require the hyperlink text to be nonempty if the link is to render. You can also override <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> if limited resources prevent including view state as a URL parameter. The <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> base method does not write an attribute for <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">A <see cref="T:System.String" /> を変換するテキストであります。</param>
        <summary>対象のブラウザーのテキストに変換します。</summary>
        <returns>A <see cref="T:System.String" /> 変換するテキストを格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> メソッドできます、たとえば、タブ文字に変換する \(`\t`\) には、改行 \(`\n`\)。  
  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> 基本メソッドを返します。 `text` 変更されません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you inherit from the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> class, you can override <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> if a particular markup has a construct with a different form from standard HTML. For example, if a browser requires a different identifier for a tag than what would be used in HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> method can be overridden to find that tag and change it.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>必要なすべての引数も含めて、リンクとして、応答ストリームにポストバック イベントを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>応答ストリームにハイパーリンクの開始タグをレンダリングします。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>