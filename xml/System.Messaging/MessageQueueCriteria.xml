<Type Name="MessageQueueCriteria" FullName="System.Messaging.MessageQueueCriteria">
  <TypeSignature Language="C#" Value="public class MessageQueueCriteria" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueCriteria extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueCriteria" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>フィルターのメッセージ キューを使用してクエリを実行するときに、 <see cref="T:System.Messaging.MessageQueue" /> クラスの <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> メソッドです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueue> クラスには、多数のネットワーク上のパブリック キューの検索をフィルター処理するためのメソッドが用意されています。 キューのラベル、カテゴリ、またはサーバーの場所でフィルター処理の特定のメソッドは、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A>, 、<xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A>, 、および <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A>です。  
  
 <xref:System.Messaging.MessageQueueCriteria> クラスを使用すると、 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> メソッドでは、フィルターで絞りすることができます。 いずれかを使用して実現以外に、検索条件を指定できます、 `GetPublicQueuesBy`\* メソッド、または複数の条件でします。 渡すことができます、 <xref:System.Messaging.MessageQueueCriteria> インスタンスを <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 検索、たとえば、キューの作成や変更の時間、キューにあるコンピューター、キューのラベルまたはカテゴリ、またはこれらのプロパティの任意の組み合わせによってするためにメソッドです。  
  
 適用することで、基準を作成、複数のプロパティでフィルター処理するとき、 `AND` 一連のプロパティに演算子。 したがっての値を指定すると、 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> プロパティと、 <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> プロパティには、要求している、指定された時間後に作成されたに置かれているすべてのキューに対して特定のコンピューターでします。  
  
 任意のプロパティを設定するとプロパティを設定するメソッドはまた、構築するフィルターに含めるかを示すフラグを設定します。 検索フィルターから個々 のプロパティを削除することはできません。 代わりに、プロパティを削除するすべてのフィルターから呼び出すことによって <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>, 、検索フィルターを構築するプロパティを設定します。<xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> 既定の「設定されていない」状態には、すべてのプロパティをリセットします。  
  
 それを読み取る前にプロパティを設定する必要があります。それ以外の場合、例外がスローされます。  
  
   
  
## 例  
 次の例では、メッセージ キューを反復処理し、コンピューター"MyComputer"に存在する最後の日で作成したキューのパスが表示されます。  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator\_criteria\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator\_criteria\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator\_criteria\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueCriteria ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueCriteria" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカテゴリをする、ネットワーク上のキューにフィルターを設定します。</summary>
        <value>キューのカテゴリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューのカテゴリは、アプリケーションのキューを分類できます。 たとえば、1 つのカテゴリとすべての受注キューを別に課金のすべてのキューを配置できます。<xref:System.Messaging.MessageQueue.Category%2A> プロパティは、アプリケーションで定義し、メッセージ キューに特別な意味を持ちません。  
  
 メソッドを使用することのみをカテゴリ別のフィルタ リング、ネットワーク上のキューを検索するときに場合、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A>, 、この目的用に作られています。 カテゴリを含む複数の条件で検索する場合は、設定 <xref:System.Messaging.MessageQueueCriteria.Category%2A> プロパティにパラメーターを渡すと <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="ClearAll">
      <MemberSignature Language="C#" Value="public void ClearAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.ClearAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>フィルターに組み込まれているからすべてのプロパティをクリアし、「未設定」の状態にすべてのプロパティ値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出すと <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>, 、メソッドは、それぞれに関連するフラグを設定、 <xref:System.Messaging.MessageQueueCriteria> プロパティは、アプリケーションは、検索フィルターを作成するときに含まれるプロパティがないことを示します。<xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> 現在の値を「未設定」既定の状態にあるすべてのプロパティをリセットします。 後で変更する任意のプロパティは、論理を使用して結合 `AND` の新しいフィルターを定義する演算子、 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> メソッドです。 プロパティを変更したときにプロパティを設定するメソッドはまた、構築するフィルターに含めるかを示すフラグを設定します。  
  
 検索フィルターから個々 のプロパティを削除することはできません。 代わりに、プロパティを削除するすべてのフィルターから呼び出すことによって <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>, 、検索フィルターを構築するプロパティを設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAfter">
      <MemberSignature Language="C#" Value="public DateTime CreatedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはネットワーク上のキューにフィルターをキューの作成の日付と時刻の下限の境界を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> キューの作成の日付と時刻の下限の境界を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueCriteria> プロパティは、論理を使用して結合 `AND`, 両方を設定するため、 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> と <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> キューの作成の時間間隔を制限します。 のみに設定した場合 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>, 、日付の上限はありません。  
  
 設定しようとすると <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> を後で <xref:System.DateTime> 値よりも <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>, 、<xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> は、\(新しい\) と同じ値にリセット <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="CreatedBefore">
      <MemberSignature Language="C#" Value="public DateTime CreatedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはネットワーク上のキューにフィルターをキューの作成の日付と時刻の上限を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> にキューの作成の日付と時刻の上限を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueCriteria> プロパティは、論理を使用して結合 `AND`, 両方を設定するため、 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> と <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> キューの作成の時間間隔を制限します。 のみに設定した場合 <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>, 、日付の下限境界はありません。  
  
 設定しようとすると <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 以前に <xref:System.DateTime> 値よりも <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A>, 、<xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> は、\(新しい\) と同じ値にリセット <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはネットワーク内のキューにフィルターをラベルに設定します。</summary>
        <value>キューのラベル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージ キューのラベルは、キューのアプリケーション定義の説明です。 メッセージ キューに、本来の意味はありません。  
  
 メソッドを使用する場合のみ、ラベルのフィルタ リング、ネットワーク上のキューを検索するときに、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A>, 、この目的用に作られています。 ラベルを含む複数の条件で検索する場合は、設定 <xref:System.Messaging.MessageQueueCriteria.Label%2A> プロパティにパラメーターを渡すと <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ネットワーク上のキューにフィルターをコンピューター名を設定します。</summary>
        <value>キューが存在するコンピューターのサーバー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージ キューの <xref:System.Messaging.MessageQueue.MachineName%2A> キューが存在することがなく、円記号 \(\\\) の前に、サーバーの名前が反映されます。  
  
 メソッドを使用する場合は、コンピューターの名前のみでのフィルタ リング、ネットワーク上のキューを検索するときに、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A>, 、この目的用に作られています。 コンピューター名を含む複数の条件で検索する場合は、設定 <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> プロパティにパラメーターを渡すと <xref:System.Messaging.MessageQueue.GetPublicQueues%2A>です。  
  
 内のコンピューター名を指定することによって、ネットワーク上の専用キューを検索することもできる、 <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> それを読み取る前にプロパティです。  
  
 または  
  
 コンピューター名の構文が正しくありません。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedAfter">
      <MemberSignature Language="C#" Value="public DateTime ModifiedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはネットワーク上のキューにフィルターをキューが変更された日付と時刻の下限の境界を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> キューの最後が変更された日付と時刻の下限の境界を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューの変更フラグを設定するは、メッセージが読み込まれたり、キューに書き込まれるときではなくが、キューのプロパティを変更すると。  
  
 <xref:System.Messaging.MessageQueueCriteria> プロパティは、論理を使用して結合 `AND`, 両方を設定するため、 <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> と <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> キューの最後に変更の時間間隔を制限します。 のみに設定した場合 <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>, 、日付の上限はありません。  
  
 設定しようとすると <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> を後で <xref:System.DateTime> 値よりも <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>, 、<xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> は、\(新しい\) と同じ値にリセット <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedBefore">
      <MemberSignature Language="C#" Value="public DateTime ModifiedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはネットワーク上のキューにフィルターをキューが変更された日付と時刻の上限を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> にキューの最後が変更された日付と時刻の上限を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューの変更フラグを設定するは、メッセージが読み込まれたり、キューに書き込まれるときではなくが、キューのプロパティを変更すると。  
  
 <xref:System.Messaging.MessageQueueCriteria> プロパティは、論理を使用して結合 `AND`, 両方を設定するため、 <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> と <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> キューの最後に変更の時間間隔を制限します。 のみに設定した場合 <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>, 、日付の下限境界はありません。  
  
 設定しようとすると <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> 以前に <xref:System.DateTime> 値よりも <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A>, 、<xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> は、\(新しい\) と同じ値にリセット <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アプリケーションが設定していない、 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> それを読み取る前にプロパティです。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
  </Members>
</Type>