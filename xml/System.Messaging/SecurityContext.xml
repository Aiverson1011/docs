<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>キュー内のメッセージのセキュリティ コンテキストを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 セキュリティ コンテキストには、内部証明書など、対応する秘密キー、ユーザーの SID の認証を要求するときに、証明書と送信者 id をメッセージに添付するために必要なキャッシュされたセキュリティ情報が含まれています。  
  
 ASP.NET アプリケーションなどのクライアントは、キューにメッセージを送信するユーザーを偽装する、キューにアクセスするユーザーの id が使用されます。 キューがリモートの場合これらの資格情報がキャッシュされ、後で、キューに送信されるメッセージに使用します。 そのため、以降のメッセージで SID は、最初にキューにメッセージを送信したユーザーのキャッシュされた id になります。 最初にキューにメッセージを送信したユーザーのキャッシュされた id は、後続のユーザーに使用されます。  
  
 この問題を解決するには、設定、セキュリティ コンテキストを使用して <xref:System.Messaging.Message.SecurityContext%2A> 現在のユーザーの資格情報がキューにアクセスするために使用されるようにするリモート キューにメッセージを送信する前にします。 ただし、推奨されるベスト プラクティスには。  
  
1.  認証済みのキューのキューを作成します。  
  
2.  ASP.NET アプリケーションを使用してドメイン id として実行し、キューに書き込むには、そのアプリケーションを認証します。  
  
3.  キューの使用時にユーザーを偽装しません。 代わりに、呼び出し元の id を取得し、ASP.NET アプリケーションの承認チェックを実行するか、メッセージの一部として呼び出し元の id を含めるし、受信側のアプリケーションの承認チェックを実行します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.SecurityContext" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>