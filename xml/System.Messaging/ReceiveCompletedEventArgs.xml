<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> イベントのデータを提供します。 非同期の受信操作は、イベント ハンドラーを呼び出す、このクラスのインスタンスは、ハンドラーに渡されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューから非同期的にメッセージを受信するイベント通知を使用する場合は、メッセージ処理を行うメソッドを作成する必要があります。 コードを呼び出す必要があります <xref:System.Messaging.MessageQueue.BeginReceive%2A> 非同期処理を開始します。 を介して、アプリケーションが通知メッセージを受信すると、 <xref:System.Messaging.MessageQueue.ReceiveCompleted> イベントです。 インスタンス <xref:System.Messaging.ReceiveCompletedEventArgs> イベント ハンドラーを呼び出し、イベント デリゲートに渡されます。 関連付けられているデータ、 <xref:System.Messaging.MessageQueue.ReceiveCompleted> デリゲートにイベントが含まれている <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> パラメーター。  
  
 イベントの完了通知を提供する 2 つの方法があります: イベント通知とコールバックします。<xref:System.Messaging.ReceiveCompletedEventArgs> イベント通知でのみ使用されます。 コールバックとイベント通知の比較については、"イベントとを参照してください。MSDN の"コールバックします。  
  
 <xref:System.Messaging.ReceiveCompletedEventArgs> アクセスによって操作を受け取る非同期の終了を開始したメッセージに、 <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> メンバーです。 これは、メッセージへのアクセスを代替であり、動作を呼び出した場合とほぼ同じ <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>します。  
  
   
  
## 例  
 次のコード例のイベント ハンドラーの作成、 <xref:System.Messaging.MessageQueue.ReceiveCompleted> イベントと関連コンポーネントを使用して委任イベントで、 <xref:System.Messaging.ReceiveCompletedEventHandler>です。 イベント ハンドラー `MyReceiveCompleted`, キューからメッセージを受信、および本文を画面に書き込みます。  
  
 [!code-cpp[MessageQueue.ReceiveCompleted\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または要求された非同期操作の結果を設定します。</summary>
        <value>A <see cref="T:System.IAsyncResult" /> 受信操作に関連付けられているデータが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> 進行中または完了した非同期操作を識別します。 プロパティが完了するにはいくつかの潜在的な非同期操作を特定するのに役立つデータを格納でき、イベント ハンドラーに渡されると、 <xref:System.Messaging.MessageQueue.EndReceive%2A> 、完了した操作に関連付けられているメッセージにアクセスします。  
  
 呼び出すと <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 、 <xref:System.IAsyncResult> 場合でも、メッセージ、1 つ存在する場合はまだ取得されていない操作が完了していないため、すぐに返されます。<xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> 非同期操作の状態を示します。<xref:System.Messaging.MessageQueue.BeginReceive%2A> までの操作で変更されると、オブジェクトを作成 <xref:System.Messaging.MessageQueue.EndReceive%2A> それを完了します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>受信操作を非同期に関連付けられたメッセージを取得。</summary>
        <value>A <see cref="T:System.Messaging.Message" /> 末尾を表す非同期の結果には、操作が表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> プロパティは、非同期の終了を開始したメッセージを取得するための手段の受信操作します。  
  
 <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName> 最初に呼び出されます、 <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> を呼び出す必要はありませんので、プロパティが読み取り <xref:System.Messaging.MessageQueue.EndReceive%2A> 前に、このプロパティの値を取得します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> を取得できませんでした。 非同期操作のタイムアウトの有効期限が切れている可能性があります。</exception>
      </Docs>
    </Member>
  </Members>
</Type>