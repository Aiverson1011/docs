<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>以外のオブジェクトを送信するときに使用される既定のプロパティ値を指定 <see cref="T:System.Messaging.Message" /> をメッセージ キューのインスタンス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値を設定するには選択したプロパティに送信されたメッセージを <xref:System.Messaging.MessageQueue>です。<xref:System.Messaging.DefaultPropertiesToSend> 既定のプロパティの値を指定するために使用以外のオブジェクトの場合に送信されるメッセージ <xref:System.Messaging.Message> インスタンスは、キューに送信に文字列引数が渡されるなど、 <xref:System.Messaging.MessageQueue.Send%2A> メソッドのコード片 `myMessageQueue.Send("hello")`します。<xref:System.Messaging.Message> クラスには同じ名前のプロパティでは、対応する <xref:System.Messaging.DefaultPropertiesToSend> を送信するときに、値を指定する、 <xref:System.Messaging.Message> 具体的にはインスタンス化します。 指定した場合でも <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> 、キュー、送信、 <xref:System.Messaging.Message> そのキューへのオブジェクトと同じ名前の値、 <xref:System.Messaging.Message> 、キューをオーバーライドするプロパティ <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 値。  
  
 明示的に設定しないプロパティは、既定では、コンス トラクターで指定された値 <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>です。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Messaging.DefaultPropertiesToSend>, を参照してください、 <xref:System.Messaging.DefaultPropertiesToSend> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、メッセージの優先順位を使用して、メッセージを送信する既定のプロパティを決定します。  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.DefaultPropertiesToSend" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを作成する <xref:System.Messaging.DefaultPropertiesToSend> の種類が、キューに送信されるオブジェクトに関連付ける既定のプロパティの値を定義する <xref:System.Messaging.Message>です。 使用するときに <xref:System.Messaging.MessageQueue> オブジェクト、 <xref:System.Messaging.DefaultPropertiesToSend> インスタンスが自動的に作成され、関連付け、 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> のメンバー、 <xref:System.Messaging.MessageQueue>です。  
  
 次の c\# コードに示すように送信する場合、キューの既定のプロパティを定義する 2 つの方法があります。 このインスタンスの値を設定する <xref:System.Messaging.DefaultPropertiesToSend> し、キューに関連付ける <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> プロパティ。  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 またはに値を個別に割り当てることができます、 <xref:System.Messaging.MessageQueue> インスタンスの <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> プロパティを直接。  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 2 番目のこれらのオプションを選択した場合を呼び出す必要はありません、 <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> のコンス トラクターに明示的にします。 インスタンスを作成する <xref:System.Messaging.DefaultPropertiesToSend>, などのかどうか、プロパティの既定値は、送信されるメッセージのいくつかの条件に依存します。 複数作成 <xref:System.Messaging.DefaultPropertiesToSend> をインスタンス化し、キューのアカウントを割り当てます <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> キューにメッセージを送信する前にプロパティです。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。 <xref:System.Messaging.DefaultPropertiesToSend>します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|0|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|バイトの長さ 0 の配列|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|空の文字列 \(""\)|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信元アプリケーションに返される受信確認メッセージの種類を設定します。</summary>
        <value>
          <see cref="T:System.Messaging.AcknowledgeTypes" /> 列挙値のいずれか。 この値は、管理キューにし、受信確認が送信元アプリケーションに返されるときに、システムは post 受信確認メッセージの種類を判断に使用されます。 既定値は、<see langword="AcknowledgeTypes.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> プロパティは、送信元アプリケーションに返す受信確認メッセージの種類を指定します。 たとえば、設定、 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> プロパティ通知を要求するメッセージが取得されるとき、宛先に達すると、またはタイムアウトするかどうかが発生しました、メッセージに到達するか、送信先キューから取得されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージ キューによって生成された受信確認メッセージを受け取るキューを設定します。</summary>
        <value>
          <see cref="T:System.Messaging.MessageQueue" /> システム生成の受信確認メッセージを使用する管理キューを指定します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたキュー、 <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> プロパティは、任意の非トランザクション キューを使用できます。 管理キューに送信される受信確認メッセージは、元のメッセージが、送信先キューに到達したかどうかが、キューから削除されたかどうかを示すことができます。  
  
 ときに、 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> プロパティ以外の任意の値を持つ `None`, 、送信元アプリケーションは、管理キューとして使用するキューを指定する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアプリケーション固有の追加情報を設定します。</summary>
        <value>アプリケーションに固有の情報です。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> プロパティはアプリケーション固有のインデックスを使用してメッセージなどのさまざまな種類の編成に使用できるその他のアプリケーション固有の情報を格納します。 これは、解釈は、アプリケーションの責任です <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> 情報。  
  
 メッセージ データではなく、メッセージの本文に含めるか、可能であれば、 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> プロパティです。  
  
 外部キューを使用する場合に使用して、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> プロパティをメッセージ キュー以外のメッセージのプロパティを指定します。 同様に <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, の内容を理解するアプリケーションの機能により、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信者 ID をメッセージに添付する必要があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> メッセージに送信者 ID を関連付ける場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 送信者 ID は、送信元ユーザーの識別子を表すバイトの配列です。 送信者 ID は、メッセージ キューによって設定し、送信者が、キューへのアクセス権を持つかどうかを確認する受信側キュー マネージャーを使用します。 送信者 ID では、信頼できるは、メッセージが送信先キューに達したときに認証された場合のみです。  
  
 送信者 ID は、メッセージにアタッチされておらず、メッセージが送信先キューに送信されることメッセージ キューもメッセージの送信者が検証されていないは必要があります、送信元アプリケーションを示します。 送信先キューは、認証されたメッセージは、そのいずれかにのみ受け入れる場合 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> または <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> は `false`, 、キューになったときに、メッセージは拒否されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはプライベート メッセージの本文を暗号化するために使用する暗号化アルゴリズムを設定します。</summary>
        <value>
          <see cref="T:System.Messaging.EncryptionAlgorithm" /> 列挙値のいずれか。 既定値は、<see langword="RC2" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージがプライベートである場合は、送信して、受信されるときに暗号化が解除する前に暗号化されます。<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> プロパティがプライベート メッセージのメッセージ本文を暗号化するために使用するアルゴリズムを指定します。  
  
 キューは、その受信を要求できますメッセージが暗号化されます。 \(プライベートではない\) で暗号化されていないメッセージがプライベート メッセージだけを受け取るキューに送信された場合、または秘密のメッセージが非プライベート メッセージだけを受け入れるキューに送信される場合は、メッセージはキューによって拒否されます。 送信元アプリケーションは、メッセージが拒否された場合、否定受信確認メッセージが送信元アプリケーションに返される要求できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージに関連付けられている追加の情報を設定します。</summary>
        <value>メッセージに関連付けられているアプリケーション定義の追加情報を提供するバイト配列。 既定では長さ 0 の配列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> プロパティに、ラージ バイナリ オブジェクトなどのメッセージに関連付けられているアプリケーション定義の追加情報を提供します。 受信側アプリケーションの内容を解釈するの機能により、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>です。  
  
 可能であれば、メッセージ データは、拡張機能ではなく、メッセージの本文に含める必要があります。  
  
 外部キューを使用する場合に使用して、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> プロパティをメッセージ キュー以外のメッセージのプロパティを指定します。  
  
 外部のキューは、Microsoft メッセージ キュー以外のキュー システムに存在します。 Microsoft メッセージ キューは、コネクタ アプリケーションによっては、このようなキューと通信します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージを認証するときに使用されるアルゴリズムをハッシュまたはメッセージのデジタル署名の作成を設定します。</summary>
        <value>
          <see cref="T:System.Messaging.HashAlgorithm" /> 列挙値のいずれか。 既定値は、<see langword="MD5" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> プロパティは、メッセージ キューがメッセージを認証するときに、またはメッセージのデジタル署名を作成するときに使用するハッシュ アルゴリズムを識別します。  
  
 ソース コンピューターのメッセージ キューは、メッセージのデジタル署名を作成するときに、ハッシュ アルゴリズムを使用します。 ターゲット キュー マネージャーは、同じハッシュ アルゴリズムを使用して、受信されるときにメッセージを認証します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージを記述するアプリケーション定義の文字列を設定します。</summary>
        <value>メッセージのラベルです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、または選択的にメッセージを処理するラベルの値に基づいて、表示目的で、メッセージ ラベルを使用できます。 メッセージ ラベルの最大文字数は 249 の Unicode 文字です。 ラベルは、メッセージで一意である必要はありません。  
  
 メッセージ キューとメッセージ ラベルは、人間が判読できる用語では、キューやメッセージを識別するために役立つアプリケーション定義の値を表します。 ラベルの内容を解釈するアプリケーションの役目です。メッセージ キュー アプリケーションが、特別な意味をあるありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを使用して、メッセージをキューに配置する場所を決定するメッセージの優先度を設定します。</summary>
        <value>いずれか、 <see cref="T:System.Messaging.MessagePriority" /> 非トランザクション メッセージの優先度レベルを表す列挙値。 既定値は、<see langword="Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> プロパティは、途中になっているメッセージを処理するメッセージ キュー方法だけでなくその送信先に到達すると、メッセージがキューに格納される場所に影響します。 高い優先度のメッセージは優先的にルーティングし、キューの先頭近くに挿入します。 優先順位の同じメッセージは、到達時刻に応じてキュー内に配置されます。  
  
 メッセージの優先度は、非トランザクション メッセージを明確のみ設定できます。 トランザクション メッセージの優先度が自動的に設定 `Lowest`, 、それが原因でトランザクション メッセージの優先順位は無視されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンピューターの障害やネットワークの問題が発生した場合に配信されるメッセージが保証されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 巡航; 中にディスクに保存することによって、メッセージが配信を保証される場合 <see langword="false" /> 配信が保証されていない場合。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> プロパティは、メッセージが送信先キューに向かっている間も、コンピューターがクラッシュした場合でも、メッセージの配信が保証されているかどうかを示します。  
  
 メッセージの配信が保証される場合、メッセージがローカルに格納経路上のあらゆる段階で、メッセージは、次のコンピューターに正常に転送されるまでです。 設定 <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> に `true` に <xref:System.Messaging.DefaultPropertiesToSend> 、スループットに影響を与える可能性があります。  
  
 メッセージがトランザクションの場合は、メッセージ キューとして自動的に処理メッセージかどうかに関係なく、回復可能な <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> に設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションによって生成される応答メッセージを受け取るキューを取得または設定します。</summary>
        <value>
          <see cref="T:System.Messaging.MessageQueue" /> するアプリケーションによって生成される応答メッセージが返されます。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> プロパティは、受信側アプリケーションでの送信元アプリケーションに返されるアプリケーションによって生成される応答メッセージを受信するキューを識別します。 応答キューは、アプリケーションがそのメッセージを送信するときに、送信元アプリケーションによって指定されます。 使用できる任意のキューを応答キューとして指定できます。  
  
 応答キューに対して返されるメッセージは、アプリケーション固有です。 アプリケーションがメッセージの機能を定義する必要がありますがどのようなメッセージを受信したときに行われるとします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージが送信先キューから取得されるまでの時間制限を設定します。</summary>
        <value>合計時間 \(秒単位\) が送信先キューから受信されるまで、送信されたメッセージ。 既定値は、<see cref="F:System.Messaging.Message.InfiniteTimeout" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> プロパティが送信されたメッセージが送信先キューから受信するまでの秒単位の時間の合計を指定します。 この制限時間には、送信先キューに費やされた時間が含まれています。 さらに、メッセージがアプリケーションによって取得される前に、キューで待機しているが費やした時間。  
  
> [!CAUTION]
>  依存型クライアント コンピューターを使用する場合は、メッセージ キューを実行するサーバーのクロックにクライアント コンピューターのクロックを同期します。 2 つの時計が同期していない場合は、メッセージを送信すると予期しない動作を表示があります <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> は <xref:System.Messaging.Message.InfiniteTimeout>です。  
  
 場合、 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 、メッセージがキューから削除する前に、間隔に達すると、メッセージ キュー アプリケーションはメッセージを破棄します。 メッセージ配信不能キューに送信されるいずれかの場合は、メッセージの <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> にプロパティが設定されている `true`, 、または無視されますが、 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> は `false`です。 場合 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> がより小さい <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, 、<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> が優先されます。  
  
 メッセージの <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> 送信を要求するメッセージ キュー否定受信確認メッセージ、送信元アプリケーションに、タイマーの有効期限が切れる前に、メッセージが取得されない場合にプロパティを設定することができます。  
  
> [!CAUTION]
>  表示されるように指定した場合 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 否定受信確認を受信しませんするときの値 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> の値よりも小さい <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>します。  
  
 トランザクションで複数のメッセージが送信されると、最初のメッセージの値を使用してメッセージ キュー <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューに到達するメッセージの期限を設定します。</summary>
        <value>メッセージを時間から送信先に到達するまでの秒単位の時間制限が送信されます。 既定値は、<see cref="F:System.Messaging.Message.InfiniteTimeout" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> メッセージが宛先に到達する前に、間隔に達すると、メッセージ キュー アプリケーションはメッセージを破棄します。 メッセージ配信不能キューに送信されるいずれかの場合は、メッセージの <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> にプロパティが設定されている `true`, 、または無視されますが、 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> は `false`です。 場合 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> よりも大きい <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, 、<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> が優先されます。  
  
 メッセージの <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> 送信を要求するメッセージ キュー否定受信確認メッセージ、送信元アプリケーションに、タイマーの有効期限が切れる前に、メッセージが到着しない場合にプロパティを設定することができます。  
  
 場合 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 0 秒は、メッセージ キューは 1 回、キューがメッセージを待機している場合、その送信先にメッセージを送信します。 キューがローカルの場合、メッセージが常にキューに到達しました。  
  
 トランザクションで複数のメッセージが送信されると、最初のメッセージの値を使用してメッセージ キュー <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース コンピューター上のトランザクション状態キューを取得します。</summary>
        <value>送信元アプリケーションに戻る受信確認メッセージを送信するために使用されるソース コンピュータ上のトランザクション状態キュー。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> プロパティは、ソース コンピュータのトランザクション状態キューを識別します。 プロパティは、メッセージ キューが設定され、外部のキューに送信されたトランザクション メッセージを取得するときに、コネクタ アプリケーションによって使用されます。  
  
 外部のキューは、Microsoft メッセージ キュー以外のキュー システムに存在します。 Microsoft メッセージ キューは、コネクタ アプリケーションによっては、このようなキューと通信します。  
  
 コネクタ アプリケーションは、トランザクション状態キューを使用して、受信確認メッセージを送信元アプリケーションに送信することができます。 トランザクション状態キューは、送信元アプリケーションが別の受信確認を要求していない場合でも、これらの確認を受信する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信される前に、メッセージを認証する必要があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 送信元アプリケーションがメッセージの認証を要求した場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> プロパティは、メッセージを認証する必要があるかどうかを指定します。 送信元アプリケーションは、認証を要求している場合はメッセージ キュー、デジタル署名を作成しが送信されるメッセージに署名し、メッセージの認証を受信したときにそれを使用します。  
  
 場合は、キューに達すると、メッセージは拒否のみ認証済みのメッセージを受け取るキューにメッセージを送信すると場合、 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> に設定されている `false`します。  
  
 メッセージのプロパティを確認し、メッセージが認証に失敗したかどうかを判断することはできません。 認証に失敗したメッセージは破棄され、キューに配信されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または配信不能キューに配信できなかったメッセージのコピーを送信するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、配信不能キューに送信されるメッセージのコピーのメッセージ配信エラーが生成されますそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> メッセージ キューしてメッセージを追跡する方法を指定します。 場合 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> は `true`, 、\(たとえば、メッセージ タイマの有効期限\) 場合、メッセージを配信できませんでしたコンピューター上の非トランザクション配信不能キューへの非トランザクション メッセージの配信の失敗が発生した場合、メッセージを送信します。  
  
 トランザクション メッセージの配信エラーの場合、メッセージは、常に負の値と、状態が不明のソース コンピュータ上のトランザクション配信不能キューに送信されます。  
  
 配信不能キューにメッセージを格納する場合はもう必要ないメッセージを削除するには、定期的にキューを空にします。 キューが存在するコンピューターのサイズ クォータに対して配信不能キューに格納されたメッセージです。 コンピューターのクォータは、管理者が設定されているし、1 つのキューではなく、コンピューターにメッセージを格納するために割り当てられた合計サイズを示します。  
  
 履歴キューまたは配信不能キューを作成しません。 これらは、どちらもメッセージ キューによって生成されるシステム キューです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージをプライベートにするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> メッセージ キュー メッセージの暗号化を要求するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージがプライベートである場合、送信して、受信されるときに暗号化が解除する前に、本文が暗号化されます。 その暗号化を使用するプライベート メッセージを送信する送信元のアプリケーションを指定する必要があり、必要に応じて、暗号化アルゴリズムを適用します。  
  
 プライベート メッセージを送信するときに、アプリケーションがメッセージの暗号化を実行する必要はありません。 メッセージ キューは、アプリケーションは、Microsoft Windows 2000 エンタープライズ内のメッセージを送信するときのメッセージ本文を暗号化できますが、ディレクトリ サービスにアクセスします。 プライベート メッセージを受信する場合、メッセージ本文を復号化する受信側キュー マネージャーでは常にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信元のコンピューターの履歴で、メッセージのコピーを維持する必要があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> その後に元のコンピューターの履歴にメッセージのコピーを保持することを要求するように、正常に送信された送信元コンピューターから次の手順にそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> メッセージ キューしてメッセージを追跡する方法を指定します。 場合 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> は `true`, 、元のコンピューターのコンピューター ジャーナルにメッセージを送信する各手順でコピーを保持し、します。  
  
 送信先キューがリモート コンピューター上にある場合、送信されたメッセージはジャーナル キューにコピーのみです。 メッセージはキューに直接送信されている変換先がローカル コンピューター上にある場合は、ジャーナリングを要求するように中間の手順はありません。  
  
 ジャーナル キューにメッセージを格納する場合はもう必要ないメッセージを削除するには、定期的にキューを空にします。 キューが存在するコンピューターのクォータに照らし合わせてジャーナル キューに格納されているメッセージ \(コンピューターのクォータは、管理者により設定\)。  
  
 履歴キューまたは配信不能キューを作成しません。 これらは、どちらもメッセージ キューによって生成されるシステム キューです。  
  
 ジャーナリングは、メッセージとキューの両方によって指定できます。<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=fullName> は `true`, 、送信されるときに、メッセージがジャーナルです。<xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=fullName> は `true`, を受信すると、メッセージがジャーナルです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または送信先キューに移動するときにメッセージをトレースするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 送信先キューに元のメッセージを途中で発生するそれぞれの中間ステップが、システムのレポート キューに送信されるレポートを生成する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> プロパティには、送信先キューに移動するときに、メッセージの経路を追跡するかどうかを指定します。 場合 `true`, 、メッセージ キューによって生成されるレポート メッセージは、メッセージがメッセージ キューのルーティング サーバーを通過するたびにレポート キューに送信します。 レポート キューは、送信元キュー マネージャーによって指定されます。 レポート キューはメッセージをメッセージ キューによって生成されるレポートに限定されません。 アプリケーションによって生成されるメッセージは、レポート キューに送信できます。  
  
 トレースを使用するには、Active Directory を設定して、メッセージ キュー エンタープライズ レポート キューを指定する必要があります。 これらの設定は、管理者によって構成されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>