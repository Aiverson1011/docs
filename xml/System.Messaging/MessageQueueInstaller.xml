<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用すると、インストールし、アプリケーションで実行するために必要なキューを構成できます。 このクラスは、インストール ユーティリティによってなど InstallUtil.exe という、インストールするときに、 <see cref="T:System.Messaging.MessageQueue" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueInstaller> インストール ユーティリティによって、キューに関連付けられているレジストリ値の書き込みに使用します。 インストール ユーティリティの詳細については、次を参照してください。 [&#91;\<topic:\/\/cpconInstallerUtilityInstallutilexe\>&#93;](http://msdn.microsoft.com/ja-jp/3f9d0533-f895-4897-b4ea-528284e0241d)します。  
  
 キューをインストールするから継承されるプロジェクト インストーラー クラスを作成、 <xref:System.Configuration.Install.Installer>, 、設定と、 <xref:System.ComponentModel.RunInstallerAttribute> 、クラスに対する `true`します。 プロジェクト内に作成、 <xref:System.Messaging.MessageQueueInstaller> のインストールでは、各キューのインスタンスし、プロジェクト インストーラー クラスにインスタンスを追加します。  
  
 作成するときに、 <xref:System.Messaging.MessageQueueInstaller> インスタンスを渡すことができます必要に応じて、既存 <xref:System.Messaging.MessageQueue> \(たとえばからテスト サーバー\) に、 <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> コンス トラクターです。 この方法は、渡されたキューの設定をミラーリングすることで自動的に新しいキューの構成設定を提供します。 プロパティを手動で設定する代わりに、 <xref:System.Messaging.MessageQueueInstaller> インスタンスを選択して、既定のコンス トラクターの呼び出しの状態にします。  
  
 インストール ユーティリティが呼び出されると、検索、 <xref:System.ComponentModel.RunInstallerAttribute>です。 ある場合 `true`, 、内のすべてのキューをインストールする、ユーティリティ、 <xref:System.Configuration.Install.Installer.Installers%2A> プロジェクト インストーラーに関連付けられているコレクション。 場合 <xref:System.ComponentModel.RunInstallerAttribute> は `false`, 、プロジェクト インストーラーには無視されます。  
  
 その他のプロパティを変更する、 <xref:System.Messaging.MessageQueueInstaller> インスタンスの前に、または後にインスタンスを追加する、 <xref:System.Configuration.Install.Installer.Installers%2A> プロジェクト インストーラーのコレクション。 たとえば、キューの <xref:System.Messaging.MessageQueue.Path%2A> インストール ユーティリティが実行される前に設定する必要があります。  
  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内では一般的に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、 <xref:System.Messaging.MessageQueueInstaller.Install%2A> メソッドを呼び出し、インストール プロセス中に <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 場合は、インストールは、例外をスローしませんでした。 バックアップ実行の障害を必要に応じてを呼び出して <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 例外を生成したオブジェクト。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 既にインストールされているコンポーネントに関する情報を自動的に維持します。 この状態情報が各として継続的に更新 <xref:System.Messaging.MessageQueueInstaller> ユーティリティによってインスタンスがインストールされています。 場合によっては、通常、状態情報を明示的に変更するコードの必要はありません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。 すべてのインスタンスのプロパティを設定しません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <see cref="T:System.Messaging.MessageQueue" /> コンポーネントがインストールされている新しいキューのプロパティの設定を決定します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスで、既存のインストール設定を初期化して <see cref="T:System.Messaging.MessageQueue" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはインストールされているキューが認証されたメッセージのみを受け入れるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> キューが受け入れる場合は、認証済みメッセージのみです。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 認証されていないメッセージが認証されたメッセージのみを受け取るキューに送信されると、メッセージは拒否されます。 送信元アプリケーションは、設定して、メッセージが拒否通知を要求する、 <xref:System.Messaging.Message.AcknowledgeType%2A> メッセージにします。 それ以外の場合がないメッセージが拒否されたことを示す値ため、配信不能キューに送信する場合を除き、メッセージが失われることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパブリック キューのメッセージをネットワーク経由でルーティングに使用される基本優先順位を設定します。</summary>
        <value>パブリック キューに送信されるすべてのメッセージの 1 つの基本優先順位。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> ネットワーク経由でキューのメッセージをルーティングのために使用します。 使用して、 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 、高いキューまたはその他のキューに送信されたメッセージよりも優先順位の低いにメッセージを送信するためです。 キューの基本優先順位が設定されている場合に送信されたすべてのメッセージには、基本優先度の低いキューに送信されるメッセージの場合よりも高い優先順位が与えられます。 キューまたはキューからメッセージを読み取る方法では、キューの基本優先順位を指定してもメッセージの順序の効果はありません。  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> ドメイン コント ローラーを使用してアクセスされるだけをパブリック キューが適用されます \(つまり、public 形式名を使用します\)。 直接アクセスされるパブリック キューとプライベート キューの基本優先順位は、常に 0 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または実装固有のキューの種類を設定します。</summary>
        <value>A <see cref="T:System.Guid" /> キュー カテゴリ \(またはメッセージ キューの種類の識別子\) を表すアプリケーションの使用方法に応じて、キューを分類できるようにします。 既定値は、<see langword="Guid.empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューのカテゴリにより、アプリケーションを使用することによって関連付けられているキューを分類します。<xref:System.Messaging.MessageQueue.Category%2A> Null 参照でもかまいません。 新しいカテゴリを定義することもできます。  
  
 <xref:System.Messaging.MessageQueue.Category%2A> プロパティは、メッセージ キューの種類の識別子プロパティを特定のキューに関連付けられ、読み取り\/書き込みへのアクセスを提供します。 使用することができます、 <xref:System.Guid.NewGuid%2A> すべてにわたって一意であることが保証されているカテゴリの値を作成する方法 <xref:System.Guid> 値。 ただし、必要があるからではなく他のすべての他のカテゴリを異なるカテゴリの値に対してのみ <xref:System.Guid> 値。 たとえば、設定、 <xref:System.Messaging.MessageQueue.Category%2A> キュー} の 1 つのグループと <xref:System.Messaging.MessageQueue.Category%2A> {00000000\-0000\-0000\-0000\-000000000002} を別のグループのです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> コンピューターのインストール後の状態を格納します。</param>
        <summary>コミットすることによって、インストール プロセスが完了すると、 <see cref="T:System.Messaging.MessageQueue" /> インストール情報を <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> メソッドは、レジストリに記述します。 このメソッドは、自動的に適切なメソッドを呼び出したセットアップ ツールで使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内では一般的に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、 <xref:System.Messaging.MessageQueueInstaller.Install%2A> インストール プロセス中にメソッドです。 インストールは、障害が発生したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態に、トランザクション、です。 これは、各コンポーネントを呼び出すことによって実現 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> メソッドです。  
  
 インストールのプロジェクトに関連付けられているすべてのコンポーネントが正常にインストール後が発生したインストール ユーティリティがインストールをコミットします。<xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、 <xref:System.Messaging.MessageQueue> キューを適切な初期状態に設定します。 によって、キューが指定されている場合、 <xref:System.Messaging.MessageQueueInstaller.Path%2A> プロパティは既に存在し、メッセージが表示されて <xref:System.Messaging.MessageQueueInstaller.Commit%2A> メッセージをクリアします。<xref:System.Messaging.MessageQueueInstaller.Commit%2A>, 、ではなく <xref:System.Messaging.MessageQueueInstaller.Install%2A>, 、、メッセージを削除する操作をロールバックできないため、メッセージを消去します。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> として、 `savedState` ユーティリティがコミットされるごとに、パラメーターは引き続き更新 <xref:System.Messaging.MessageQueueInstaller> インスタンス。 通常、この状態情報を明示的に変更するコードの必要はありません。 キューがオフの場合は、 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> にログ エントリの投稿、 `savedState` インストールに関連付けられています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">A <see cref="T:System.ComponentModel.IComponent" /> 用のテンプレートとして使用する、 <see cref="T:System.Messaging.MessageQueueInstaller" />です。</param>
        <summary>プロパティ値をコピー、 <see cref="T:System.Messaging.MessageQueue" /> メッセージ キューのインストール時に必要なコンポーネントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内では一般的に呼び出すことが installutil.exe インストール ユーティリティによってのみです。<xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> インストール ユーティリティでのプロパティの値を設定するため、 <xref:System.Messaging.MessageQueueInstaller> 、既存の値に <xref:System.Messaging.MessageQueue>します。  
  
 場合、 <xref:System.Messaging.MessageQueue.Path%2A> の <xref:System.Messaging.MessageQueue> は空の文字列は、渡された \(""\) を設定する必要があります、 <xref:System.Messaging.MessageQueue.Path%2A> プロパティをインストーラーが実行される前に、空でない値にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">これに関連付けられたコンポーネント <see cref="T:System.Messaging.MessageQueueInstaller" /> は、 <see cref="T:System.Messaging.MessageQueue" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューでのみ、プライベート、または暗号化された、メッセージを受け入れるかどうかを示す値を設定します。</summary>
        <value>いずれか、 <see cref="T:System.Messaging.EncryptionRequired" /> をキューに送信されるメッセージのために必要なレベルの暗号化を示す値。 既定値は、<see langword="Optional" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 暗号化を指定すると、のみ、 <xref:System.Messaging.Message.Body%2A> メッセージの暗号化されています。 その他のプロパティなど、 <xref:System.Messaging.Message.Label%2A>, は暗号化されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">A <see cref="T:System.Collections.IDictionary" /> 、コミットを実行するために必要な情報を保存するために使用ロールバック、またはアンインストール操作します。</param>
        <summary>インストールを実行し、メッセージ キューの情報をレジストリに書き込みます。 このメソッドは、自動的に適切なメソッドを呼び出したセットアップ ツールで使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A> メソッドを選択し、メッセージ キューの情報をレジストリに書き込みます関連付けます、 <xref:System.Messaging.MessageQueue> によって指定されたパスに配置されているキューのインスタンス、 <xref:System.Messaging.MessageQueueInstaller.Path%2A> プロパティです。 キューの存在しない場合 <xref:System.Messaging.MessageQueueInstaller.Install%2A> トランザクション キューを作成します。<xref:System.Messaging.MessageQueueInstaller.Install%2A> 指定したものに新規または既存のキューのプロパティを設定、 <xref:System.Messaging.MessageQueueInstaller>です。 プロパティをリセットするキューが既に存在する場合、 <xref:System.Messaging.MessageQueueInstaller>です。 既存のキューがトランザクションではありませんが削除され、トランザクション キューとして再作成します。  
  
> [!CAUTION]
>  キューを再作成する必要がある場合は、キュー内のメッセージが失われます。  
  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内では一般的に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 、インストール時にインストールされているメッセージ キューに関連付けられているレジストリ情報を書き込むためのメソッドです。 インストールは、障害が発生したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態に、トランザクション、です。 これは、各コンポーネントを呼び出すことによって実現 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> メソッドです。  
  
 インストールのプロジェクトに関連付けられているすべてのコンポーネントが正常にインストール後が発生したインストール ユーティリティがインストールをコミットします。<xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、 <xref:System.Messaging.MessageQueue> キューを適切な初期状態に設定します。 によって、キューが指定されている場合、 <xref:System.Messaging.MessageQueueInstaller.Path%2A> プロパティは既に存在し、メッセージが表示されて <xref:System.Messaging.MessageQueueInstaller.Commit%2A> メッセージをクリアします。<xref:System.Messaging.MessageQueueInstaller.Commit%2A>, 、ではなく <xref:System.Messaging.MessageQueueInstaller.Install%2A>, 、、メッセージを削除する操作をロールバックできないため、メッセージを消去します。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報 <xref:System.Messaging.MessageQueueInstaller.Install%2A> として、 `stateSaver` パラメーターが絶えず更新されるように、ユーティリティでは、それぞれがインストールされます <xref:System.Messaging.MessageQueueInstaller> インスタンス。 通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">比較対象のインストーラーです。</param>
        <summary>指定したインストーラーが同じ種類のインストーラーとのインストールを処理できるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> このインストーラーと、インストーラーによって指定された場合、 <paramref name="otherInstaller" /> パラメーターには、同じ処理できるインストールの種類以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、 <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> 返します `true` このインストーラーと、インストーラーによって指定された場合にのみ、 `otherInstaller` パラメーターが同じ型です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューの説明を設定します。</summary>
        <value>メッセージ キューを説明するラベル。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueue.Label%2A> プロパティはキューで一意である必要はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューに関連付けられているジャーナルの最大サイズを設定します。</summary>
        <value>キューから削除されたメッセージを記録するジャーナル キューの最大サイズ。 メッセージ キューの既定値に制限はありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューの作成時にでは、新しいキューと同じ場所にキューのジャーナルを作成メッセージ キューに自動的にします。 キューのジャーナルを使用して、キューから削除されたメッセージを追跡します。  
  
 2 種類のメッセージは追跡されません。 その時間に\-受信タイマーが経過したため、キューから削除されると、キューから削除されます。  
  
 アプリケーションは、ジャーナル キューにメッセージを送信することはできません。 ただし、不要になったメッセージを削除するキューを定期的に消去する必要があります。 キューが存在するコンピューターのクォータ ジャーナル キューに格納されているメッセージです。 \(コンピューター クォータは、管理者によって設定されます。\)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューの最大サイズを設定します。</summary>
        <value>キューの最大サイズ。 メッセージ キューの既定値に制限はありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、キューの最大サイズはキューの作成時に設定されますが、後でリセットすることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>MSMQ 3.0 で導入されました。 取得またはキューに関連付けられているマルチキャスト アドレスを設定します。</summary>
        <value>A <see cref="T:System.String" /> \(以下に示す形式\) で有効なマルチキャスト アドレスを格納するか、 <see langword="null" />, 、キューのマルチキャスト アドレスに関連付けられていないことを示します。  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 がインストールされていません。</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのオブジェクトによって参照されているキューの場所を設定します。</summary>
        <value>ネットワーク上でのキューの場所を表すパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構文、 <xref:System.Messaging.MessageQueue.Path%2A> プロパティに依存するキューの種類に参照します。 さまざまな種類のキューを使用する構文を次の表に示します。  
  
|キューの種類|構文|  
|------------|--------|  
|パブリック キュー|`machineName`\\`queueName`|  
|専用キュー|`machineName`\\`Private$`\\`queueName`|  
|ジャーナル キュー|`machineName`\\`queueName`\\`Journal$`|  
|コンピューター ジャーナル キュー|`machineName`\\`Journal$`|  
|コンピューターの配信不能キュー|`machineName`\\`Deadletter$`|  
|コンピューター トランザクション配信不能キュー|`machineName`\\`XactDeadletter$`|  
  
 使用する"です。"ローカル コンピューターのです。  
  
 使用することも、 <xref:System.Messaging.MessageQueue.FormatName%2A> または <xref:System.Messaging.MessageQueue.Label%2A> 、メッセージ キュー アプリケーション オブジェクトのキューのパスを記述します。 次の表は、参照の種類ごとに適切な構文を示します。  
  
|参照|構文|  
|--------|--------|  
|形式名|形式名: \[ *形式名* \]|  
|ラベル|ラベル: \[ *ラベル* \]|  
  
 オフラインで作業する場合は、キューを定義する形式名を使用する必要があります <xref:System.Messaging.MessageQueue.Path%2A>します。 プライマリ ドメイン コント ローラーが解決するのには使用できないために、アプリケーションは、例外をスローしない場合、 <xref:System.Messaging.MessageQueue.Path%2A> に、 <xref:System.Messaging.MessageQueue.FormatName%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> 設定された無効な値に場合によって、構文が無効であるためです。  
  
 または  
  
 <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューに関連付けられているアクセス許可を設定します。</summary>
        <value>A <see cref="T:System.Messaging.AccessControlList" /> トラスティおよびキューに付与するアクセス許可を指定する 1 つまたは複数のアクセス制御エントリを格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、パブリックまたはプライベート キューの作成者がフル コントロールに備え、キューのプロパティを取得し、アクセス許可を取得して、キューへの書き込みアクセス許可を持つすべてのユーザー、ドメイン グループです。 メッセージ キューの現在のユーザーと現在しようとした操作に適用されるプロファイルが見つかるまで、さらにアクセス許可リストの各エントリにアクセスします。 許可するようにオペレーティング システムのアクセス許可をユーザーに明示的に拒否する権限より優先されます。  
  
 構築する場合、 <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> プロパティには、追加 <xref:System.Messaging.AccessControlEntry> インスタンスを <xref:System.Messaging.AccessControlList> コレクションです。 各アクセス制御エントリを作成するときは、ジェネリック、または標準のアクセス権を指定できます。 キューの権限は、次の任意の組み合わせになります。  
  
-   削除  
  
-   セキュリティの読み取り  
  
-   セキュリティを書き込み  
  
-   同期  
  
-   所有者を変更します。  
  
-   読み取り  
  
-   Write  
  
-   実行  
  
-   必須  
  
-   すべて  
  
-   なし  
  
 この権限は、一連のビット フラグ ビットごとの OR を使用して組み合わせることができます。  
  
-   フル コントロール  
  
-   メッセージを削除します。  
  
-   メッセージが表示されます。  
  
-   メッセージをピークします。  
  
-   ジャーナル メッセージを受信します。  
  
-   キューのプロパティを取得します。  
  
-   キューのプロパティを設定します。  
  
-   アクセス許可を取得します。  
  
-   アクセス許可を設定  
  
-   キューの所有権を取得します。  
  
-   メッセージを作成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> コンピューターのインストール前の状態を格納します。</param>
        <summary>状態になっていた、インストールする前に、インストール手順は、レジストリに書き込まれたキューの情報をロールバックして、コンピューターを復元します。 このメソッドは、自動的に適切なメソッドを呼び出したセットアップ ツールで使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> メソッドの効果を元に戻し、 <xref:System.Messaging.MessageQueueInstaller.Install%2A> メソッドです。<xref:System.Messaging.MessageQueueInstaller.Rollback%2A> インストールのプロジェクトに任意のコンポーネントのインストールが失敗した場合と呼びます。<xref:System.Messaging.MessageQueueInstaller.Install%2A> メソッド作成するか、キューのプロパティを設定します。<xref:System.Messaging.MessageQueueInstaller.Rollback%2A> キューを削除するか、またはインストール前の値を既存のキューのプロパティをリセットします。  
  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内で一般的にして呼び出されただけ InstallUtil.exe のインストール ユーティリティです。 ユーティリティは、 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> メソッドの変更を取り消すには、インストールに失敗した後、インストール プロセスが行った既にします。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> として、 `savedState` ユーティリティをロールに、パラメーターは引き続き更新の各バックアップ <xref:System.Messaging.MessageQueueInstaller> インスタンス。 通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューがトランザクションの一部として送信されたメッセージだけを受け入れるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> キューはトランザクションの一部として送信されたメッセージだけを受け入れる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージは、トランザクションを使用せずに、ローカル トランザクション キューから取得できます。 トランザクション コンテキストを指定しない場合は、メッセージ キューの単一の内部トランザクションを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> コンピューターのインストール後の状態を格納します。</param>
        <summary>キューの情報をレジストリから削除して、インストールを削除します。 このメソッドは、自動的に適切なメソッドを呼び出した、アンインストール ツールで使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> は `Remove`, 、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> もに関連付けられたキューを削除、 <xref:System.Messaging.MessageQueue>です。  
  
 通常、呼び出さないのメソッド、 <xref:System.Messaging.MessageQueueInstaller> から、コード内で一般的にして呼び出されただけ InstallUtil.exe インストール ユーティリティ \(アンインストール モード\)。 ユーティリティは、 <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> をインストールをインストール前の状態に影響を受けていた、システムの部分を復元します。 これをアンインストールして MessageQueue に関連付けられているレジストリ情報の削除が含まれます。  
  
 アプリケーションのアンインストール ルーチン プロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> 既にアンインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報 <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> として、 `savedState` ユーティリティをアンインストールの各パラメーターが絶えず更新される <xref:System.Messaging.MessageQueueInstaller> インスタンス。 通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはどのようなインストーラーはキューをアンインストールするときを示す値を設定します。 削除して、インストール前の状態に復元またはインストールされている現在の状態のままにします。</summary>
        <value>いずれか、 <see cref="T:System.Configuration.Install.UninstallAction" /> にした場合に、キューのままの状態を示す値、 <see cref="T:System.Messaging.MessageQueue" /> をアンインストールします。 既定値は、<see langword="Remove" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューをインストールするときに、必要に応じて既存のキューを使用することができます。 その場合は、キューがインストール前の状態に戻る必要があるかどうか、または、現在のインストール後の状態のままかどうかを決定する必要があります。 キューをインストール前の状態に戻す場合は、インストール時に、キューから削除されたメッセージは復元されません。 関連付けられているキューのプロパティのみをリセットすることができます、 <xref:System.Messaging.MessageQueueInstaller> インストール前の値にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはキューから取得されるメッセージが関連付けられているジャーナル キューにもコピーするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ジャーナル キューにキューから取得されるメッセージをコピーするにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ジャーナル キューには、追跡するメッセージ キューから取得した後でもことができます。 ただし、2 種類のメッセージは追跡されません。 その時間に\-受信タイマーの期限が切れると、キューから削除されると、キューから削除されます。  
  
 もう必要ないメッセージを削除するジャーナル キューを定期的に消去する必要があります。 メッセージは、ジャーナルが配置されているコンピューターのクォータ ジャーナル キューに格納されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>