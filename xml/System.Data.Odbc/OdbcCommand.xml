<Type Name="OdbcCommand" FullName="System.Data.Odbc.OdbcCommand">
  <TypeSignature Language="C#" Value="public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommand" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ ソースに対して実行する SQL ステートメントまたはストアド プロシージャを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcCommand> クラスは、データ ソースに対してコマンドを実行するには、以下の方法を提供します。  
  
|アイテム|説明|  
|----------|--------|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|行を返すコマンドを実行します。|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|SQL INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します。|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|データベースから集計値、たとえば、単一の値を取得します。|  
  
 リセットすることができます、 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> プロパティと再利用、 <xref:System.Data.Odbc.OdbcCommand> オブジェクトです。 ただし、閉じる必要があります、 <xref:System.Data.Odbc.OdbcDataReader> 新しいまたは前のコマンドを実行する前にします。  
  
 コマンドの実行によって致命的なエラー場合 <xref:System.Data.Odbc.OdbcException> 20 件以上の SQL Server の重大度レベルなど <xref:System.Data.Odbc.OdbcConnection> 閉じることがあります。 ただし、ユーザーは接続を再び開き、続行できます。  
  
   
  
## 例  
 次の例では使用 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>します。  
  
 [!code-csharp[Classic WebData OdbcCommand\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcCommand\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcCommand" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.Odbc.OdbcCommand>.  
  
|Properties|Initial Value|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|empty string \(""\)|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
        <altmember cref="T:System.Data.Odbc.OdbcConnection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">クエリのテキスト。</param>
        <summary>クエリ テキストを指定して、<see cref="T:System.Data.Odbc.OdbcCommand" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">クエリのテキスト。</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" /> をデータ ソースへの接続を表すオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.Odbc.OdbcCommand" /> クエリのテキストを持つクラスと <see cref="T:System.Data.Odbc.OdbcConnection" /> オブジェクトです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection, class System.Data.Odbc.OdbcTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
        <Parameter Name="transaction" Type="System.Data.Odbc.OdbcTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">クエリのテキスト。</param>
        <param name="connection">データ ソースへの接続を表す <see cref="T:System.Data.Odbc.OdbcConnection" /> オブジェクト。</param>
        <param name="transaction">
          <see cref="T:System.Data.Odbc.OdbcCommand" /> が実行するトランザクション。</param>
        <summary>クエリのテキスト、<see cref="T:System.Data.Odbc.OdbcConnection" /> オブジェクト、および <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" /> を指定して、<see cref="T:System.Data.Odbc.OdbcCommand" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The following table shows initial property values for an instance of this implementation of the <xref:System.Data.Odbc.OdbcCommand>.  
  
|Properties|Initial Value|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|A new <xref:System.Data.Odbc.OdbcConnection> that is the value for the **parameterReference tag is not supported!!!!**<br /> parameter.|  
  
 You can change the value for any one of these parameters by setting the related property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>実行をキャンセルしようとする、 <see cref="T:System.Data.Odbc.OdbcCommand" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キャンセルする対象がない場合は、何も行われません。 ただし、プロセスでは、コマンドがあるし、キャンセルが失敗して、例外は生成されません。  
  
 1 つのスレッドでクエリをキャンセルする <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> 別のスレッドから呼び出す必要があります。 使用した非同期のコマンドを実行することはできませんので <xref:System.Data.Odbc.OdbcCommand>, 、別のスレッドからコマンドを取り消す 1 つのスレッドを同期的に実行する必要があります。 つまり、 <xref:System.Data.Odbc.OdbcCommand> オブジェクトは、両方のスレッドからアクセス可能である必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに対して実行する SQL ステートメントまたはストアド プロシージャを取得または設定します。</summary>
        <value>実行する SQL ステートメントまたはストアド プロシージャ。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to **languageKeyword tag is not supported!!!!**  
, the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property should be set using standard ODBC stored procedure escape sequences. Setting the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> to the name of the stored procedure does not function as it does for other .NET Framework data providers.  
  
 Many language features, such as outer joins and scalar function calls, are generally implemented by data sources. Even the syntax for these features is generally data source\-specific. Therefore, ODBC defines escape sequences that contain standard syntax for the following language features:  
  
-   Date, time, timestamp, and datetime interval literals  
  
-   Scalar functions such as numeric, string, and data type conversion functions  
  
-   LIKE predicate escape character  
  
-   Outer joins  
  
-   Procedure calls  
  
 The escape sequence used by ODBC is as follows:  
  
```  
{extension}  
```  
  
 This escape sequence is recognized and parsed by ODBC drivers. They then replace any escape sequences with data source\-specific grammar.  
  
 A procedure is an executable object stored at the data source. Generally, it is one or more SQL statements that have been precompiled. The escape sequence for calling a procedure is  
  
```  
{[?=]call procedure-name[([parameter][,[parameter]]...)]}  
```  
  
 where **parameterReference tag is not supported!!!!**  
 specifies the name of a procedure and **parameterReference tag is not supported!!!!**  
 specifies a procedure parameter.  
  
 The command executes this stored procedure when you call one of the Execute methods \(for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>\).  
  
 You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.  
  
 The ODBC.NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand> when <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> is set to **languageKeyword tag is not supported!!!!**  
. In this case, the question mark \(?\) placeholder must be used. For example:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 Therefore, the order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.  
  
 If a parameter contains a null value, the .NET Framework Data Provider for ODBC still binds that parameter, but uses a default parameter, if one has been defined by using SQL\_DEFAULT\_PARAM, instead of the null value. For example, the <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, null, 2}  
```  
  
 passed into the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property:  
  
```  
{call sp(?, ?, ?)}  
```  
  
 causes the .NET Framework Data Provider for ODBC binding the first parameter to the value 1, the third parameter to the value 2, and the second parameter as SQL\_DEFAULT\_PARAM. However, this behavior is driver\-dependent. If the driver does not support this functionality, just do not pass in a value for the parameter. For example, use the <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, 2}  
```  
  
 and set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the following:  
  
```  
{call sp(?, null, ?)}  
```  
  
> [!NOTE]
>  If a parameter is omitted, the comma delimiting it from other parameters must still appear. If an input or input\/output parameter is omitted, the procedure uses the default value of the parameter. Another way to specify the default value of an input or input\/output parameter is to set the value of the length\/indicator buffer bound to the parameter to SQL\_DEFAULT\_PARAM.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.Connection" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコマンドを実行する試行を終了して、エラーを生成するまでの待機時間を設定します。</summary>
        <value>コマンドの実行を待機する時間 \(秒単位\)。 既定値は 30 秒です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゼロ \(0\) の値は、制限なしの待機時間ではなく、待機時間なしを指定し、ため、避ける必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> プロパティをどのように解釈するかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.CommandType" /> 値のいずれか。 既定値は、<see langword="Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When the <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> property is set to **languageKeyword tag is not supported!!!!**  
, you should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax. The command then executes this stored procedure when you call one of the Execute methods \(for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>\).  
  
 The <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.  
  
 The .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand>. In either of these cases, use the question mark \(?\) placeholder. For example:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 The order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.  
  
> [!NOTE]
>  The .NET Framework Data Provider for ODBC does not support the <xref:System.Data.CommandType> setting of **languageKeyword tag is not supported!!!!**  
> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値が正しい <see cref="T:System.Data.CommandType" /> ではありません。</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Data.Odbc.OdbcCommand" /> のインスタンスで使用する <see cref="T:System.Data.Odbc.OdbcConnection" /> を取得または設定します。</summary>
        <value>データ ソースへの接続。 既定は null 値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.  
  
 If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is then set to a null value.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">トランザクションの進行中に <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> プロパティが変更されました。</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateDbParameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateParameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを作成、 <see cref="T:System.Data.Odbc.OdbcParameter" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcParameter" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> メソッドは、厳密に型指定されたバージョンの <xref:System.Data.IDbCommand.CreateParameter%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、コマンド オブジェクト インターフェイスのカスタマイズされたコントロールに表示するかどうかを示す値を設定します。</summary>
        <value>**true**, コマンド オブジェクトは、コントロールに表示されている必要がある場合、 **false**します。 既定値は **true** です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>に対して SQL ステートメントを実行、 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 影響を受けた行の数を返します。</summary>
        <returns>UPDATE、INSERT、および DELETE のステートメントでは、戻り値は、コマンドは、影響を受ける行の数です。 その他のすべての種類のステートメントは、戻り値は\-1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> カタログ操作 \(データベースの構造をクエリまたはテーブルなどのデータベース オブジェクトの作成など\) を実行するかを使用せずに、データベース内のデータを変更する、 <xref:System.Data.DataSet>, で UPDATE、INSERT を実行またはステートメントを削除します。  
  
 使用することも <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> を基になる ODBC ドライバーは、この機能をサポートしている場合は、複数の SQL ステートメントを実行します。 この場合、戻り値は、コマンドのすべてのステートメントの影響を受ける行の数です。  
  
 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> 返します。 行はありませんが、出力パラメーターまたはパラメーターにマッピングされた値には、データが入っていたを取得します。  
  
 UPDATE、INSERT、および DELETE のステートメントでは、戻り値は、コマンドは、影響を受ける行の数です。 その他のすべての種類のステートメントは、戻り値は\-1 です。 ロールバックが発生した場合、戻り値も\-1 にです。  
  
 トリガーが存在する場合にテーブルとデータに追加またはテーブルで変更される、戻り値には、挿入または更新操作とトリガーの影響を受ける行の数の両方の影響を受ける行の数が含まれています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">接続が存在しません。  
  
 または  
  
 接続が開かれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>送信、 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> に、 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> をビルドし、 <see cref="T:System.Data.Odbc.OdbcDataReader" />です。</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcDataReader" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定する必要があります、 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> プロパティをストアド プロシージャの完全な ODBC 呼び出し構文。 コマンドを呼び出したときにこのストアド プロシージャが実行される <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>します。  
  
 中に、 <xref:System.Data.Odbc.OdbcDataReader> を使用する、関連付けられている <xref:System.Data.Odbc.OdbcConnection> ビジー提供しているは、 <xref:System.Data.Odbc.OdbcDataReader>です。 この状態で他の操作なしで、 <xref:System.Data.Odbc.OdbcConnection> 閉じる以外です。 これは、まで続きます、 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> のメソッド、 <xref:System.Data.Odbc.OdbcDataReader> が呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <see langword="System.Data.CommandBehavior" /> 値のいずれか。</param>
        <summary>送信、 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> に、 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />, 、およびビルド、 <see cref="T:System.Data.Odbc.OdbcDataReader" /> のいずれかを使用して、 <see langword="CommandBehavior" /> 値。</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcDataReader" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定する 1 つの行のみを返す SQL ステートメントの場合、 `SingleRow` として、 <xref:System.Data.CommandBehavior> 値は、アプリケーションのパフォーマンスを向上させることができます。  
  
 設定する必要があります、 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> プロパティをストアド プロシージャの完全な ODBC 呼び出し構文。 コマンドを呼び出したときにこのストアド プロシージャが実行される <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>します。  
  
 <xref:System.Data.Odbc.OdbcDataReader> 大きなバイナリ値を効率的に読み取ることができる特殊なモードをサポートしています。 詳細については、次を参照してください。、 `SequentialAccess` 準 <xref:System.Data.CommandBehavior>します。  
  
> [!NOTE]
>  `SequentialAccess` の値 <xref:System.Data.CommandBehavior> 、制限はありませんが、設定は、単に意味には、少なくとも順次アクセスを必要がある、 <xref:System.Data.Odbc.OdbcDataReader>です。 SQL Server ODBC ドライバーを使用する場合に、 `SequentialAccess` モードでは、移動できますの最初の列に、 <xref:System.Data.Odbc.OdbcDataReader> 他のすべての列を順番に参照した後に行です。  
  
 中に、 <xref:System.Data.Odbc.OdbcDataReader> を使用する、関連付けられている <xref:System.Data.Odbc.OdbcConnection> ビジー提供しているは、 <xref:System.Data.Odbc.OdbcDataReader>です。 この状態で他の操作なしで、 <xref:System.Data.Odbc.OdbcConnection> 閉じる以外です。 呼び出されるまで、そうでは、 <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName> メソッドです。 場合、 <xref:System.Data.Odbc.OdbcDataReader> で作成された <xref:System.Data.CommandBehavior> に設定 `CloseConnection`, 、終了、 <xref:System.Data.Odbc.OdbcDataReader> の接続を自動的に閉じます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteScalar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。 以降の列または行は無視されます。</summary>
        <returns>結果の最初の行の最初の列は、次の設定、または null 参照場合、結果セットは空にします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> データ ソースから単一の値 \(たとえば、集計値\) を取得します。 使用するよりも少ないコードが必要です、 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> メソッド、およびによって返されるデータから 1 つの値を生成するために必要な操作を実行し、 <xref:System.Data.Odbc.OdbcDataReader>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> を取得します。</summary>
        <value>SQL ステートメントまたはストアド プロシージャのパラメーターです。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> に設定されている `Text`, 、名前付きの引き渡しは、.NET Framework Data Provider for ODBC でサポートされません SQL ステートメントまたはにより呼び出されるストアド プロシージャのパラメーター、 <xref:System.Data.Odbc.OdbcCommand>です。 このような場合のいずれも、疑問符 \(?\) プレース ホルダーを使用します。 例:  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 順序 <xref:System.Data.Odbc.OdbcParameter> にオブジェクトを追加、 <xref:System.Data.Odbc.OdbcParameterCollection> コマンド テキスト内のパラメーターの疑問符 \(\) プレース ホルダーの位置に直接対応する必要があります。  
  
> [!NOTE]
>  コレクション内のパラメーターで実行されるクエリの要件が一致しない場合、エラーが表示される場合があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Prepare" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースにコマンドの準備済みまたはコンパイル済みバージョンを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Data.Odbc.OdbcCommand.Prepare%2A> method calls the ODBC **languageKeyword tag is not supported!!!!**  
 function. Depending on the capabilities of the underlying ODBC driver and data source, parameter information such as data types may be checked when the statement is prepared, if all parameters have been bound, or when it is executed if not all parameters have been bound. For maximum interoperability, an application should unbind all parameters that applied to a previous SQL statement before preparing a new SQL statement on the same <xref:System.Data.Odbc.OdbcCommand>. This prevents errors that are caused by previous parameter information being applied to the new SQL statement.  
  
 If you call an Execute method after you call <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.Odbc.OdbcParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.  
  
 Output parameters \(whether prepared or not\) must have a user\-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.Odbc.OdbcParameter.Size%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> が設定されていません。  
  
 または  
  
 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> が <see cref="M:System.Data.Odbc.OdbcConnection.Open" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リセット、 <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> プロパティを既定値にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値、 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> は 30 秒です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」を参照してください。</summary>
        <returns>新しい <see cref="T;System.Object" /> このインスタンスのコピーであります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.Odbc.OdbcCommand> のインスタンスが <xref:InterfaceName> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcTransaction" /> が実行される <see cref="T:System.Data.Odbc.OdbcCommand" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.Odbc.OdbcTransaction" />。 既定値は、null 値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定することはできません、 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> プロパティの場合は、特定の値に既に設定されているし、コマンドが実行する処理を行っています。 トランザクションのプロパティを設定する場合、 <xref:System.Data.Odbc.OdbcTransaction> に同じ接続されていないオブジェクト <xref:System.Data.Odbc.OdbcConnection> として、 <xref:System.Data.Odbc.OdbcCommand> オブジェクトを次にステートメントを実行しようとするとき、例外がスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を指定する値が、どのように **更新** メソッドは、コマンドの結果を適用する必要があります、 **DataRow**します。</summary>
        <value>
          <see cref="T:System.Data.UpdateRowSource" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値 <xref:System.Data.UpdateRowSource> 値は **両方** コマンドが自動的に生成しない限りと同様、 <xref:System.Data.Odbc.OdbcCommandBuilder>, 、既定値の場合は **なし**します。  
  
 使用する方法の詳細についての <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> プロパティを参照してください [Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>送信、 <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> に、 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> をビルドし、 <see cref="T:System.Data.Odbc.OdbcDataReader" />です。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>