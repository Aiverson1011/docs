<Type Name="OdbcConnection" FullName="System.Data.Odbc.OdbcConnection">
  <TypeSignature Language="C#" Value="public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcConnection" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ ソースへの接続を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcConnection> オブジェクトは接続文字列または ODBC データ ソース名 \(DSN\) を使用して作成されたデータ ソースに一意の接続を表します。 クライアント\/サーバー データベース システムでは、サーバーへのネットワーク接続と同じです。 ネイティブ ODBC ドライバー、いくつかのメソッドまたはプロパティがサポートする機能に応じて、 <xref:System.Data.Odbc.OdbcConnection> オブジェクトを使用できない場合があります。  
  
 <xref:System.Data.Odbc.OdbcConnection> オブジェクトは、ODBC 環境と接続ハンドルなどのネイティブ リソースを使用します。 すべてのオープンを常に明示的に閉じる必要があります <xref:System.Data.Odbc.OdbcConnection> を呼び出してオブジェクト <xref:System.Data.Odbc.OdbcConnection.Close%2A> または **Dispose** する前に、 <xref:System.Data.Odbc.OdbcConnection> オブジェクトがスコープから外れたまたは内で接続を配置することで、 `Using` ステートメントです。 行わなかった場合、ガベージ コレクションにこれらのネイティブ リソースを解放します。 それがすぐに解放されません。 この、さらに、最終的に可能性がリソース不足、または最大制限に到達するには、基になるドライバー。 これは、断続的なエラーが発生しました。 たとえば、発生する可能性が `Maximum Connections` \-ガベージ コレクターによって削除される多数の接続が待機している間に関連するエラーです。 接続を明示的に閉じる場合は、ネイティブ リソース、拡張性が強化され、アプリケーション全体のパフォーマンスの向上をより効率的に使用できます。  
  
> [!NOTE]
>  高パフォーマンス アプリケーションを配置するには、を頻繁にする必要があります接続プールを使用します。 ただし、.NET Framework Data Provider for ODBC を使用する場合、プロバイダーは、これを自動的に管理するために接続がプールを有効にする必要はありません。  
  
 1 つの場合の `Execute` のメソッド、 <xref:System.Data.Odbc.OdbcCommand> クラスが致命的なエラーが発生 <xref:System.Data.Odbc.OdbcException> \(たとえば、SQL Server 重大度レベルが 20 の大きい\)、 <xref:System.Data.Odbc.OdbcConnection> 閉じることがあります。 ただし、ユーザーは接続を再び開き、続行できます。  
  
 インスタンスを作成するアプリケーション、 <xref:System.Data.Odbc.OdbcConnection> オブジェクトには、宣言的または命令型のセキュリティ確認要求を設定して、コードに十分なアクセス許可を有効にしてすべての直接的および間接的な呼び出し元が必要とすることができます。<xref:System.Data.Odbc.OdbcConnection> 使用してセキュリティ確認要求を作成、 <xref:System.Data.Odbc.OdbcPermission> オブジェクトです。 ユーザーが、コードでは、十分なアクセス許可を持ちを使用して確認できる、 <xref:System.Data.Odbc.OdbcPermissionAttribute> オブジェクトです。 ユーザーおよび管理者では、コンピューター、ユーザー、およびエンタープライズ レベルのセキュリティ ポリシーを変更するのにコード アクセス セキュリティ ポリシー ツール \(Caspol.exe\) を使用することもできます。 詳細については、「[Code Access Security and ADO.NET](http://msdn.microsoft.com/ja-jp/93e099eb-daa1-4f1e-b031-c1e10a996f88)」を参照してください。  
  
 データ ソースからの警告および情報メッセージを処理の詳細については、次を参照してください。 [Working with Connection Events](http://msdn.microsoft.com/ja-jp/5a29de74-acfc-4134-8616-829dd7ce0710)します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcCommand> と <xref:System.Data.Odbc.OdbcConnection>です。<xref:System.Data.Odbc.OdbcConnection> を開き、として設定は、 <xref:System.Data.Odbc.OdbcCommand.Connection%2A> プロパティです。 例では、 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, 、接続を閉じます。 これを実現する、 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> 接続文字列とは、クエリ文字列が渡されます。  
  
 [!code-csharp[Classic WebData OdbcConnection\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcConnection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときの新しいインスタンス <xref:System.Data.Odbc.OdbcConnection> が作成、書き込み専用、読み取り専用で、関連付けられているキーワードを使用して具体的に設定されている場合を除き、次の初期値にプロパティが設定されて、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティです。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|空の文字列 \(""\)|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|空の文字列 \(""\)|  
  
 これらのプロパティの値を変更するにを使用してのみ、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティです。  
  
   
  
## 例  
 次の例を作成し、開きます、 <xref:System.Data.Odbc.OdbcConnection>です。  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">データ ソースを開くために使用する接続です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.Odbc.OdbcConnection" /> クラスを指定した接続文字列を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときの新しいインスタンス <xref:System.Data.Odbc.OdbcConnection> が作成、書き込み専用、読み取り専用で、関連付けられているキーワードを使用して具体的に設定されている場合を除き、次の初期値にプロパティが設定されて、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティです。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|空の文字列 \(""\)|  
  
 これらのプロパティの値を変更するにを使用してのみ、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティです。  
  
   
  
## 例  
 次の例を作成し、開きます、 <xref:System.Data.Odbc.OdbcConnection>です。  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection1\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection1\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースでトランザクションを開始します。</summary>
        <returns>新しいトランザクションを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コミットまたはトランザクションをロールバックして、明示的に使用、 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> または <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> メソッドです。  
  
 .NET Framework Data Provider for ODBC トランザクション管理モデルが正常に実行することを確認するには、データ ソースによって提供されるものなど、他のモデルのトランザクション管理の使用をしないでください。  
  
> [!NOTE]
>  分離レベルを指定しない場合、分離レベルが使用されているドライバーによって決まります。 分離レベルを指定する、 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> メソッドを使用するオーバー ロードを使用して、 `isolevel` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection> と <xref:System.Data.Odbc.OdbcTransaction>です。 使用する方法も示します、 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, 、<xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 、および <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> メソッドです。  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">トランザクションは、現在アクティブです。 並列トランザクションはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolevel">この接続のトランザクション分離レベル。 分離レベルを指定しない場合は、ドライバーの既定の分離レベルが使用されます。</param>
        <summary>指定したデータ ソースでトランザクションを開始 <see cref="T:System.Data.IsolationLevel" /> 値。</summary>
        <returns>新しいトランザクションを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コミットまたはトランザクションをロールバックして、明示的に使用、 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> または <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> メソッドです。  
  
 .NET Framework Data Provider for ODBC トランザクション管理モデルが正常に実行することを確認するには、データ ソースによって提供されるものなど、他のモデルのトランザクション管理の使用をしないでください。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection> と <xref:System.Data.Odbc.OdbcTransaction>です。 使用する方法も示します、 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, 、<xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 、および <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> メソッドです。  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">トランザクションは、現在アクティブです。 並列トランザクションはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">データベース名。</param>
        <summary>オープンに関連付けられている現在のデータベース変更 <see cref="T:System.Data.Odbc.OdbcConnection" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `value` パラメーターは、有効なデータベース名を含める必要があり、null 値、空の文字列を含めることはできません \(""\)、または空白文字のみを含む文字列。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection> し、現在のデータベースを変更します。  
  
 [!code-csharp[Classic WebData OdbcConnection.Database\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">データベース名が正しくありません。</exception>
        <exception cref="T:System.InvalidOperationException">接続が開かれていません。</exception>
        <exception cref="T:System.Data.Odbc.OdbcException">データベースを変更できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースへの接続を閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcConnection.Close%2A> メソッドが保留中のトランザクションをロールバックします。 接続プールに接続を解放し、または接続プールが無効になっている場合、接続を閉じます。 場合 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 処理中に呼び出されますが、 <xref:System.Data.Common.DbConnection.StateChange> イベント、これ以上の <xref:System.Data.Common.DbConnection.StateChange> イベントが発生します。  
  
 アプリケーションが呼び出すことができます <xref:System.Data.Odbc.OdbcConnection.Close%2A> 例外を生成せずに複数回です。  
  
> [!NOTE]
>  .NET Framework Data Provider for ODBC を使用する場合は、ODBC ドライバー マネージャーは、これを自動的に管理するために接続がプールを有効にする必要はありません。 有効にする方法と接続プールを無効化する方法の詳細については、Microsoft Open Database Connectivity \(ODBC\) のマニュアルを参照してください。  
  
> [!CAUTION]
>  呼び出す必要はありません <xref:System.Data.Odbc.OdbcConnection.Close%2A> または `Dispose` 接続や、DataReader 内の他のマネージ オブジェクト、 `Finalize` クラスのメソッドです。 ファイナライザーでのみ、クラスが直接所有されているアンマネージ リソースを解放する必要があります。 クラスがアンマネージ リソースを所有していない場合は、クラス定義に `Finalize` メソッドを含めないでください。 詳細については、「[Garbage Collection](http://msdn.microsoft.com/ja-jp/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)」を参照してください。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection>, 、それを開いた、いくつかのプロパティの表示および接続を閉じます。  
  
 [!code-csharp[Classic WebData OdbcConnection.Close\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Close\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースを開くために使用する文字列を設定します。</summary>
        <value>最初の接続を確立するために必要なデータ ソース名などの設定を含む ODBC ドライバー接続文字列。 既定値は、空の文字列 \(""\) です。 最大長は、1024年文字です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティは ODBC 接続文字列の形式を可能な限り一致するように設計されています。<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 設定できる場合にのみ接続を終了すると、設定されていると、すぐには、渡される、変更せずに、ドライバー マネージャーと基になるドライバーにします。 そのため、構文を <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> ドライバー マネージャーが正確に一致して、ドライバーのサポートを基になります。  
  
 使用することができます、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> さまざまなデータ ソースに接続するプロパティです。 これには、ODBC データ ソース名 \(DSN\) が含まれます。 次の例では、いくつかの可能な接続文字列を示します。  
  
```  
"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;"  
  
"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes"  
  
"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\bin\Northwind.mdb"  
  
"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\bin\book1.xls"  
  
"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\bin"  
  
"DSN=dsnname"  
```  
  
> [!NOTE]
>  .NET Framework Data Provider for ODBC がサポートしていない、 `Persist Security Info` 他の .NET Framework データ プロバイダーでサポートされているキーワードです。 ただし、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティは、まるで `Persist Security Info` に設定されていた `false`します。 つまりからパスワードを取得することはできません、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティの接続が開かれている場合。 ときに、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> からプロパティを読み取り、 <xref:System.Data.Odbc.OdbcConnection> 開かれているオブジェクト、接続文字列はパスワード\-返されます。 この動作を変更することはできません。そのため、アプリケーションは、パスワードを必要とする場合は別に保管呼び出す前に <xref:System.Data.Odbc.OdbcConnection.Open%2A>します。  
  
 対応する読み取り専用プロパティを持つ文字列で指定された設定の多く \(たとえば、 `Server=(local)`, に対応する、 <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> プロパティ\)。 エラーが検出された場合を除いて、接続が開かれた後に、これらのプロパティが更新されます。 この場合、プロパティのいずれも更新されません。<xref:System.Data.Odbc.OdbcConnection> プロパティ \(たとえば <xref:System.Data.Odbc.OdbcConnection.Database%2A>\) 既定の設定またはで指定されたこれらの設定のみを返す、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>です。  
  
 Microsoft .NET Framework version 1.0 でアプリケーションを呼び出すまで、接続文字列の検証は行われません、 <xref:System.Data.Odbc.OdbcConnection.Open%2A> メソッドです。 接続文字列を検証する基になる ODBC ドライバーの役目です。 ドライバーが生じる可能性がある、接続文字列に無効またはサポートされていないプロパティが含まれている場合、 <xref:System.Data.Odbc.OdbcException> 実行時にします。  
  
 ただし、.NET Framework version 1.1 以降のバージョンで、接続文字列のいくつかの基本的な検証は実行を設定するとすぐに、 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> プロパティです。 データ プロバイダーが接続文字列を満たしていることを確認、その時点で、"キーワードの値を \=;..."形式と似ているを検証しないキーワードや値が有効かどうか。 アプリケーションを呼び出すときに基になる ODBC ドライバーで残りの検証が実行される、 <xref:System.Data.Odbc.OdbcConnection.Open%2A> メソッドです。  
  
 ODBC 接続文字列には、次の構文があります。  
  
```  
connection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  
empty-string ::=  
attribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  
attribute-keyword ::= DSN | UID | PWD  
 | driver-defined-attribute-keyword  
attribute-value ::= character-string  
driver-defined-attribute-keyword ::= identifier  
```  
  
 ここで `character-string` 0 個以上の文字が `identifier` が 1 つ以上の文字 `attribute-keyword` は大文字と小文字を区別しない `attribute-value` 大文字と小文字を区別することができ、DSN キーワードの値が空白ののみ構成がありません。  
  
 接続文字列、初期化ファイル、文法のためのキーワードと属性値避ける必要があります文字 {} \(\) を含む; でしょうか。\* \=\! @ 中かっこで囲まれていません。 DSN キーワードの値は、空白ののみで構成されていることはできませんし、先頭の空白を含めることはできません。 システム情報の文法のためのキーワードおよびデータ ソース名は円記号 \(\\\) 文字を含めることはできません。  
  
 アプリケーションの属性には、セミコロン \(;\) が含まれていない場合、ドライバーのキーワードの後に属性値を囲む中かっこを追加する場合、中かっこが必要ありません。 ドライバーが受信した属性の値には、中かっこが含まれている場合に、ドライバーは削除しないでが返される接続文字列の一部をすることがあります。  
  
 \[DSN または接続文字列値を中かっこ \({}\) で囲まれた文字 {} \(\) のいずれかが含まれています。 でしょうか。\* \=\! @ はそのままドライバーに渡される、します。 ただし、キーワードでこれらの文字を使用する場合ドライバー マネージャーは、ファイル Dsn を使用するときにエラーが返されますが、通常の接続文字列用のドライバーに接続文字列を渡します。 キーワードの値に埋め込まれた中かっこを使用しないでください。  
  
 接続文字列には、任意の数のドライバー定義のキーワードを含めることがあります。 DRIVER キーワードは、システムからの情報を使用しないので、ドライバーでは、ドライバーは、接続文字列に情報のみを使用してデータ ソースに接続できるように十分なキーワードに定義します。 ドライバーでは、どのキーワードは、データ ソースに接続するために必要なものを定義します。  
  
 キーワードは、接続文字列で反復的である場合、どちらの値は選択されている保証はありません。  
  
> [!NOTE]
>  ODBC ドライバーでは、1024年文字より長い接続文字列をサポートする場合は、最大の長さの制限を超えるデータ ソース名 \(DSN\) を使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または試行を終了し、エラーが発生する前に接続を確立しているときに待機する時間を設定します。</summary>
        <value>接続を開くを待機する秒数時間。 既定値は 15 秒です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 SQL Server および OLE DB の \[.NET Framework データ プロバイダーとは異なり、.NET Framework Data Provider for ODBC はできません接続文字列の値としてこのプロパティを設定する有効な ODBC 接続のキーワードではありません。 接続のタイムアウトを指定する、 <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> プロパティを呼び出す前に <xref:System.Data.Odbc.OdbcConnection.Open%2A>します。 これは、ODBC の設定と同じに `SQLSetConnectAttr` SQL\_ATTR\_LOGIN\_TIMOUT 属性です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">0 より小さい値が設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、 <see cref="T:System.Data.Odbc.OdbcCommand" /> オブジェクトに関連付けられている、 <see cref="T:System.Data.Odbc.OdbcConnection" />です。</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcCommand" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateDbCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のデータベース、または接続が開いてから使用するデータベースの名前を取得します。</summary>
        <value>現在のデータベースの名前。 既定値は空の文字列 \(""\)、接続が開かれるまでです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最初は、 <xref:System.Data.Odbc.OdbcConnection.Database%2A> プロパティは、接続文字列に設定します。<xref:System.Data.Odbc.OdbcConnection.Database%2A> プロパティを使用して更新できます、 <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> メソッドです。 SQL ステートメントを使用して、現在のデータベースを変更するかどうか、または <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> メソッド、情報メッセージが送信され、プロパティを更新し、します。  
  
 取得する、 <xref:System.Data.Odbc.OdbcConnection.Database%2A> プロパティは、ODBC 関数の呼び出しに相当 `SQLGetInfo` で、 `Attribute` パラメーター SQL\_ATTR\_CURRENT\_CATALOG に設定します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection> し、現在のデータベースを変更します。  
  
 [!code-csharp[Classic WebData OdbcConnection.Database\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー名またはデータ ソースのファイル名を取得します。</summary>
        <value>サーバー名またはデータ ソースのファイル名。 既定値は空の文字列 \(""\)、接続が開かれるまでです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> プロパティは、ODBC 関数の呼び出しに相当 `SQLGetInfo` で、 `InfoType` パラメーター SQL\_SERVER\_NAME に設定します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.Odbc.OdbcConnection> し、バックエンド データ ソース名を表示します。  
  
 [!code-csharp[Classic WebData OdbcConnection.DataSource\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.DataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Driver">
      <MemberSignature Language="C#" Value="public string Driver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Driver" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Driver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の接続に指定された ODBC ドライバーの名前を取得します。</summary>
        <value>ODBC ドライバーの名前。 これは通常、DLL の名前 \(たとえば、Sqlsrv32.dll\) です。 既定値は空の文字列 \(""\)、接続が開かれるまでです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得する、 <xref:System.Data.Odbc.OdbcConnection.Driver%2A> プロパティは、ODBC 関数の呼び出しに相当 `SQLGetInfo` で、 `InfoType` パラメーター SQL\_DRIVER\_NAME に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">登録先の既存の <see cref="T:System.EnterpriseServices.ITransaction" /> への参照。</param>
        <summary>分散トランザクションとして指定したトランザクションに参加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **legacyBold tag is not supported!!!!**  
 takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **legacyBold tag is not supported!!!!**  
 for this purpose. For more information, see [Performing a Distributed Transaction](http://msdn.microsoft.com/ja-jp/718b257c-bcb2-408e-b004-a7b0adb1c176).  
  
 You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> method if auto\-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Performing a Distributed Transaction](http://msdn.microsoft.com/ja-jp/718b257c-bcb2-408e-b004-a7b0adb1c176).  
  
 <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OdbcClient.OdbcConnection> has already started a transaction using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source \(for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OdbcClient.OdbcCommand> object\), <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">登録先の既存の <see cref="T:System.Transactions.Transaction" /> への参照。</param>
        <summary>分散トランザクションとして指定したトランザクションに参加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **legacyBold tag is not supported!!!!**  
 takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **legacyBold tag is not supported!!!!**  
, which uses a **legacyBold tag is not supported!!!!**  
 object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Performing a Distributed Transaction](http://msdn.microsoft.com/ja-jp/718b257c-bcb2-408e-b004-a7b0adb1c176).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このデータ ソースのスキーマ情報を返す <see cref="T:System.Data.Odbc.OdbcConnection" />します。</summary>
        <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">返すスキーマの名前を指定します。</param>
        <summary>このデータ ソースのスキーマ情報を返す <see cref="T:System.Data.Odbc.OdbcConnection" /> スキーマ名の指定した名前を使用します。</summary>
        <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `collectionName` が null の場合、 <xref:System.Data.DataTable> 使用可能なすべてのメタデータと制限について説明します。  
  
> [!NOTE]
>  適用されるすべての制限、 `SQLStatistics` メソッドにも適用、 `ODBCConnection.GetSchema("`インデックス`")` コレクションです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">返すスキーマの名前を指定します。</param>
        <param name="restrictionValues">要求したスキーマの制限値のセットを指定します。</param>
        <summary>このデータ ソースのスキーマ情報を返す <see cref="T:System.Data.Odbc.OdbcConnection" /> スキーマ名と制限値に指定した文字列の配列として指定した文字列を使用します。</summary>
        <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `collectionName` Null として指定された、 <xref:System.Data.DataTable> 、利用可能なすべてのメタデータとその制限について説明します。  
  
 `restrictionValues` パラメーターを指定できます *n* 、特定のコレクションの制限のコレクションによって指定される値の深さ。 指定された制限の値を設定して、他の制限値を設定しない、するには、null に設定し、値を指定するには制限の適切な値を格納する、前述の制限を設定する必要があります。  
  
 この例は、"Tables"コレクションです。 かどうかは、"Tables"コレクションが 3 つの制限 \(データベース、所有者、およびテーブル名\)、および"Carl、"所有者に関連付けられているテーブルのみを取得する必要は少なくとも次の値で渡す必要があります: null,"Carl"です。 制限値が渡されない場合に、既定値はその制限に使用します。 これは、null を渡すことと同じマッピングとは別のパラメーター値に空の文字列を渡すことができます。 その場合、空の文字列 \(""\) が指定されたパラメーターの値であると見なされます。  
  
> [!NOTE]
>  SQLStatistics メソッドに適用されるすべての制限は、ODBCConnection.GetSchema\("indexes"\) コレクションに適用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcConnection.InfoMessage" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ODBC ドライバーは、警告または情報メッセージを送信したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 警告またはサーバーによって送信される情報のメッセージを処理するクライアントを作成する必要があります、 <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> このイベントを待機するデリゲート。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Open" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定されたプロパティの設定とデータ ソースへの接続を開き、 <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Odbc.OdbcConnection> がある場合、接続プールから開かれた接続を描画します。 それ以外の場合、データ ソースへの新しい接続を確立します。  
  
> [!NOTE]
>  場合、 <xref:System.Data.Odbc.OdbcConnection> がスコープ外になる、バッファプールの接続が自動的に閉じるされません。 そのため、明示的に閉じる必要があります、接続を呼び出して <xref:System.Data.Odbc.OdbcConnection.Close%2A>, 、**Dispose**, 、内で接続を配置することにより、 `Using` ステートメントです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドの機能は、基底クラスではサポートされていないため、代わりに派生クラスで実装する必要があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ReleaseObjectPool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>最後の基になる接続がリリースされたときに、ODBC ドライバー マネージャーの環境ハンドルを解放できることを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `ReleaseObjectPool` ODBC 環境ハンドルの解放に呼び出すことができます。 たとえば、接続オブジェクトは使用されません再度場合は、このメソッドを呼び出す可能性があります。 環境内のすべての接続が閉じられると、環境を破棄できます。 メソッドを呼び出すだけでは解放されないこと実際には、環境に存在するアクティブな接続を確認します。  
  
 環境が最後に破棄される前に、次の処理を発生する必要があります。  
  
1.  呼び出す <xref:System.Data.Odbc.OdbcConnection.Close%2A> を解放する、 <xref:System.Data.Odbc.OdbcConnection> 環境からのオブジェクト。  
  
2.  タイムアウトする場合は、各接続オブジェクトを許可します。  
  
3.  <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A> を呼び出す。  
  
4.  ガベージ コレクションを起動します。  
  
 逆を呼び出す場合 <xref:System.Data.Odbc.OdbcConnection.Close%2A> すべてのアクティブな接続のガベージ コレクションを呼び出すが、呼び出す必要はありませんし、 <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>, 、環境用に予約されたリソースの使用可能なままです。  
  
 環境ハンドルが解放された後、新しい要求 <xref:System.Data.Odbc.OdbcConnection> 新しい環境を作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントが接続されているサーバーのバージョンを表す文字列を取得します。</summary>
        <value>接続されているサーバーのバージョン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> は、基になる ODBC ドライバー、空の文字列ではサポートされていません \(""\) が返されます。  
  
 <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> プロパティの形式 '*\#\#. \#\#. \#\#\#*,、'、最初の 2 桁はメジャー バージョン、次の 2 桁はマイナー バージョンであり、最後の 4 桁の数字は、リリース バージョン。 ドライバーは、このフォームで製品のバージョンを表示する必要がありますが、製品固有のバージョンを表す文字列を追加することも \(たとえば、"04.01.0000 Rdb 4.1"\) です。 この文字列の形式は '*major.minor.build*' 場所 *メジャー* と *マイナー* は 2 桁と *ビルド* 4 桁の数字は、です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">接続が閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続の現在の状態を取得します。</summary>
        <value>
          <see cref="T:System.Data.ConnectionState" /> 値のビットごとの組み合わせ。 既定値は、<see langword="Closed" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の状態の変更を許可します。  
  
-   `Closed` に `Open`, を使用して、 <xref:System.Data.Odbc.OdbcConnection.Open%2A> メソッドです。  
  
-   `Open` に `Closed`, 、いずれかを使用して、 <xref:System.Data.Odbc.OdbcConnection.Close%2A> または **Dispose** メソッドです。  
  
> [!NOTE]
>  呼び出す、 <xref:System.Data.Odbc.OdbcConnection.State%2A> 、開いている接続のプロパティは、このような各呼び出しによって接続がまだ有効であるかどうかを基になる ODBC ドライバーに SQL\_ATTR\_CONNECTION\_DEAD 呼び出しになるので、アプリケーションのオーバーヘッドが増加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」を参照してください。</summary>
        <returns>このインスタンスのコピーである新しい <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.Odbc.OdbcConnection> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このデータ ソースのスキーマ情報を返す <see cref="T:System.Data.Odbc.OdbcConnection" />します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ ソースでトランザクションを開始します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcConnection" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>