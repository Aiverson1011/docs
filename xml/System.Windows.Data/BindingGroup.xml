<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>バインディングのコレクションを格納および<see cref="T:System.Windows.Controls.ValidationRule" />オブジェクトの検証に使用されるオブジェクト。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A<xref:System.Windows.Data.BindingGroup>検証および一緒に更新できる、複数のバインディング間のリレーションシップを作成します。 たとえば、アプリケーションがアドレスを入力するユーザーを要求するとします。 その後、アプリケーションは、型のオブジェクトを設定`Address`のプロパティを持つ`Street`、 `City`、 `ZipCode`、および`Country`ユーザーが指定した値を持つ。 アプリケーションが 4 つを含むパネル<xref:System.Windows.Controls.TextBox>コントロール、それぞれが 1 つのオブジェクトのプロパティにバインドされたデータ。 使用することができます、<xref:System.Windows.Controls.ValidationRule>で、<xref:System.Windows.Data.BindingGroup>検証する、`Address`オブジェクト。 同じバインディングが参加する場合は<xref:System.Windows.Data.BindingGroup>、郵便番号コードが有効、住所の国であることを確認できます。  
  
 設定する、<xref:System.Windows.FrameworkElement.BindingGroup%2A>プロパティを<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>です。 子要素を継承、<xref:System.Windows.Data.BindingGroup>だけで、他の継承可能なプロパティと同様に、親要素からです。 子孫要素をバインディングに追加、<xref:System.Windows.Data.BindingGroup>次の状況のいずれかが発生した場合。  
  
-   バインディングのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>、同じオブジェクトは、および<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>プロパティが設定されていません。  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと等しい、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>に明示的に設定されていないと`null`です。  
  
 アドレスの例では、たとえば次に示す、<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Controls.Panel>型のオブジェクトに設定されている`Address`です。 各バインド<xref:System.Windows.Controls.TextBox>に追加、<xref:System.Windows.Data.BindingGroup>パネルのです。  
  
 追加する<xref:System.Windows.Controls.ValidationRule>オブジェクトを<xref:System.Windows.Data.BindingGroup>です。<xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドと、<xref:System.Windows.Controls.ValidationRule>を実行します。 使用することができます、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッドを<xref:System.Windows.Data.BindingGroup>、オブジェクトの提案された値を取得して、<xref:System.Windows.Data.BindingGroup.Items%2A>のバインディングのソースを取得するプロパティです。  
  
 A<xref:System.Windows.Data.BindingGroup>に個別に更新される各バインディングではなく、同時にバインディングのソースを更新します。 データを検証する方法のいずれかを呼び出すときに \(<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>\)、各バインディング<xref:System.Windows.Controls.TextBox>で例が検証され、更新された可能性があります。 バインディングの一部である場合、 <xref:System.Windows.Data.BindingGroup>、バインディングのソースは、呼び出されるまでは更新されません<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>上、<xref:System.Windows.Data.BindingGroup>明示的に設定する場合を除き、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティです。  
  
   
  
## 例  
 次の例は、品目の価格と説明を入力するように求める、アプリケーションと、プランの有効期限が切れる日付を作成します。 アプリケーションでは、フォームの下の項目の現在の情報を表示します。 ユーザーでは、送信したり、変更をキャンセルすることができます。  
  
 アプリケーションは、この動作を実現するために次を実行します。  
  
-   作成、<xref:System.Windows.Data.BindingGroup>ルートを追加および<xref:System.Windows.Controls.StackPanel>を作成すると、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーションのです。  
  
-   呼び出し<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>、 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、および<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>に対する変更のロールバックを有効にする、アプリケーションのロジックでします。  
  
-   呼び出し<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>で、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドをユーザーの入力を取得し、7 日間には、少なくとも 100 ドル経由で項目が利用可能なことを確認します。  
  
 次の例を作成、[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]アプリケーションです。 ルート<xref:System.Windows.Controls.StackPanel>が、<xref:System.Windows.Data.BindingGroup>格納している、<xref:System.Windows.Controls.ValidationRule>前述のように、項目を検証します。 上のバインド オブジェクト、`Price`プロパティおよび`OfferExpires`になるプロパティの一部の<xref:System.Windows.Data.BindingGroup>各バインディングは、<xref:System.Windows.Controls.ValidationRule>価格、日付、それぞれが有効な値であるかどうかを確認します。 個々 のプロパティの検証規則を実行する前に、<xref:System.Windows.Controls.ValidationRule>上、<xref:System.Windows.Data.BindingGroup>です。  
  
 [!code-xml[BindingGroupSnippets\#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 次の例では、アプリケーションのイベント ハンドラーを示します。 ユーザーは、\[送信\] ボタンをクリックすると、アプリケーションを呼び出す<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>各<xref:System.Windows.Controls.ValidationRule>と関連付けられている、<xref:System.Windows.Data.BindingGroup>です。 各<xref:System.Windows.Controls.ValidationRule>成功すると、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>オブジェクトに値を保存し、編集トランザクションを終了します。 場合<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>が成功すると、アプリケーション別編集トランザクションを開始します。 ときに、<xref:System.Windows.Controls.ValidationRule>失敗すると、<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>イベントが発生するは、アプリケーション設定ため<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>に`true`上、 <xref:System.Windows.Data.BindingGroup> \(前の例\)。`ItemError`ハンドル、<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>ユーザーに検証エラーに関する情報がイベントを表示します。 例も処理、<xref:System.Windows.FrameworkElement.Loaded>イベントを<xref:System.Windows.Controls.StackPanel>と<xref:System.Windows.Controls.Primitives.ButtonBase.Click>イベントを**キャンセル**ボタンをクリックします。  
  
 [!code-csharp[BindingGroupSnippets\#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets\#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 次の例は、カスタム<xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`に追加された、<xref:System.Windows.Data.BindingGroup>最初の例です。 <xref:System.Windows.Controls.ValidationRule>を使用して、<xref:System.Windows.Data.BindingGroup>でその<xref:System.Windows.Controls.ValidationRule.Validate%2A>ユーザーが、フォーム、およびアイテムが 100 ドルを超える場合は、それが使用できる 7 日間以上のチェックに入力した値を取得します。  
  
 [!code-csharp[BindingGroupSnippets\#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets\#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.BindingGroup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のソースの編集トランザクションを開始、 <see cref="T:System.Windows.Data.BindingGroup" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合にソース、 <xref:System.Windows.Data.BindingGroup> 保留中の変更を破棄することをサポートして、呼び出すことができます <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 編集トランザクションを開始する <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 保留中の変更を保存する <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> を保留中の変更を破棄します。  
  
 各オブジェクトに対して <xref:System.Windows.Data.BindingGroup.Items%2A> を実装する <xref:System.ComponentModel.IEditableObject>, 、<xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 呼び出し <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName>  
  
   
  
## 例  
 次の例では <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 編集トランザクションを開始する、ウィンドウが読み込まれるとき。  
  
 [!code-csharp[BindingGroupSnippets\#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets\#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Data.BindingExpression" /> の各バインディングの情報が含まれているオブジェクト、 <see cref="T:System.Windows.Data.BindingGroup" />です。</summary>
        <value>コレクション <see cref="T:System.Windows.Data.BindingExpression" /> の各バインディングの情報が含まれているオブジェクト、 <see cref="T:System.Windows.Data.BindingGroup" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Data.BindingExpression> に属している、 <xref:System.Windows.Data.BindingGroup> が発生した場合は、次のいずれかの場合。  
  
-   バインドのソースと <xref:System.Windows.FrameworkElement.DataContext%2A> を持つ要素の <xref:System.Windows.Data.BindingGroup> 同じオブジェクトと <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が設定されていません。  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> バインディングのプロパティと <xref:System.Windows.Data.BindingGroup.Name%2A> の <xref:System.Windows.Data.BindingGroup> 同じ null 以外の値に設定されて、 <xref:System.Windows.Data.BindingGroup> バインドのターゲット要素の親要素に属しています。  
  
-   追加する、 <xref:System.Windows.Data.BindingExpression> に <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集トランザクションを終了し、保留中の変更を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ソース オブジェクトのための処理を実行できる場合は、保留中の変更を破棄し、編集トランザクションを終了するソースです。 メソッドは、保存されているソースの値を持つターゲットのプロパティを更新します。  
  
 各オブジェクトに対して <xref:System.Windows.Data.BindingGroup.Items%2A> を実装する <xref:System.ComponentModel.IEditableObject>, 、<xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 呼び出し <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName>  
  
   
  
## 例  
 次の例では <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 保留中の変更と、呼び出しを破棄する <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を再編集するソースを準備します。  
  
 [!code-csharp[BindingGroupSnippets\#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets\#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングの各ソースは、保留中の変更を破棄し、元の値を復元するかどうかを取得します。</summary>
        <value>
          <see langword="true" /> バインディングの各ソースは、保留中の変更を破棄し、元の値を復元する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装している場合、保留中の変更のソースを破棄できます <xref:System.ComponentModel.IEditableObject>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>すべての実行、 <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトおよびすべての検証規則が成功した場合は、バインドのソースを更新します。</summary>
        <returns>
          <see langword="true" /> すべて場合 <see cref="T:System.Windows.Controls.ValidationRule" /> 成功すると、値は、ソースにコミットされた以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 あらゆる場合 <xref:System.Windows.Controls.ValidationRule> 成功すると、ソース オブジェクトのための処理を実行できる場合、このメソッドにより、ソースを保留中の変更をコミットし、編集トランザクションを終了します。  
  
 各オブジェクトに対して <xref:System.Windows.Data.BindingGroup.Items%2A> を実装する <xref:System.ComponentModel.IEditableObject>, 、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 呼び出し <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName>  
  
   
  
## 例  
 次の例では <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 保留中の変更と、呼び出しを保存 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> を再編集するソースを準備します。  
  
 [!code-csharp[BindingGroupSnippets\#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets\#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">このオブジェクトは、指定したプロパティが含まれています。</param>
        <param name="propertyName">プロパティが指定された値を取得します。</param>
        <summary>指定したプロパティと項目に対して提案された値を返します。</summary>
        <returns>提示されたプロパティの値です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> ソースにコミットする値を取得します。 戻り値の型をステージに依存、 <xref:System.Windows.Controls.ValidationRule> に発生します。 などの場合、 <xref:System.Windows.Controls.TextBox> データが整数型のプロパティにバインドされると、 <xref:System.Windows.Controls.ValidationRule> を呼び出す <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> がその <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> に設定 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, 、文字列を返します。 場合、 <xref:System.Windows.Controls.ValidationRule> がその <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> に設定 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 、バインディングのコンバーターによって返されるすべての型を返します。 この例では <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 通常整数を返します。  
  
   
  
## 例  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を要求するアプリケーションの一部です。 アプリケーションでは、営業担当者と顧客が同じリージョンに属していることを確認します。 例のよ、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> を使用するメソッド、 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> お客様が入力された値を取得します。  
  
 [!code-csharp[BindingGroupSnippets\#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets\#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定した項目とプロパティのバインドがありません。</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">指定したプロパティの値が、変換エラーが原因で、使用または前の検証ルールが失敗したためです。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Windows.Data.BindingGroup" /> が失敗した検証規則。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Data.BindingGroup" /> が失敗した検証規則。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Data.BindingGroup" /> ソースに書き込まれていない提示された値が含まれています。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Data.BindingGroup" /> いないが、ソースに書き込まれる以外の場合、提示された値を含む <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドのオブジェクトによって使用されるソースの取得、 <see cref="T:System.Windows.Data.BindingGroup" />です。</summary>
        <value>バインドのオブジェクトによって使用されるソース、 <see cref="T:System.Windows.Data.BindingGroup" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各オブジェクトに、ソースが追加されるために使用される、 <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティは 1 度、偶数の場合は、オブジェクトは複数のバインディングのソースとして使用します。 内の 1 つの項目がある多くの場合、 <xref:System.Windows.Data.BindingGroup.Items%2A>, 、あるオブジェクトは、 <xref:System.Windows.FrameworkElement.DataContext%2A> を使用する要素の <xref:System.Windows.Data.BindingGroup>です。<xref:System.Windows.Data.BindingGroup> ただし、複数のソースにします。 たとえば、バインディング オブジェクトの共通 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> が、別のソース オブジェクトを使用して、ソースとして使用される各オブジェクトは <xref:System.Windows.Data.BindingGroup.Items%2A>です。  
  
 複数のオブジェクトにもある <xref:System.Windows.Data.BindingGroup.Items%2A> ソースの入れ子になったプロパティにバインドのパスが解決された場合。 たとえば、 <xref:System.Windows.Controls.TextBox> コントロールのバインドの一部である、 <xref:System.Windows.Data.BindingGroup> とその <xref:System.Windows.FrameworkElement.DataContext%2A> は、 `Customer` 型のプロパティを持つオブジェクト `Address`します。 場合、 <xref:System.Windows.Data.Binding.Path%2A> の <xref:System.Windows.Data.Binding> は、 `Address.ZipCode` プロパティには、 `Address` に追加、 <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティです。  
  
   
  
## 例  
 次の例は、ユーザーに同じ値を 2 つのオブジェクトのプロパティを設定するかどうかを確認するアプリケーションの一部です。 最初の例では、2 つ作成されます <xref:System.Windows.Controls.TextBox> 別のソースにバインドされたデータをそれぞれのコントロールです。 最初のバインディング <xref:System.Windows.Controls.TextBox> そのソースを取得 `object1`, から、 <xref:System.Windows.FrameworkElement.DataContext%2A> の <xref:System.Windows.Controls.TextBox> コントロールの親要素 \(、 <xref:System.Windows.Controls.StackPanel>\)。 2 番目の <xref:System.Windows.Controls.TextBox>, 、バインディングのソースに設定されている `object2`します。 この例でも作成、 <xref:System.Windows.Controls.Label> 妥当性確認エラーを表示します。  
  
 [!code-xml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 例を次に、 <xref:System.Windows.Controls.ValidationRule> 前の例を使用します。<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの場合は、各ソース オブジェクトを取得する例では、 <xref:System.Windows.Data.BindingGroup> し、オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets\#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets\#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を識別する名前、 <see cref="T:System.Windows.Data.BindingGroup" />, 、内のバインディング オブジェクトを含めたり除外したり使用できる、 <see cref="T:System.Windows.Data.BindingGroup" />です。</summary>
        <value>識別する名前、 <see cref="T:System.Windows.Data.BindingGroup" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Windows.Data.BindingGroup.Name%2A> は `null`, と同じオブジェクトであるソースのバインド、 <xref:System.Windows.FrameworkElement.DataContext%2A> を持つ要素の <xref:System.Windows.Data.BindingGroup> に参加、 <xref:System.Windows.Data.BindingGroup>です。  
  
 異なるソースのバインドを含めることができます、 <xref:System.Windows.FrameworkElement.DataContext%2A> を持つ親要素の <xref:System.Windows.Data.BindingGroup> を設定して <xref:System.Windows.Data.BindingGroup.Name%2A> の <xref:System.Windows.Data.BindingGroup> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> プロパティの値が同じ値にバインドします。 同じソースのバインドを除外する <xref:System.Windows.FrameworkElement.DataContext%2A> を持つ親要素の <xref:System.Windows.Data.BindingGroup> を設定して <xref:System.Windows.Data.BindingGroup.Name%2A> の <xref:System.Windows.Data.BindingGroup> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> ごとに異なる値のバインドのプロパティです。  
  
   
  
## 例  
 次の例は、ユーザーに同じ値を 2 つのオブジェクトのプロパティを設定するかどうかを確認するアプリケーションの一部です。 最初の例では、2 つ作成されます <xref:System.Windows.Controls.TextBox> 別のソースにバインドされたデータをそれぞれのコントロールです。 最初のバインディング <xref:System.Windows.Controls.TextBox> の一部である、 <xref:System.Windows.Data.BindingGroup> ため、 <xref:System.Windows.Controls.TextBox> 継承、 <xref:System.Windows.FrameworkElement.DataContext%2A> と <xref:System.Windows.Data.BindingGroup> を親から <xref:System.Windows.Controls.StackPanel>します。  
  
 2 番目のバインド <xref:System.Windows.Controls.TextBox> の一部である、 <xref:System.Windows.Data.BindingGroup> ため、 <xref:System.Windows.Data.BindingGroup.Name%2A> の <xref:System.Windows.Data.BindingGroup> と <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> の <xref:System.Windows.Data.Binding> に設定されて `bindingGroup`します。  
  
 [!code-xml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 例を次に、 <xref:System.Windows.Controls.ValidationRule> 前の例を使用します。<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの場合は、各ソース オブジェクトを取得する例では、 <xref:System.Windows.Data.BindingGroup> し、オブジェクトのプロパティが等しいかどうかを確認します。  
  
 [!code-csharp[BindingGroupSnippets\#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets\#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="E:System.Windows.Controls.Validation.Error" /> イベントが発生したときの状態、 <see cref="T:System.Windows.Controls.ValidationRule" /> 変更します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="E:System.Windows.Controls.Validation.Error" /> イベントが発生したときの状態、 <see cref="T:System.Windows.Controls.ValidationRule" /> 変更です。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> を持つ要素にアタッチされるイベントが発生した、 <xref:System.Windows.Data.BindingGroup>です。  
  
   
  
## 例  
 次の例、 <xref:System.Windows.Data.BindingGroup> 設定と <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> に `true` アプリケーションが処理できるように、 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> イベントときに、 <xref:System.Windows.Controls.ValidationRule> は失敗します。  
  
 [!code-xml[BindingGroupSnippets\#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 次の例のハンドル、 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> イベントです。  
  
 [!code-csharp[BindingGroupSnippets\#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets\#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトを取得この <see cref="T:System.Windows.Data.BindingGroup" /> に割り当てられます。</summary>
        <value>オブジェクトがこの <see cref="T:System.Windows.Data.BindingGroup" /> に割り当てられます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Data.BindingGroup" /> を再利用して対象のソースにコミットされていない値です。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Data.BindingGroup" /> を再利用してターゲットをソースにコミットされた以外の場合、されていない値 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された値は、バインドのターゲット上で変更されましたが、ソースにコミットされていない値です。 たとえば、双方向のバインドがあること、 <xref:System.Windows.Controls.TextBox> と <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> にプロパティが設定されている <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>します。 ユーザーの値を変更した場合、 <xref:System.Windows.Controls.TextBox>, 、提案された値が含まれる値、 <xref:System.Windows.Controls.TextBox> ソースにコミットする前にします。  
  
 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> は `true`, 、 <xref:System.Windows.Data.BindingGroup> バインドの 1 つが、BindingGroup を離れるし、同じソースで別のバインディング、BindingGroup を結合する提案された値が使用されます。  たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックして、ソース オブジェクトを更新するユーザーを使用します。 フィールドが編集されていないときに、アプリケーションで表示、 <xref:System.Windows.Controls.TextBlock>です。 フィールドを編集するユーザーが開始されると、アプリケーションの置換、 <xref:System.Windows.Controls.TextBlock> で、 <xref:System.Windows.Controls.TextBox>です。 ユーザーは、そのフィールドの編集が完了したら、アプリケーションが置き換えられます、 <xref:System.Windows.Controls.TextBox> で、 <xref:System.Windows.Controls.TextBlock>です。 ための方法が存在する必要がありますが、ボタンをクリックするまでに、ソースが更新されないため、 <xref:System.Windows.Controls.TextBlock> 提案された値を表示します。 設定して <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> に `true`, 、アプリケーションが表示、ユーザーの変更のフィールドに、ソースが更新されていない場合でもです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">このオブジェクトは、指定したプロパティが含まれています。</param>
        <param name="propertyName">プロパティが指定された値を取得します。</param>
        <param name="value">このメソッドが戻るときに、提示されたプロパティ値を表すオブジェクトが含まれています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定されたプロパティと項目の提案された値を取得しようとします。</summary>
        <returns>
          <see langword="true" /> 値が指定したプロパティの指定された値である場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 返します `false` 、指定した項目とプロパティのバインドがない場合または指定したプロパティの値に変換エラーが原因で、使用がない場合または前の検証ルールが失敗したためです。  
  
 このメソッドを使用して、 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> ソースにコミットする値を取得します。 種類 `value` をステージに依存、 <xref:System.Windows.Controls.ValidationRule> に発生します。 たとえば場合、 <xref:System.Windows.Controls.TextBox> 整数型のプロパティにバインドされたデータは、 `value` 文字列は、場合、 <xref:System.Windows.Controls.ValidationRule> を呼び出す <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> がその <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> に設定 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>します。 場合、 <xref:System.Windows.Controls.ValidationRule> がその <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> に設定 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, の種類 `value` はどのようなバインディングのコンバーターによって返される型です。 この例では `value` は通常の整数。  
  
   
  
## 例  
 次の例では、カスタム <xref:System.Windows.Controls.ValidationRule> という `ValidateDateAndPrice`します。<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの例では、 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> メソッドおよび <xref:System.Windows.Data.BindingGroup.Items%2A> ユーザーがフォームに入力した値を取得するプロパティです。 この例では、アイテムが 100 ドルを超える場合は、ある利用可能な少なくとも 7 日間を確認します。 この例では、例の一部を上、 <xref:System.Windows.Data.BindingGroup> クラス  
  
 [!code-csharp[BindingGroupSnippets\#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets\#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングでコンバーターを実行し、 <see cref="T:System.Windows.Controls.ValidationRule" /> を持つオブジェクト、 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> プロパティに設定 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, 、<see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, 、または <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> し、すべての検証規則が成功した場合、ソース オブジェクトに、ターゲットの値を保存します。</summary>
        <returns>
          <see langword="true" /> すべての検証ルールが成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、あらゆる場合に、ソースを更新 <xref:System.Windows.Controls.ValidationRule> 成功するは保留中の変更をコミットし、編集トランザクションを終了するソースは発生しません。 つまり、ソース オブジェクトを実装する場合 <xref:System.ComponentModel.IEditableObject>します。 このメソッドは行われません通話 <xref:System.ComponentModel.IEditableObject.EndEdit%2A> に呼び出されます。 使用して、 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> メソッドのソースが保留中の変更をコミットします。  
  
   
  
## 例  
 次の例は、複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を要求するアプリケーションの一部です。 アプリケーションでは、営業担当者と顧客が同じリージョンに属していることを確認します。 呼び出しの例 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> をバインドを検証し、すべての検証規則が成功した場合、値をソースに保存します。  
  
 [!code-csharp[BindingGroupSnippets\#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets\#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含めるかどうかを示す値、 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />です。</summary>
        <value>
          <see langword="true" /> 含める、 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> は `true`, 、バインドをチェックしを実装するデータ ソースで発生したエラーを報告 <xref:System.ComponentModel.INotifyDataErrorInfo>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングでコンバーターを実行し、 <see cref="T:System.Windows.Controls.ValidationRule" /> を持つオブジェクト、 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> プロパティに設定 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />です。</summary>
        <returns>
          <see langword="true" /> 検証ルールが成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出すと、ソースは更新されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Controls.ValidationError" /> 発生させたオブジェクト、 <see cref="T:System.Windows.Data.BindingGroup" /> 無効にします。</summary>
        <value>コレクション <see cref="T:System.Windows.Controls.ValidationError" /> の原因となったオブジェクト <see cref="T:System.Windows.Data.BindingGroup" /> 無効にします。  値が <see langword="null" /> エラーがない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Controls.ValidationRule" /> でソース オブジェクトを検証するオブジェクト、 <see cref="T:System.Windows.Data.BindingGroup" />です。</summary>
        <value>コレクション <see cref="T:System.Windows.Controls.ValidationRule" /> でソース オブジェクトを検証するオブジェクト、 <see cref="T:System.Windows.Data.BindingGroup" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Controls.ValidationRule> に追加、 <xref:System.Windows.Data.BindingGroup>, 、 <xref:System.Windows.Data.BindingGroup> の最初のパラメーターとして渡されます、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドです。 使用して、オブジェクトの提案された値を取得できます、 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> または <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> メソッドです。 バインドのソースであるオブジェクトを取得できます、 <xref:System.Windows.Data.BindingGroup.Items%2A> プロパティです。  
  
   
  
## 例  
 次の例では、カスタム <xref:System.Windows.Controls.ValidationRule>, 、`ValidateDateAndPrice`, を <xref:System.Windows.Data.BindingGroup>です。  
  
 [!code-xml[BindingGroupSnippets\#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 例を次に、 `ValidateDateAndPrice` クラスです。<xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドの使用方法、 <xref:System.Windows.Data.BindingGroup> ユーザーがフォーム、およびチェック項目が 100 ドルを超える場合は、ある利用可能な少なくとも 7 日間に入力した値を取得します。  
  
 [!code-csharp[BindingGroupSnippets\#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets\#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>