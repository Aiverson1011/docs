<Type Name="MultiBinding" FullName="System.Windows.Data.MultiBinding">
  <TypeSignature Language="C#" Value="public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiBinding extends System.Windows.Data.BindingBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.MultiBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Bindings")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>単一のバインド対象のプロパティに添付される <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクションを記述します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 複数のバインドを指定できます、 <xref:System.Windows.Data.MultiBinding> オブジェクトです。 使用すると、 <xref:System.Windows.Data.MultiBinding> 、コンバーターを使用したオブジェクトとそれらのバインドの値に基づくバインド ターゲットの最終的な値が生成されます。 たとえば、同じまたは異なるバインディングのソース オブジェクトから値を指定できる赤、青、および緑の値から色を計算する可能性があります。 値は、ターゲットからソースを移動、対象のプロパティの値は、一連のバインディングに渡す値に変換されます。  
  
 値、 <xref:System.Windows.Data.MultiBinding.Mode%2A> と <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> プロパティの機能を決定する、 <xref:System.Windows.Data.MultiBinding> し、個別のバインディングがこれらのプロパティをオーバーライドしない限り、コレクション内のすべてのバインディングの既定値として使用されます。 などの場合、 <xref:System.Windows.Data.MultiBinding.Mode%2A> プロパティを <xref:System.Windows.Data.MultiBinding> にオブジェクトが設定されている <xref:System.Windows.Data.BindingMode.TwoWay>, と見なされるコレクション内のすべてのバインディング <xref:System.Windows.Data.BindingMode.TwoWay> 別に設定していない場合 <xref:System.Windows.Data.MultiBinding.Mode%2A> 、バインドのいずれかの値に明示的にします。 詳細については、次を参照してください。、 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName> と <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> プロパティです。  
  
 <xref:System.Windows.Data.MultiBinding> は、現在、型 <xref:System.Windows.Data.Binding> のオブジェクトのみをサポートしており、<xref:System.Windows.Data.MultiBinding> と <xref:System.Windows.Data.PriorityBinding> はサポートしていません。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.MultiBinding" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt; Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingBase&gt; Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Data.MultiBinding" /> のインスタンス内の <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Data.Binding" /> オブジェクトのコレクション。<see cref="T:System.Windows.Data.MultiBinding" /> は、現在、型 <see cref="T:System.Windows.Data.Binding" /> のオブジェクトのみをサポートしており、<see cref="T:System.Windows.Data.MultiBinding" /> と <see cref="T:System.Windows.Data.PriorityBinding" /> はサポートしていません。<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトに <see cref="T:System.Windows.Data.Binding" /> の子を追加すると、その子が <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトの <see cref="T:System.Windows.Data.BindingBase" /> コレクションに暗黙的に追加されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the syntax that is shown, or by accessing the collection object and using its various methods, such as **languageKeyword tag is not supported!!!!**  
> . The property used to access the collection object is read\-only, whereas the collection itself is read\/write.  
  
<a name="xamlPropertyElementUsage_Bindings"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  oneOrMoreBindings  
</object>  
  
```  
  
<a name="xamlValues_Bindings"></a>   
## XAML Values  
 *oneOrMoreBindings*  
 One or more <xref:System.Windows.Data.Binding> objects.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IMultiValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IMultiValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IMultiValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>対象の値との間でソース値の変換に使用するコンバーターを取得または設定します。</summary>
        <value>使用するコンバーターを示す <see cref="T:System.Windows.Data.IMultiValueConverter" /> 型の値。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクション内の個々 のバインディングが独自の値を持つ <xref:System.Windows.Data.Binding.Converter%2A>です。 詳細については、「<xref:System.Windows.Data.IValueConverter>」を参照してください。  
  
<a name="xamlAttributeUsage_Converter"></a>   
## XAML 属性の使用方法  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## XAML 値  
 *myConverter*  
 実装するクラスへの参照をリソース、 <xref:System.Windows.Data.IMultiValueConverter> インターフェイスの実装が含まれますが、 <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> と <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> メソッドです。 を参照するには、値コンバーターを使用して、 [マークアップ拡張機能と WPF XAML](http://msdn.microsoft.com/ja-jp/618dc745-8b14-4886-833f-486d2254bb78)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Globalization.CultureInfo" /> でラップされたバインドに割り当てられているすべてのコンバーターを適用するオブジェクト、 <see cref="T:System.Windows.Data.MultiBinding" /> または、 <see cref="T:System.Windows.Data.MultiBinding" /> 自体です。</summary>
        <value>有効な <see cref="T:System.Globalization.CultureInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_ConverterCulture"></a>   
## XAML 属性の使用方法  
  
```  
<object ConverterCulture="ietfLanguageTag"/>  
```  
  
<a name="xamlValues_ConverterCulture"></a>   
## XAML 値  
 *ietfLanguageTag*  
 設定に使用する文字列、 <xref:System.Globalization.CultureInfo>です。 この文字列を使用して、内部的に呼び出します。<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>。 文字列の形式の詳細については、「 <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンバータに追加情報として渡すオプション パラメーターを取得または設定します。</summary>
        <value>コンバーターに渡すパラメーター。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_ConverterParameter"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.ConverterParameter>  
    converterParameter  
  </object.ConverterParameter>  
</object>  
```  
  
<a name="xamlAttributeUsage_ConverterParameter"></a>   
## XAML Attribute Usage  
  
```  
<object property="converterParameter" />  
```  
  
<a name="xamlValues_ConverterParameter"></a>   
## XAML Values  
 *converterParameter*  
 A value of the type expected by the converter, which might be an object element or a string depending on the definition and XAML capabilities both of the property type being used and of the implementation of the converter. The converter takes in that type through the **parameterReference tag is not supported!!!!**  
 parameter as defined by its <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> implementations.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングのデータ フローの方向を示す値を取得または設定。</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingMode" /> 値のいずれか。 既定値は <see cref="F:System.Windows.Data.BindingMode.Default" /> で、ターゲット依存関係プロパティの既定のバインド モード値を返します。 ただし、既定値は各依存関係プロパティによって異なります。 一般に、ユーザーが編集できる <see cref="P:System.Windows.Controls.TextBox.Text" /> などのコントロール プロパティは既定で双方向のバインディングであり、それ以外のほとんどのプロパティは既定で一方向のバインドになります。  
  
 依存関係プロパティが既定で一方向と双方向のどちらでバインドされるかをプログラムで判断する 1 つの方法として、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使用してそのプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> プロパティのブール値を確認することがきます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Data.MultiBinding.Mode%2A> と <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> プロパティの機能を決定する、 <xref:System.Windows.Data.MultiBinding> し、個別のバインディングがこれらのプロパティをオーバーライドしない限り、コレクション内のすべてのバインディングの既定値として使用されます。 などの場合、 <xref:System.Windows.Data.MultiBinding.Mode%2A> プロパティを <xref:System.Windows.Data.MultiBinding> にオブジェクトが設定されている <xref:System.Windows.Data.BindingMode.TwoWay>, と見なされるコレクション内のすべてのバインディング <xref:System.Windows.Data.BindingMode.TwoWay> 別に設定していない場合 <xref:System.Windows.Data.MultiBinding.Mode%2A> 、バインドのいずれかの値に明示的にします。 詳細については、次を参照してください。、 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName> と <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング ターゲットからバインディング ソースへ値が転送されたときに、<see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
        <value>バインディング ソースの値が更新されたときに <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング ソースからバインディング ターゲットへ値が転送されたときに <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> イベントを発生させるかどうかを示す値を取得または設定します。</summary>
        <value>バインディング ターゲットの値が更新されたときに <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドされた要素に対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させるかどうかを示す値を取得または設定します。</summary>
        <value>ソースの更新中に検証エラーが発生したときにバインドされた要素に対して <see cref="E:System.Windows.Controls.Validation.Error" /> 添付イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `ShouldSerialize` ために、メソッドが提供される、 <xref:System.Windows.Data.MultiBinding.Bindings%2A> プロパティには、単純な既定値はありません。 このメソッドは、プロパティが既定値から変更されたかどうかを示します。 いずれかのデザイナーを開発している場合に通常、このメソッドが呼び出す、 <xref:System.Windows.Data.MultiBinding> やコントロールを組み込む独自の開発、 <xref:System.Windows.Data.MultiBinding>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `ShouldSerialize` ために、メソッドが提供される、 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> プロパティには、単純な既定値はありません。 このメソッドは、プロパティが既定値から変更されたかどうかを示します。 いずれかのデザイナーを開発している場合に通常、このメソッドが呼び出す、 <xref:System.Windows.Data.MultiBinding> やコントロールを組み込む独自の開発、 <xref:System.Windows.Data.MultiBinding>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためにカスタム ロジックの提供に使用できるハンドラーを取得または設定します。 これは、<see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトに <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> を関連付けている場合にのみ適用できます。</summary>
        <value>バインディング ソースの値の更新時にバインディング エンジンが検出した例外を処理するためのカスタム ロジックを提供するメソッド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ExceptionValidationRule> クラスは、バインディング ソースのプロパティの更新中にスローされる例外をチェックする組み込みの検証規則を表します。 関連付けられている場合は、 <xref:System.Windows.Controls.ExceptionValidationRule> オブジェクトを <xref:System.Windows.Data.MultiBinding> オブジェクトに、このプロパティを使用してこれらの例外を処理するためのカスタム ロジックを提供するハンドラーを設定することができます。  
  
 例については、「<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>」を参照してください。  
  
 検証プロセスの詳細については <xref:System.Windows.Data.MultiBinding> オブジェクトを参照してください、 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング ソースの更新のタイミングを決定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値のいずれか。 既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> で、ターゲット依存関係プロパティの既定の <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 値を返します。 ほとんどの依存関係プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /> です。ただし、<see cref="P:System.Windows.Controls.TextBox.Text" /> プロパティの既定値は <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> です。  
  
 プログラムを使って依存関係プロパティの既定の <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 値を確認するには、<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> を使ってプロパティのプロパティ メタデータを取得してから、<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> プロパティの値を確認します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Data.MultiBinding.Mode%2A> と <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> プロパティの機能を決定する、 <xref:System.Windows.Data.MultiBinding> し、個別のバインディングがこれらのプロパティをオーバーライドしない限り、コレクション内のすべてのバインディングの既定値として使用されます。 などの場合、 <xref:System.Windows.Data.MultiBinding.Mode%2A> プロパティを <xref:System.Windows.Data.MultiBinding> にオブジェクトが設定されている <xref:System.Windows.Data.BindingMode.TwoWay>, と見なされるコレクション内のすべてのバインディング <xref:System.Windows.Data.BindingMode.TwoWay> 別に設定していない場合 <xref:System.Windows.Data.MultiBinding.Mode%2A> 、バインドのいずれかの値に明示的にします。 詳細については、次を参照してください。、 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName> と <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含めるかどうかを示す値、 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />です。</summary>
        <value>
          <see langword="true" /> 含める、 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、使用する代わりに、 <xref:System.Windows.Controls.DataErrorValidationRule> 要素に明示的にします。<xref:System.Windows.Controls.DataErrorValidationRule> によって発生したエラーをチェックする組み込みの検証規則、 <xref:System.ComponentModel.IDataErrorInfo> ソース オブジェクトの実装です。 バインド エンジンによって作成エラーが発生した場合、 <xref:System.Windows.Controls.ValidationError> 、エラーのために追加し、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> バインドされている要素のコレクション。 エラーの欠如は、別のルールが検証の問題が発生しない限り、この検証からのフィードバックをクリアします。  
  
 検証プロセスの詳細については <xref:System.Windows.Data.MultiBinding> オブジェクトを参照してください、 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> プロパティです。  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnDataErrors%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[.NET Framework 3.5 Architecture](http://msdn.microsoft.com/ja-jp/f75a72de-e2f2-4a7a-9574-3f278684ea90)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含めるかどうかを示す値、 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />です。</summary>
        <value>
          <see langword="true" /> 含める、 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、使用する代わりに、 <xref:System.Windows.Controls.ExceptionValidationRule> 要素に明示的にします。<xref:System.Windows.Controls.ExceptionValidationRule> 組み込みの検証ルールが source プロパティの更新中にスローされる例外の有無をチェックします。 バインディング エンジンを作成、例外がスローされた場合、 <xref:System.Windows.Controls.ValidationError> 例外に追加し、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> バインドされている要素のコレクション。 エラーの欠如は、別のルールが検証の問題が発生しない限り、この検証からのフィードバックをクリアします。  
  
 検証プロセスの詳細については <xref:System.Windows.Data.MultiBinding> オブジェクトを参照してください、 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> プロパティです。  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnExceptions%2A> .NET Framework version 3.5 で導入されました。  詳細については、「[.NET Framework 3.5 Architecture](http://msdn.microsoft.com/ja-jp/f75a72de-e2f2-4a7a-9574-3f278684ea90)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含めるかどうかを示す値、 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />です。</summary>
        <value>
          <see langword="true" /> 含める、 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors%2A> は `true`, 、バインドをチェックしを実装するデータ ソースで発生したエラーを報告 <xref:System.ComponentModel.INotifyDataErrorInfo>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Controls.ValidationRule" /> のインスタンスの <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトのコレクションを取得します。</summary>
        <value>この <see cref="T:System.Windows.Controls.ValidationRule" /> のインスタンスの <see cref="T:System.Windows.Data.MultiBinding" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証ルールを設定するには、両方で、 <xref:System.Windows.Data.MultiBinding> オブジェクトと、個々 <xref:System.Windows.Data.Binding> 内のオブジェクト、 <xref:System.Windows.Data.MultiBinding> オブジェクトです。 バインディング エンジン、 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 上、 <xref:System.Windows.Data.MultiBinding> オブジェクトをバインディング ターゲット プロパティから値を移動すると、 <xref:System.Windows.Data.IMultiValueConverter> オブジェクトです。 その後、値にコンバーターから個別のバインドのバインド ソースのプロパティに移動すると、バインディング エンジンを評価、 <xref:System.Windows.Data.Binding.ValidationRules%2A> を <xref:System.Windows.Data.Binding> オブジェクトです。  
  
 検証プロセスと無効化に視覚的なフィードバックを提供する方法の詳細については、「データの検証」を参照してください [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
> [!NOTE]
>  このプロパティを設定できます [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] に示す構文を使用するか、コレクション オブジェクトにアクセスしてなどのさまざまなメソッドを使用して `Add`します。 コレクション オブジェクトへのアクセスに使用するプロパティは、コレクション自体は読み取り\/書き込みは読み取り専用です。  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## XAML 値  
 *oneOrMoreValidationRules*  
 1 つまたは複数 <xref:System.Windows.Controls.ValidationRule> オブジェクトです。 使用することができます、 <xref:System.Windows.Controls.ExceptionValidationRule> クラスまたはサブクラス化して、カスタムの規則を作成、 <xref:System.Windows.Controls.ValidationRule> クラスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>