<Type Name="BindingExpressionBase" FullName="System.Windows.Data.BindingExpressionBase">
  <TypeSignature Language="C#" Value="public abstract class BindingExpressionBase : System.Windows.Expression, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingExpressionBase extends System.Windows.Expression implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>基本クラスを表す <see cref="T:System.Windows.Data.BindingExpression" />, 、<see cref="T:System.Windows.Data.PriorityBindingExpression" />, 、および <see cref="T:System.Windows.Data.MultiBindingExpression" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 バインディングとバインディング式についてを参照してください"のバインドと BindingExpression" [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Data.BindingGroup" /> がこのバインディング式が属しています。</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingGroup" /> がこのバインディング式が属しています。 このプロパティを返します <see langword="null" /> 場合、 <see cref="T:System.Windows.Data.BindingExpressionBase" /> はの一部ではなく、  <see cref="T:System.Windows.Data.BindingGroup" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="public virtual bool HasError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親バインドに失敗した検証規則があるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 親バインドに失敗した検証規則がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、 <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Validation.HasError" />
        <altmember cref="P:System.Windows.Data.MultiBindingExpression.HasError" />
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public virtual bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親バインドに失敗した検証規則があるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 親バインドに失敗した検証規則がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、 <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバインドのターゲットがソースに書き込まれていない値を持つかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ターゲットには、ソースに書き込まれていない値が含まれている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、場合にのみ適用されます <xref:System.Windows.Data.Binding.Mode%2A> 、親 <xref:System.Windows.Data.Binding> に設定されている <xref:System.Windows.Data.BindingMode.TwoWay> または <xref:System.Windows.Data.BindingMode.OneWayToSource>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBindingBase">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ParentBindingBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ParentBindingBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトからこの <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを作成します。</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingBase" /> オブジェクトからこの <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクトを作成します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディング式の状態を取得します。</summary>
        <value>A <see cref="T:System.Windows.Data.BindingStatus" /> バインド式の状態を説明する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">種類、 <see cref="T:System.Windows.WeakEventManager" /> このメソッドを呼び出すことです。 型のマネージャー オブジェクトを認識するだけ <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />します。</param>
        <param name="sender">イベントを発生させたオブジェクト。</param>
        <param name="e">イベント データ。</param>
        <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <returns>
          <see langword="true" /> リスナーがイベントを処理する場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインド式のバインドのターゲット オブジェクトにある要素を取得します。</summary>
        <value>このバインド式のバインドのターゲット オブジェクトにある要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインド式のバインディング ターゲット プロパティを取得します。</summary>
        <value>このバインド式のバインド対象プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public virtual void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> または <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> バインドにあるバインド ソースに現在のバインド ターゲットの値を送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の実装で、基本クラスではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public virtual void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディング ソースからバインディング ターゲットへのデータ転送を強制的に実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の実装で、基本クラスではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>いずれかを実行 <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトに関連付けられた <see cref="T:System.Windows.Data.Binding" /> がある、 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> プロパティに設定 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> または <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />です。 このメソッドは、ソースを更新できません。</summary>
        <returns>
          <see langword="true" /> 検証ルールが成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> メソッドでは、バインディングのソースを更新することがなくバインディングの検証ルールを実行することができます。 これは、ユーザー入力を検証し、さまざまな時点におけるアプリケーションのソースを更新する場合に便利です。  
  
 たとえば、\[送信\] ボタンを含むデータ ソースを更新するためのフォームがあるとします。 フォームを送信する前に、無効な値が入力した場合、ユーザーにフィードバックを提供します。 フィールドの有効性を確認するには、バインドを設定して <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> プロパティを <xref:System.Windows.Data.UpdateSourceTrigger.Explicit> を呼び出すと <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> ときに、 <xref:System.Windows.Controls.TextBox> がフォーカスを失った。  
  
   
  
## 例  
 次の例では、「解説」セクションで説明されているシナリオを示します。 例では、ユーザーが、ライブラリ アイテムのデータを入力し、データを送信できるようにします。 バインド、 <xref:System.Windows.Controls.TextBox> という `callNum` が、 <xref:System.Windows.Controls.ValidationRule> 関連付けられています。 ときに、 <xref:System.Windows.Controls.TextBox> の例では、フォーカスを失った <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A>します。 例では、ユーザーは、\[送信\] ボタンをクリックすると、 <xref:System.Windows.Data.BindingExpressionBase.UpdateSource%2A> 変更を確定します。 次の XAML では、アプリケーションのユーザー インターフェイスを作成します。  
  
 [!code-xml[BindingExpressionBaseValidateWithoutUpdating\#WindowXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml#windowxaml)]  
  
 次の例では、ユーザー インターフェイスのロジックを示します。  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating\#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml.cs#windowlogic)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating\#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/window1.xaml.vb#windowlogic)]  
  
 次の例では、データ オブジェクトと <xref:System.Windows.Controls.ValidationRule> アプリケーションです。  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating\#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/data.cs#data)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating\#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/data.vb#data)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationError">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationError ValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationError ValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスの原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> 無効にします。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ValidationError" /> のこのインスタンスの原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> 無効にします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Validation.Errors" />
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのこのインスタンスの原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> 無効にします。</summary>
        <value>コレクション <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのこのインスタンスの原因となった <see cref="T:System.Windows.Data.BindingExpressionBase" /> 無効にします。  値が <see langword="null" /> エラーがない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>