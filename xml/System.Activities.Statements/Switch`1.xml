<Type Name="Switch&lt;T&gt;" FullName="System.Activities.Statements.Switch&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class Switch&lt;T&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Switch`1&lt;T&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Switch`1" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Cases")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <see cref="P:System.Activities.Statements.Switch`1.Cases" /> コレクションで提供される値の型。</typeparam>
    <summary>このオブジェクトの型指定子で指定された型の指定された式の値に基づいて、実行する複数のアクティビティから 1 つを選択します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Activities.Statements.Switch%601.Cases%2A> ディクショナリ内の各 case は、\(ディクショナリのキーとして機能する\) 値と、\(ディクショナリの値として機能する\) アクティビティで構成されます。<xref:System.Activities.Statements.Switch.Expression%2A> は評価され、<xref:System.Activities.Statements.Switch%601.Cases%2A> ディクショナリのキーと比較されます。 一致が見つかった場合は、対応するアクティビティが実行されます。<xref:System.Activities.Statements.Switch%601.Cases%2A> ディクショナリ内のすべてのキーは、ディクショナリの等値比較子に従って一意である必要があります。  
  
   
  
## 例  
 <xref:System.Activities.Statements.Switch%601> アクティビティを作成するコード サンプルを次に示します。 この例は、 [手続き型アクティビティを使用して](http://msdn.microsoft.com/ja-jp/1c67f739-3878-48ad-806c-b2ce0d6733a0) サンプルです。  
  
 [!code-csharp[wfs\_Procedurals\#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Activities.Statements.Switch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 <xref:System.Activities.Statements.Switch%601> アクティビティを作成するコード サンプルを次に示します。 この例は、 [手続き型アクティビティを使用して](http://msdn.microsoft.com/ja-jp/1c67f739-3878-48ad-806c-b2ce0d6733a0) サンプルです。  
  
 [!code-csharp[wfs\_Procedurals\#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Activities.Statements.Switch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 <xref:System.Activities.Statements.Switch%601> アクティビティを作成するコード サンプルを次に示します。 この例は、 [手続き型アクティビティを使用して](http://msdn.microsoft.com/ja-jp/1c67f739-3878-48ad-806c-b2ce0d6733a0) サンプルです。  
  
 [!code-csharp[wfs\_Procedurals\#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Activities.Activity&lt;T&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;!T&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">評価され、<see cref="P:System.Activities.Statements.Switch`1.Cases" /> ディクショナリの値と比較される式。</param>
        <summary>指定した式を使用して、<see cref="T:System.Activities.Statements.Switch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Activities.InArgument&lt;T&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument`1&lt;!T&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.InArgument&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">評価され、<see cref="P:System.Activities.Statements.Switch`1.Cases" /> ディクショナリの値と比較される式。</param>
        <summary>指定した式を使用して、<see cref="T:System.Activities.Statements.Switch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Switch (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, !T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">評価され、<see cref="P:System.Activities.Statements.Switch`1.Cases" /> ディクショナリの値と比較される式。</param>
        <summary>指定した式を使用して、<see cref="T:System.Activities.Statements.Switch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cases">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;T,System.Activities.Activity&gt; Cases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!T, class System.Activities.Activity&gt; Cases" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Cases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;T,System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行パスのディクショナリを表します。 各エントリには、キー、および式の結果がキーと一致する場合に実行されるアクティビティが含まれます。</summary>
        <value>実行パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクティビティ実行時、実行される case は、<xref:System.Activities.Statements.Switch.Expression%2A> プロパティとキーが一致する最初の case です。  
  
   
  
## 例  
 <xref:System.Activities.Statements.Switch%601> アクティビティの Cases プロパティを設定するコード サンプルを次に示します。 この例は、[手続き型アクティビティを使用して](http://msdn.microsoft.com/ja-jp/1c67f739-3878-48ad-806c-b2ce0d6733a0)サンプルです。  
  
 [!code-csharp[wfs\_Procedurals\#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Default { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Default" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Activities.Statements.Switch.Cases" /> プロパティに一致する <see cref="P:System.Activities.Statements.Switch.Expression" /> コレクションのエントリのキーがない場合に実行されるアクティビティを表します。</summary>
        <value>実行する既定のアクティビティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;T&gt; Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;!T&gt; Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Switch`1.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Activities.Statements.Switch.Cases" /> コレクションのキーと比較するオブジェクトを取得します。</summary>
        <value>
          <see cref="P:System.Activities.Statements.Switch.Cases" /> コレクションのキーと比較するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The comparison occurs after the expression is evaluated.  
  
   
  
## 例  
 The following code sample demonstrates setting the Expression property of a <xref:System.Activities.Statements.Switch%601> activity. This example is from the [Using Procedural Activities](http://msdn.microsoft.com/ja-jp/1c67f739-3878-48ad-806c-b2ce0d6733a0) sample.  
  
 [!code-csharp[wfs\_Procedurals\#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_procedurals/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>