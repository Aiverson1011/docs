<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コンポーネント、型、または複数のバージョンにわたる可能性がある型のメンバーの互換性の保証を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> は、コンポーネントとクラス ライブラリの開発者によって、ライブラリのコンシューマーは、複数のバージョンで期待できる互換性のレベルを示すために使用します。 将来のバージョンのライブラリやコンポーネントが、既存のクライアントに互換性を保証のレベルを示します。 クライアントを使用して、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 支援するために異なるバージョン間での安定性を確保する、独自のインターフェイスを設計します。  
  
> [!NOTE]
>  共通言語ランタイム \(CLR\) では、任意の方法でこの属性は使用しません。 その値は、コンポーネントの作成者の意図を正式に文書化にあります。 コンパイル時のツールでは、宣言されている保証が破壊されるそれ以外の場合はコンパイル時エラーを検出するためにもこれらの宣言を使用できます。  
  
## 互換性レベル  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> のメンバーによって表される次のレベルの互換性をサポートしている、 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> 列挙体。  
  
-   バージョンの互換性なし \(<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=fullName>\)。 クライアントは、将来のバージョンが、既存のクライアントをなくなることを想定できます。 詳細については、次を参照してください。、 [互換なし](#None) このトピックで後述します。  
  
-   サイド バイ サイド バージョンの互換性 \(<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=fullName>\)。 コンポーネントが同じアプリケーション ドメインで 1 つ以上のバージョンのアセンブリが読み込まれるときに作業するテスト済みです。 一般に、将来のバージョンでは、互換性を中断できます。 ただし、重大な変更が行われたときに、古いバージョンは変更されませんが、新しいバージョンと併せてがあります。 サイド バイ サイド実行は、既存のクライアントが重大な変更が加えられたときの動作に予期される方法です。 詳細については、次を参照してください。、 [サイド バイ サイド互換性](#SideBySide) このトピックで後述します。  
  
-   永続的なバージョンの互換性 \(<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=fullName>\)。 将来のバージョンは、クライアントを切断しないと、サイド バイ サイド実行が必要はありません。 ただし、クライアントが誤って破損した場合をサイド バイ サイド実行を使用して、問題を解決する場合があります。 詳細については、次を参照してください。、 [安定した互換性](#Standard) セクションです。  
  
-   Exchange のバージョンの互換性 \(<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=fullName>\)。 特別な注意が将来のバージョンでは、クライアントが中断されないことが確認されるとしています。 互いに独立して配置されている他のアセンブリとの通信に使用されるインターフェイスのシグネチャで、クライアントはこれらの型だけを使用する必要があります。 これらの型の 1 つだけのバージョンは、場合は、クライアントから実行が中断サイド バイ サイド実行によって、互換性の問題修正できないことを意味する特定のアプリケーション ドメイン内にあると想定されます。 詳細については、次を参照してください。、 [Exchange 型の互換性](#Exchange) セクションです。  
  
 次に、各レベルの保証をさらに詳しく説明します。  
  
<a name="None"></a>   
### 互換性なし  
 コンポーネントとしてのマークを付ける <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=fullName> プロバイダーに互換性についての保証はないことを示します。 クライアントは、公開されているインターフェイスに、依存することを避ける必要があります。 このレベルの互換性は、実験用または型をパブリックに公開しますが、同時に常に更新されるコンポーネントのみを目的としていますに役立ちます。<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 明示的に外部コンポーネントによってこのコンポーネントを使用しないことを示します。  
  
<a name="SideBySide"></a>   
### サイド バイ サイドの互換性  
 コンポーネントとしてのマークを付ける <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=fullName> アセンブリの複数のバージョンが同じアプリケーション ドメインに読み込まれるときに動作するコンポーネントがテストされていることを示します。 互換性に影響する変更は、大きいバージョン番号を持つアセンブリに加えられた場合に限り許可されます。 引き続き以前のバージョンにバインドするアセンブリの古いバージョンにバインドされているコンポーネントが許可され、他のコンポーネントは、新しいバージョンにバインドできます。 宣言するコンポーネントを更新することも <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> 破壊的、古いバージョンを変更しています。  
  
<a name="Standard"></a>   
### 安定した互換性  
 として型をマーク <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=fullName> 種類を異なるバージョン間で安定した続ける必要がありますを示します。 ただし、ある可能性がありますも、同じアプリケーション ドメインに存在している安定した型のバージョンがサイド バイ サイドです。  
  
 安定した型では、バイナリの互換性が高いバーを維持します。 このため、プロバイダーは、安定した型に互換性に影響する変更を加える避ける必要があります。 次の種類の変更が可能です。  
  
-   プライベート インスタンス フィールドを追加するか、このシリアル化形式が壊れない限り、その型からフィールドを削除します。  
  
-   シリアル化できない型をシリアル化可能な型に変更します。 \(ただし、シリアル化可能な型変更できません非シリアル化可能な型にします。\)  
  
-   新規、メソッドからより派生例外をスローします。  
  
-   メソッドのパフォーマンスが向上します。  
  
-   変更が、大半のクライアントに悪影響を及ぼさない限り、戻り値の範囲を変更します。  
  
-   業務の妥当性が高いと、悪影響を受けるクライアントの数が少ない場合は、重大なバグを修正します。  
  
 安定したコンポーネントの新しいバージョンを既存のクライアントを中断する必要はありません、ため、通常、アプリケーション ドメインで安定したコンポーネントの 1 バージョンのみが必要です。 ただし、この必須ではありません、安定した型は、すべてのコンポーネントについて合意するよく知られた exchange 型として使用されていないためです。 そのため、安定したコンポーネントの新しいバージョンにいくつかのコンポーネントが誤って破損し、その他のコンポーネントには、新しいバージョンが必要な場合は、新旧のコンポーネントの両方を読み込むで問題を修正することがあります。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>強力なバージョンの互換性が保証されて <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>します。 複数バージョンのコンポーネントの一般的な既定値になります。  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> 組み合わせて使用できます <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, 、コンポーネントが互換性を損なうはありませんが、特定のアプリケーション ドメインに 1 つ以上のバージョンが読み込まれたときの動作テストが旨が記載されます。  
  
 型またはメソッドとしてマークされた後に <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, にアップグレードできる <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>です。 ただし、そのダウン グレードできません <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>します。  
  
<a name="Exchange"></a>   
### Exchange 型の互換性  
 として型をマーク <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=fullName> よりも強力なバージョンの互換性が保証されて <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, 、最も安定してすべての種類に適用する必要があります。 両方の時刻 \(CLR のすべてのバージョン\) または任意のバージョンのコンポーネントまたはアプリケーションのすべてのコンポーネントの境界を越えて個別にビルドされたコンポーネントとスペース \(プロセス間間と CLR の 1 つのプロセスでは、1 つの CLR でのアプリケーション間のドメイン\) の間で交換に使用するは、これらの型が想定されています。 交換型に重大な変更が行われた場合、型の複数のバージョンを読み込むことによって問題を解決することはできません。  
  
 問題が重大なセキュリティ上の問題\) など、非常に深刻なか、発生する確率が \(つまり、動作は、コードが持てないの依存関係のランダムな方法で既に分割されていました\) 場合に非常に低い場合にのみ、Exchange の種類を変更する必要があります。 交換型には、次の種類の変更をすることができます。  
  
-   新しいインターフェイス定義の継承を追加します。  
  
-   新たに継承されたインターフェイス定義のメソッドを実装する新しいプライベート メソッドを追加します。  
  
-   新しい静的フィールドを追加します。  
  
-   新しい静的メソッドを追加します。  
  
-   新しいインスタンスを非仮想メソッドを追加します。  
  
 次は重大な変更と見なさプリミティブ型は許可されていません。  
  
-   シリアル化形式を変更します。 バージョン トレラントなシリアル化が必要です。  
  
-   追加またはプライベート インスタンス フィールドを削除します。 これはリスク型のシリアル化形式を変更して、リフレクションを使用するクライアント コードが破損します。  
  
-   型のシリアル化可能性を変更します。 型をシリアル化することはできませんシリアル化可能なまたはその逆です。  
  
-   メソッドから別の例外をスローしています。  
  
-   メンバーの定義は、この可能性を発生させ、クライアントが不明な値を処理する方法を明確に示す場合を除き、メソッドの戻り値の範囲を変更します。  
  
-   多くのバグを修正します。 型のコンシューマーは、既存の動作に依存します。  
  
 コンポーネントの場合は後の型、またはメンバーが付いて、 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 確実には、いずれかに変更することはできません <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> または <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>です。  
  
 通常、exchange の種類には、基本的な型 \(など <xref:System.Int32> と <xref:System.String> .NET Framework の\) とインターフェイス \(など <xref:System.Collections.Generic.IList%601>, 、<xref:System.Collections.Generic.IEnumerable%601>, 、および <xref:System.IComparable%601>\) パブリック インターフェイスでよく使用されています。  
  
 交換の種類がでもマークされている他の種類のみを公開 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> 互換性です。 さらに、交換の種類が変更される可能性がある Windows Api の動作に依存できません。  
  
## コンポーネントの保証: 概要  
 次の表では、コンポーネントの特性と使用率が、互換性の保証に影響を示します。  
  
|コンポーネントの特性|Exchange|Stable|サイド バイ サイド|なし|  
|----------------|--------------|------------|----------------|--------|  
|コンポーネント間のインターフェイスでそのバージョン別個に使用します。|Y|N|N|N|  
|指定できます \(プライベート\) アセンブリのバージョンを個別に使用します。|Y|Y|Y|N|  
|単一のアプリケーション ドメインに複数のバージョンを設定できます。|N|Y|Y|Y|  
|互換性に影響する変更を加えることができます。|N|N|Y|Y|  
|テストすると、アセンブリの複数のバージョンをまとめて読み込むことを確認してください。|N|N|Y|N|  
|場所の互換性に影響する変更を行います。|N|N|N|Y|  
|きわめて安全なサービスの場所に変更を改行をしないことができます。|Y|Y|Y|Y|  
  
## 属性を適用します。  
 適用できる、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> アセンブリ、型、または型のメンバーにします。 そのアプリケーションが階層です。 つまり、既定では、保証は、定義されているが、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> アセンブリ レベルで属性のプロパティは、アセンブリとそれらの型のすべてのメンバーですべての種類の保証を定義します。 同様に、保証が型に適用されている場合既定にも当てはまります、型の各メンバー。  
  
 継承されたこの保証を適用することによりオーバーライドできます、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> 個々 の型と型のメンバーにします。 ただし、既定値をオーバーライドすることを保証をできますのみのレベルを下げる保証します。強化することはできません。 たとえば、アセンブリが付いている場合、 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> 確実には、その型とメンバーなし、互換性の保証があり、型またはアセンブリ内のメンバーに適用されるその他の保証は無視されます。  
  
## 保証のテスト  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> のメンバー、 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> でマークされた列挙型、 <xref:System.FlagsAttribute> 属性です。 これは、関心のある退席中の可能性がある不明なフラグをマスクするフラグをテストする必要があることを意味します。 型としてマークされているか、たとえば、次の例がテスト <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>します。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 次の例は、型としてマークされているかどうかをテスト <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> または <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>です。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 次のテストを使用すると、型の使用例としてマークされている <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> \(つまり、どちらも <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> も <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>\)。  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">複数のバージョンで保証されている互換性レベルを指定する列挙値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> ライブラリ、型、またはメンバーを示す値をクラスは、複数のバージョンでの互換性レベルを保証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> クラスをインスタンス化の値、 `guarantees` にパラメーターが割り当てられている、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ライブラリ、型、または複数のバージョンにまたがる型のメンバーとの互換性レベルの保証を示す値を取得します。</summary>
        <value>複数のバージョンで保証されている互換性レベルを指定する列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> プロパティに対応して、 `guarantees` のパラメーター、 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>