<Type Name="WorkflowHostingEndpoint" FullName="System.ServiceModel.Activities.WorkflowHostingEndpoint">
  <TypeSignature Language="C#" Value="public abstract class WorkflowHostingEndpoint : System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowHostingEndpoint extends System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceEndpoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> の抽象実装。 このクラスから派生して、ワークフローの作成とブックマークの再開をサポートするコントラクトを公開します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、<xref:System.ServiceModel.Activities.WorkflowHostingEndpoint> クラスからクラスを派生させる方法を示します。  
  
 [!code-csharp[CreationEndpoint2\#2](~/samples/snippets/csharp/VS_Snippets_Misc/CreationEndpoint2/CS/CreationEndpoint.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowHostingEndpoint (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">ワークフローのホスティング操作の基本的なメッセージ交換パターンを定義するコントラクトの型。</param>
        <summary>指定したコントラクト型を使用して <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowHostingEndpoint (Type contractType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contractType">エンドポイントのサービス コントラクト。</param>
        <param name="binding">エンドポイントのバインド。</param>
        <param name="address">エンドポイントのアドレス。</param>
        <summary>指定したコントラクト型、バインド、およびエンドポイント アドレスを使用して、<see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationQueries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.CorrelationQuery&gt; CorrelationQueries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.CorrelationQuery&gt; CorrelationQueries" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.CorrelationQuery&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.CorrelationQuery" /> のインスタンスのコレクションを取得します。</summary>
        <value>関連付けクエリのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Populate this collection with queries that are run when a message arrives on the endpoint to determine which workflow instance the message should be sent to. This property does not need to be used if custom instance resolution is provided by overriding <xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetCreationContext">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Activities.WorkflowCreationContext OnGetCreationContext (object[] inputs, System.ServiceModel.OperationContext operationContext, Guid instanceId, System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Activities.WorkflowCreationContext OnGetCreationContext(object[] inputs, class System.ServiceModel.OperationContext operationContext, valuetype System.Guid instanceId, class System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Activities.WorkflowCreationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="responseContext" Type="System.ServiceModel.Activities.WorkflowHostingResponseContext" />
      </Parameters>
      <Docs>
        <param name="inputs">サービス操作への入力。</param>
        <param name="operationContext">呼び出されたサービス操作の実行コンテキストを提供します。</param>
        <param name="instanceId">作成されるワークフロー インスタンスのインスタンス ID。</param>
        <param name="responseContext">要求\/応答コントラクトのメッセージ ソースに応答を送信するために使用できる <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpointResponseContext" /> オブジェクト。</param>
        <summary>オーバーライドして新しい <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" /> インスタンスを作成します。</summary>
        <returns>ワークフロー作成コンテキスト オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、[OnGetCreationContext メソッド \(Object\<xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext%2A> メソッドを実装する方法を示しています。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetInstanceId">
      <MemberSignature Language="C#" Value="protected virtual Guid OnGetInstanceId (object[] inputs, System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Guid OnGetInstanceId(object[] inputs, class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="inputs">サービス操作への入力。</param>
        <param name="operationContext">サービス操作の操作コンテキスト。</param>
        <summary>オーバーライドして、作成されるワークフロー インスタンスのインスタンス ID を返します。</summary>
        <returns>新しく作成されたワークフロー インスタンスのインスタンス ID。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス ID が自動生成されることを示す null を返します。  
  
   
  
## 例  
 次の例は、[OnGetInstanceId メソッド \(Object\<xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId%2A> メソッドを実装する方法を示しています。  
  
 [!code-csharp[CreationEndpoint\#0](~/samples/snippets/csharp/VS_Snippets_CFX/creationendpoint/cs/creationendpoint.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveBookmark">
      <MemberSignature Language="C#" Value="protected virtual System.Activities.Bookmark OnResolveBookmark (object[] inputs, System.ServiceModel.OperationContext operationContext, System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Activities.Bookmark OnResolveBookmark(object[] inputs, class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Activities.WorkflowHostingResponseContext responseContext, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="responseContext" Type="System.ServiceModel.Activities.WorkflowHostingResponseContext" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputs">サービス操作への入力。</param>
        <param name="operationContext">呼び出されるサービス操作の実行コンテキスト。</param>
        <param name="responseContext">要求\/応答コントラクトのメッセージ ソースに応答を送信するために使用できる <see cref="T:System.ServiceModel.Activities.WorkflowHostingResponseContext" /> オブジェクト。</param>
        <param name="value">ブックマークを再開するときにワークフロー インスタンスに戻される値。</param>
        <summary>オーバーライドして、ワークフロー インスタンスで再開するブックマークを返します。</summary>
        <returns>ブックマーク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、[OnResolveBookmark メソッド \(Object\<xref:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark%2A> メソッドを実装する方法を示しています。  
  
 [!code-csharp[ResumeBookmarkEndpoint\#0](~/samples/snippets/csharp/VS_Snippets_CFX/resumebookmarkendpoint/cs/resumebookmarkendpoint.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>