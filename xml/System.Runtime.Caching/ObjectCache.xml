<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>オブジェクト キャッシュを表し、オブジェクト キャッシュにアクセスするための基本メソッドとプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache> 型はメモリ内オブジェクト キャッシュの主な型です。 派生したカスタムのキャッシュ実装を開発する、 <xref:System.Runtime.Caching.ObjectCache> クラスです。  
  
> [!NOTE]
>  <xref:System.Runtime.Caching.ObjectCache> クラスは新機能としての [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]です。  
  
 組み込み <xref:System.Runtime.Caching.MemoryCache> クラスから派生する、 <xref:System.Runtime.Caching.ObjectCache> クラスです。<xref:System.Runtime.Caching.MemoryCache> クラスでのみ具体的なオブジェクトのキャッシュ実装、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] から派生した、 <xref:System.Runtime.Caching.ObjectCache> クラスです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <block subset="none" type="overrides">
      <para>Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained. In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.  
  
 <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.  
  
</para></block>  
  
 When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初期化するために、派生クラスのコンス トラクターから呼び出された、 <see cref="T:System.Runtime.Caching.ObjectCache" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュを必要とせずに、一致するキーを使用して既存のキャッシュ エントリが返されるキャッシュ エントリを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードを上書きするか、同じキーを持つ既存のキャッシュ エントリを削除せずに、キャッシュにキャッシュ エントリを挿入しようとしました。 キャッシュ エントリは、型指定されたできる <xref:System.Runtime.Caching.CacheItem> オブジェクトまたは汎用オブジェクトです。  
  
 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードと <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードが 1 つの大きな違いがあります。 これらのメソッドは、キャッシュ内に一致するエントリが見つかった場合に、キャッシュ エントリを挿入するとき、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードは、既存のキャッシュ エントリを返しますが、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードがないです。 これらの異なるメソッド オーバー ロードを持つ既存のキャッシュ エントリを必要があるかどうかに基づいて、コードを最適化するために呼び出し元を使用できます。 分散キャッシュを使用して、既存の値を返す、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドを使用してブール値を返すよりも高い場合があります <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">追加するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされると、としてキャッシュにキャッシュ エントリを挿入すると、 <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスおよびエントリの削除方法の詳細を追加します。</summary>
        <returns>
          <see langword="true" /> 挿入が成功した場合または <see langword="false" /> がある場合、同じキーを持つキャッシュのエントリでは既に <paramref name="item" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードは仮想 \(抽象化されない\) で、 <xref:System.Runtime.Caching.ObjectCache> クラスであるため、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部的に呼び出す <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>します。 これにより、キャッシュの実装側が提供する、メソッドのオーバー ロードの回数が減ります。 特別な動作のかどうか、キャッシュの実装は必要ありません、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッド、それを実装するだけの <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。 このパラメーターは、必要なときに、 <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> メソッドが呼び出されます。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 領域が実装されていないため .NET Framework 4, 、既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされると、既存のキャッシュ エントリを上書きすることがなく、キャッシュ エントリがキャッシュを挿入します。</summary>
        <returns>
          <see langword="true" /> 挿入が成功した場合または <see langword="false" /> がある場合、同じキーを持つキャッシュのエントリでは既に <paramref name="key" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードは仮想 \(抽象化されない\) で、 <xref:System.Runtime.Caching.ObjectCache> クラスであるため、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部的に呼び出す <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>します。 これにより、キャッシュの実装側が提供する、メソッドのオーバー ロードの回数が減ります。 特別な動作のかどうか、キャッシュの実装は必要ありません、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッド、それを実装するだけの <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ内にエントリの削除方法の情報を指定するキャッシュ エントリを挿入します。</summary>
        <returns>
          <see langword="true" /> 挿入 try が成功した場合、または <see langword="false" /> がある場合と同じキーでキャッシュのエントリでは既に <paramref name="key" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドのオーバー ロードは仮想 \(抽象化されない\) で、 <xref:System.Runtime.Caching.ObjectCache> クラスであるため、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッドが内部的に呼び出す <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>します。 これにより、キャッシュの実装側が提供する、メソッドのオーバー ロードの回数が減ります。 特別な動作のかどうか、キャッシュの実装は必要ありません、 <xref:System.Runtime.Caching.ObjectCache.Add%2A> メソッド、それを実装するだけの <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、キャッシュ内にキャッシュ エントリを挿入しようとして、一致するキーを持つ既存のキャッシュ エントリを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> メソッドのオーバー ロードは、キャッシュに項目を挿入します。 一致するキーを持つキャッシュ エントリが既に存在する場合、既存のエントリを返します。 キャッシュ エントリを指定できます、 <xref:System.Runtime.Caching.CacheItem> オブジェクトまたは汎用オブジェクトです。  
  
 1 つの違いがある、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> オーバー ロードと <xref:System.Runtime.Caching.ObjectCache.Add%2A> オーバー ロードします。 これらのオーバー ロードされたメソッドは、既存のエントリでは、既存の一致するキー挿入されているキャッシュ エントリが見つかった場合キャッシュ エントリを挿入すると、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> のオーバー ロードは、既存のキャッシュ エントリを返します。<xref:System.Runtime.Caching.ObjectCache.Add%2A> オーバー ロードはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定した挿入 <see cref="T:System.Runtime.Caching.CacheItem" /> エントリの削除方法に関する情報を指定する、キャッシュにオブジェクトです。</summary>
        <returns>同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリ。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュを追加するキー、キャッシュ エントリ、絶対有効期限値、および省略可能なリージョンのオブジェクトを使用して、キャッシュ内にキャッシュ エントリを挿入します。</summary>
        <returns>同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリの値です。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> メソッドのオーバー ロードがないオブジェクトの値を返します、 <xref:System.Runtime.Caching.CacheItem> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ内に、キーと、キャッシュ エントリと、エントリの削除方法に関する情報の値を指定するキャッシュ エントリを挿入します。</summary>
        <returns>同じキーを持つキャッシュ エントリがある場合、指定されたキャッシュ エントリの値です。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> メソッドがないオブジェクトの値を返します、 <xref:System.Runtime.Caching.CacheItem> オブジェクトです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="regionName">省略可能です。 キャッシュの場所を地域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ エントリがキャッシュに既に存在するかどうかを確認します。</summary>
        <returns>
          <see langword="true" /> キャッシュに同じキー値を持つキャッシュ エントリが含まれている <paramref name="key" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">監視するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">省略可能です。 キャッシュの場所にキーをキャッシュ内の名前付き領域、 <c>keys</c> 領域が実装されている場合、パラメーターが存在します。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされると作成、 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> オブジェクトへの変更に応答してイベントをトリガーするキャッシュ エントリを指定します。</summary>
        <returns>キャッシュ内のキャッシュ エントリを監視する変更監視します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、派生 <xref:System.Runtime.Caching.ObjectCache> クラスはオーバーライドして、ベース <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> メソッド、キャッシュの実装を作成する必要があります、 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> オブジェクトです。 この特殊な変更通知の呼び出し元で指定されているキャッシュ エントリへの変更がある場合に、 `keys` パラメーター。 たとえば、監視対象のアイテムで、 `keys` パラメーターが更新またはキャッシュから削除された、このメソッドによって作成された変更の監視とイベントが発生します。  
  
 文字列値として指定できますキャッシュの実装では、名前付きキャッシュのリージョンをサポートする場合、 `regionName` パラメーター。 パラメーターの既定値をそれ以外の場合、 `null`です。  
  
> [!NOTE]
>  すべてのキャッシュ実装では、キャッシュ エントリの変更の監視をサポートします。 キャッシュの実装がサポートしているかどうかを判断する <xref:System.Runtime.Caching.CacheEntryChangeMonitor> オブジェクト、特定のキャッシュの実装については、ドキュメントを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュの実装を提供する機能の説明を取得します。</summary>
        <value>キャッシュの実装の既定の機能を示すフラグのビットごとの組み合わせ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">省略可能です。 領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされると、指定したキャッシュ エントリをキャッシュからオブジェクトとして取得します。</summary>
        <returns>によって識別されるそのキャッシュ エントリ <paramref name="key" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">省略可能です。 領域が実装されている場合は、キャッシュが追加されたキャッシュ内の名前付き領域。 領域が実装されていないため .NET Framework 4, 、既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定したキャッシュ エントリを取得としてキャッシュから、 <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンス。</summary>
        <returns>によって識別されるそのキャッシュ エントリ <paramref name="key" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドのオーバー ロードが存在するは、一部のキャッシュ実装を拡張するため、 <xref:System.Runtime.Caching.CacheItem> クラスです。 その場合は、 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> メソッドのオーバー ロードではキャッシュされたデータに関するすべての情報が必ずしも返されません。 ただし、 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> メソッドのオーバー ロードは、キャッシュの値だけを返すカスタムのキャッシュを使用します。  
  
 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> メソッドは、のように、 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 点を除いて、メソッド、 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 返ります戻り値としてキャッシュ エントリ、 <xref:System.Runtime.Caching.CacheItem> インスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">省略可能です。 キャッシュ エントリの数は次の手順、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュのキャッシュ エントリの合計数を取得します。</summary>
        <returns>キャッシュ内のキャッシュ エントリの数。 場合 <paramref name="regionName" /> は <see langword="null" />, 、カウントが指定されたキャッシュのリージョンにあるエントリの数を示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ エントリのコレクションを反復処理するために使用できる列挙子を作成します。</summary>
        <returns>キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キャッシュの実装側をオーバーライドでき、キャッシュ エントリのコレクションを反復処理するカスタムの手段を提供するのには、このメソッドを拡張することができます。  
  
> [!NOTE]
>  列挙子を返すことは、通常、全体のキャッシュ エントリを返すよりも高価な操作です。  
  
 このメソッドは、明示的なインターフェイス実装を <xref:System.Runtime.Caching.ObjectCache> のクラスには、 <xref:System.Collections.IEnumerable.GetEnumerator%2A> と <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">取得するキャッシュ エントリの一意の識別子のコレクション。</param>
        <param name="regionName">省略可能です。 または複数のキャッシュ エントリが追加領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定したキーに対応するキャッシュ エントリのセットを取得します。</summary>
        <returns>キャッシュ エントリを表すキー\/値ペアのディクショナリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッドのオーバー ロードは、単一のネットワークの呼び出し中に複数のキャッシュ エントリをキャッシュからフェッチをサポートしている分散キャッシュのパフォーマンスを最適化します。  
  
 呼び出し元は、1 つまたは複数のキーをメソッドに渡すことができます、ですが、すべてのキーがキャッシュ内のエントリを表している保証はありません。 そのため、返されたディクショナリには、メソッドに渡されたキーの数より少ない項目が含まれます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">省略可能です。 または複数のキャッシュ エントリが追加領域が実装されている場合、キャッシュ内の名前付き領域。 領域が実装されていないため .NET Framework 4, 、既定値は <see langword="null" />です。</param>
        <param name="keys">取得するキャッシュ エントリの一意の識別子のコレクション。</param>
        <summary>指定したキーに対応するキャッシュ エントリのセットを取得します。</summary>
        <returns>キャッシュ エントリを表すキー\/値ペアのディクショナリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=fullName> メソッドのオーバー ロードは、のように、 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッド オーバー ロードが、c\# などのマネージ言語でサポートされている省略可能なパラメーターの構文を使用して名前付き領域を渡すことができます。  
  
 このメソッドには仮想メソッドがあるため、 <xref:System.Runtime.Caching.ObjectCache> クラスに渡される既定の実装が用意されています、 `params` 配列を <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> メソッドのオーバー ロードします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用可能な管理対象ホスティング環境への参照を取得または <see cref="T:System.Runtime.Caching.ObjectCache" /> の実装とするホスト固有によってサービスが提供する <see cref="T:System.Runtime.Caching.ObjectCache" /> 実装します。</summary>
        <value>キャッシュ対応の管理対象ホスティング環境への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Caching.ObjectCache.Host%2A> プロパティで使用するためのものが [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 環境をホストし、.NET Framework に依存する動作を実装するキャッシュの実装によって環境をホストします。  
  
 次の表に、管理対象ホスティング環境から利用できる可能性があるし、使用できるホスト環境のサービスのセット <xref:System.Runtime.Caching.ObjectCache> を通じて実装、 <xref:System.Runtime.Caching.ObjectCache.Host%2A> プロパティ。  
  
|サービス|説明|  
|----------|--------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|ホスト環境のパフォーマンス カウンターを識別するなどの機能のキャッシュ実装を必要となるアプリケーション ドメイン識別子を使用することができます。|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|ホスト環境で提供されるいずれかの方法ではなく、カスタム ファイルの変更の通知システムを提供、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|キャッシュ実装レポート キャッシュ メモリの消費量をホスト環境のことができます。 これにより、ホスト環境は、複数のキャッシュ実装間でメモリ消費量を一元的に管理できます。|  
  
> [!NOTE]
>  このプロパティの値の呼び出し元では、無制限のコード アクセス セキュリティのアクセス許可が必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに割り当てられている値は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">2 回以上のプロパティの値を設定しようとしています。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">for full trust for all accessors of this property. This property cannot be used by partially trusted code.</permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ エントリに絶対有効期限が含まれていないことを示す値を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定してキャッシュに挿入するキャッシュ エントリ、 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 絶対ポイント時間に基づいてフィールドの値が有効期限の値を無期限に設定します。 ただし、メモリ不足の原因となった変更監視イベントの削除などの特定のキャッシュ実装によって決定されるその他の理由にするには、キャッシュからこの設定を持つキャッシュ エントリを削除します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ内のキャッシュ エントリの一意の識別子。</param>
        <summary>取得または設定の既定のインデクサー、 <see cref="T:System.Runtime.Caching.ObjectCache" /> クラスです。</summary>
        <value>インデクサー、キャッシュ インスタンスに機能するキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの set アクセサーの動作はのようには、 <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> メソッドです。 内部的には、キャッシュの実装が指定された値を絶対有効期限を設定でした、 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> メソッドです。 ただしこの動作は最終的には、キャッシュの実装によって異なります。  
  
 Get アクセサーの動作が呼び出し元のようには、 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> メソッドを使用して `null` 地域名に対応します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の名前を取得 <see cref="T:System.Runtime.Caching.ObjectCache" /> インスタンス。</summary>
        <value>特定のキャッシュ インスタンスの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一部のキャッシュ実装では、1 つのアプリケーションで実行されているキャッシュの複数のインスタンスをサポートします。 このプロパティには、キャッシュ実装は、特定のキャッシュ インスタンスを識別する名前を返すことができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ エントリにスライド式有効期限が含まれていないことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 期間または定義されている時間帯に基づいている有効期限はスライディング有効期限とも呼ばれます。 通常、スライディング有効期限に基づいて項目を削除するキャッシュ実装を指定した時間帯でアクセスされていない項目が削除されます。  
  
 設定してキャッシュに挿入するキャッシュ エントリ、 <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> フィールドの値の有効期限の値のスライディング時間枠内で非アクティビティがあるため削除しないよう設定します。 ただし、絶対有効期限がある場合、またはその他の削除イベントが発生した、このような変更監視またはメモリ圧迫の場合は、キャッシュ項目を削除することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="regionName">省略可能です。 領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュからキャッシュ エントリを削除します。</summary>
        <returns>キーで指定された削除されたキャッシュ エントリの値を表すオブジェクトまたは <see langword="null" /> 場合は、指定されたエントリが見つかりませんでした。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 対応するキャッシュのキャッシュ エントリがある場合は、カスタムのキャッシュの実装では、このメソッドをオーバーライドするかどうかは `key`, 、削除された項目の値が返されます。 メソッドを返す必要があるかどうかは、キャッシュから削除何も行われませんが、 `null`です。  
  
> [!NOTE]
>  一部の分散キャッシュの実装がキャッシュから削除された値を返す機能をサポートしていません。 キャッシュの実装が削除されたキャッシュ項目の値を返すことをサポートしていない可能性があります。 戻り値が高価すぎると、オブジェクトのマーシャ リングするためにもあります。 このような場合のキャッシュ実装を返すことができます `null`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ エントリをキャッシュに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般的な動作、 <xref:System.Runtime.Caching.ObjectCache.Set%2A> メソッドのオーバー ロードは、挿入または更新操作。 キャッシュ エントリは、指定したエントリが存在しないか、既に存在する場合に新しい値を持つキャッシュ エントリが更新された場合に、新しいエントリとして挿入いずれかです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">追加するキャッシュ項目。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされた場合は、としてキャッシュにキャッシュ エントリを挿入、 <see cref="T:System.Runtime.Caching.CacheItem" /> エントリの削除方法に関する情報を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合にキー `item` が存在しない `item` は新しいキャッシュのエントリとして挿入します。 場合に一致するキーを持つ項目 `item` から値が存在する `item` を更新または既存のキャッシュ エントリの値を上書きするために使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ内に有効期限の時間ベースの詳細を指定するキャッシュ エントリを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合に一致する項目 `key` 、キャッシュに存在しません `value` と `key` 新しいキャッシュ エントリとして挿入するために使用します。 場合に一致するキーを持つ項目 `item` 存在する場合、キャッシュ エントリが更新されるかを使用して上書き `value`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">省略可能です。 キャッシュ エントリを追加できる、領域が実装されている場合、キャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" />です。</param>
        <summary>派生クラスでオーバーライドされた場合は、キャッシュ エントリをキャッシュに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドのオーバー ロードでは、さらに詳しく削除または有効期限よりも、絶対有効期限の時間ベースで使用することができます。  
  
 場合に一致する項目 `key` 、キャッシュに存在しません `value` と `key` 新しいキャッシュ エントリとして挿入するために使用します。 場合に一致するキーを持つ項目 `item` 存在する場合、キャッシュ エントリが更新されるかを使用して上書き `value`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ジェネリック コレクションに対する反復処理をサポートします。</summary>
        <returns>キャッシュ内のアイテムへのアクセスを提供する列挙子オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 派生場合にのみ使用できます <xref:System.Runtime.Caching.ObjectCache> にインスタンスがキャスト、 <xref:System.Collections.IEnumerable> インターフェイスです。  
  
 開発者は、このメソッドを使用して、キャッシュ エントリのジェネリック コレクションを反復処理することができます。  
  
 これは、既定値 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 内部的に呼び出すための実装、 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>キャッシュ エントリのセットを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>