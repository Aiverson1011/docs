<Type Name="SignedCms" FullName="System.Security.Cryptography.Pkcs.SignedCms">
  <TypeSignature Language="C#" Value="public sealed class SignedCms" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignedCms extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignedCms" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスは、署名と CMS\/PKCS \#7 メッセージの検証ができるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 暗号化メッセージ構文 RFC では、これらのコンテンツ タイプで、次の MIME の種類と CMS\/PKCS \#7 メッセージにファイル名拡張子を指定します。  
  
|コンテンツの種類|MIME の種類|拡張子|  
|--------------|--------------|---------|  
|envelopedData|アプリケーション\/pkcs7 mime|.p7m|  
|signedData|アプリケーション\/pkcs7 で署名|。 p7s.p7c|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> コンストラクターは、<see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Security.Cryptography.Pkcs.SignedCms> クラスには次の既定のプロパティの値。  
  
|プロパティ|既定値|  
|-----------|---------|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>|1.2.840.113549.1.7.1 \(データ\) の長さ: 0|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>|デタッチの状態: `false` 署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。|  
  
 既定値 <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> 署名者は SubjectIdentifierType.IssuerAndSerialNumber です。  
  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されたコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> コンス トラクターのインスタンスを作成する、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 内部コンテンツとして指定されたコンテンツの情報を使用して、クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。 <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>します。  
  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー署名者の既定のサブジェクトの識別子の型を指定します。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> コンス トラクターのインスタンスを作成する、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 署名者の既定のサブジェクト識別子の型として指定されたサブジェクト識別子の型を使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。 <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>します。  
  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
        <Parameter Name="detached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="detached">A <see cref="T:System.Boolean" /> 値を指定するかどうか、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトはデタッチされた署名します。 場合 <c>detached</c> は <see langword="true" />, 、署名をデタッチします。 場合 <c>detached</c> は <see langword="false" />, 、署名はデタッチされません。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンス トラクターのインスタンスを作成する、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラス内部のコンテンツとして指定されたコンテンツの情報を使用してデタッチされた状態を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。 <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>します。  
  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー署名者の既定のサブジェクトの識別子の型を指定します。</param>
        <param name="content">To be added.</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> コンス トラクターのインスタンスを作成する、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 署名者と内部のコンテンツとしてコンテンツについては既定のサブジェクト識別子の型として指定したサブジェクト識別子の型を使用して、クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで使用される既定のプロパティ値を参照してください。 <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>します。  
  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" />
        <Parameter Name="detached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">A <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> メンバー署名者の既定のサブジェクトの識別子の型を指定します。</param>
        <param name="content">To be added.</param>
        <param name="detached">A <see cref="T:System.Boolean" /> 値を指定するかどうか、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトはデタッチされた署名します。 場合 <c>detached</c> は <see langword="true" />, 、署名をデタッチします。 デタッチされている場合は、 <see langword="false" />, 、署名はデタッチされません。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> コンス トラクターのインスタンスを作成する、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラス内部のコンテンツでは、コンテンツ情報の署名者の既定のサブジェクト識別子の型として指定されたサブジェクト識別子の型を使用して、デタッチされた状態を使用しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デタッチ済み状態の場合 `false` \(既定\)、署名情報と共に CMS\/PKCS \#7 メッセージに署名されているコンテンツが含まれています。 デタッチ済み状態の場合 `true`, が個別に送信された場合、S\/MIME メッセージをデコードできないクライアントはメッセージのコンテンツを表示もことができます。 これは、メッセージの送信者の信頼性を検証できるかどうかは、メッセージの内容をアーカイブするアーカイブのアプリケーションで便利な可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> プロパティは、エンコード済みの CMS\/PKCS \#7 メッセージに関連付けられている証明書を取得します。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> エンコード済みの CMS\/PKCS \#7 メッセージ用の証明書のセットを表すコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> メソッドを CMS\/PKCS \#7 メッセージのデータの整合性を確認します。<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 特殊なメソッド使用特定のセキュリティ インフラストラクチャのアプリケーションでその唯一のウィッシュ完全にデジタル署名の検証を実行するのではなく、CMS メッセージのハッシュを確認します。<see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> このメソッドは、デジタル署名の検証が含まれていないために、作成者も、メッセージの送信者を認証しません。 汎用的な CMS\/PKCS \#7 メッセージの信頼性、整合性のチェックを使用して、 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> または <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、CMS\/PKCS \#7 メッセージの認証を提供していません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
        <altmember cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">A <see cref="T:System.Boolean" /> デジタル署名だけが検証される署名者の証明書を持たないことを確認するかどうかを指定する値。  
  
 場合 <c>verifySignatureOnly</c> は <see langword="true" />, 、デジタル署名だけを確認します。 ある場合 <see langword="false" />, 、デジタル署名、署名の証明書が検証されたら、および証明書の目的が検証されます。 証明書の目的では、証明書はキー使用法を持たない場合、またはキーの使用法には、デジタル署名や否認防止がサポートされている場合、有効と見なされます。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> メソッドは、符号付きの CMS\/PKCS \#7 メッセージにデジタル署名を検証し、必要に応じて、署名の証明書を検証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、CMS\/PKCS \#7 メッセージに、副署名を含め、すべてのシグネチャを検証します。 メッセージに含まれている署名付きの属性がある場合、これらの属性も検証されます。 このオプションを選択して、証明書の検証、証明書チェーンの含まれるすべての部分が確認されます。  
  
 このメソッドは、デジタル署名の検証に失敗したか、検証の要件が満たされていない場合に、例外をスローします。  
  
   
  
## 例  
 次の例は、の位置を示しています。 <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> 上の署名を検証するために必要な手順の中で、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容はデタッチされません。 メッセージの内容が含まれている、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs\_SignedCMS\#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例は、の位置を示しています。 <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> 上の署名を検証するために必要な手順の中で、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容は、デタッチとは無関係に、メッセージの内容を確認する必要がありますので、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs\_SignedCMS\#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore">
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 証明書チェーンを検証するために使用するオブジェクト。 証明書チェーンを検証して、使用するために使用する追加の証明書がない場合 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> の代わりに <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />します。</param>
        <param name="verifySignatureOnly">A <see cref="T:System.Boolean" /> デジタル署名だけが検証される署名者の証明書を持たないことを確認するかどうかを指定する値。  
  
 場合 <c>verifySignatureOnly</c> は <see langword="true" />, 、デジタル署名だけを確認します。 ある場合 <see langword="false" />, 、デジタル署名、署名の証明書が検証されたら、および証明書の目的が検証されます。 証明書の目的では、証明書はキー使用法を持たない場合、またはキーの使用法には、デジタル署名や否認防止がサポートされている場合、有効と見なされます。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> メソッドは、指定された証明書のコレクションを使用して、署名付きの CMS\/PKCS \#7 メッセージのデジタル署名を検証し、必要に応じて、署名の証明書を検証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、CMS\/PKCS \#7 メッセージに、副署名を含め、すべてのシグネチャを検証します。 メッセージに含まれている署名付きの属性がある場合、これらの属性も検証されます。 このオプションを選択して、証明書の検証、証明書チェーンの含まれるすべての部分が確認されます。  
  
 このメソッドは、デジタル署名の検証に失敗したか、検証の要件が満たされていない場合に、例外をスローします。  
  
   
  
## 例  
 次の例は、の位置を示しています。 <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> 上の署名を検証するために必要な手順の中で、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容が切り離されていないで、メッセージの内容が含まれているように、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs\_SignedCMS\#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例は、の位置を示しています。 <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> 上の署名を検証するために必要な手順の中で、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容がデタッチとは無関係に、メッセージの内容を確認する必要がありますので、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs\_SignedCMS\#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" /> メソッドの署名証明書を選択するように求める、署名を作成および CMS\/PKCS \#7 メッセージに署名を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、このメッセージの署名者を選択するユーザー インターフェイスを表示します。 現在のプロセスが実行されている必要があります *ユーザー対話モード*, を意味する、 <xref:System.Environment.UserInteractive%2A?displayProperty=fullName> にプロパティが設定されている `true`します。 プロセスは通常ユーザー対話モードでない限り、サービスのプロセスまたは Web アプリケーションの中で実行します。  
  
 署名証明書の発行は、次の条件を満たすが一覧に表示されます。  
  
-   証明書は、関連付けられた秘密キーを持ちます。  
  
-   証明書は、その有効期間内でです。  
  
-   証明書が \[ないキーまたはデジタル署名や否認防止をサポートしているキーの使用率。  
  
 証明書の署名者が選択した、My ストアです。  
  
## .NET Framework セキュリティ  
 ユーザー インターフェイスを表示するには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=fullName>  
  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=fullName>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=fullName>  
  
   
  
## 例  
 次の例では、上の署名の計算には、手順、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージの内容が分離されていません。 メッセージの内容が含まれている場合は、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs\_SignedCMS\#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 次の例では、上の署名の計算には、手順、 <xref:System.Security.Cryptography.Pkcs.SignedCms> デタッチされているメッセージの内容のメッセージ。 無関係に、メッセージの内容を確認する必要がここで、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs\_SignedCMS\#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">A <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 、署名者を表すオブジェクト。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> メソッドは、指定の署名者を使用して署名を作成し、CMS\/PKCS \#7 メッセージに署名を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
## .NET Framework セキュリティ  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=fullName>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=fullName>  
  
   
  
## 例  
 次の例では、上の署名の計算には、手順、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージの内容が分離されていません。 メッセージの内容が含まれている場合は、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs\_SignedCMS\#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 次の例では、上の署名の計算には、手順、 <xref:System.Security.Cryptography.Pkcs.SignedCms> デタッチされているメッセージの内容のメッセージ。 無関係に、メッセージの内容を確認する必要がここで、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs\_SignedCMS\#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
        <Parameter Name="silent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signer">A <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 、署名者を表すオブジェクト。</param>
        <param name="silent">
          <see langword="false" /> ユーザー入力を求める署名証明書を選択します。</param>
        <summary>指定された署名を使用して署名を作成し、CMS\/PKCS \#7 メッセージに署名を追加します。 サイレント パラメーターの値がある場合 <see langword="false" /> と <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> のプロパティ、 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 署名者のパラメーターで指定されたオブジェクトが有効な証明書に設定されていない、このメソッドは、署名証明書を選択するユーザーを要求します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
## .NET Framework セキュリティ  
 ユーザー インターフェイスを表示するには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=fullName>  
  
 署名キーにアクセスするには、次のアクセス許可が必要です。  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=fullName>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=fullName>  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">値、 <paramref name="silent" /> パラメーターは <see langword="true" /> 署名証明書が指定されていないとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.ContentInfo ContentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.ContentInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> プロパティは、エンコード済みの CMS\/PKCS \#7 メッセージの内部コンテンツを取得します。</summary>
        <value>A <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> エンコード済みの CMS\/PKCS \#7 メッセージの内容を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public void Decode (byte[] encodedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decode(unsigned int8[] encodedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedMessage" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedMessage">デコードするエンコードの CMS\/PKCS \#7 メッセージを表すバイト値の配列。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッド デコード、エンコードされた <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> メッセージです。 正常にデコード時のプロパティからデコードされた情報を取得できます、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、正常にデコードから取得した情報を使用して、オブジェクトのすべてのメンバー変数をリセットします。  
  
   
  
## 例  
 次の例の配置、 <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> メソッドで、署名を検証する処理を行って、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容が切り離されていないで、メッセージの内容が含まれているように、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs\_SignedCMS\#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 次の例の配置、 <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> メソッドで、署名を検証する処理を行って、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。 この例では、メッセージの内容がデタッチとは無関係に、メッセージの内容を確認する必要がありますので、 <xref:System.Security.Cryptography.Pkcs.SignedCms> メッセージです。  
  
 [!code-csharp[mpkcs\_SignedCMS\#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs\_SignedCMS\#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      </Docs>
    </Member>
    <Member MemberName="Detached">
      <MemberSignature Language="C#" Value="public bool Detached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Detached" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> プロパティを取得するかどうか、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトはデタッチされた署名します。</summary>
        <value>A <see cref="T:System.Boolean" /> 値を指定するかどうか、 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> オブジェクトはデタッチされた署名します。 このプロパティは、する場合 <see langword="true" />, 、署名を分離します。 このプロパティは、する場合 <see langword="false" />, 、署名はデタッチされません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> メソッドは、CMS\/PKCS \#7 メッセージにオブジェクトの情報をエンコードします。</summary>
        <returns>エンコードされたメッセージを表すバイト値の配列。 エンコードされたメッセージがデコード可能、 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> メソッドです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する署名の 0 から始まるインデックス。</param>
        <summary>指定したインデックスにあるシグネチャを削除、 <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">CMS\/PKCS \#7 メッセージが署名されていないと <paramref name="index" /> が無効です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が 0 未満です。  
  
 または  
  
 <paramref name="index" /> 1 を引いた署名数よりも大きくなっています。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">署名を削除できませんでした。  
  
 または  
  
 内部暗号化エラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Security.Cryptography.Pkcs.SignerInfo signerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="signerInfo">A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> を削除する、副署名を表すオブジェクト。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> メソッドは、指定された署名を削除 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Null 参照は、有効な引数として受け付けないメソッドに渡されました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">引数の値は、呼び出されたメソッドで定義された値の許容範囲外でした。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">暗号化操作を完了できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> プロパティの取得、 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> CMS\/PKCS \#7 メッセージに関連付けられているコレクション。</summary>
        <value>A <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> CMS\/PKCS \#7 メッセージの署名者情報を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> プロパティは CMS\/PKCS \#7 メッセージのバージョンを取得します。</summary>
        <value>CMS\/PKCS \#7 メッセージ バージョンを表す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バージョンは、メッセージが PKCS \#7 メッセージまたは Cryptographic Message Syntax \(CMS\) のメッセージであるかどうかを判断します。 CMS は、PKCS \#7 の最新のスーパー セットです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>署名を作成し、署名を CMS\/PKCS \#7 メッセージに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="RemoveSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したシグネチャを削除、 <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>符号付きの CMS\/PKCS \#7 メッセージのデジタル署名を確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>